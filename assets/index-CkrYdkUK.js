(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const l of e)if(l.type==="childList")for(const i of l.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function s(e){const l={};return e.integrity&&(l.integrity=e.integrity),e.referrerPolicy&&(l.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?l.credentials="include":e.crossOrigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function n(e){if(e.ep)return;e.ep=!0;const l=s(e);fetch(e.href,l)}})();/**
* @vue/shared v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function fd(a){const t=Object.create(null);for(const s of a.split(","))t[s]=1;return s=>s in t}const Ea={},Ot=[],Cs=()=>{},_h=()=>!1,pe=a=>a.charCodeAt(0)===111&&a.charCodeAt(1)===110&&(a.charCodeAt(2)>122||a.charCodeAt(2)<97),gd=a=>a.startsWith("onUpdate:"),Oa=Object.assign,kd=(a,t)=>{const s=a.indexOf(t);s>-1&&a.splice(s,1)},Sh=Object.prototype.hasOwnProperty,Sa=(a,t)=>Sh.call(a,t),ua=Array.isArray,Ht=a=>re(a)==="[object Map]",zi=a=>re(a)==="[object Set]",va=a=>typeof a=="function",Da=a=>typeof a=="string",st=a=>typeof a=="symbol",Ca=a=>a!==null&&typeof a=="object",Wi=a=>(Ca(a)||va(a))&&va(a.then)&&va(a.catch),Gi=Object.prototype.toString,re=a=>Gi.call(a),qh=a=>re(a).slice(8,-1),Yi=a=>re(a)==="[object Object]",jd=a=>Da(a)&&a!=="NaN"&&a[0]!=="-"&&""+parseInt(a,10)===a,ln=fd(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),oe=a=>{const t=Object.create(null);return s=>t[s]||(t[s]=a(s))},xh=/-(\w)/g,bs=oe(a=>a.replace(xh,(t,s)=>s?s.toUpperCase():"")),Th=/\B([A-Z])/g,St=oe(a=>a.replace(Th,"-$1").toLowerCase()),ue=oe(a=>a.charAt(0).toUpperCase()+a.slice(1)),Oe=oe(a=>a?`on${ue(a)}`:""),Zs=(a,t)=>!Object.is(a,t),He=(a,...t)=>{for(let s=0;s<a.length;s++)a[s](...t)},Qi=(a,t,s,n=!1)=>{Object.defineProperty(a,t,{configurable:!0,enumerable:!1,writable:n,value:s})},Eh=a=>{const t=parseFloat(a);return isNaN(t)?a:t},Ch=a=>{const t=Da(a)?Number(a):NaN;return isNaN(t)?a:t};let Il;const he=()=>Il||(Il=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function $s(a){if(ua(a)){const t={};for(let s=0;s<a.length;s++){const n=a[s],e=Da(n)?Rh(n):$s(n);if(e)for(const l in e)t[l]=e[l]}return t}else if(Da(a)||Ca(a))return a}const Ah=/;(?![^(]*\))/g,Lh=/:([^]+)/,Mh=/\/\*[^]*?\*\//g;function Rh(a){const t={};return a.replace(Mh,"").split(Ah).forEach(s=>{if(s){const n=s.split(Lh);n.length>1&&(t[n[0].trim()]=n[1].trim())}}),t}function yd(a){let t="";if(Da(a))t=a;else if(ua(a))for(let s=0;s<a.length;s++){const n=yd(a[s]);n&&(t+=n+" ")}else if(Ca(a))for(const s in a)a[s]&&(t+=s+" ");return t.trim()}const Dh="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Ph=fd(Dh);function Xi(a){return!!a||a===""}const Zi=a=>!!(a&&a.__v_isRef===!0),Ba=a=>Da(a)?a:a==null?"":ua(a)||Ca(a)&&(a.toString===Gi||!va(a.toString))?Zi(a)?Ba(a.value):JSON.stringify(a,ac,2):String(a),ac=(a,t)=>Zi(t)?ac(a,t.value):Ht(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((s,[n,e],l)=>(s[Be(n,l)+" =>"]=e,s),{})}:zi(t)?{[`Set(${t.size})`]:[...t.values()].map(s=>Be(s))}:st(t)?Be(t):Ca(t)&&!ua(t)&&!Yi(t)?String(t):t,Be=(a,t="")=>{var s;return st(a)?`Symbol(${(s=a.description)!=null?s:t})`:a};/**
* @vue/reactivity v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let es;class Ih{constructor(t=!1){this.detached=t,this._active=!0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=es,!t&&es&&(this.index=(es.scopes||(es.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let t,s;if(this.scopes)for(t=0,s=this.scopes.length;t<s;t++)this.scopes[t].pause();for(t=0,s=this.effects.length;t<s;t++)this.effects[t].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let t,s;if(this.scopes)for(t=0,s=this.scopes.length;t<s;t++)this.scopes[t].resume();for(t=0,s=this.effects.length;t<s;t++)this.effects[t].resume()}}run(t){if(this._active){const s=es;try{return es=this,t()}finally{es=s}}}on(){es=this}off(){es=this.parent}stop(t){if(this._active){this._active=!1;let s,n;for(s=0,n=this.effects.length;s<n;s++)this.effects[s].stop();for(this.effects.length=0,s=0,n=this.cleanups.length;s<n;s++)this.cleanups[s]();if(this.cleanups.length=0,this.scopes){for(s=0,n=this.scopes.length;s<n;s++)this.scopes[s].stop(!0);this.scopes.length=0}if(!this.detached&&this.parent&&!t){const e=this.parent.scopes.pop();e&&e!==this&&(this.parent.scopes[this.index]=e,e.index=this.index)}this.parent=void 0}}}function Nh(){return es}let Ta;const $e=new WeakSet;class sc{constructor(t){this.fn=t,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,es&&es.active&&es.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,$e.has(this)&&($e.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||nc(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,Nl(this),ec(this);const t=Ta,s=ys;Ta=this,ys=!0;try{return this.fn()}finally{dc(this),Ta=t,ys=s,this.flags&=-3}}stop(){if(this.flags&1){for(let t=this.deps;t;t=t.nextDep)Sd(t);this.deps=this.depsTail=void 0,Nl(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?$e.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){Ze(this)&&this.run()}get dirty(){return Ze(this)}}let tc=0,cn,pn;function nc(a,t=!1){if(a.flags|=8,t){a.next=pn,pn=a;return}a.next=cn,cn=a}function wd(){tc++}function _d(){if(--tc>0)return;if(pn){let t=pn;for(pn=void 0;t;){const s=t.next;t.next=void 0,t.flags&=-9,t=s}}let a;for(;cn;){let t=cn;for(cn=void 0;t;){const s=t.next;if(t.next=void 0,t.flags&=-9,t.flags&1)try{t.trigger()}catch(n){a||(a=n)}t=s}}if(a)throw a}function ec(a){for(let t=a.deps;t;t=t.nextDep)t.version=-1,t.prevActiveLink=t.dep.activeLink,t.dep.activeLink=t}function dc(a){let t,s=a.depsTail,n=s;for(;n;){const e=n.prevDep;n.version===-1?(n===s&&(s=e),Sd(n),Oh(n)):t=n,n.dep.activeLink=n.prevActiveLink,n.prevActiveLink=void 0,n=e}a.deps=t,a.depsTail=s}function Ze(a){for(let t=a.deps;t;t=t.nextDep)if(t.dep.version!==t.version||t.dep.computed&&(lc(t.dep.computed)||t.dep.version!==t.version))return!0;return!!a._dirty}function lc(a){if(a.flags&4&&!(a.flags&16)||(a.flags&=-17,a.globalVersion===gn))return;a.globalVersion=gn;const t=a.dep;if(a.flags|=2,t.version>0&&!a.isSSR&&a.deps&&!Ze(a)){a.flags&=-3;return}const s=Ta,n=ys;Ta=a,ys=!0;try{ec(a);const e=a.fn(a._value);(t.version===0||Zs(e,a._value))&&(a._value=e,t.version++)}catch(e){throw t.version++,e}finally{Ta=s,ys=n,dc(a),a.flags&=-3}}function Sd(a,t=!1){const{dep:s,prevSub:n,nextSub:e}=a;if(n&&(n.nextSub=e,a.prevSub=void 0),e&&(e.prevSub=n,a.nextSub=void 0),s.subs===a&&(s.subs=n,!n&&s.computed)){s.computed.flags&=-5;for(let l=s.computed.deps;l;l=l.nextDep)Sd(l,!0)}!t&&!--s.sc&&s.map&&s.map.delete(s.key)}function Oh(a){const{prevDep:t,nextDep:s}=a;t&&(t.nextDep=s,a.prevDep=void 0),s&&(s.prevDep=t,a.nextDep=void 0)}let ys=!0;const ic=[];function tt(){ic.push(ys),ys=!1}function nt(){const a=ic.pop();ys=a===void 0?!0:a}function Nl(a){const{cleanup:t}=a;if(a.cleanup=void 0,t){const s=Ta;Ta=void 0;try{t()}finally{Ta=s}}}let gn=0;class Hh{constructor(t,s){this.sub=t,this.dep=s,this.version=s.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class qd{constructor(t){this.computed=t,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0}track(t){if(!Ta||!ys||Ta===this.computed)return;let s=this.activeLink;if(s===void 0||s.sub!==Ta)s=this.activeLink=new Hh(Ta,this),Ta.deps?(s.prevDep=Ta.depsTail,Ta.depsTail.nextDep=s,Ta.depsTail=s):Ta.deps=Ta.depsTail=s,cc(s);else if(s.version===-1&&(s.version=this.version,s.nextDep)){const n=s.nextDep;n.prevDep=s.prevDep,s.prevDep&&(s.prevDep.nextDep=n),s.prevDep=Ta.depsTail,s.nextDep=void 0,Ta.depsTail.nextDep=s,Ta.depsTail=s,Ta.deps===s&&(Ta.deps=n)}return s}trigger(t){this.version++,gn++,this.notify(t)}notify(t){wd();try{for(let s=this.subs;s;s=s.prevSub)s.sub.notify()&&s.sub.dep.notify()}finally{_d()}}}function cc(a){if(a.dep.sc++,a.sub.flags&4){const t=a.dep.computed;if(t&&!a.dep.subs){t.flags|=20;for(let n=t.deps;n;n=n.nextDep)cc(n)}const s=a.dep.subs;s!==a&&(a.prevSub=s,s&&(s.nextSub=a)),a.dep.subs=a}}const ad=new WeakMap,kt=Symbol(""),sd=Symbol(""),kn=Symbol("");function Va(a,t,s){if(ys&&Ta){let n=ad.get(a);n||ad.set(a,n=new Map);let e=n.get(s);e||(n.set(s,e=new qd),e.map=n,e.key=s),e.track()}}function Os(a,t,s,n,e,l){const i=ad.get(a);if(!i){gn++;return}const o=r=>{r&&r.trigger()};if(wd(),t==="clear")i.forEach(o);else{const r=ua(a),h=r&&jd(s);if(r&&s==="length"){const u=Number(n);i.forEach((v,j)=>{(j==="length"||j===kn||!st(j)&&j>=u)&&o(v)})}else switch((s!==void 0||i.has(void 0))&&o(i.get(s)),h&&o(i.get(kn)),t){case"add":r?h&&o(i.get("length")):(o(i.get(kt)),Ht(a)&&o(i.get(sd)));break;case"delete":r||(o(i.get(kt)),Ht(a)&&o(i.get(sd)));break;case"set":Ht(a)&&o(i.get(kt));break}}_d()}function Dt(a){const t=wa(a);return t===a?t:(Va(t,"iterate",kn),ws(a)?t:t.map(Ya))}function xd(a){return Va(a=wa(a),"iterate",kn),a}const Bh={__proto__:null,[Symbol.iterator](){return Fe(this,Symbol.iterator,Ya)},concat(...a){return Dt(this).concat(...a.map(t=>ua(t)?Dt(t):t))},entries(){return Fe(this,"entries",a=>(a[1]=Ya(a[1]),a))},every(a,t){return Ds(this,"every",a,t,void 0,arguments)},filter(a,t){return Ds(this,"filter",a,t,s=>s.map(Ya),arguments)},find(a,t){return Ds(this,"find",a,t,Ya,arguments)},findIndex(a,t){return Ds(this,"findIndex",a,t,void 0,arguments)},findLast(a,t){return Ds(this,"findLast",a,t,Ya,arguments)},findLastIndex(a,t){return Ds(this,"findLastIndex",a,t,void 0,arguments)},forEach(a,t){return Ds(this,"forEach",a,t,void 0,arguments)},includes(...a){return Je(this,"includes",a)},indexOf(...a){return Je(this,"indexOf",a)},join(a){return Dt(this).join(a)},lastIndexOf(...a){return Je(this,"lastIndexOf",a)},map(a,t){return Ds(this,"map",a,t,void 0,arguments)},pop(){return tn(this,"pop")},push(...a){return tn(this,"push",a)},reduce(a,...t){return Ol(this,"reduce",a,t)},reduceRight(a,...t){return Ol(this,"reduceRight",a,t)},shift(){return tn(this,"shift")},some(a,t){return Ds(this,"some",a,t,void 0,arguments)},splice(...a){return tn(this,"splice",a)},toReversed(){return Dt(this).toReversed()},toSorted(a){return Dt(this).toSorted(a)},toSpliced(...a){return Dt(this).toSpliced(...a)},unshift(...a){return tn(this,"unshift",a)},values(){return Fe(this,"values",Ya)}};function Fe(a,t,s){const n=xd(a),e=n[t]();return n!==a&&!ws(a)&&(e._next=e.next,e.next=()=>{const l=e._next();return l.value&&(l.value=s(l.value)),l}),e}const $h=Array.prototype;function Ds(a,t,s,n,e,l){const i=xd(a),o=i!==a&&!ws(a),r=i[t];if(r!==$h[t]){const v=r.apply(a,l);return o?Ya(v):v}let h=s;i!==a&&(o?h=function(v,j){return s.call(this,Ya(v),j,a)}:s.length>2&&(h=function(v,j){return s.call(this,v,j,a)}));const u=r.call(i,h,n);return o&&e?e(u):u}function Ol(a,t,s,n){const e=xd(a);let l=s;return e!==a&&(ws(a)?s.length>3&&(l=function(i,o,r){return s.call(this,i,o,r,a)}):l=function(i,o,r){return s.call(this,i,Ya(o),r,a)}),e[t](l,...n)}function Je(a,t,s){const n=wa(a);Va(n,"iterate",kn);const e=n[t](...s);return(e===-1||e===!1)&&Cd(s[0])?(s[0]=wa(s[0]),n[t](...s)):e}function tn(a,t,s=[]){tt(),wd();const n=wa(a)[t].apply(a,s);return _d(),nt(),n}const Fh=fd("__proto__,__v_isRef,__isVue"),pc=new Set(Object.getOwnPropertyNames(Symbol).filter(a=>a!=="arguments"&&a!=="caller").map(a=>Symbol[a]).filter(st));function Jh(a){st(a)||(a=String(a));const t=wa(this);return Va(t,"has",a),t.hasOwnProperty(a)}class rc{constructor(t=!1,s=!1){this._isReadonly=t,this._isShallow=s}get(t,s,n){if(s==="__v_skip")return t.__v_skip;const e=this._isReadonly,l=this._isShallow;if(s==="__v_isReactive")return!e;if(s==="__v_isReadonly")return e;if(s==="__v_isShallow")return l;if(s==="__v_raw")return n===(e?l?Zh:vc:l?hc:uc).get(t)||Object.getPrototypeOf(t)===Object.getPrototypeOf(n)?t:void 0;const i=ua(t);if(!e){let r;if(i&&(r=Bh[s]))return r;if(s==="hasOwnProperty")return Jh}const o=Reflect.get(t,s,Ka(t)?t:n);return(st(s)?pc.has(s):Fh(s))||(e||Va(t,"get",s),l)?o:Ka(o)?i&&jd(s)?o:o.value:Ca(o)?e?bc(o):ve(o):o}}class oc extends rc{constructor(t=!1){super(!1,t)}set(t,s,n,e){let l=t[s];if(!this._isShallow){const r=yt(l);if(!ws(n)&&!yt(n)&&(l=wa(l),n=wa(n)),!ua(t)&&Ka(l)&&!Ka(n))return r?!1:(l.value=n,!0)}const i=ua(t)&&jd(s)?Number(s)<t.length:Sa(t,s),o=Reflect.set(t,s,n,Ka(t)?t:e);return t===wa(e)&&(i?Zs(n,l)&&Os(t,"set",s,n):Os(t,"add",s,n)),o}deleteProperty(t,s){const n=Sa(t,s);t[s];const e=Reflect.deleteProperty(t,s);return e&&n&&Os(t,"delete",s,void 0),e}has(t,s){const n=Reflect.has(t,s);return(!st(s)||!pc.has(s))&&Va(t,"has",s),n}ownKeys(t){return Va(t,"iterate",ua(t)?"length":kt),Reflect.ownKeys(t)}}class Uh extends rc{constructor(t=!1){super(!0,t)}set(t,s){return!0}deleteProperty(t,s){return!0}}const Vh=new oc,Kh=new Uh,zh=new oc(!0);const td=a=>a,Jn=a=>Reflect.getPrototypeOf(a);function Wh(a,t,s){return function(...n){const e=this.__v_raw,l=wa(e),i=Ht(l),o=a==="entries"||a===Symbol.iterator&&i,r=a==="keys"&&i,h=e[a](...n),u=s?td:t?nd:Ya;return!t&&Va(l,"iterate",r?sd:kt),{next(){const{value:v,done:j}=h.next();return j?{value:v,done:j}:{value:o?[u(v[0]),u(v[1])]:u(v),done:j}},[Symbol.iterator](){return this}}}}function Un(a){return function(...t){return a==="delete"?!1:a==="clear"?void 0:this}}function Gh(a,t){const s={get(e){const l=this.__v_raw,i=wa(l),o=wa(e);a||(Zs(e,o)&&Va(i,"get",e),Va(i,"get",o));const{has:r}=Jn(i),h=t?td:a?nd:Ya;if(r.call(i,e))return h(l.get(e));if(r.call(i,o))return h(l.get(o));l!==i&&l.get(e)},get size(){const e=this.__v_raw;return!a&&Va(wa(e),"iterate",kt),Reflect.get(e,"size",e)},has(e){const l=this.__v_raw,i=wa(l),o=wa(e);return a||(Zs(e,o)&&Va(i,"has",e),Va(i,"has",o)),e===o?l.has(e):l.has(e)||l.has(o)},forEach(e,l){const i=this,o=i.__v_raw,r=wa(o),h=t?td:a?nd:Ya;return!a&&Va(r,"iterate",kt),o.forEach((u,v)=>e.call(l,h(u),h(v),i))}};return Oa(s,a?{add:Un("add"),set:Un("set"),delete:Un("delete"),clear:Un("clear")}:{add(e){!t&&!ws(e)&&!yt(e)&&(e=wa(e));const l=wa(this);return Jn(l).has.call(l,e)||(l.add(e),Os(l,"add",e,e)),this},set(e,l){!t&&!ws(l)&&!yt(l)&&(l=wa(l));const i=wa(this),{has:o,get:r}=Jn(i);let h=o.call(i,e);h||(e=wa(e),h=o.call(i,e));const u=r.call(i,e);return i.set(e,l),h?Zs(l,u)&&Os(i,"set",e,l):Os(i,"add",e,l),this},delete(e){const l=wa(this),{has:i,get:o}=Jn(l);let r=i.call(l,e);r||(e=wa(e),r=i.call(l,e)),o&&o.call(l,e);const h=l.delete(e);return r&&Os(l,"delete",e,void 0),h},clear(){const e=wa(this),l=e.size!==0,i=e.clear();return l&&Os(e,"clear",void 0,void 0),i}}),["keys","values","entries",Symbol.iterator].forEach(e=>{s[e]=Wh(e,a,t)}),s}function Td(a,t){const s=Gh(a,t);return(n,e,l)=>e==="__v_isReactive"?!a:e==="__v_isReadonly"?a:e==="__v_raw"?n:Reflect.get(Sa(s,e)&&e in n?s:n,e,l)}const Yh={get:Td(!1,!1)},Qh={get:Td(!1,!0)},Xh={get:Td(!0,!1)};const uc=new WeakMap,hc=new WeakMap,vc=new WeakMap,Zh=new WeakMap;function av(a){switch(a){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function sv(a){return a.__v_skip||!Object.isExtensible(a)?0:av(qh(a))}function ve(a){return yt(a)?a:Ed(a,!1,Vh,Yh,uc)}function mc(a){return Ed(a,!1,zh,Qh,hc)}function bc(a){return Ed(a,!0,Kh,Xh,vc)}function Ed(a,t,s,n,e){if(!Ca(a)||a.__v_raw&&!(t&&a.__v_isReactive))return a;const l=e.get(a);if(l)return l;const i=sv(a);if(i===0)return a;const o=new Proxy(a,i===2?n:s);return e.set(a,o),o}function rn(a){return yt(a)?rn(a.__v_raw):!!(a&&a.__v_isReactive)}function yt(a){return!!(a&&a.__v_isReadonly)}function ws(a){return!!(a&&a.__v_isShallow)}function Cd(a){return a?!!a.__v_raw:!1}function wa(a){const t=a&&a.__v_raw;return t?wa(t):a}function tv(a){return!Sa(a,"__v_skip")&&Object.isExtensible(a)&&Qi(a,"__v_skip",!0),a}const Ya=a=>Ca(a)?ve(a):a,nd=a=>Ca(a)?bc(a):a;function Ka(a){return a?a.__v_isRef===!0:!1}function sa(a){return fc(a,!1)}function nv(a){return fc(a,!0)}function fc(a,t){return Ka(a)?a:new ev(a,t)}class ev{constructor(t,s){this.dep=new qd,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=s?t:wa(t),this._value=s?t:Ya(t),this.__v_isShallow=s}get value(){return this.dep.track(),this._value}set value(t){const s=this._rawValue,n=this.__v_isShallow||ws(t)||yt(t);t=n?t:wa(t),Zs(t,s)&&(this._rawValue=t,this._value=n?t:Ya(t),this.dep.trigger())}}function Na(a){return Ka(a)?a.value:a}const dv={get:(a,t,s)=>t==="__v_raw"?a:Na(Reflect.get(a,t,s)),set:(a,t,s,n)=>{const e=a[t];return Ka(e)&&!Ka(s)?(e.value=s,!0):Reflect.set(a,t,s,n)}};function gc(a){return rn(a)?a:new Proxy(a,dv)}class lv{constructor(t,s,n){this.fn=t,this.setter=s,this._value=void 0,this.dep=new qd(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=gn-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!s,this.isSSR=n}notify(){if(this.flags|=16,!(this.flags&8)&&Ta!==this)return nc(this,!0),!0}get value(){const t=this.dep.track();return lc(this),t&&(t.version=this.dep.version),this._value}set value(t){this.setter&&this.setter(t)}}function iv(a,t,s=!1){let n,e;return va(a)?n=a:(n=a.get,e=a.set),new lv(n,e,s)}const Vn={},se=new WeakMap;let ft;function cv(a,t=!1,s=ft){if(s){let n=se.get(s);n||se.set(s,n=[]),n.push(a)}}function pv(a,t,s=Ea){const{immediate:n,deep:e,once:l,scheduler:i,augmentJob:o,call:r}=s,h=P=>e?P:ws(P)||e===!1||e===0?Xs(P,1):Xs(P);let u,v,j,k,M=!1,C=!1;if(Ka(a)?(v=()=>a.value,M=ws(a)):rn(a)?(v=()=>h(a),M=!0):ua(a)?(C=!0,M=a.some(P=>rn(P)||ws(P)),v=()=>a.map(P=>{if(Ka(P))return P.value;if(rn(P))return h(P);if(va(P))return r?r(P,2):P()})):va(a)?t?v=r?()=>r(a,2):a:v=()=>{if(j){tt();try{j()}finally{nt()}}const P=ft;ft=u;try{return r?r(a,3,[k]):a(k)}finally{ft=P}}:v=Cs,t&&e){const P=v,Q=e===!0?1/0:e;v=()=>Xs(P(),Q)}const O=Nh(),y=()=>{u.stop(),O&&O.active&&kd(O.effects,u)};if(l&&t){const P=t;t=(...Q)=>{P(...Q),y()}}let I=C?new Array(a.length).fill(Vn):Vn;const V=P=>{if(!(!(u.flags&1)||!u.dirty&&!P))if(t){const Q=u.run();if(e||M||(C?Q.some((ta,ia)=>Zs(ta,I[ia])):Zs(Q,I))){j&&j();const ta=ft;ft=u;try{const ia=[Q,I===Vn?void 0:C&&I[0]===Vn?[]:I,k];r?r(t,3,ia):t(...ia),I=Q}finally{ft=ta}}}else u.run()};return o&&o(V),u=new sc(v),u.scheduler=i?()=>i(V,!1):V,k=P=>cv(P,!1,u),j=u.onStop=()=>{const P=se.get(u);if(P){if(r)r(P,4);else for(const Q of P)Q();se.delete(u)}},t?n?V(!0):I=u.run():i?i(V.bind(null,!0),!0):u.run(),y.pause=u.pause.bind(u),y.resume=u.resume.bind(u),y.stop=y,y}function Xs(a,t=1/0,s){if(t<=0||!Ca(a)||a.__v_skip||(s=s||new Set,s.has(a)))return a;if(s.add(a),t--,Ka(a))Xs(a.value,t,s);else if(ua(a))for(let n=0;n<a.length;n++)Xs(a[n],t,s);else if(zi(a)||Ht(a))a.forEach(n=>{Xs(n,t,s)});else if(Yi(a)){for(const n in a)Xs(a[n],t,s);for(const n of Object.getOwnPropertySymbols(a))Object.prototype.propertyIsEnumerable.call(a,n)&&Xs(a[n],t,s)}return a}/**
* @vue/runtime-core v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Tn(a,t,s,n){try{return n?a(...n):a()}catch(e){me(e,t,s)}}function _s(a,t,s,n){if(va(a)){const e=Tn(a,t,s,n);return e&&Wi(e)&&e.catch(l=>{me(l,t,s)}),e}if(ua(a)){const e=[];for(let l=0;l<a.length;l++)e.push(_s(a[l],t,s,n));return e}}function me(a,t,s,n=!0){const e=t?t.vnode:null,{errorHandler:l,throwUnhandledErrorInProduction:i}=t&&t.appContext.config||Ea;if(t){let o=t.parent;const r=t.proxy,h=`https://vuejs.org/error-reference/#runtime-${s}`;for(;o;){const u=o.ec;if(u){for(let v=0;v<u.length;v++)if(u[v](a,r,h)===!1)return}o=o.parent}if(l){tt(),Tn(l,null,10,[a,r,h]),nt();return}}rv(a,s,e,n,i)}function rv(a,t,s,n=!0,e=!1){if(e)throw a;console.error(a)}const Qa=[];let Ts=-1;const Bt=[];let Ws=null,Pt=0;const kc=Promise.resolve();let te=null;function jc(a){const t=te||kc;return a?t.then(this?a.bind(this):a):t}function ov(a){let t=Ts+1,s=Qa.length;for(;t<s;){const n=t+s>>>1,e=Qa[n],l=jn(e);l<a||l===a&&e.flags&2?t=n+1:s=n}return t}function Ad(a){if(!(a.flags&1)){const t=jn(a),s=Qa[Qa.length-1];!s||!(a.flags&2)&&t>=jn(s)?Qa.push(a):Qa.splice(ov(t),0,a),a.flags|=1,yc()}}function yc(){te||(te=kc.then(_c))}function uv(a){ua(a)?Bt.push(...a):Ws&&a.id===-1?Ws.splice(Pt+1,0,a):a.flags&1||(Bt.push(a),a.flags|=1),yc()}function Hl(a,t,s=Ts+1){for(;s<Qa.length;s++){const n=Qa[s];if(n&&n.flags&2){if(a&&n.id!==a.uid)continue;Qa.splice(s,1),s--,n.flags&4&&(n.flags&=-2),n(),n.flags&4||(n.flags&=-2)}}}function wc(a){if(Bt.length){const t=[...new Set(Bt)].sort((s,n)=>jn(s)-jn(n));if(Bt.length=0,Ws){Ws.push(...t);return}for(Ws=t,Pt=0;Pt<Ws.length;Pt++){const s=Ws[Pt];s.flags&4&&(s.flags&=-2),s.flags&8||s(),s.flags&=-2}Ws=null,Pt=0}}const jn=a=>a.id==null?a.flags&2?-1:1/0:a.id;function _c(a){try{for(Ts=0;Ts<Qa.length;Ts++){const t=Qa[Ts];t&&!(t.flags&8)&&(t.flags&4&&(t.flags&=-2),Tn(t,t.i,t.i?15:14),t.flags&4||(t.flags&=-2))}}finally{for(;Ts<Qa.length;Ts++){const t=Qa[Ts];t&&(t.flags&=-2)}Ts=-1,Qa.length=0,wc(),te=null,(Qa.length||Bt.length)&&_c()}}let vs=null,Sc=null;function ne(a){const t=vs;return vs=a,Sc=a&&a.type.__scopeId||null,t}function x(a,t=vs,s){if(!t||a._n)return a;const n=(...e)=>{n._d&&Yl(-1);const l=ne(t);let i;try{i=a(...e)}finally{ne(l),n._d&&Yl(1)}return i};return n._n=!0,n._c=!0,n._d=!0,n}function ht(a,t,s,n){const e=a.dirs,l=t&&t.dirs;for(let i=0;i<e.length;i++){const o=e[i];l&&(o.oldValue=l[i].value);let r=o.dir[n];r&&(tt(),_s(r,s,8,[a.el,o,a,t]),nt())}}const hv=Symbol("_vte"),qc=a=>a.__isTeleport,Gs=Symbol("_leaveCb"),Kn=Symbol("_enterCb");function vv(){const a={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Dc(()=>{a.isMounted=!0}),Pc(()=>{a.isUnmounting=!0}),a}const hs=[Function,Array],xc={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:hs,onEnter:hs,onAfterEnter:hs,onEnterCancelled:hs,onBeforeLeave:hs,onLeave:hs,onAfterLeave:hs,onLeaveCancelled:hs,onBeforeAppear:hs,onAppear:hs,onAfterAppear:hs,onAppearCancelled:hs},Tc=a=>{const t=a.subTree;return t.component?Tc(t.component):t},mv={name:"BaseTransition",props:xc,setup(a,{slots:t}){const s=u3(),n=vv();return()=>{const e=t.default&&Ac(t.default(),!0);if(!e||!e.length)return;const l=Ec(e),i=wa(a),{mode:o}=i;if(n.isLeaving)return Ue(l);const r=Bl(l);if(!r)return Ue(l);let h=ed(r,i,n,s,v=>h=v);r.type!==ss&&yn(r,h);let u=s.subTree&&Bl(s.subTree);if(u&&u.type!==ss&&!gt(r,u)&&Tc(s).type!==ss){let v=ed(u,i,n,s);if(yn(u,v),o==="out-in"&&r.type!==ss)return n.isLeaving=!0,v.afterLeave=()=>{n.isLeaving=!1,s.job.flags&8||s.update(),delete v.afterLeave,u=void 0},Ue(l);o==="in-out"&&r.type!==ss?v.delayLeave=(j,k,M)=>{const C=Cc(n,u);C[String(u.key)]=u,j[Gs]=()=>{k(),j[Gs]=void 0,delete h.delayedLeave,u=void 0},h.delayedLeave=()=>{M(),delete h.delayedLeave,u=void 0}}:u=void 0}else u&&(u=void 0);return l}}};function Ec(a){let t=a[0];if(a.length>1){for(const s of a)if(s.type!==ss){t=s;break}}return t}const bv=mv;function Cc(a,t){const{leavingVNodes:s}=a;let n=s.get(t.type);return n||(n=Object.create(null),s.set(t.type,n)),n}function ed(a,t,s,n,e){const{appear:l,mode:i,persisted:o=!1,onBeforeEnter:r,onEnter:h,onAfterEnter:u,onEnterCancelled:v,onBeforeLeave:j,onLeave:k,onAfterLeave:M,onLeaveCancelled:C,onBeforeAppear:O,onAppear:y,onAfterAppear:I,onAppearCancelled:V}=t,P=String(a.key),Q=Cc(s,a),ta=(G,X)=>{G&&_s(G,n,9,X)},ia=(G,X)=>{const ea=X[1];ta(G,X),ua(G)?G.every(W=>W.length<=1)&&ea():G.length<=1&&ea()},ka={mode:i,persisted:o,beforeEnter(G){let X=r;if(!s.isMounted)if(l)X=O||r;else return;G[Gs]&&G[Gs](!0);const ea=Q[P];ea&&gt(a,ea)&&ea.el[Gs]&&ea.el[Gs](),ta(X,[G])},enter(G){let X=h,ea=u,W=v;if(!s.isMounted)if(l)X=y||h,ea=I||u,W=V||v;else return;let ra=!1;const xa=G[Kn]=Aa=>{ra||(ra=!0,Aa?ta(W,[G]):ta(ea,[G]),ka.delayedLeave&&ka.delayedLeave(),G[Kn]=void 0)};X?ia(X,[G,xa]):xa()},leave(G,X){const ea=String(a.key);if(G[Kn]&&G[Kn](!0),s.isUnmounting)return X();ta(j,[G]);let W=!1;const ra=G[Gs]=xa=>{W||(W=!0,X(),xa?ta(C,[G]):ta(M,[G]),G[Gs]=void 0,Q[ea]===a&&delete Q[ea])};Q[ea]=a,k?ia(k,[G,ra]):ra()},clone(G){const X=ed(G,t,s,n,e);return e&&e(X),X}};return ka}function Ue(a){if(be(a))return a=at(a),a.children=null,a}function Bl(a){if(!be(a))return qc(a.type)&&a.children?Ec(a.children):a;const{shapeFlag:t,children:s}=a;if(s){if(t&16)return s[0];if(t&32&&va(s.default))return s.default()}}function yn(a,t){a.shapeFlag&6&&a.component?(a.transition=t,yn(a.component.subTree,t)):a.shapeFlag&128?(a.ssContent.transition=t.clone(a.ssContent),a.ssFallback.transition=t.clone(a.ssFallback)):a.transition=t}function Ac(a,t=!1,s){let n=[],e=0;for(let l=0;l<a.length;l++){let i=a[l];const o=s==null?i.key:String(s)+String(i.key!=null?i.key:l);i.type===da?(i.patchFlag&128&&e++,n=n.concat(Ac(i.children,t,o))):(t||i.type!==ss)&&n.push(o!=null?at(i,{key:o}):i)}if(e>1)for(let l=0;l<n.length;l++)n[l].patchFlag=-2;return n}/*! #__NO_SIDE_EFFECTS__ */function Lc(a,t){return va(a)?Oa({name:a.name},t,{setup:a}):a}function Mc(a){a.ids=[a.ids[0]+a.ids[2]+++"-",0,0]}function ee(a,t,s,n,e=!1){if(ua(a)){a.forEach((M,C)=>ee(M,t&&(ua(t)?t[C]:t),s,n,e));return}if(on(n)&&!e){n.shapeFlag&512&&n.type.__asyncResolved&&n.component.subTree.component&&ee(a,t,s,n.component.subTree);return}const l=n.shapeFlag&4?Rd(n.component):n.el,i=e?null:l,{i:o,r}=a,h=t&&t.r,u=o.refs===Ea?o.refs={}:o.refs,v=o.setupState,j=wa(v),k=v===Ea?()=>!1:M=>Sa(j,M);if(h!=null&&h!==r&&(Da(h)?(u[h]=null,k(h)&&(v[h]=null)):Ka(h)&&(h.value=null)),va(r))Tn(r,o,12,[i,u]);else{const M=Da(r),C=Ka(r);if(M||C){const O=()=>{if(a.f){const y=M?k(r)?v[r]:u[r]:r.value;e?ua(y)&&kd(y,l):ua(y)?y.includes(l)||y.push(l):M?(u[r]=[l],k(r)&&(v[r]=u[r])):(r.value=[l],a.k&&(u[a.k]=r.value))}else M?(u[r]=i,k(r)&&(v[r]=i)):C&&(r.value=i,a.k&&(u[a.k]=i))};i?(O.id=-1,ns(O,s)):O()}}}he().requestIdleCallback;he().cancelIdleCallback;const on=a=>!!a.type.__asyncLoader,be=a=>a.type.__isKeepAlive;function fv(a,t){Rc(a,"a",t)}function gv(a,t){Rc(a,"da",t)}function Rc(a,t,s=$a){const n=a.__wdc||(a.__wdc=()=>{let e=s;for(;e;){if(e.isDeactivated)return;e=e.parent}return a()});if(fe(t,n,s),s){let e=s.parent;for(;e&&e.parent;)be(e.parent.vnode)&&kv(n,t,s,e),e=e.parent}}function kv(a,t,s,n){const e=fe(t,a,n,!0);Ic(()=>{kd(n[t],e)},s)}function fe(a,t,s=$a,n=!1){if(s){const e=s[a]||(s[a]=[]),l=t.__weh||(t.__weh=(...i)=>{tt();const o=En(s),r=_s(t,s,a,i);return o(),nt(),r});return n?e.unshift(l):e.push(l),l}}const Fs=a=>(t,s=$a)=>{(!_n||a==="sp")&&fe(a,(...n)=>t(...n),s)},jv=Fs("bm"),Dc=Fs("m"),yv=Fs("bu"),wv=Fs("u"),Pc=Fs("bum"),Ic=Fs("um"),_v=Fs("sp"),Sv=Fs("rtg"),qv=Fs("rtc");function xv(a,t=$a){fe("ec",a,t)}const Tv="components";function la(a,t){return Cv(Tv,a,!0,t)||a}const Ev=Symbol.for("v-ndc");function Cv(a,t,s=!0,n=!1){const e=vs||$a;if(e){const l=e.type;{const o=f3(l,!1);if(o&&(o===t||o===bs(t)||o===ue(bs(t))))return l}const i=$l(e[a]||l[a],t)||$l(e.appContext[a],t);return!i&&n?l:i}}function $l(a,t){return a&&(a[t]||a[bs(t)]||a[ue(bs(t))])}const dd=a=>a?np(a)?Rd(a):dd(a.parent):null,un=Oa(Object.create(null),{$:a=>a,$el:a=>a.vnode.el,$data:a=>a.data,$props:a=>a.props,$attrs:a=>a.attrs,$slots:a=>a.slots,$refs:a=>a.refs,$parent:a=>dd(a.parent),$root:a=>dd(a.root),$host:a=>a.ce,$emit:a=>a.emit,$options:a=>Oc(a),$forceUpdate:a=>a.f||(a.f=()=>{Ad(a.update)}),$nextTick:a=>a.n||(a.n=jc.bind(a.proxy)),$watch:a=>Yv.bind(a)}),Ve=(a,t)=>a!==Ea&&!a.__isScriptSetup&&Sa(a,t),Av={get({_:a},t){if(t==="__v_skip")return!0;const{ctx:s,setupState:n,data:e,props:l,accessCache:i,type:o,appContext:r}=a;let h;if(t[0]!=="$"){const k=i[t];if(k!==void 0)switch(k){case 1:return n[t];case 2:return e[t];case 4:return s[t];case 3:return l[t]}else{if(Ve(n,t))return i[t]=1,n[t];if(e!==Ea&&Sa(e,t))return i[t]=2,e[t];if((h=a.propsOptions[0])&&Sa(h,t))return i[t]=3,l[t];if(s!==Ea&&Sa(s,t))return i[t]=4,s[t];ld&&(i[t]=0)}}const u=un[t];let v,j;if(u)return t==="$attrs"&&Va(a.attrs,"get",""),u(a);if((v=o.__cssModules)&&(v=v[t]))return v;if(s!==Ea&&Sa(s,t))return i[t]=4,s[t];if(j=r.config.globalProperties,Sa(j,t))return j[t]},set({_:a},t,s){const{data:n,setupState:e,ctx:l}=a;return Ve(e,t)?(e[t]=s,!0):n!==Ea&&Sa(n,t)?(n[t]=s,!0):Sa(a.props,t)||t[0]==="$"&&t.slice(1)in a?!1:(l[t]=s,!0)},has({_:{data:a,setupState:t,accessCache:s,ctx:n,appContext:e,propsOptions:l}},i){let o;return!!s[i]||a!==Ea&&Sa(a,i)||Ve(t,i)||(o=l[0])&&Sa(o,i)||Sa(n,i)||Sa(un,i)||Sa(e.config.globalProperties,i)},defineProperty(a,t,s){return s.get!=null?a._.accessCache[t]=0:Sa(s,"value")&&this.set(a,t,s.value,null),Reflect.defineProperty(a,t,s)}};function Fl(a){return ua(a)?a.reduce((t,s)=>(t[s]=null,t),{}):a}let ld=!0;function Lv(a){const t=Oc(a),s=a.proxy,n=a.ctx;ld=!1,t.beforeCreate&&Jl(t.beforeCreate,a,"bc");const{data:e,computed:l,methods:i,watch:o,provide:r,inject:h,created:u,beforeMount:v,mounted:j,beforeUpdate:k,updated:M,activated:C,deactivated:O,beforeDestroy:y,beforeUnmount:I,destroyed:V,unmounted:P,render:Q,renderTracked:ta,renderTriggered:ia,errorCaptured:ka,serverPrefetch:G,expose:X,inheritAttrs:ea,components:W,directives:ra,filters:xa}=t;if(h&&Mv(h,n,null),i)for(const ha in i){const fa=i[ha];va(fa)&&(n[ha]=fa.bind(s))}if(e){const ha=e.call(s,s);Ca(ha)&&(a.data=ve(ha))}if(ld=!0,l)for(const ha in l){const fa=l[ha],Ra=va(fa)?fa.bind(s,s):va(fa.get)?fa.get.bind(s,s):Cs,za=!va(fa)&&va(fa.set)?fa.set.bind(s):Cs,Ha=js({get:Ra,set:za});Object.defineProperty(n,ha,{enumerable:!0,configurable:!0,get:()=>Ha.value,set:La=>Ha.value=La})}if(o)for(const ha in o)Nc(o[ha],n,s,ha);if(r){const ha=va(r)?r.call(s):r;Reflect.ownKeys(ha).forEach(fa=>{Wn(fa,ha[fa])})}u&&Jl(u,a,"c");function ga(ha,fa){ua(fa)?fa.forEach(Ra=>ha(Ra.bind(s))):fa&&ha(fa.bind(s))}if(ga(jv,v),ga(Dc,j),ga(yv,k),ga(wv,M),ga(fv,C),ga(gv,O),ga(xv,ka),ga(qv,ta),ga(Sv,ia),ga(Pc,I),ga(Ic,P),ga(_v,G),ua(X))if(X.length){const ha=a.exposed||(a.exposed={});X.forEach(fa=>{Object.defineProperty(ha,fa,{get:()=>s[fa],set:Ra=>s[fa]=Ra})})}else a.exposed||(a.exposed={});Q&&a.render===Cs&&(a.render=Q),ea!=null&&(a.inheritAttrs=ea),W&&(a.components=W),ra&&(a.directives=ra),G&&Mc(a)}function Mv(a,t,s=Cs){ua(a)&&(a=id(a));for(const n in a){const e=a[n];let l;Ca(e)?"default"in e?l=Hs(e.from||n,e.default,!0):l=Hs(e.from||n):l=Hs(e),Ka(l)?Object.defineProperty(t,n,{enumerable:!0,configurable:!0,get:()=>l.value,set:i=>l.value=i}):t[n]=l}}function Jl(a,t,s){_s(ua(a)?a.map(n=>n.bind(t.proxy)):a.bind(t.proxy),t,s)}function Nc(a,t,s,n){let e=n.includes(".")?Xc(s,n):()=>s[n];if(Da(a)){const l=t[a];va(l)&&Gn(e,l)}else if(va(a))Gn(e,a.bind(s));else if(Ca(a))if(ua(a))a.forEach(l=>Nc(l,t,s,n));else{const l=va(a.handler)?a.handler.bind(s):t[a.handler];va(l)&&Gn(e,l,a)}}function Oc(a){const t=a.type,{mixins:s,extends:n}=t,{mixins:e,optionsCache:l,config:{optionMergeStrategies:i}}=a.appContext,o=l.get(t);let r;return o?r=o:!e.length&&!s&&!n?r=t:(r={},e.length&&e.forEach(h=>de(r,h,i,!0)),de(r,t,i)),Ca(t)&&l.set(t,r),r}function de(a,t,s,n=!1){const{mixins:e,extends:l}=t;l&&de(a,l,s,!0),e&&e.forEach(i=>de(a,i,s,!0));for(const i in t)if(!(n&&i==="expose")){const o=Rv[i]||s&&s[i];a[i]=o?o(a[i],t[i]):t[i]}return a}const Rv={data:Ul,props:Vl,emits:Vl,methods:dn,computed:dn,beforeCreate:Ga,created:Ga,beforeMount:Ga,mounted:Ga,beforeUpdate:Ga,updated:Ga,beforeDestroy:Ga,beforeUnmount:Ga,destroyed:Ga,unmounted:Ga,activated:Ga,deactivated:Ga,errorCaptured:Ga,serverPrefetch:Ga,components:dn,directives:dn,watch:Pv,provide:Ul,inject:Dv};function Ul(a,t){return t?a?function(){return Oa(va(a)?a.call(this,this):a,va(t)?t.call(this,this):t)}:t:a}function Dv(a,t){return dn(id(a),id(t))}function id(a){if(ua(a)){const t={};for(let s=0;s<a.length;s++)t[a[s]]=a[s];return t}return a}function Ga(a,t){return a?[...new Set([].concat(a,t))]:t}function dn(a,t){return a?Oa(Object.create(null),a,t):t}function Vl(a,t){return a?ua(a)&&ua(t)?[...new Set([...a,...t])]:Oa(Object.create(null),Fl(a),Fl(t??{})):t}function Pv(a,t){if(!a)return t;if(!t)return a;const s=Oa(Object.create(null),a);for(const n in t)s[n]=Ga(a[n],t[n]);return s}function Hc(){return{app:null,config:{isNativeTag:_h,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Iv=0;function Nv(a,t){return function(n,e=null){va(n)||(n=Oa({},n)),e!=null&&!Ca(e)&&(e=null);const l=Hc(),i=new WeakSet,o=[];let r=!1;const h=l.app={_uid:Iv++,_component:n,_props:e,_container:null,_context:l,_instance:null,version:k3,get config(){return l.config},set config(u){},use(u,...v){return i.has(u)||(u&&va(u.install)?(i.add(u),u.install(h,...v)):va(u)&&(i.add(u),u(h,...v))),h},mixin(u){return l.mixins.includes(u)||l.mixins.push(u),h},component(u,v){return v?(l.components[u]=v,h):l.components[u]},directive(u,v){return v?(l.directives[u]=v,h):l.directives[u]},mount(u,v,j){if(!r){const k=h._ceVNode||S(n,e);return k.appContext=l,j===!0?j="svg":j===!1&&(j=void 0),a(k,u,j),r=!0,h._container=u,u.__vue_app__=h,Rd(k.component)}},onUnmount(u){o.push(u)},unmount(){r&&(_s(o,h._instance,16),a(null,h._container),delete h._container.__vue_app__)},provide(u,v){return l.provides[u]=v,h},runWithContext(u){const v=$t;$t=h;try{return u()}finally{$t=v}}};return h}}let $t=null;function Wn(a,t){if($a){let s=$a.provides;const n=$a.parent&&$a.parent.provides;n===s&&(s=$a.provides=Object.create(n)),s[a]=t}}function Hs(a,t,s=!1){const n=$a||vs;if(n||$t){const e=$t?$t._context.provides:n?n.parent==null?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides:void 0;if(e&&a in e)return e[a];if(arguments.length>1)return s&&va(t)?t.call(n&&n.proxy):t}}const Bc={},$c=()=>Object.create(Bc),Fc=a=>Object.getPrototypeOf(a)===Bc;function Ov(a,t,s,n=!1){const e={},l=$c();a.propsDefaults=Object.create(null),Jc(a,t,e,l);for(const i in a.propsOptions[0])i in e||(e[i]=void 0);s?a.props=n?e:mc(e):a.type.props?a.props=e:a.props=l,a.attrs=l}function Hv(a,t,s,n){const{props:e,attrs:l,vnode:{patchFlag:i}}=a,o=wa(e),[r]=a.propsOptions;let h=!1;if((n||i>0)&&!(i&16)){if(i&8){const u=a.vnode.dynamicProps;for(let v=0;v<u.length;v++){let j=u[v];if(ge(a.emitsOptions,j))continue;const k=t[j];if(r)if(Sa(l,j))k!==l[j]&&(l[j]=k,h=!0);else{const M=bs(j);e[M]=cd(r,o,M,k,a,!1)}else k!==l[j]&&(l[j]=k,h=!0)}}}else{Jc(a,t,e,l)&&(h=!0);let u;for(const v in o)(!t||!Sa(t,v)&&((u=St(v))===v||!Sa(t,u)))&&(r?s&&(s[v]!==void 0||s[u]!==void 0)&&(e[v]=cd(r,o,v,void 0,a,!0)):delete e[v]);if(l!==o)for(const v in l)(!t||!Sa(t,v))&&(delete l[v],h=!0)}h&&Os(a.attrs,"set","")}function Jc(a,t,s,n){const[e,l]=a.propsOptions;let i=!1,o;if(t)for(let r in t){if(ln(r))continue;const h=t[r];let u;e&&Sa(e,u=bs(r))?!l||!l.includes(u)?s[u]=h:(o||(o={}))[u]=h:ge(a.emitsOptions,r)||(!(r in n)||h!==n[r])&&(n[r]=h,i=!0)}if(l){const r=wa(s),h=o||Ea;for(let u=0;u<l.length;u++){const v=l[u];s[v]=cd(e,r,v,h[v],a,!Sa(h,v))}}return i}function cd(a,t,s,n,e,l){const i=a[s];if(i!=null){const o=Sa(i,"default");if(o&&n===void 0){const r=i.default;if(i.type!==Function&&!i.skipFactory&&va(r)){const{propsDefaults:h}=e;if(s in h)n=h[s];else{const u=En(e);n=h[s]=r.call(null,t),u()}}else n=r;e.ce&&e.ce._setProp(s,n)}i[0]&&(l&&!o?n=!1:i[1]&&(n===""||n===St(s))&&(n=!0))}return n}const Bv=new WeakMap;function Uc(a,t,s=!1){const n=s?Bv:t.propsCache,e=n.get(a);if(e)return e;const l=a.props,i={},o=[];let r=!1;if(!va(a)){const u=v=>{r=!0;const[j,k]=Uc(v,t,!0);Oa(i,j),k&&o.push(...k)};!s&&t.mixins.length&&t.mixins.forEach(u),a.extends&&u(a.extends),a.mixins&&a.mixins.forEach(u)}if(!l&&!r)return Ca(a)&&n.set(a,Ot),Ot;if(ua(l))for(let u=0;u<l.length;u++){const v=bs(l[u]);Kl(v)&&(i[v]=Ea)}else if(l)for(const u in l){const v=bs(u);if(Kl(v)){const j=l[u],k=i[v]=ua(j)||va(j)?{type:j}:Oa({},j),M=k.type;let C=!1,O=!0;if(ua(M))for(let y=0;y<M.length;++y){const I=M[y],V=va(I)&&I.name;if(V==="Boolean"){C=!0;break}else V==="String"&&(O=!1)}else C=va(M)&&M.name==="Boolean";k[0]=C,k[1]=O,(C||Sa(k,"default"))&&o.push(v)}}const h=[i,o];return Ca(a)&&n.set(a,h),h}function Kl(a){return a[0]!=="$"&&!ln(a)}const Vc=a=>a[0]==="_"||a==="$stable",Ld=a=>ua(a)?a.map(Es):[Es(a)],$v=(a,t,s)=>{if(t._n)return t;const n=x((...e)=>Ld(t(...e)),s);return n._c=!1,n},Kc=(a,t,s)=>{const n=a._ctx;for(const e in a){if(Vc(e))continue;const l=a[e];if(va(l))t[e]=$v(e,l,n);else if(l!=null){const i=Ld(l);t[e]=()=>i}}},zc=(a,t)=>{const s=Ld(t);a.slots.default=()=>s},Wc=(a,t,s)=>{for(const n in t)(s||n!=="_")&&(a[n]=t[n])},Fv=(a,t,s)=>{const n=a.slots=$c();if(a.vnode.shapeFlag&32){const e=t._;e?(Wc(n,t,s),s&&Qi(n,"_",e,!0)):Kc(t,n)}else t&&zc(a,t)},Jv=(a,t,s)=>{const{vnode:n,slots:e}=a;let l=!0,i=Ea;if(n.shapeFlag&32){const o=t._;o?s&&o===1?l=!1:Wc(e,t,s):(l=!t.$stable,Kc(t,e)),i=t}else t&&(zc(a,t),i={default:1});if(l)for(const o in e)!Vc(o)&&i[o]==null&&delete e[o]},ns=n3;function Uv(a){return Vv(a)}function Vv(a,t){const s=he();s.__VUE__=!0;const{insert:n,remove:e,patchProp:l,createElement:i,createText:o,createComment:r,setText:h,setElementText:u,parentNode:v,nextSibling:j,setScopeId:k=Cs,insertStaticContent:M}=a,C=(m,f,_,E=null,R=null,D=null,H=void 0,F=null,q=!!f.dynamicChildren)=>{if(m===f)return;m&&!gt(m,f)&&(E=A(m),La(m,R,D,!0),m=null),f.patchFlag===-2&&(q=!1,f.dynamicChildren=null);const{type:N,ref:pa,shapeFlag:Y}=f;switch(N){case ke:O(m,f,_,E);break;case ss:y(m,f,_,E);break;case Yn:m==null&&I(f,_,E,H);break;case da:W(m,f,_,E,R,D,H,F,q);break;default:Y&1?Q(m,f,_,E,R,D,H,F,q):Y&6?ra(m,f,_,E,R,D,H,F,q):(Y&64||Y&128)&&N.process(m,f,_,E,R,D,H,F,q,aa)}pa!=null&&R&&ee(pa,m&&m.ref,D,f||m,!f)},O=(m,f,_,E)=>{if(m==null)n(f.el=o(f.children),_,E);else{const R=f.el=m.el;f.children!==m.children&&h(R,f.children)}},y=(m,f,_,E)=>{m==null?n(f.el=r(f.children||""),_,E):f.el=m.el},I=(m,f,_,E)=>{[m.el,m.anchor]=M(m.children,f,_,E,m.el,m.anchor)},V=({el:m,anchor:f},_,E)=>{let R;for(;m&&m!==f;)R=j(m),n(m,_,E),m=R;n(f,_,E)},P=({el:m,anchor:f})=>{let _;for(;m&&m!==f;)_=j(m),e(m),m=_;e(f)},Q=(m,f,_,E,R,D,H,F,q)=>{f.type==="svg"?H="svg":f.type==="math"&&(H="mathml"),m==null?ta(f,_,E,R,D,H,F,q):G(m,f,R,D,H,F,q)},ta=(m,f,_,E,R,D,H,F)=>{let q,N;const{props:pa,shapeFlag:Y,transition:na,dirs:oa}=m;if(q=m.el=i(m.type,D,pa&&pa.is,pa),Y&8?u(q,m.children):Y&16&&ka(m.children,q,null,E,R,Ke(m,D),H,F),oa&&ht(m,null,E,"created"),ia(q,m,m.scopeId,H,E),pa){for(const ya in pa)ya!=="value"&&!ln(ya)&&l(q,ya,null,pa[ya],D,E);"value"in pa&&l(q,"value",null,pa.value,D),(N=pa.onVnodeBeforeMount)&&xs(N,E,m)}oa&&ht(m,null,E,"beforeMount");const ma=Kv(R,na);ma&&na.beforeEnter(q),n(q,f,_),((N=pa&&pa.onVnodeMounted)||ma||oa)&&ns(()=>{N&&xs(N,E,m),ma&&na.enter(q),oa&&ht(m,null,E,"mounted")},R)},ia=(m,f,_,E,R)=>{if(_&&k(m,_),E)for(let D=0;D<E.length;D++)k(m,E[D]);if(R){let D=R.subTree;if(f===D||ap(D.type)&&(D.ssContent===f||D.ssFallback===f)){const H=R.vnode;ia(m,H,H.scopeId,H.slotScopeIds,R.parent)}}},ka=(m,f,_,E,R,D,H,F,q=0)=>{for(let N=q;N<m.length;N++){const pa=m[N]=F?Ys(m[N]):Es(m[N]);C(null,pa,f,_,E,R,D,H,F)}},G=(m,f,_,E,R,D,H)=>{const F=f.el=m.el;let{patchFlag:q,dynamicChildren:N,dirs:pa}=f;q|=m.patchFlag&16;const Y=m.props||Ea,na=f.props||Ea;let oa;if(_&&vt(_,!1),(oa=na.onVnodeBeforeUpdate)&&xs(oa,_,f,m),pa&&ht(f,m,_,"beforeUpdate"),_&&vt(_,!0),(Y.innerHTML&&na.innerHTML==null||Y.textContent&&na.textContent==null)&&u(F,""),N?X(m.dynamicChildren,N,F,_,E,Ke(f,R),D):H||fa(m,f,F,null,_,E,Ke(f,R),D,!1),q>0){if(q&16)ea(F,Y,na,_,R);else if(q&2&&Y.class!==na.class&&l(F,"class",null,na.class,R),q&4&&l(F,"style",Y.style,na.style,R),q&8){const ma=f.dynamicProps;for(let ya=0;ya<ma.length;ya++){const ja=ma[ya],Pa=Y[ja],Ja=na[ja];(Ja!==Pa||ja==="value")&&l(F,ja,Pa,Ja,R,_)}}q&1&&m.children!==f.children&&u(F,f.children)}else!H&&N==null&&ea(F,Y,na,_,R);((oa=na.onVnodeUpdated)||pa)&&ns(()=>{oa&&xs(oa,_,f,m),pa&&ht(f,m,_,"updated")},E)},X=(m,f,_,E,R,D,H)=>{for(let F=0;F<f.length;F++){const q=m[F],N=f[F],pa=q.el&&(q.type===da||!gt(q,N)||q.shapeFlag&70)?v(q.el):_;C(q,N,pa,null,E,R,D,H,!0)}},ea=(m,f,_,E,R)=>{if(f!==_){if(f!==Ea)for(const D in f)!ln(D)&&!(D in _)&&l(m,D,f[D],null,R,E);for(const D in _){if(ln(D))continue;const H=_[D],F=f[D];H!==F&&D!=="value"&&l(m,D,F,H,R,E)}"value"in _&&l(m,"value",f.value,_.value,R)}},W=(m,f,_,E,R,D,H,F,q)=>{const N=f.el=m?m.el:o(""),pa=f.anchor=m?m.anchor:o("");let{patchFlag:Y,dynamicChildren:na,slotScopeIds:oa}=f;oa&&(F=F?F.concat(oa):oa),m==null?(n(N,_,E),n(pa,_,E),ka(f.children||[],_,pa,R,D,H,F,q)):Y>0&&Y&64&&na&&m.dynamicChildren?(X(m.dynamicChildren,na,_,R,D,H,F),(f.key!=null||R&&f===R.subTree)&&Gc(m,f,!0)):fa(m,f,_,pa,R,D,H,F,q)},ra=(m,f,_,E,R,D,H,F,q)=>{f.slotScopeIds=F,m==null?f.shapeFlag&512?R.ctx.activate(f,_,E,H,q):xa(f,_,E,R,D,H,q):Aa(m,f,q)},xa=(m,f,_,E,R,D,H)=>{const F=m.component=o3(m,E,R);if(be(m)&&(F.ctx.renderer=aa),h3(F,!1,H),F.asyncDep){if(R&&R.registerDep(F,ga,H),!m.el){const q=F.subTree=S(ss);y(null,q,f,_)}}else ga(F,m,f,_,R,D,H)},Aa=(m,f,_)=>{const E=f.component=m.component;if(s3(m,f,_))if(E.asyncDep&&!E.asyncResolved){ha(E,f,_);return}else E.next=f,E.update();else f.el=m.el,E.vnode=f},ga=(m,f,_,E,R,D,H)=>{const F=()=>{if(m.isMounted){let{next:Y,bu:na,u:oa,parent:ma,vnode:ya}=m;{const ps=Yc(m);if(ps){Y&&(Y.el=ya.el,ha(m,Y,H)),ps.asyncDep.then(()=>{m.isUnmounted||F()});return}}let ja=Y,Pa;vt(m,!1),Y?(Y.el=ya.el,ha(m,Y,H)):Y=ya,na&&He(na),(Pa=Y.props&&Y.props.onVnodeBeforeUpdate)&&xs(Pa,ma,Y,ya),vt(m,!0);const Ja=Wl(m),fs=m.subTree;m.subTree=Ja,C(fs,Ja,v(fs.el),A(fs),m,R,D),Y.el=Ja.el,ja===null&&t3(m,Ja.el),oa&&ns(oa,R),(Pa=Y.props&&Y.props.onVnodeUpdated)&&ns(()=>xs(Pa,ma,Y,ya),R)}else{let Y;const{el:na,props:oa}=f,{bm:ma,m:ya,parent:ja,root:Pa,type:Ja}=m,fs=on(f);vt(m,!1),ma&&He(ma),!fs&&(Y=oa&&oa.onVnodeBeforeMount)&&xs(Y,ja,f),vt(m,!0);{Pa.ce&&Pa.ce._injectChildStyle(Ja);const ps=m.subTree=Wl(m);C(null,ps,_,E,m,R,D),f.el=ps.el}if(ya&&ns(ya,R),!fs&&(Y=oa&&oa.onVnodeMounted)){const ps=f;ns(()=>xs(Y,ja,ps),R)}(f.shapeFlag&256||ja&&on(ja.vnode)&&ja.vnode.shapeFlag&256)&&m.a&&ns(m.a,R),m.isMounted=!0,f=_=E=null}};m.scope.on();const q=m.effect=new sc(F);m.scope.off();const N=m.update=q.run.bind(q),pa=m.job=q.runIfDirty.bind(q);pa.i=m,pa.id=m.uid,q.scheduler=()=>Ad(pa),vt(m,!0),N()},ha=(m,f,_)=>{f.component=m;const E=m.vnode.props;m.vnode=f,m.next=null,Hv(m,f.props,E,_),Jv(m,f.children,_),tt(),Hl(m),nt()},fa=(m,f,_,E,R,D,H,F,q=!1)=>{const N=m&&m.children,pa=m?m.shapeFlag:0,Y=f.children,{patchFlag:na,shapeFlag:oa}=f;if(na>0){if(na&128){za(N,Y,_,E,R,D,H,F,q);return}else if(na&256){Ra(N,Y,_,E,R,D,H,F,q);return}}oa&8?(pa&16&&Ma(N,R,D),Y!==N&&u(_,Y)):pa&16?oa&16?za(N,Y,_,E,R,D,H,F,q):Ma(N,R,D,!0):(pa&8&&u(_,""),oa&16&&ka(Y,_,E,R,D,H,F,q))},Ra=(m,f,_,E,R,D,H,F,q)=>{m=m||Ot,f=f||Ot;const N=m.length,pa=f.length,Y=Math.min(N,pa);let na;for(na=0;na<Y;na++){const oa=f[na]=q?Ys(f[na]):Es(f[na]);C(m[na],oa,_,null,R,D,H,F,q)}N>pa?Ma(m,R,D,!0,!1,Y):ka(f,_,E,R,D,H,F,q,Y)},za=(m,f,_,E,R,D,H,F,q)=>{let N=0;const pa=f.length;let Y=m.length-1,na=pa-1;for(;N<=Y&&N<=na;){const oa=m[N],ma=f[N]=q?Ys(f[N]):Es(f[N]);if(gt(oa,ma))C(oa,ma,_,null,R,D,H,F,q);else break;N++}for(;N<=Y&&N<=na;){const oa=m[Y],ma=f[na]=q?Ys(f[na]):Es(f[na]);if(gt(oa,ma))C(oa,ma,_,null,R,D,H,F,q);else break;Y--,na--}if(N>Y){if(N<=na){const oa=na+1,ma=oa<pa?f[oa].el:E;for(;N<=na;)C(null,f[N]=q?Ys(f[N]):Es(f[N]),_,ma,R,D,H,F,q),N++}}else if(N>na)for(;N<=Y;)La(m[N],R,D,!0),N++;else{const oa=N,ma=N,ya=new Map;for(N=ma;N<=na;N++){const Ua=f[N]=q?Ys(f[N]):Es(f[N]);Ua.key!=null&&ya.set(Ua.key,N)}let ja,Pa=0;const Ja=na-ma+1;let fs=!1,ps=0;const dt=new Array(Ja);for(N=0;N<Ja;N++)dt[N]=0;for(N=oa;N<=Y;N++){const Ua=m[N];if(Pa>=Ja){La(Ua,R,D,!0);continue}let rs;if(Ua.key!=null)rs=ya.get(Ua.key);else for(ja=ma;ja<=na;ja++)if(dt[ja-ma]===0&&gt(Ua,f[ja])){rs=ja;break}rs===void 0?La(Ua,R,D,!0):(dt[rs-ma]=N+1,rs>=ps?ps=rs:fs=!0,C(Ua,f[rs],_,null,R,D,H,F,q),Pa++)}const An=fs?zv(dt):Ot;for(ja=An.length-1,N=Ja-1;N>=0;N--){const Ua=ma+N,rs=f[Ua],Js=Ua+1<pa?f[Ua+1].el:E;dt[N]===0?C(null,rs,_,Js,R,D,H,F,q):fs&&(ja<0||N!==An[ja]?Ha(rs,_,Js,2):ja--)}}},Ha=(m,f,_,E,R=null)=>{const{el:D,type:H,transition:F,children:q,shapeFlag:N}=m;if(N&6){Ha(m.component.subTree,f,_,E);return}if(N&128){m.suspense.move(f,_,E);return}if(N&64){H.move(m,f,_,aa);return}if(H===da){n(D,f,_);for(let Y=0;Y<q.length;Y++)Ha(q[Y],f,_,E);n(m.anchor,f,_);return}if(H===Yn){V(m,f,_);return}if(E!==2&&N&1&&F)if(E===0)F.beforeEnter(D),n(D,f,_),ns(()=>F.enter(D),R);else{const{leave:Y,delayLeave:na,afterLeave:oa}=F,ma=()=>n(D,f,_),ya=()=>{Y(D,()=>{ma(),oa&&oa()})};na?na(D,ma,ya):ya()}else n(D,f,_)},La=(m,f,_,E=!1,R=!1)=>{const{type:D,props:H,ref:F,children:q,dynamicChildren:N,shapeFlag:pa,patchFlag:Y,dirs:na,cacheIndex:oa}=m;if(Y===-2&&(R=!1),F!=null&&ee(F,null,_,m,!0),oa!=null&&(f.renderCache[oa]=void 0),pa&256){f.ctx.deactivate(m);return}const ma=pa&1&&na,ya=!on(m);let ja;if(ya&&(ja=H&&H.onVnodeBeforeUnmount)&&xs(ja,f,m),pa&6)Fa(m.component,_,E);else{if(pa&128){m.suspense.unmount(_,E);return}ma&&ht(m,null,f,"beforeUnmount"),pa&64?m.type.remove(m,f,_,aa,E):N&&!N.hasOnce&&(D!==da||Y>0&&Y&64)?Ma(N,f,_,!1,!0):(D===da&&Y&384||!R&&pa&16)&&Ma(q,f,_),E&&ts(m)}(ya&&(ja=H&&H.onVnodeUnmounted)||ma)&&ns(()=>{ja&&xs(ja,f,m),ma&&ht(m,null,f,"unmounted")},_)},ts=m=>{const{type:f,el:_,anchor:E,transition:R}=m;if(f===da){Wa(_,E);return}if(f===Yn){P(m);return}const D=()=>{e(_),R&&!R.persisted&&R.afterLeave&&R.afterLeave()};if(m.shapeFlag&1&&R&&!R.persisted){const{leave:H,delayLeave:F}=R,q=()=>H(_,D);F?F(m.el,D,q):q()}else D()},Wa=(m,f)=>{let _;for(;m!==f;)_=j(m),e(m),m=_;e(f)},Fa=(m,f,_)=>{const{bum:E,scope:R,job:D,subTree:H,um:F,m:q,a:N}=m;zl(q),zl(N),E&&He(E),R.stop(),D&&(D.flags|=8,La(H,m,f,_)),F&&ns(F,f),ns(()=>{m.isUnmounted=!0},f),f&&f.pendingBranch&&!f.isUnmounted&&m.asyncDep&&!m.asyncResolved&&m.suspenseId===f.pendingId&&(f.deps--,f.deps===0&&f.resolve())},Ma=(m,f,_,E=!1,R=!1,D=0)=>{for(let H=D;H<m.length;H++)La(m[H],f,_,E,R)},A=m=>{if(m.shapeFlag&6)return A(m.component.subTree);if(m.shapeFlag&128)return m.suspense.next();const f=j(m.anchor||m.el),_=f&&f[hv];return _?j(_):f};let K=!1;const z=(m,f,_)=>{m==null?f._vnode&&La(f._vnode,null,null,!0):C(f._vnode||null,m,f,null,null,null,_),f._vnode=m,K||(K=!0,Hl(),wc(),K=!1)},aa={p:C,um:La,m:Ha,r:ts,mt:xa,mc:ka,pc:fa,pbc:X,n:A,o:a};return{render:z,hydrate:void 0,createApp:Nv(z)}}function Ke({type:a,props:t},s){return s==="svg"&&a==="foreignObject"||s==="mathml"&&a==="annotation-xml"&&t&&t.encoding&&t.encoding.includes("html")?void 0:s}function vt({effect:a,job:t},s){s?(a.flags|=32,t.flags|=4):(a.flags&=-33,t.flags&=-5)}function Kv(a,t){return(!a||a&&!a.pendingBranch)&&t&&!t.persisted}function Gc(a,t,s=!1){const n=a.children,e=t.children;if(ua(n)&&ua(e))for(let l=0;l<n.length;l++){const i=n[l];let o=e[l];o.shapeFlag&1&&!o.dynamicChildren&&((o.patchFlag<=0||o.patchFlag===32)&&(o=e[l]=Ys(e[l]),o.el=i.el),!s&&o.patchFlag!==-2&&Gc(i,o)),o.type===ke&&(o.el=i.el)}}function zv(a){const t=a.slice(),s=[0];let n,e,l,i,o;const r=a.length;for(n=0;n<r;n++){const h=a[n];if(h!==0){if(e=s[s.length-1],a[e]<h){t[n]=e,s.push(n);continue}for(l=0,i=s.length-1;l<i;)o=l+i>>1,a[s[o]]<h?l=o+1:i=o;h<a[s[l]]&&(l>0&&(t[n]=s[l-1]),s[l]=n)}}for(l=s.length,i=s[l-1];l-- >0;)s[l]=i,i=t[i];return s}function Yc(a){const t=a.subTree.component;if(t)return t.asyncDep&&!t.asyncResolved?t:Yc(t)}function zl(a){if(a)for(let t=0;t<a.length;t++)a[t].flags|=8}const Wv=Symbol.for("v-scx"),Gv=()=>Hs(Wv);function Gn(a,t,s){return Qc(a,t,s)}function Qc(a,t,s=Ea){const{immediate:n,deep:e,flush:l,once:i}=s,o=Oa({},s),r=t&&n||!t&&l!=="post";let h;if(_n){if(l==="sync"){const k=Gv();h=k.__watcherHandles||(k.__watcherHandles=[])}else if(!r){const k=()=>{};return k.stop=Cs,k.resume=Cs,k.pause=Cs,k}}const u=$a;o.call=(k,M,C)=>_s(k,u,M,C);let v=!1;l==="post"?o.scheduler=k=>{ns(k,u&&u.suspense)}:l!=="sync"&&(v=!0,o.scheduler=(k,M)=>{M?k():Ad(k)}),o.augmentJob=k=>{t&&(k.flags|=4),v&&(k.flags|=2,u&&(k.id=u.uid,k.i=u))};const j=pv(a,t,o);return _n&&(h?h.push(j):r&&j()),j}function Yv(a,t,s){const n=this.proxy,e=Da(a)?a.includes(".")?Xc(n,a):()=>n[a]:a.bind(n,n);let l;va(t)?l=t:(l=t.handler,s=t);const i=En(this),o=Qc(e,l.bind(n),s);return i(),o}function Xc(a,t){const s=t.split(".");return()=>{let n=a;for(let e=0;e<s.length&&n;e++)n=n[s[e]];return n}}const Qv=(a,t)=>t==="modelValue"||t==="model-value"?a.modelModifiers:a[`${t}Modifiers`]||a[`${bs(t)}Modifiers`]||a[`${St(t)}Modifiers`];function Xv(a,t,...s){if(a.isUnmounted)return;const n=a.vnode.props||Ea;let e=s;const l=t.startsWith("update:"),i=l&&Qv(n,t.slice(7));i&&(i.trim&&(e=s.map(u=>Da(u)?u.trim():u)),i.number&&(e=s.map(Eh)));let o,r=n[o=Oe(t)]||n[o=Oe(bs(t))];!r&&l&&(r=n[o=Oe(St(t))]),r&&_s(r,a,6,e);const h=n[o+"Once"];if(h){if(!a.emitted)a.emitted={};else if(a.emitted[o])return;a.emitted[o]=!0,_s(h,a,6,e)}}function Zc(a,t,s=!1){const n=t.emitsCache,e=n.get(a);if(e!==void 0)return e;const l=a.emits;let i={},o=!1;if(!va(a)){const r=h=>{const u=Zc(h,t,!0);u&&(o=!0,Oa(i,u))};!s&&t.mixins.length&&t.mixins.forEach(r),a.extends&&r(a.extends),a.mixins&&a.mixins.forEach(r)}return!l&&!o?(Ca(a)&&n.set(a,null),null):(ua(l)?l.forEach(r=>i[r]=null):Oa(i,l),Ca(a)&&n.set(a,i),i)}function ge(a,t){return!a||!pe(t)?!1:(t=t.slice(2).replace(/Once$/,""),Sa(a,t[0].toLowerCase()+t.slice(1))||Sa(a,St(t))||Sa(a,t))}function Wl(a){const{type:t,vnode:s,proxy:n,withProxy:e,propsOptions:[l],slots:i,attrs:o,emit:r,render:h,renderCache:u,props:v,data:j,setupState:k,ctx:M,inheritAttrs:C}=a,O=ne(a);let y,I;try{if(s.shapeFlag&4){const P=e||n,Q=P;y=Es(h.call(Q,P,u,v,k,j,M)),I=o}else{const P=t;y=Es(P.length>1?P(v,{attrs:o,slots:i,emit:r}):P(v,null)),I=t.props?o:Zv(o)}}catch(P){hn.length=0,me(P,a,1),y=S(ss)}let V=y;if(I&&C!==!1){const P=Object.keys(I),{shapeFlag:Q}=V;P.length&&Q&7&&(l&&P.some(gd)&&(I=a3(I,l)),V=at(V,I,!1,!0))}return s.dirs&&(V=at(V,null,!1,!0),V.dirs=V.dirs?V.dirs.concat(s.dirs):s.dirs),s.transition&&yn(V,s.transition),y=V,ne(O),y}const Zv=a=>{let t;for(const s in a)(s==="class"||s==="style"||pe(s))&&((t||(t={}))[s]=a[s]);return t},a3=(a,t)=>{const s={};for(const n in a)(!gd(n)||!(n.slice(9)in t))&&(s[n]=a[n]);return s};function s3(a,t,s){const{props:n,children:e,component:l}=a,{props:i,children:o,patchFlag:r}=t,h=l.emitsOptions;if(t.dirs||t.transition)return!0;if(s&&r>=0){if(r&1024)return!0;if(r&16)return n?Gl(n,i,h):!!i;if(r&8){const u=t.dynamicProps;for(let v=0;v<u.length;v++){const j=u[v];if(i[j]!==n[j]&&!ge(h,j))return!0}}}else return(e||o)&&(!o||!o.$stable)?!0:n===i?!1:n?i?Gl(n,i,h):!0:!!i;return!1}function Gl(a,t,s){const n=Object.keys(t);if(n.length!==Object.keys(a).length)return!0;for(let e=0;e<n.length;e++){const l=n[e];if(t[l]!==a[l]&&!ge(s,l))return!0}return!1}function t3({vnode:a,parent:t},s){for(;t;){const n=t.subTree;if(n.suspense&&n.suspense.activeBranch===a&&(n.el=a.el),n===a)(a=t.vnode).el=s,t=t.parent;else break}}const ap=a=>a.__isSuspense;function n3(a,t){t&&t.pendingBranch?ua(a)?t.effects.push(...a):t.effects.push(a):uv(a)}const da=Symbol.for("v-fgt"),ke=Symbol.for("v-txt"),ss=Symbol.for("v-cmt"),Yn=Symbol.for("v-stc"),hn=[];let ds=null;function $(a=!1){hn.push(ds=a?null:[])}function e3(){hn.pop(),ds=hn[hn.length-1]||null}let wn=1;function Yl(a,t=!1){wn+=a,a<0&&ds&&t&&(ds.hasOnce=!0)}function sp(a){return a.dynamicChildren=wn>0?ds||Ot:null,e3(),wn>0&&ds&&ds.push(a),a}function J(a,t,s,n,e,l){return sp(c(a,t,s,n,e,l,!0))}function d3(a,t,s,n,e){return sp(S(a,t,s,n,e,!0))}function le(a){return a?a.__v_isVNode===!0:!1}function gt(a,t){return a.type===t.type&&a.key===t.key}const tp=({key:a})=>a??null,Qn=({ref:a,ref_key:t,ref_for:s})=>(typeof a=="number"&&(a=""+a),a!=null?Da(a)||Ka(a)||va(a)?{i:vs,r:a,k:t,f:!!s}:a:null);function c(a,t=null,s=null,n=0,e=null,l=a===da?0:1,i=!1,o=!1){const r={__v_isVNode:!0,__v_skip:!0,type:a,props:t,key:t&&tp(t),ref:t&&Qn(t),scopeId:Sc,slotScopeIds:null,children:s,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:l,patchFlag:n,dynamicProps:e,dynamicChildren:null,appContext:null,ctx:vs};return o?(Md(r,s),l&128&&a.normalize(r)):s&&(r.shapeFlag|=Da(s)?8:16),wn>0&&!i&&ds&&(r.patchFlag>0||l&6)&&r.patchFlag!==32&&ds.push(r),r}const S=l3;function l3(a,t=null,s=null,n=0,e=null,l=!1){if((!a||a===Ev)&&(a=ss),le(a)){const o=at(a,t,!0);return s&&Md(o,s),wn>0&&!l&&ds&&(o.shapeFlag&6?ds[ds.indexOf(a)]=o:ds.push(o)),o.patchFlag=-2,o}if(g3(a)&&(a=a.__vccOpts),t){t=i3(t);let{class:o,style:r}=t;o&&!Da(o)&&(t.class=yd(o)),Ca(r)&&(Cd(r)&&!ua(r)&&(r=Oa({},r)),t.style=$s(r))}const i=Da(a)?1:ap(a)?128:qc(a)?64:Ca(a)?4:va(a)?2:0;return c(a,t,s,n,e,i,l,!0)}function i3(a){return a?Cd(a)||Fc(a)?Oa({},a):a:null}function at(a,t,s=!1,n=!1){const{props:e,ref:l,patchFlag:i,children:o,transition:r}=a,h=t?c3(e||{},t):e,u={__v_isVNode:!0,__v_skip:!0,type:a.type,props:h,key:h&&tp(h),ref:t&&t.ref?s&&l?ua(l)?l.concat(Qn(t)):[l,Qn(t)]:Qn(t):l,scopeId:a.scopeId,slotScopeIds:a.slotScopeIds,children:o,target:a.target,targetStart:a.targetStart,targetAnchor:a.targetAnchor,staticCount:a.staticCount,shapeFlag:a.shapeFlag,patchFlag:t&&a.type!==da?i===-1?16:i|16:i,dynamicProps:a.dynamicProps,dynamicChildren:a.dynamicChildren,appContext:a.appContext,dirs:a.dirs,transition:r,component:a.component,suspense:a.suspense,ssContent:a.ssContent&&at(a.ssContent),ssFallback:a.ssFallback&&at(a.ssFallback),el:a.el,anchor:a.anchor,ctx:a.ctx,ce:a.ce};return r&&n&&yn(u,r.clone(u)),u}function w(a=" ",t=0){return S(ke,null,a,t)}function Z(a,t){const s=S(Yn,null,a);return s.staticCount=t,s}function qa(a="",t=!1){return t?($(),d3(ss,null,a)):S(ss,null,a)}function Es(a){return a==null||typeof a=="boolean"?S(ss):ua(a)?S(da,null,a.slice()):le(a)?Ys(a):S(ke,null,String(a))}function Ys(a){return a.el===null&&a.patchFlag!==-1||a.memo?a:at(a)}function Md(a,t){let s=0;const{shapeFlag:n}=a;if(t==null)t=null;else if(ua(t))s=16;else if(typeof t=="object")if(n&65){const e=t.default;e&&(e._c&&(e._d=!1),Md(a,e()),e._c&&(e._d=!0));return}else{s=32;const e=t._;!e&&!Fc(t)?t._ctx=vs:e===3&&vs&&(vs.slots._===1?t._=1:(t._=2,a.patchFlag|=1024))}else va(t)?(t={default:t,_ctx:vs},s=32):(t=String(t),n&64?(s=16,t=[w(t)]):s=8);a.children=t,a.shapeFlag|=s}function c3(...a){const t={};for(let s=0;s<a.length;s++){const n=a[s];for(const e in n)if(e==="class")t.class!==n.class&&(t.class=yd([t.class,n.class]));else if(e==="style")t.style=$s([t.style,n.style]);else if(pe(e)){const l=t[e],i=n[e];i&&l!==i&&!(ua(l)&&l.includes(i))&&(t[e]=l?[].concat(l,i):i)}else e!==""&&(t[e]=n[e])}return t}function xs(a,t,s,n=null){_s(a,t,7,[s,n])}const p3=Hc();let r3=0;function o3(a,t,s){const n=a.type,e=(t?t.appContext:a.appContext)||p3,l={uid:r3++,vnode:a,type:n,parent:t,appContext:e,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new Ih(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(e.provides),ids:t?t.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Uc(n,e),emitsOptions:Zc(n,e),emit:null,emitted:null,propsDefaults:Ea,inheritAttrs:n.inheritAttrs,ctx:Ea,data:Ea,props:Ea,attrs:Ea,slots:Ea,refs:Ea,setupState:Ea,setupContext:null,suspense:s,suspenseId:s?s.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return l.ctx={_:l},l.root=t?t.root:l,l.emit=Xv.bind(null,l),a.ce&&a.ce(l),l}let $a=null;const u3=()=>$a||vs;let ie,pd;{const a=he(),t=(s,n)=>{let e;return(e=a[s])||(e=a[s]=[]),e.push(n),l=>{e.length>1?e.forEach(i=>i(l)):e[0](l)}};ie=t("__VUE_INSTANCE_SETTERS__",s=>$a=s),pd=t("__VUE_SSR_SETTERS__",s=>_n=s)}const En=a=>{const t=$a;return ie(a),a.scope.on(),()=>{a.scope.off(),ie(t)}},Ql=()=>{$a&&$a.scope.off(),ie(null)};function np(a){return a.vnode.shapeFlag&4}let _n=!1;function h3(a,t=!1,s=!1){t&&pd(t);const{props:n,children:e}=a.vnode,l=np(a);Ov(a,n,l,t),Fv(a,e,s);const i=l?v3(a,t):void 0;return t&&pd(!1),i}function v3(a,t){const s=a.type;a.accessCache=Object.create(null),a.proxy=new Proxy(a.ctx,Av);const{setup:n}=s;if(n){tt();const e=a.setupContext=n.length>1?b3(a):null,l=En(a),i=Tn(n,a,0,[a.props,e]),o=Wi(i);if(nt(),l(),(o||a.sp)&&!on(a)&&Mc(a),o){if(i.then(Ql,Ql),t)return i.then(r=>{Xl(a,r)}).catch(r=>{me(r,a,0)});a.asyncDep=i}else Xl(a,i)}else ep(a)}function Xl(a,t,s){va(t)?a.type.__ssrInlineRender?a.ssrRender=t:a.render=t:Ca(t)&&(a.setupState=gc(t)),ep(a)}function ep(a,t,s){const n=a.type;a.render||(a.render=n.render||Cs);{const e=En(a);tt();try{Lv(a)}finally{nt(),e()}}}const m3={get(a,t){return Va(a,"get",""),a[t]}};function b3(a){const t=s=>{a.exposed=s||{}};return{attrs:new Proxy(a.attrs,m3),slots:a.slots,emit:a.emit,expose:t}}function Rd(a){return a.exposed?a.exposeProxy||(a.exposeProxy=new Proxy(gc(tv(a.exposed)),{get(t,s){if(s in t)return t[s];if(s in un)return un[s](a)},has(t,s){return s in t||s in un}})):a.proxy}function f3(a,t=!0){return va(a)?a.displayName||a.name:a.name||t&&a.__name}function g3(a){return va(a)&&"__vccOpts"in a}const js=(a,t)=>iv(a,t,_n);function Dd(a,t,s){const n=arguments.length;return n===2?Ca(t)&&!ua(t)?le(t)?S(a,null,[t]):S(a,t):S(a,null,t):(n>3?s=Array.prototype.slice.call(arguments,2):n===3&&le(s)&&(s=[s]),S(a,t,s))}const k3="3.5.13";/**
* @vue/runtime-dom v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let rd;const Zl=typeof window<"u"&&window.trustedTypes;if(Zl)try{rd=Zl.createPolicy("vue",{createHTML:a=>a})}catch{}const dp=rd?a=>rd.createHTML(a):a=>a,j3="http://www.w3.org/2000/svg",y3="http://www.w3.org/1998/Math/MathML",Ns=typeof document<"u"?document:null,ai=Ns&&Ns.createElement("template"),w3={insert:(a,t,s)=>{t.insertBefore(a,s||null)},remove:a=>{const t=a.parentNode;t&&t.removeChild(a)},createElement:(a,t,s,n)=>{const e=t==="svg"?Ns.createElementNS(j3,a):t==="mathml"?Ns.createElementNS(y3,a):s?Ns.createElement(a,{is:s}):Ns.createElement(a);return a==="select"&&n&&n.multiple!=null&&e.setAttribute("multiple",n.multiple),e},createText:a=>Ns.createTextNode(a),createComment:a=>Ns.createComment(a),setText:(a,t)=>{a.nodeValue=t},setElementText:(a,t)=>{a.textContent=t},parentNode:a=>a.parentNode,nextSibling:a=>a.nextSibling,querySelector:a=>Ns.querySelector(a),setScopeId(a,t){a.setAttribute(t,"")},insertStaticContent(a,t,s,n,e,l){const i=s?s.previousSibling:t.lastChild;if(e&&(e===l||e.nextSibling))for(;t.insertBefore(e.cloneNode(!0),s),!(e===l||!(e=e.nextSibling)););else{ai.innerHTML=dp(n==="svg"?`<svg>${a}</svg>`:n==="mathml"?`<math>${a}</math>`:a);const o=ai.content;if(n==="svg"||n==="mathml"){const r=o.firstChild;for(;r.firstChild;)o.appendChild(r.firstChild);o.removeChild(r)}t.insertBefore(o,s)}return[i?i.nextSibling:t.firstChild,s?s.previousSibling:t.lastChild]}},Ks="transition",nn="animation",Sn=Symbol("_vtc"),lp={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},_3=Oa({},xc,lp),S3=a=>(a.displayName="Transition",a.props=_3,a),Gt=S3((a,{slots:t})=>Dd(bv,q3(a),t)),mt=(a,t=[])=>{ua(a)?a.forEach(s=>s(...t)):a&&a(...t)},si=a=>a?ua(a)?a.some(t=>t.length>1):a.length>1:!1;function q3(a){const t={};for(const W in a)W in lp||(t[W]=a[W]);if(a.css===!1)return t;const{name:s="v",type:n,duration:e,enterFromClass:l=`${s}-enter-from`,enterActiveClass:i=`${s}-enter-active`,enterToClass:o=`${s}-enter-to`,appearFromClass:r=l,appearActiveClass:h=i,appearToClass:u=o,leaveFromClass:v=`${s}-leave-from`,leaveActiveClass:j=`${s}-leave-active`,leaveToClass:k=`${s}-leave-to`}=a,M=x3(e),C=M&&M[0],O=M&&M[1],{onBeforeEnter:y,onEnter:I,onEnterCancelled:V,onLeave:P,onLeaveCancelled:Q,onBeforeAppear:ta=y,onAppear:ia=I,onAppearCancelled:ka=V}=t,G=(W,ra,xa,Aa)=>{W._enterCancelled=Aa,bt(W,ra?u:o),bt(W,ra?h:i),xa&&xa()},X=(W,ra)=>{W._isLeaving=!1,bt(W,v),bt(W,k),bt(W,j),ra&&ra()},ea=W=>(ra,xa)=>{const Aa=W?ia:I,ga=()=>G(ra,W,xa);mt(Aa,[ra,ga]),ti(()=>{bt(ra,W?r:l),Ps(ra,W?u:o),si(Aa)||ni(ra,n,C,ga)})};return Oa(t,{onBeforeEnter(W){mt(y,[W]),Ps(W,l),Ps(W,i)},onBeforeAppear(W){mt(ta,[W]),Ps(W,r),Ps(W,h)},onEnter:ea(!1),onAppear:ea(!0),onLeave(W,ra){W._isLeaving=!0;const xa=()=>X(W,ra);Ps(W,v),W._enterCancelled?(Ps(W,j),li()):(li(),Ps(W,j)),ti(()=>{W._isLeaving&&(bt(W,v),Ps(W,k),si(P)||ni(W,n,O,xa))}),mt(P,[W,xa])},onEnterCancelled(W){G(W,!1,void 0,!0),mt(V,[W])},onAppearCancelled(W){G(W,!0,void 0,!0),mt(ka,[W])},onLeaveCancelled(W){X(W),mt(Q,[W])}})}function x3(a){if(a==null)return null;if(Ca(a))return[ze(a.enter),ze(a.leave)];{const t=ze(a);return[t,t]}}function ze(a){return Ch(a)}function Ps(a,t){t.split(/\s+/).forEach(s=>s&&a.classList.add(s)),(a[Sn]||(a[Sn]=new Set)).add(t)}function bt(a,t){t.split(/\s+/).forEach(n=>n&&a.classList.remove(n));const s=a[Sn];s&&(s.delete(t),s.size||(a[Sn]=void 0))}function ti(a){requestAnimationFrame(()=>{requestAnimationFrame(a)})}let T3=0;function ni(a,t,s,n){const e=a._endId=++T3,l=()=>{e===a._endId&&n()};if(s!=null)return setTimeout(l,s);const{type:i,timeout:o,propCount:r}=E3(a,t);if(!i)return n();const h=i+"end";let u=0;const v=()=>{a.removeEventListener(h,j),l()},j=k=>{k.target===a&&++u>=r&&v()};setTimeout(()=>{u<r&&v()},o+1),a.addEventListener(h,j)}function E3(a,t){const s=window.getComputedStyle(a),n=M=>(s[M]||"").split(", "),e=n(`${Ks}Delay`),l=n(`${Ks}Duration`),i=ei(e,l),o=n(`${nn}Delay`),r=n(`${nn}Duration`),h=ei(o,r);let u=null,v=0,j=0;t===Ks?i>0&&(u=Ks,v=i,j=l.length):t===nn?h>0&&(u=nn,v=h,j=r.length):(v=Math.max(i,h),u=v>0?i>h?Ks:nn:null,j=u?u===Ks?l.length:r.length:0);const k=u===Ks&&/\b(transform|all)(,|$)/.test(n(`${Ks}Property`).toString());return{type:u,timeout:v,propCount:j,hasTransform:k}}function ei(a,t){for(;a.length<t.length;)a=a.concat(a);return Math.max(...t.map((s,n)=>di(s)+di(a[n])))}function di(a){return a==="auto"?0:Number(a.slice(0,-1).replace(",","."))*1e3}function li(){return document.body.offsetHeight}function C3(a,t,s){const n=a[Sn];n&&(t=(t?[t,...n]:[...n]).join(" ")),t==null?a.removeAttribute("class"):s?a.setAttribute("class",t):a.className=t}const ii=Symbol("_vod"),A3=Symbol("_vsh"),L3=Symbol(""),M3=/(^|;)\s*display\s*:/;function R3(a,t,s){const n=a.style,e=Da(s);let l=!1;if(s&&!e){if(t)if(Da(t))for(const i of t.split(";")){const o=i.slice(0,i.indexOf(":")).trim();s[o]==null&&Xn(n,o,"")}else for(const i in t)s[i]==null&&Xn(n,i,"");for(const i in s)i==="display"&&(l=!0),Xn(n,i,s[i])}else if(e){if(t!==s){const i=n[L3];i&&(s+=";"+i),n.cssText=s,l=M3.test(s)}}else t&&a.removeAttribute("style");ii in a&&(a[ii]=l?n.display:"",a[A3]&&(n.display="none"))}const ci=/\s*!important$/;function Xn(a,t,s){if(ua(s))s.forEach(n=>Xn(a,t,n));else if(s==null&&(s=""),t.startsWith("--"))a.setProperty(t,s);else{const n=D3(a,t);ci.test(s)?a.setProperty(St(n),s.replace(ci,""),"important"):a[n]=s}}const pi=["Webkit","Moz","ms"],We={};function D3(a,t){const s=We[t];if(s)return s;let n=bs(t);if(n!=="filter"&&n in a)return We[t]=n;n=ue(n);for(let e=0;e<pi.length;e++){const l=pi[e]+n;if(l in a)return We[t]=l}return t}const ri="http://www.w3.org/1999/xlink";function oi(a,t,s,n,e,l=Ph(t)){n&&t.startsWith("xlink:")?s==null?a.removeAttributeNS(ri,t.slice(6,t.length)):a.setAttributeNS(ri,t,s):s==null||l&&!Xi(s)?a.removeAttribute(t):a.setAttribute(t,l?"":st(s)?String(s):s)}function ui(a,t,s,n,e){if(t==="innerHTML"||t==="textContent"){s!=null&&(a[t]=t==="innerHTML"?dp(s):s);return}const l=a.tagName;if(t==="value"&&l!=="PROGRESS"&&!l.includes("-")){const o=l==="OPTION"?a.getAttribute("value")||"":a.value,r=s==null?a.type==="checkbox"?"on":"":String(s);(o!==r||!("_value"in a))&&(a.value=r),s==null&&a.removeAttribute(t),a._value=s;return}let i=!1;if(s===""||s==null){const o=typeof a[t];o==="boolean"?s=Xi(s):s==null&&o==="string"?(s="",i=!0):o==="number"&&(s=0,i=!0)}try{a[t]=s}catch{}i&&a.removeAttribute(e||t)}function P3(a,t,s,n){a.addEventListener(t,s,n)}function I3(a,t,s,n){a.removeEventListener(t,s,n)}const hi=Symbol("_vei");function N3(a,t,s,n,e=null){const l=a[hi]||(a[hi]={}),i=l[t];if(n&&i)i.value=n;else{const[o,r]=O3(t);if(n){const h=l[t]=$3(n,e);P3(a,o,h,r)}else i&&(I3(a,o,i,r),l[t]=void 0)}}const vi=/(?:Once|Passive|Capture)$/;function O3(a){let t;if(vi.test(a)){t={};let n;for(;n=a.match(vi);)a=a.slice(0,a.length-n[0].length),t[n[0].toLowerCase()]=!0}return[a[2]===":"?a.slice(3):St(a.slice(2)),t]}let Ge=0;const H3=Promise.resolve(),B3=()=>Ge||(H3.then(()=>Ge=0),Ge=Date.now());function $3(a,t){const s=n=>{if(!n._vts)n._vts=Date.now();else if(n._vts<=s.attached)return;_s(F3(n,s.value),t,5,[n])};return s.value=a,s.attached=B3(),s}function F3(a,t){if(ua(t)){const s=a.stopImmediatePropagation;return a.stopImmediatePropagation=()=>{s.call(a),a._stopped=!0},t.map(n=>e=>!e._stopped&&n&&n(e))}else return t}const mi=a=>a.charCodeAt(0)===111&&a.charCodeAt(1)===110&&a.charCodeAt(2)>96&&a.charCodeAt(2)<123,J3=(a,t,s,n,e,l)=>{const i=e==="svg";t==="class"?C3(a,n,i):t==="style"?R3(a,s,n):pe(t)?gd(t)||N3(a,t,s,n,l):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):U3(a,t,n,i))?(ui(a,t,n),!a.tagName.includes("-")&&(t==="value"||t==="checked"||t==="selected")&&oi(a,t,n,i,l,t!=="value")):a._isVueCE&&(/[A-Z]/.test(t)||!Da(n))?ui(a,bs(t),n,l,t):(t==="true-value"?a._trueValue=n:t==="false-value"&&(a._falseValue=n),oi(a,t,n,i))};function U3(a,t,s,n){if(n)return!!(t==="innerHTML"||t==="textContent"||t in a&&mi(t)&&va(s));if(t==="spellcheck"||t==="draggable"||t==="translate"||t==="form"||t==="list"&&a.tagName==="INPUT"||t==="type"&&a.tagName==="TEXTAREA")return!1;if(t==="width"||t==="height"){const e=a.tagName;if(e==="IMG"||e==="VIDEO"||e==="CANVAS"||e==="SOURCE")return!1}return mi(t)&&Da(s)?!1:t in a}const V3=Oa({patchProp:J3},w3);let bi;function K3(){return bi||(bi=Uv(V3))}const z3=(...a)=>{const t=K3().createApp(...a),{mount:s}=t;return t.mount=n=>{const e=G3(n);if(!e)return;const l=t._component;!va(l)&&!l.render&&!l.template&&(l.template=e.innerHTML),e.nodeType===1&&(e.textContent="");const i=s(e,!1,W3(e));return e instanceof Element&&(e.removeAttribute("v-cloak"),e.setAttribute("data-v-app","")),i},t};function W3(a){if(a instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&a instanceof MathMLElement)return"mathml"}function G3(a){return Da(a)?document.querySelector(a):a}const fi="data:image/svg+xml,%3c?xml%20version='1.0'%20standalone='no'?%3e%3c!DOCTYPE%20svg%20PUBLIC%20'-//W3C//DTD%20SVG%2020010904//EN'%20'http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd'%3e%3csvg%20version='1.0'%20xmlns='http://www.w3.org/2000/svg'%20width='1024.000000pt'%20height='770.000000pt'%20viewBox='0%200%201024.000000%20770.000000'%20preserveAspectRatio='xMidYMid%20meet'%3e%3cg%20transform='translate(0.000000,1024.000000)%20scale(0.100000,-0.100000)'%20fill='%23000000'%20stroke='none'%3e%3cpath%20d='M4170%207052%20c0%20-229%20-1%20-238%20-21%20-250%20-11%20-7%20-151%20-87%20-310%20-178%20l-289%20-166%200%20-168%20c0%20-122%203%20-170%2013%20-177%206%20-6%20146%20-86%20310%20-178%20l298%20-168%20-3%20-254%20-3%20-253%20138%200%20137%200%200%20334%200%20335%20-207%20117%20c-115%2064%20-257%20145%20-316%20180%20l-109%2062%2028%2019%20c15%2010%20156%2093%20313%20184%20l286%20165%203%20317%202%20317%20-135%200%20-135%200%200%20-238z'/%3e%3cpath%20d='M5337%207173%20c-216%20-557%20-511%20-1324%20-650%20-1690%20l-85%20-222%20132%20-3%20c72%20-2%20140%20-2%20151%200%2016%202%2042%2060%20141%20320%20152%20395%20579%201496%20628%201616%2020%2050%2036%2091%2036%2093%200%202%20-69%203%20-154%203%20l-154%200%20-45%20-117z'/%3e%3cpath%20d='M5810%206971%20l0%20-319%20293%20-167%20c328%20-187%20335%20-191%20321%20-204%20-5%20-5%20-145%20-87%20-311%20-181%20l-303%20-172%200%20-334%200%20-334%20135%200%20135%200%202%20257%203%20256%20302%20171%20303%20171%20-3%20175%20-2%20175%20-302%20170%20-302%20170%20-1%20243%200%20242%20-135%200%20-135%200%200%20-319z'/%3e%3c/g%3e%3c/svg%3e",ca=(a,t)=>{const s=a.__vccOpts||a;for(const[n,e]of t)s[n]=e;return s},Y3={};function Q3(a,t){const s=la("RouterLink");return $(),J(da,null,[t[15]||(t[15]=c("h1",{id:"warkop-html-dan-css"},"FPC(Free Programming Course)",-1)),t[16]||(t[16]=c("p",null,"Pada saat ini pengunaan website dan permintaan akan suatu website terus bertambah. menjadi hal biasa kita mengakses website setiap hari. mencari informasi mengikuti seminar atau acara online. dengan peningkatan pengunaan website maka tidak ada salahnya jika kita belajar untuk membuat website. meskipun tidak untuk dijual tapi untuk diri kita sendiri, sebagai contoh membuat website portofolio.",-1)),t[17]||(t[17]=c("p",null,"Website berisi halaman atau sekumpulan halaman yang saling terhubung berisi dengan informasi atau data yang disedikan oleh penyedia. Penyedia website bisa dari perorangan, kelompok atau organisasi. suatu website biasannya ditempatkan pada suatu webserver dan untuk mengaksesnya dibutuhkan jaringan yang menghubungkan sisi client dengan sisi server.",-1)),t[18]||(t[18]=c("h3",{id:"table-content"},"Table content",-1)),c("ul",null,[c("li",null,[S(s,{to:"/HTML-Mapel"},{default:x(()=>t[0]||(t[0]=[w("HTML Course")])),_:1})]),c("li",null,[S(s,{to:"/vim"},{default:x(()=>t[1]||(t[1]=[w("VIM Course")])),_:1})]),c("li",null,[S(s,{to:"/git"},{default:x(()=>t[2]||(t[2]=[w("Git Course")])),_:1})]),c("li",null,[S(s,{to:"/css"},{default:x(()=>t[3]||(t[3]=[w("Css Course")])),_:1})]),c("li",null,[S(s,{to:"/java"},{default:x(()=>t[4]||(t[4]=[w("Java Course")])),_:1})]),c("li",null,[S(s,{to:"/javascript"},{default:x(()=>t[5]||(t[5]=[w("javascript Course")])),_:1})]),c("li",null,[S(s,{to:"/python"},{default:x(()=>t[6]||(t[6]=[w("Python Course")])),_:1})]),c("li",null,[S(s,{to:"/react"},{default:x(()=>t[7]||(t[7]=[w("React Course")])),_:1})]),c("li",null,[S(s,{to:"/r"},{default:x(()=>t[8]||(t[8]=[w("R Course")])),_:1})]),c("li",null,[S(s,{to:"/reactexpo"},{default:x(()=>t[9]||(t[9]=[w("ReactExpo Course")])),_:1})]),c("li",null,[S(s,{to:"/ruby"},{default:x(()=>t[10]||(t[10]=[w("Ruby Course")])),_:1})]),c("li",null,[S(s,{to:"/sql"},{default:x(()=>t[11]||(t[11]=[w("SQL Course")])),_:1})]),c("li",null,[S(s,{to:"/typesccript"},{default:x(()=>t[12]||(t[12]=[w("Typescript Course")])),_:1})]),c("li",null,[S(s,{to:"/vue"},{default:x(()=>t[13]||(t[13]=[w("Vue Course")])),_:1})]),c("li",null,[S(s,{to:"/vim"},{default:x(()=>t[14]||(t[14]=[w("Vim Course")])),_:1})])]),t[19]||(t[19]=Z(`<h1 id="pengenalan-pembelajaran" data-v-e321a391>Pengenalan Pembelajaran</h1><p data-v-e321a391>Mempelajari materi dengan bertahap adalah kunci untuk memahami.</p><p data-v-e321a391>Tujuan dari pembelajaran ini adalah membuat pembaca agar bisa setidaknya bisa membuat website mereka sendiri,seperti static website maupun dynamic website.</p><p data-v-e321a391>Dalam membuat website sederhana dibutuhkan setidaknya 1 web browser dan 1 texteditor yang berjalan bersamaan untuk mempermudah dalam pengelolaan. web browser digunakan untuk melihat seperti apa website ditampilkan dan bekerja, text editor dibutuhkan untuk menambahkan fitur atau mengelola sebuah fitur didalam website. </p><p data-v-e321a391>pengguna bisa mengunakan web browser dan text editor sesuai keinginan mereka, tidak perlu harus mengikuti apa kata orang lain. jika anda suka itu maka pakai saja. pada dasarnya web browser dan text editor hanyalah sebuah alat yang membantu pengguna untuk membantu.</p><p data-v-e321a391>sebagai contoh, saya mengunakan emacs-doom dan chromium dalam pembuatan website. emacs-doom memiliki segudang fitur yang dapat membantu saya menulis sebuah kode.</p><h1 id="mengenai-website" data-v-e321a391>Mengenai website</h1><p data-v-e321a391>sebuah website ditulis dengan aturan html atau xhtml, terkadang berisi dengan bahasa script untuk membantu website lebih hidup.</p><p data-v-e321a391>Beberapa protocol dalam website:</p><ul data-v-e321a391><li data-v-e321a391>HTTP (Hypertext Transfer Protocol) HTTP adalah suatu protocol permintaan-respons, dimana client akan melakukan perminataan kepada server dan akan dibalas dengan informasi atau data yang tersedia dalam server.</li><li data-v-e321a391>HTTPS (Hypertext Transfer Protocol Secure) HTTPS memiliki cara kerja yang hampir sama dengan HTTP, perbedaan adalah disana terdapat enkripsi TLS ( Transport Layer Security )tambah untuk meningkatkan keamanan jaringan. Penambahan kemanan salah satunnya berada di sisi server.</li></ul><p data-v-e321a391>Mengenai website dinamis dan statis:</p><ul data-v-e321a391><li data-v-e321a391>website statis adalah sekumpulan dokumen atau halaman yang hanya bisa dirubah secara manual. didalam web statis tidak tersedia database dan web server framework ( contoh: django, nodejs ). biasanya terdiri dari html, css dan javascript ( javascript hanya untuk tampilan saja ).</li><li data-v-e321a391>website dinamis adalah sekumpulan dokumen atau halaman yang bisa dengan mudah berubah dan bisa beroperasi sesuai dengan keinginan sang pembuat website. didalam sana ada local storage atau database untuk menyimpan data. dibangun dengan sistem yang complex ( contoh website dinamis: instagram, facebook )</li></ul><h2 id="mengenal-web-developer" data-v-e321a391>Mengenal Web developer</h2><p data-v-e321a391>Web developer adalah programmer yang memiliki spesialisasi dalam pembangunan suatu World Wide Web application. Ada Tiga macam tipe application yang dipakai yaitu;</p><ul data-v-e321a391><li data-v-e321a391>HTML, CSS dan javascript biasannya ini dipakai sebagai application penampil document website</li><li data-v-e321a391>PHP,ASP, NET (C#), python, Node.js, Go atau Java adalah application yang dipakai untuk mengelolah cara Kerja website</li><li data-v-e321a391>Apache2 dan Nginx Berfungsi sebagai HTTP server. HTTP digunakan untuk menghubungkan client dan server</li></ul><p data-v-e321a391>Didalam pekerjaan web developer ada tiga macam class, yaitu Front-end web developer, Back-end web developer dan Full stack web developer.</p><ul data-v-e321a391><li data-v-e321a391>Front-end web developer bertugas mengelola &#39;Graphical User Interface&#39; dari website. Membuat User Interface dan User Experience yang bisa diterima oleh client.</li><li data-v-e321a391>Back-end web developer bertugas mengelola HTTP server dan database. Memastikan website bisa bekerja dengan baik.</li><li data-v-e321a391>Full stack web developer memiliki tugas untuk mengelola kedua bagian tersebut.</li></ul><h3 id="cara-untuk-membuat-website-disukai-mesin-pencari-dan-pengguna" data-v-e321a391>cara untuk membuat website disukai mesin pencari dan pengguna</h3><p data-v-e321a391>Membuat suatu website yang bisa bekerja sesuai perintah dan memastikan client memiliki pengalaman bagus saat mengunakannya. didalam era industri seperti saat ini peningkatan kualitas suatu website itu adalah hal wajib. dengan membuat website lebih ringan dan simple akan meningkatkan jumlah pengunjung website tersebut, meskipun waktu untuk mengakses suatu website dipersingkat selama satu detik. Mesin pencari dan client menyukai website yang bisa cepat diakses dan memiliki informasi halaman yang jelas.</p><h1 id="cara-komputer-berpikir-dan-bekerja" data-v-e321a391>Cara komputer berpikir dan bekerja</h1><p data-v-e321a391>Komputer pada era ini yaitu era industri sangat dibutuhkan, melakukan penyimpanan data, pengelolahan data dan berbagai macam hal. Komputer memiliki banyak sekali bentuk mulai dari berbentuk Handphone, Laptop, Personal computer dan lain-lain, Meskipun bentuk dari komputer itu beraneka ragam akan tetapi pada dasarnya mereka itu sama.</p><p data-v-e321a391>Komputer pada dasarnya mengunakan Binary untuk melakukan komunikasi mereka, nomor Binary dibuat dari sekumpulan Binary digits (bits), contoh 1001.</p><p data-v-e321a391>sirkuit dalam komputer prosssesor dibuat atas jutaan transitor. transitor adalah perangkat switch kecil yang diaktifkan dengan sinyal elektronik. angka 1 dan 0 yang digunakan pada binary merepresentasikan hidup dan mati satus dari transitor.</p><p data-v-e321a391>pada dasarnya komputer itu hanyalah mesin bodoh, kita tidak perlu takut dengan komputer, komputer hanya bisa menghitung angka 1 dimulai dari 0. kita terbiasa melakukan perhitungan mulai dari 0-9 (Decimal) sedangkan komputer mulai dari 0-1 (Binary), bahasa program yang kita kenal bukanlah bahasa komputer, melaikan adalah bahasa penerjemah untuk membantu programmer menulis suatu perintah.</p><pre data-v-e321a391><code data-v-e321a391><span class="hljs-symbol" data-v-e321a391>128 </span>- <span class="hljs-number" data-v-e321a391>64</span> - <span class="hljs-number" data-v-e321a391>32</span> - <span class="hljs-number" data-v-e321a391>16</span> - <span class="hljs-number" data-v-e321a391>8</span> - <span class="hljs-number" data-v-e321a391>4</span> - <span class="hljs-number" data-v-e321a391>2</span> - <span class="hljs-number" data-v-e321a391>1</span>
<span class="hljs-symbol" data-v-e321a391>0 </span>     <span class="hljs-number" data-v-e321a391>0</span>    <span class="hljs-number" data-v-e321a391>0</span>    <span class="hljs-number" data-v-e321a391>0</span>   <span class="hljs-number" data-v-e321a391>0</span>   <span class="hljs-number" data-v-e321a391>0</span>   <span class="hljs-number" data-v-e321a391>0</span>   <span class="hljs-number" data-v-e321a391>0</span>
</code></pre><p data-v-e321a391>Mengubah angka Binary ke Decimal, Contoh:</p><ul data-v-e321a391><li data-v-e321a391>0101 = 5</li><li data-v-e321a391>1001 = 9</li></ul><p data-v-e321a391>Mengubah angka Decimal ke Binary, Contoh:</p><ul data-v-e321a391><li data-v-e321a391>18 = 10010</li><li data-v-e321a391>55 = 110111</li></ul><p data-v-e321a391>Cara kerja komputer:</p><ol data-v-e321a391><li data-v-e321a391>CPU bertanya apakah ada perintah kepada RAM</li><li data-v-e321a391>CPU mengambil permintaan dari RAM, mengerjakannya</li><li data-v-e321a391>Mengembalikan data yang sudah dikelola kepada RAM</li><li data-v-e321a391>CPU bertanya kembali apakah ada perintah kepada RAM dan terus berlanjut hingga akhir</li></ol><p data-v-e321a391>Kenapa RAM memiliki kecepatan transfer data yang luar biasa, RAM bekerja paling dekat CPU untuk menyediakan data yang akan dikelola. Perumpamaan didalam suatu dapur direstoran RAM adalah meja kerja, Hardisk adalah tempat penyimpanan bahan baku, CPU adalah orangnya, VGA adalah kemampaun orang tersebut untuk memasak. Tanpa adannya orang yang bisa memasak semua itu tidak akan menghasilkan apa-apa.</p><p data-v-e321a391>Prosesnya pembeli membuat permintaan, permintaan diambil, chef mengelola makanan, makanan disajikan, Jika si pembeli masih meminta permintaan, proses akan dilanjutkan hingga akhir, sebagai catatan pembeli itu adalah kita, yaitu yang meminta permintaan.</p><h3 id="mengenai-ssh" data-v-e321a391>Mengenai SSH</h3><p data-v-e321a391>Secure Shell (SSH), adalah salah satu protokol jaringan dengan nomor port 22. SSH digunakan untuk melakukan komunkiasi dengan server dengan aman, SSH akan melakukan enkripsi kepada data yang terkirim, sehingga data tersebut tidak dapat mudah dibaca.</p><p data-v-e321a391>SSH bekerja dengan client-server. Dimana client menghubungi server SSH untuk melakukan pekerjaan disana. Pekerjaan bisa bermacam-macam, control kepada terminal, file copy, dan lain-lain. </p><h4 id="refrensi" data-v-e321a391>Refrensi</h4><ul data-v-e321a391><li data-v-e321a391>Beberapa buka yang pernah saya baca, tapi lupa namanya</li><li data-v-e321a391>alva jonathan / <a href="https://www.instagram.com/lucky_n00b.oc/?hl=id" data-v-e321a391>https://www.instagram.com/lucky_n00b.oc/?hl=id</a></li><li data-v-e321a391><a href="https://www.rapidtables.com/convert/number/decimal-to-binary.html" data-v-e321a391>https://www.rapidtables.com/convert/number/decimal-to-binary.html</a></li><li data-v-e321a391><a href="https://www.instructables.com/Computers-are-Dumb/" data-v-e321a391>https://www.instructables.com/Computers-are-Dumb/</a></li><li data-v-e321a391><a href="https://www.dummies.com/programming/how-does-a-computer-program-work/" data-v-e321a391>https://www.dummies.com/programming/how-does-a-computer-program-work/</a></li><li data-v-e321a391><a href="https://www.bbc.co.uk/bitesize/guides/zwsbwmn/revision/1" data-v-e321a391>https://www.bbc.co.uk/bitesize/guides/zwsbwmn/revision/1</a></li><li data-v-e321a391><a href="http://www.steves-internet-guide.com/binary-numbers-explained/" data-v-e321a391>http://www.steves-internet-guide.com/binary-numbers-explained/</a></li><li data-v-e321a391><a href="https://www.bbc.co.uk/bitesize/guides/zwsbwmn/revision/1" data-v-e321a391>https://www.bbc.co.uk/bitesize/guides/zwsbwmn/revision/1</a></li></ul><h4 id="pranala-menarik" data-v-e321a391>Pranala menarik</h4><ul data-v-e321a391><li data-v-e321a391><a href="https://www.internethalloffame.org/brief-history-internet" data-v-e321a391>History of Internet by Internet Society</a></li><li data-v-e321a391><a href="https://www.nginx.com/" data-v-e321a391>https://www.nginx.com/</a></li><li data-v-e321a391><a href="https://en.wikipedia.org/wiki/HTTPS" data-v-e321a391>https://en.wikipedia.org/wiki/HTTPS</a></li><li data-v-e321a391><a href="https://en.wikipedia.org/wiki/Web_development" data-v-e321a391>https://en.wikipedia.org/wiki/Web_development</a></li><li data-v-e321a391><a href="https://en.wikipedia.org/wiki/Web_developer" data-v-e321a391>https://en.wikipedia.org/wiki/Web_developer</a></li><li data-v-e321a391><a href="https://en.wikipedia.org/wiki/Front-end_web_development" data-v-e321a391>https://en.wikipedia.org/wiki/Front-end_web_development</a></li><li data-v-e321a391><a href="https://www.dewaweb.com/blog/web-developer/" data-v-e321a391>https://www.dewaweb.com/blog/web-developer/</a></li><li data-v-e321a391><a href="https://httpd.apache.org/" data-v-e321a391>https://httpd.apache.org/</a></li><li data-v-e321a391><a href="https://glints.com/id/lowongan/pekerjaan-back-end-developer/#.YU1Mv4BBw3w" data-v-e321a391>https://glints.com/id/lowongan/pekerjaan-back-end-developer/#.YU1Mv4BBw3w</a></li><li data-v-e321a391><a href="https://id.wikipedia.org/wiki/Situs_web" data-v-e321a391>https://id.wikipedia.org/wiki/Situs_web</a></li><li data-v-e321a391><a href="https://id.wikipedia.org/wiki/HTTPS" data-v-e321a391>https://id.wikipedia.org/wiki/HTTPS</a></li></ul>`,40))],64)}const X3=ca(Y3,[["render",Q3],["__scopeId","data-v-e321a391"]]),Z3={class:"mobile-menu"},am={class:"navbar navbar-expand-lg bg-body-tertiary"},sm={class:"container-fluid"},tm={class:"collapse navbar-collapse",id:"navbarNav"},nm={class:"navbar-nav"},em={class:"nav-item"},dm={class:"nav-item"},lm={class:"nav-item"},im={class:"nav-item"},cm={class:"nav-item"},pm={class:"nav-item"},rm={class:"nav-item"},om={class:"nav-item"},um={class:"nav-item"},hm={class:"nav-item"},vm={class:"nav-item"},mm={class:"nav-item"},bm={class:"nav-item"},fm={class:"nav-item"},gm={class:"nav-item"},km={class:"Homepage"},jm={class:"Home-container"},ym={class:"left-content-item"},wm={class:"right-content"},_m={__name:"App",setup(a){return(t,s)=>{const n=la("RouterLink"),e=la("RouterView");return $(),J(da,null,[c("div",Z3,[c("nav",am,[c("div",sm,[s[15]||(s[15]=c("div",{class:"mobile-my-navbar"},[c("img",{src:fi,alt:"Logo title",height:"auto",width:"140px"})],-1)),s[16]||(s[16]=c("button",{class:"navbar-toggler",type:"button","data-bs-toggle":"collapse","data-bs-target":"#navbarNav","aria-controls":"navbarNav","aria-expanded":"false","aria-label":"Toggle navigation"},[c("span",{class:"navbar-toggler-icon"})],-1)),c("div",tm,[c("ul",nm,[c("li",em,[S(n,{to:"/",class:"LFT-Item"},{default:x(()=>s[0]||(s[0]=[c("span",{class:"icon"},"🏠",-1),w(" FPC Home")])),_:1})]),c("li",dm,[S(n,{to:"/HTML-Mapel",class:"LFT-Item"},{default:x(()=>s[1]||(s[1]=[c("span",{class:"icon"},"📄",-1),w(" HTML Course")])),_:1})]),c("li",lm,[S(n,{to:"/vim",class:"LFT-Item"},{default:x(()=>s[2]||(s[2]=[c("span",{class:"icon"},"🔄",-1),w(" Vim Course")])),_:1})]),c("li",im,[S(n,{to:"/css",class:"LFT-Item"},{default:x(()=>s[3]||(s[3]=[c("span",{class:"icon"},"🔄",-1),w(" CSS Course")])),_:1})]),c("li",cm,[S(n,{to:"/javascript",class:"LFT-Item"},{default:x(()=>s[4]||(s[4]=[c("span",{class:"icon"},"🔄",-1),w(" Javascript Course")])),_:1})]),c("li",pm,[S(n,{to:"/java",class:"LFT-Item"},{default:x(()=>s[5]||(s[5]=[c("span",{class:"icon"},"🔄",-1),w(" Java Course")])),_:1})]),c("li",rm,[S(n,{to:"/python",class:"LFT-Item"},{default:x(()=>s[6]||(s[6]=[c("span",{class:"icon"},"🔄",-1),w(" Python Course")])),_:1})]),c("li",om,[S(n,{to:"/r",class:"LFT-Item"},{default:x(()=>s[7]||(s[7]=[c("span",{class:"icon"},"🔄",-1),w(" R Course")])),_:1})]),c("li",um,[S(n,{to:"/react",class:"LFT-Item"},{default:x(()=>s[8]||(s[8]=[c("span",{class:"icon"},"🔄",-1),w(" React Course")])),_:1})]),c("li",hm,[S(n,{to:"/reactexpo",class:"LFT-Item"},{default:x(()=>s[9]||(s[9]=[c("span",{class:"icon"},"🔄",-1),w(" React Expo Course")])),_:1})]),c("li",vm,[S(n,{to:"/vue",class:"LFT-Item"},{default:x(()=>s[10]||(s[10]=[c("span",{class:"icon"},"🔄",-1),w(" Vue Course")])),_:1})]),c("li",mm,[S(n,{to:"/ruby",class:"LFT-Item"},{default:x(()=>s[11]||(s[11]=[c("span",{class:"icon"},"🔄",-1),w(" Ruby Course")])),_:1})]),c("li",bm,[S(n,{to:"/typescript",class:"LFT-Item"},{default:x(()=>s[12]||(s[12]=[c("span",{class:"icon"},"🔄",-1),w(" Typescript Course")])),_:1})]),c("li",fm,[S(n,{to:"/git",class:"LFT-Item"},{default:x(()=>s[13]||(s[13]=[c("span",{class:"icon"},"🔄",-1),w(" Git Course")])),_:1})]),c("li",gm,[S(n,{to:"/sql",class:"LFT-Item"},{default:x(()=>s[14]||(s[14]=[c("span",{class:"icon"},"🔄",-1),w(" SQL Course")])),_:1})])])])])])]),c("div",km,[S(n,{to:"/",class:"Home-title"},{default:x(()=>s[17]||(s[17]=[c("img",{src:fi,alt:"Logo title",height:"auto",width:"200px"},null,-1),c("h3",null,"FPC(Free Programming Course)",-1)])),_:1}),c("div",jm,[c("nav",ym,[s[34]||(s[34]=c("h3",null,"Contents",-1)),s[35]||(s[35]=c("hr",null,null,-1)),S(n,{to:"/",class:"LFT-Item"},{default:x(()=>s[18]||(s[18]=[c("span",{class:"icon"},"🏠",-1),w(" Home")])),_:1}),S(n,{to:"/HTML-Mapel",class:"LFT-Item"},{default:x(()=>s[19]||(s[19]=[c("span",{class:"icon"},"📄",-1),w(" HTML Course")])),_:1}),S(n,{to:"/vim",class:"LFT-Item"},{default:x(()=>s[20]||(s[20]=[c("span",{class:"icon"},"🔄",-1),w(" Vim Course")])),_:1}),S(n,{to:"/git",class:"LFT-Item"},{default:x(()=>s[21]||(s[21]=[c("span",{class:"icon"},"🔄",-1),w(" Git Course")])),_:1}),S(n,{to:"/css",class:"LFT-Item"},{default:x(()=>s[22]||(s[22]=[c("span",{class:"icon"},"🔄",-1),w(" CSS Course")])),_:1}),S(n,{to:"/javascript",class:"LFT-Item"},{default:x(()=>s[23]||(s[23]=[c("span",{class:"icon"},"🔄",-1),w(" Javascript Course")])),_:1}),S(n,{to:"/java",class:"LFT-Item"},{default:x(()=>s[24]||(s[24]=[c("span",{class:"icon"},"🔄",-1),w(" Java Course")])),_:1}),S(n,{to:"/python",class:"LFT-Item"},{default:x(()=>s[25]||(s[25]=[c("span",{class:"icon"},"🔄",-1),w(" Python Course")])),_:1}),S(n,{to:"/r",class:"LFT-Item"},{default:x(()=>s[26]||(s[26]=[c("span",{class:"icon"},"🔄",-1),w(" R Course")])),_:1}),S(n,{to:"/react",class:"LFT-Item"},{default:x(()=>s[27]||(s[27]=[c("span",{class:"icon"},"🔄",-1),w(" React Course")])),_:1}),S(n,{to:"/reactexpo",class:"LFT-Item"},{default:x(()=>s[28]||(s[28]=[c("span",{class:"icon"},"🔄",-1),w(" React Expo Course")])),_:1}),S(n,{to:"/vue",class:"LFT-Item"},{default:x(()=>s[29]||(s[29]=[c("span",{class:"icon"},"🔄",-1),w(" Vue Course")])),_:1}),S(n,{to:"/ruby",class:"LFT-Item"},{default:x(()=>s[30]||(s[30]=[c("span",{class:"icon"},"🔄",-1),w(" Ruby Course")])),_:1}),S(n,{to:"/sql",class:"LFT-Item"},{default:x(()=>s[31]||(s[31]=[c("span",{class:"icon"},"🔄",-1),w(" SQL Course")])),_:1}),S(n,{to:"/typescript",class:"LFT-Item"},{default:x(()=>s[32]||(s[32]=[c("span",{class:"icon"},"🔄",-1),w(" Typescript Course")])),_:1}),S(n,{to:"/quiz"},{default:x(()=>s[33]||(s[33]=[w("Quiz Course")])),_:1})]),c("main",wm,[S(e)])]),s[36]||(s[36]=Z('<div class="footer-links" data-v-e911b96e><a href="#" data-v-e911b96e>Privacy Policy</a><span class="separator" data-v-e911b96e>•</span><a href="#" data-v-e911b96e>About FPC</a><span class="separator" data-v-e911b96e>•</span><a href="#" data-v-e911b96e>Disclaimers</a><span class="separator" data-v-e911b96e>•</span><a href="#" data-v-e911b96e>Contact Us</a></div>',1))])],64)}}},Sm=ca(_m,[["__scopeId","data-v-e911b96e"]]);/*!
  * vue-router v4.5.1
  * (c) 2025 Eduardo San Martin Morote
  * @license MIT
  */const It=typeof document<"u";function ip(a){return typeof a=="object"||"displayName"in a||"props"in a||"__vccOpts"in a}function qm(a){return a.__esModule||a[Symbol.toStringTag]==="Module"||a.default&&ip(a.default)}const _a=Object.assign;function Ye(a,t){const s={};for(const n in t){const e=t[n];s[n]=Ss(e)?e.map(a):a(e)}return s}const vn=()=>{},Ss=Array.isArray,cp=/#/g,xm=/&/g,Tm=/\//g,Em=/=/g,Cm=/\?/g,pp=/\+/g,Am=/%5B/g,Lm=/%5D/g,rp=/%5E/g,Mm=/%60/g,op=/%7B/g,Rm=/%7C/g,up=/%7D/g,Dm=/%20/g;function Pd(a){return encodeURI(""+a).replace(Rm,"|").replace(Am,"[").replace(Lm,"]")}function Pm(a){return Pd(a).replace(op,"{").replace(up,"}").replace(rp,"^")}function od(a){return Pd(a).replace(pp,"%2B").replace(Dm,"+").replace(cp,"%23").replace(xm,"%26").replace(Mm,"`").replace(op,"{").replace(up,"}").replace(rp,"^")}function Im(a){return od(a).replace(Em,"%3D")}function Nm(a){return Pd(a).replace(cp,"%23").replace(Cm,"%3F")}function Om(a){return a==null?"":Nm(a).replace(Tm,"%2F")}function qn(a){try{return decodeURIComponent(""+a)}catch{}return""+a}const Hm=/\/$/,Bm=a=>a.replace(Hm,"");function Qe(a,t,s="/"){let n,e={},l="",i="";const o=t.indexOf("#");let r=t.indexOf("?");return o<r&&o>=0&&(r=-1),r>-1&&(n=t.slice(0,r),l=t.slice(r+1,o>-1?o:t.length),e=a(l)),o>-1&&(n=n||t.slice(0,o),i=t.slice(o,t.length)),n=Um(n??t,s),{fullPath:n+(l&&"?")+l+i,path:n,query:e,hash:qn(i)}}function $m(a,t){const s=t.query?a(t.query):"";return t.path+(s&&"?")+s+(t.hash||"")}function gi(a,t){return!t||!a.toLowerCase().startsWith(t.toLowerCase())?a:a.slice(t.length)||"/"}function Fm(a,t,s){const n=t.matched.length-1,e=s.matched.length-1;return n>-1&&n===e&&Ft(t.matched[n],s.matched[e])&&hp(t.params,s.params)&&a(t.query)===a(s.query)&&t.hash===s.hash}function Ft(a,t){return(a.aliasOf||a)===(t.aliasOf||t)}function hp(a,t){if(Object.keys(a).length!==Object.keys(t).length)return!1;for(const s in a)if(!Jm(a[s],t[s]))return!1;return!0}function Jm(a,t){return Ss(a)?ki(a,t):Ss(t)?ki(t,a):a===t}function ki(a,t){return Ss(t)?a.length===t.length&&a.every((s,n)=>s===t[n]):a.length===1&&a[0]===t}function Um(a,t){if(a.startsWith("/"))return a;if(!a)return t;const s=t.split("/"),n=a.split("/"),e=n[n.length-1];(e===".."||e===".")&&n.push("");let l=s.length-1,i,o;for(i=0;i<n.length;i++)if(o=n[i],o!==".")if(o==="..")l>1&&l--;else break;return s.slice(0,l).join("/")+"/"+n.slice(i).join("/")}const zs={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0};var xn;(function(a){a.pop="pop",a.push="push"})(xn||(xn={}));var mn;(function(a){a.back="back",a.forward="forward",a.unknown=""})(mn||(mn={}));function Vm(a){if(!a)if(It){const t=document.querySelector("base");a=t&&t.getAttribute("href")||"/",a=a.replace(/^\w+:\/\/[^\/]+/,"")}else a="/";return a[0]!=="/"&&a[0]!=="#"&&(a="/"+a),Bm(a)}const Km=/^[^#]+#/;function zm(a,t){return a.replace(Km,"#")+t}function Wm(a,t){const s=document.documentElement.getBoundingClientRect(),n=a.getBoundingClientRect();return{behavior:t.behavior,left:n.left-s.left-(t.left||0),top:n.top-s.top-(t.top||0)}}const je=()=>({left:window.scrollX,top:window.scrollY});function Gm(a){let t;if("el"in a){const s=a.el,n=typeof s=="string"&&s.startsWith("#"),e=typeof s=="string"?n?document.getElementById(s.slice(1)):document.querySelector(s):s;if(!e)return;t=Wm(e,a)}else t=a;"scrollBehavior"in document.documentElement.style?window.scrollTo(t):window.scrollTo(t.left!=null?t.left:window.scrollX,t.top!=null?t.top:window.scrollY)}function ji(a,t){return(history.state?history.state.position-t:-1)+a}const ud=new Map;function Ym(a,t){ud.set(a,t)}function Qm(a){const t=ud.get(a);return ud.delete(a),t}let Xm=()=>location.protocol+"//"+location.host;function vp(a,t){const{pathname:s,search:n,hash:e}=t,l=a.indexOf("#");if(l>-1){let o=e.includes(a.slice(l))?a.slice(l).length:1,r=e.slice(o);return r[0]!=="/"&&(r="/"+r),gi(r,"")}return gi(s,a)+n+e}function Zm(a,t,s,n){let e=[],l=[],i=null;const o=({state:j})=>{const k=vp(a,location),M=s.value,C=t.value;let O=0;if(j){if(s.value=k,t.value=j,i&&i===M){i=null;return}O=C?j.position-C.position:0}else n(k);e.forEach(y=>{y(s.value,M,{delta:O,type:xn.pop,direction:O?O>0?mn.forward:mn.back:mn.unknown})})};function r(){i=s.value}function h(j){e.push(j);const k=()=>{const M=e.indexOf(j);M>-1&&e.splice(M,1)};return l.push(k),k}function u(){const{history:j}=window;j.state&&j.replaceState(_a({},j.state,{scroll:je()}),"")}function v(){for(const j of l)j();l=[],window.removeEventListener("popstate",o),window.removeEventListener("beforeunload",u)}return window.addEventListener("popstate",o),window.addEventListener("beforeunload",u,{passive:!0}),{pauseListeners:r,listen:h,destroy:v}}function yi(a,t,s,n=!1,e=!1){return{back:a,current:t,forward:s,replaced:n,position:window.history.length,scroll:e?je():null}}function ab(a){const{history:t,location:s}=window,n={value:vp(a,s)},e={value:t.state};e.value||l(n.value,{back:null,current:n.value,forward:null,position:t.length-1,replaced:!0,scroll:null},!0);function l(r,h,u){const v=a.indexOf("#"),j=v>-1?(s.host&&document.querySelector("base")?a:a.slice(v))+r:Xm()+a+r;try{t[u?"replaceState":"pushState"](h,"",j),e.value=h}catch(k){console.error(k),s[u?"replace":"assign"](j)}}function i(r,h){const u=_a({},t.state,yi(e.value.back,r,e.value.forward,!0),h,{position:e.value.position});l(r,u,!0),n.value=r}function o(r,h){const u=_a({},e.value,t.state,{forward:r,scroll:je()});l(u.current,u,!0);const v=_a({},yi(n.value,r,null),{position:u.position+1},h);l(r,v,!1),n.value=r}return{location:n,state:e,push:o,replace:i}}function sb(a){a=Vm(a);const t=ab(a),s=Zm(a,t.state,t.location,t.replace);function n(l,i=!0){i||s.pauseListeners(),history.go(l)}const e=_a({location:"",base:a,go:n,createHref:zm.bind(null,a)},t,s);return Object.defineProperty(e,"location",{enumerable:!0,get:()=>t.location.value}),Object.defineProperty(e,"state",{enumerable:!0,get:()=>t.state.value}),e}function tb(a){return typeof a=="string"||a&&typeof a=="object"}function mp(a){return typeof a=="string"||typeof a=="symbol"}const bp=Symbol("");var wi;(function(a){a[a.aborted=4]="aborted",a[a.cancelled=8]="cancelled",a[a.duplicated=16]="duplicated"})(wi||(wi={}));function Jt(a,t){return _a(new Error,{type:a,[bp]:!0},t)}function Is(a,t){return a instanceof Error&&bp in a&&(t==null||!!(a.type&t))}const _i="[^/]+?",nb={sensitive:!1,strict:!1,start:!0,end:!0},eb=/[.+*?^${}()[\]/\\]/g;function db(a,t){const s=_a({},nb,t),n=[];let e=s.start?"^":"";const l=[];for(const h of a){const u=h.length?[]:[90];s.strict&&!h.length&&(e+="/");for(let v=0;v<h.length;v++){const j=h[v];let k=40+(s.sensitive?.25:0);if(j.type===0)v||(e+="/"),e+=j.value.replace(eb,"\\$&"),k+=40;else if(j.type===1){const{value:M,repeatable:C,optional:O,regexp:y}=j;l.push({name:M,repeatable:C,optional:O});const I=y||_i;if(I!==_i){k+=10;try{new RegExp(`(${I})`)}catch(P){throw new Error(`Invalid custom RegExp for param "${M}" (${I}): `+P.message)}}let V=C?`((?:${I})(?:/(?:${I}))*)`:`(${I})`;v||(V=O&&h.length<2?`(?:/${V})`:"/"+V),O&&(V+="?"),e+=V,k+=20,O&&(k+=-8),C&&(k+=-20),I===".*"&&(k+=-50)}u.push(k)}n.push(u)}if(s.strict&&s.end){const h=n.length-1;n[h][n[h].length-1]+=.7000000000000001}s.strict||(e+="/?"),s.end?e+="$":s.strict&&!e.endsWith("/")&&(e+="(?:/|$)");const i=new RegExp(e,s.sensitive?"":"i");function o(h){const u=h.match(i),v={};if(!u)return null;for(let j=1;j<u.length;j++){const k=u[j]||"",M=l[j-1];v[M.name]=k&&M.repeatable?k.split("/"):k}return v}function r(h){let u="",v=!1;for(const j of a){(!v||!u.endsWith("/"))&&(u+="/"),v=!1;for(const k of j)if(k.type===0)u+=k.value;else if(k.type===1){const{value:M,repeatable:C,optional:O}=k,y=M in h?h[M]:"";if(Ss(y)&&!C)throw new Error(`Provided param "${M}" is an array but it is not repeatable (* or + modifiers)`);const I=Ss(y)?y.join("/"):y;if(!I)if(O)j.length<2&&(u.endsWith("/")?u=u.slice(0,-1):v=!0);else throw new Error(`Missing required param "${M}"`);u+=I}}return u||"/"}return{re:i,score:n,keys:l,parse:o,stringify:r}}function lb(a,t){let s=0;for(;s<a.length&&s<t.length;){const n=t[s]-a[s];if(n)return n;s++}return a.length<t.length?a.length===1&&a[0]===80?-1:1:a.length>t.length?t.length===1&&t[0]===80?1:-1:0}function fp(a,t){let s=0;const n=a.score,e=t.score;for(;s<n.length&&s<e.length;){const l=lb(n[s],e[s]);if(l)return l;s++}if(Math.abs(e.length-n.length)===1){if(Si(n))return 1;if(Si(e))return-1}return e.length-n.length}function Si(a){const t=a[a.length-1];return a.length>0&&t[t.length-1]<0}const ib={type:0,value:""},cb=/[a-zA-Z0-9_]/;function pb(a){if(!a)return[[]];if(a==="/")return[[ib]];if(!a.startsWith("/"))throw new Error(`Invalid path "${a}"`);function t(k){throw new Error(`ERR (${s})/"${h}": ${k}`)}let s=0,n=s;const e=[];let l;function i(){l&&e.push(l),l=[]}let o=0,r,h="",u="";function v(){h&&(s===0?l.push({type:0,value:h}):s===1||s===2||s===3?(l.length>1&&(r==="*"||r==="+")&&t(`A repeatable param (${h}) must be alone in its segment. eg: '/:ids+.`),l.push({type:1,value:h,regexp:u,repeatable:r==="*"||r==="+",optional:r==="*"||r==="?"})):t("Invalid state to consume buffer"),h="")}function j(){h+=r}for(;o<a.length;){if(r=a[o++],r==="\\"&&s!==2){n=s,s=4;continue}switch(s){case 0:r==="/"?(h&&v(),i()):r===":"?(v(),s=1):j();break;case 4:j(),s=n;break;case 1:r==="("?s=2:cb.test(r)?j():(v(),s=0,r!=="*"&&r!=="?"&&r!=="+"&&o--);break;case 2:r===")"?u[u.length-1]=="\\"?u=u.slice(0,-1)+r:s=3:u+=r;break;case 3:v(),s=0,r!=="*"&&r!=="?"&&r!=="+"&&o--,u="";break;default:t("Unknown state");break}}return s===2&&t(`Unfinished custom RegExp for param "${h}"`),v(),i(),e}function rb(a,t,s){const n=db(pb(a.path),s),e=_a(n,{record:a,parent:t,children:[],alias:[]});return t&&!e.record.aliasOf==!t.record.aliasOf&&t.children.push(e),e}function ob(a,t){const s=[],n=new Map;t=Ei({strict:!1,end:!0,sensitive:!1},t);function e(v){return n.get(v)}function l(v,j,k){const M=!k,C=xi(v);C.aliasOf=k&&k.record;const O=Ei(t,v),y=[C];if("alias"in v){const P=typeof v.alias=="string"?[v.alias]:v.alias;for(const Q of P)y.push(xi(_a({},C,{components:k?k.record.components:C.components,path:Q,aliasOf:k?k.record:C})))}let I,V;for(const P of y){const{path:Q}=P;if(j&&Q[0]!=="/"){const ta=j.record.path,ia=ta[ta.length-1]==="/"?"":"/";P.path=j.record.path+(Q&&ia+Q)}if(I=rb(P,j,O),k?k.alias.push(I):(V=V||I,V!==I&&V.alias.push(I),M&&v.name&&!Ti(I)&&i(v.name)),gp(I)&&r(I),C.children){const ta=C.children;for(let ia=0;ia<ta.length;ia++)l(ta[ia],I,k&&k.children[ia])}k=k||I}return V?()=>{i(V)}:vn}function i(v){if(mp(v)){const j=n.get(v);j&&(n.delete(v),s.splice(s.indexOf(j),1),j.children.forEach(i),j.alias.forEach(i))}else{const j=s.indexOf(v);j>-1&&(s.splice(j,1),v.record.name&&n.delete(v.record.name),v.children.forEach(i),v.alias.forEach(i))}}function o(){return s}function r(v){const j=vb(v,s);s.splice(j,0,v),v.record.name&&!Ti(v)&&n.set(v.record.name,v)}function h(v,j){let k,M={},C,O;if("name"in v&&v.name){if(k=n.get(v.name),!k)throw Jt(1,{location:v});O=k.record.name,M=_a(qi(j.params,k.keys.filter(V=>!V.optional).concat(k.parent?k.parent.keys.filter(V=>V.optional):[]).map(V=>V.name)),v.params&&qi(v.params,k.keys.map(V=>V.name))),C=k.stringify(M)}else if(v.path!=null)C=v.path,k=s.find(V=>V.re.test(C)),k&&(M=k.parse(C),O=k.record.name);else{if(k=j.name?n.get(j.name):s.find(V=>V.re.test(j.path)),!k)throw Jt(1,{location:v,currentLocation:j});O=k.record.name,M=_a({},j.params,v.params),C=k.stringify(M)}const y=[];let I=k;for(;I;)y.unshift(I.record),I=I.parent;return{name:O,path:C,params:M,matched:y,meta:hb(y)}}a.forEach(v=>l(v));function u(){s.length=0,n.clear()}return{addRoute:l,resolve:h,removeRoute:i,clearRoutes:u,getRoutes:o,getRecordMatcher:e}}function qi(a,t){const s={};for(const n of t)n in a&&(s[n]=a[n]);return s}function xi(a){const t={path:a.path,redirect:a.redirect,name:a.name,meta:a.meta||{},aliasOf:a.aliasOf,beforeEnter:a.beforeEnter,props:ub(a),children:a.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in a?a.components||null:a.component&&{default:a.component}};return Object.defineProperty(t,"mods",{value:{}}),t}function ub(a){const t={},s=a.props||!1;if("component"in a)t.default=s;else for(const n in a.components)t[n]=typeof s=="object"?s[n]:s;return t}function Ti(a){for(;a;){if(a.record.aliasOf)return!0;a=a.parent}return!1}function hb(a){return a.reduce((t,s)=>_a(t,s.meta),{})}function Ei(a,t){const s={};for(const n in a)s[n]=n in t?t[n]:a[n];return s}function vb(a,t){let s=0,n=t.length;for(;s!==n;){const l=s+n>>1;fp(a,t[l])<0?n=l:s=l+1}const e=mb(a);return e&&(n=t.lastIndexOf(e,n-1)),n}function mb(a){let t=a;for(;t=t.parent;)if(gp(t)&&fp(a,t)===0)return t}function gp({record:a}){return!!(a.name||a.components&&Object.keys(a.components).length||a.redirect)}function bb(a){const t={};if(a===""||a==="?")return t;const n=(a[0]==="?"?a.slice(1):a).split("&");for(let e=0;e<n.length;++e){const l=n[e].replace(pp," "),i=l.indexOf("="),o=qn(i<0?l:l.slice(0,i)),r=i<0?null:qn(l.slice(i+1));if(o in t){let h=t[o];Ss(h)||(h=t[o]=[h]),h.push(r)}else t[o]=r}return t}function Ci(a){let t="";for(let s in a){const n=a[s];if(s=Im(s),n==null){n!==void 0&&(t+=(t.length?"&":"")+s);continue}(Ss(n)?n.map(l=>l&&od(l)):[n&&od(n)]).forEach(l=>{l!==void 0&&(t+=(t.length?"&":"")+s,l!=null&&(t+="="+l))})}return t}function fb(a){const t={};for(const s in a){const n=a[s];n!==void 0&&(t[s]=Ss(n)?n.map(e=>e==null?null:""+e):n==null?n:""+n)}return t}const gb=Symbol(""),Ai=Symbol(""),Id=Symbol(""),kp=Symbol(""),hd=Symbol("");function en(){let a=[];function t(n){return a.push(n),()=>{const e=a.indexOf(n);e>-1&&a.splice(e,1)}}function s(){a=[]}return{add:t,list:()=>a.slice(),reset:s}}function Qs(a,t,s,n,e,l=i=>i()){const i=n&&(n.enterCallbacks[e]=n.enterCallbacks[e]||[]);return()=>new Promise((o,r)=>{const h=j=>{j===!1?r(Jt(4,{from:s,to:t})):j instanceof Error?r(j):tb(j)?r(Jt(2,{from:t,to:j})):(i&&n.enterCallbacks[e]===i&&typeof j=="function"&&i.push(j),o())},u=l(()=>a.call(n&&n.instances[e],t,s,h));let v=Promise.resolve(u);a.length<3&&(v=v.then(h)),v.catch(j=>r(j))})}function Xe(a,t,s,n,e=l=>l()){const l=[];for(const i of a)for(const o in i.components){let r=i.components[o];if(!(t!=="beforeRouteEnter"&&!i.instances[o]))if(ip(r)){const u=(r.__vccOpts||r)[t];u&&l.push(Qs(u,s,n,i,o,e))}else{let h=r();l.push(()=>h.then(u=>{if(!u)throw new Error(`Couldn't resolve component "${o}" at "${i.path}"`);const v=qm(u)?u.default:u;i.mods[o]=u,i.components[o]=v;const k=(v.__vccOpts||v)[t];return k&&Qs(k,s,n,i,o,e)()}))}}return l}function Li(a){const t=Hs(Id),s=Hs(kp),n=js(()=>{const r=Na(a.to);return t.resolve(r)}),e=js(()=>{const{matched:r}=n.value,{length:h}=r,u=r[h-1],v=s.matched;if(!u||!v.length)return-1;const j=v.findIndex(Ft.bind(null,u));if(j>-1)return j;const k=Mi(r[h-2]);return h>1&&Mi(u)===k&&v[v.length-1].path!==k?v.findIndex(Ft.bind(null,r[h-2])):j}),l=js(()=>e.value>-1&&_b(s.params,n.value.params)),i=js(()=>e.value>-1&&e.value===s.matched.length-1&&hp(s.params,n.value.params));function o(r={}){if(wb(r)){const h=t[Na(a.replace)?"replace":"push"](Na(a.to)).catch(vn);return a.viewTransition&&typeof document<"u"&&"startViewTransition"in document&&document.startViewTransition(()=>h),h}return Promise.resolve()}return{route:n,href:js(()=>n.value.href),isActive:l,isExactActive:i,navigate:o}}function kb(a){return a.length===1?a[0]:a}const jb=Lc({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"},viewTransition:Boolean},useLink:Li,setup(a,{slots:t}){const s=ve(Li(a)),{options:n}=Hs(Id),e=js(()=>({[Ri(a.activeClass,n.linkActiveClass,"router-link-active")]:s.isActive,[Ri(a.exactActiveClass,n.linkExactActiveClass,"router-link-exact-active")]:s.isExactActive}));return()=>{const l=t.default&&kb(t.default(s));return a.custom?l:Dd("a",{"aria-current":s.isExactActive?a.ariaCurrentValue:null,href:s.href,onClick:s.navigate,class:e.value},l)}}}),yb=jb;function wb(a){if(!(a.metaKey||a.altKey||a.ctrlKey||a.shiftKey)&&!a.defaultPrevented&&!(a.button!==void 0&&a.button!==0)){if(a.currentTarget&&a.currentTarget.getAttribute){const t=a.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return a.preventDefault&&a.preventDefault(),!0}}function _b(a,t){for(const s in t){const n=t[s],e=a[s];if(typeof n=="string"){if(n!==e)return!1}else if(!Ss(e)||e.length!==n.length||n.some((l,i)=>l!==e[i]))return!1}return!0}function Mi(a){return a?a.aliasOf?a.aliasOf.path:a.path:""}const Ri=(a,t,s)=>a??t??s,Sb=Lc({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(a,{attrs:t,slots:s}){const n=Hs(hd),e=js(()=>a.route||n.value),l=Hs(Ai,0),i=js(()=>{let h=Na(l);const{matched:u}=e.value;let v;for(;(v=u[h])&&!v.components;)h++;return h}),o=js(()=>e.value.matched[i.value]);Wn(Ai,js(()=>i.value+1)),Wn(gb,o),Wn(hd,e);const r=sa();return Gn(()=>[r.value,o.value,a.name],([h,u,v],[j,k,M])=>{u&&(u.instances[v]=h,k&&k!==u&&h&&h===j&&(u.leaveGuards.size||(u.leaveGuards=k.leaveGuards),u.updateGuards.size||(u.updateGuards=k.updateGuards))),h&&u&&(!k||!Ft(u,k)||!j)&&(u.enterCallbacks[v]||[]).forEach(C=>C(h))},{flush:"post"}),()=>{const h=e.value,u=a.name,v=o.value,j=v&&v.components[u];if(!j)return Di(s.default,{Component:j,route:h});const k=v.props[u],M=k?k===!0?h.params:typeof k=="function"?k(h):k:null,O=Dd(j,_a({},M,t,{onVnodeUnmounted:y=>{y.component.isUnmounted&&(v.instances[u]=null)},ref:r}));return Di(s.default,{Component:O,route:h})||O}}});function Di(a,t){if(!a)return null;const s=a(t);return s.length===1?s[0]:s}const qb=Sb;function xb(a){const t=ob(a.routes,a),s=a.parseQuery||bb,n=a.stringifyQuery||Ci,e=a.history,l=en(),i=en(),o=en(),r=nv(zs);let h=zs;It&&a.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const u=Ye.bind(null,A=>""+A),v=Ye.bind(null,Om),j=Ye.bind(null,qn);function k(A,K){let z,aa;return mp(A)?(z=t.getRecordMatcher(A),aa=K):aa=A,t.addRoute(aa,z)}function M(A){const K=t.getRecordMatcher(A);K&&t.removeRoute(K)}function C(){return t.getRoutes().map(A=>A.record)}function O(A){return!!t.getRecordMatcher(A)}function y(A,K){if(K=_a({},K||r.value),typeof A=="string"){const _=Qe(s,A,K.path),E=t.resolve({path:_.path},K),R=e.createHref(_.fullPath);return _a(_,E,{params:j(E.params),hash:qn(_.hash),redirectedFrom:void 0,href:R})}let z;if(A.path!=null)z=_a({},A,{path:Qe(s,A.path,K.path).path});else{const _=_a({},A.params);for(const E in _)_[E]==null&&delete _[E];z=_a({},A,{params:v(_)}),K.params=v(K.params)}const aa=t.resolve(z,K),T=A.hash||"";aa.params=u(j(aa.params));const m=$m(n,_a({},A,{hash:Pm(T),path:aa.path})),f=e.createHref(m);return _a({fullPath:m,hash:T,query:n===Ci?fb(A.query):A.query||{}},aa,{redirectedFrom:void 0,href:f})}function I(A){return typeof A=="string"?Qe(s,A,r.value.path):_a({},A)}function V(A,K){if(h!==A)return Jt(8,{from:K,to:A})}function P(A){return ia(A)}function Q(A){return P(_a(I(A),{replace:!0}))}function ta(A){const K=A.matched[A.matched.length-1];if(K&&K.redirect){const{redirect:z}=K;let aa=typeof z=="function"?z(A):z;return typeof aa=="string"&&(aa=aa.includes("?")||aa.includes("#")?aa=I(aa):{path:aa},aa.params={}),_a({query:A.query,hash:A.hash,params:aa.path!=null?{}:A.params},aa)}}function ia(A,K){const z=h=y(A),aa=r.value,T=A.state,m=A.force,f=A.replace===!0,_=ta(z);if(_)return ia(_a(I(_),{state:typeof _=="object"?_a({},T,_.state):T,force:m,replace:f}),K||z);const E=z;E.redirectedFrom=K;let R;return!m&&Fm(n,aa,z)&&(R=Jt(16,{to:E,from:aa}),Ha(aa,aa,!0,!1)),(R?Promise.resolve(R):X(E,aa)).catch(D=>Is(D)?Is(D,2)?D:za(D):fa(D,E,aa)).then(D=>{if(D){if(Is(D,2))return ia(_a({replace:f},I(D.to),{state:typeof D.to=="object"?_a({},T,D.to.state):T,force:m}),K||E)}else D=W(E,aa,!0,f,T);return ea(E,aa,D),D})}function ka(A,K){const z=V(A,K);return z?Promise.reject(z):Promise.resolve()}function G(A){const K=Wa.values().next().value;return K&&typeof K.runWithContext=="function"?K.runWithContext(A):A()}function X(A,K){let z;const[aa,T,m]=Tb(A,K);z=Xe(aa.reverse(),"beforeRouteLeave",A,K);for(const _ of aa)_.leaveGuards.forEach(E=>{z.push(Qs(E,A,K))});const f=ka.bind(null,A,K);return z.push(f),Ma(z).then(()=>{z=[];for(const _ of l.list())z.push(Qs(_,A,K));return z.push(f),Ma(z)}).then(()=>{z=Xe(T,"beforeRouteUpdate",A,K);for(const _ of T)_.updateGuards.forEach(E=>{z.push(Qs(E,A,K))});return z.push(f),Ma(z)}).then(()=>{z=[];for(const _ of m)if(_.beforeEnter)if(Ss(_.beforeEnter))for(const E of _.beforeEnter)z.push(Qs(E,A,K));else z.push(Qs(_.beforeEnter,A,K));return z.push(f),Ma(z)}).then(()=>(A.matched.forEach(_=>_.enterCallbacks={}),z=Xe(m,"beforeRouteEnter",A,K,G),z.push(f),Ma(z))).then(()=>{z=[];for(const _ of i.list())z.push(Qs(_,A,K));return z.push(f),Ma(z)}).catch(_=>Is(_,8)?_:Promise.reject(_))}function ea(A,K,z){o.list().forEach(aa=>G(()=>aa(A,K,z)))}function W(A,K,z,aa,T){const m=V(A,K);if(m)return m;const f=K===zs,_=It?history.state:{};z&&(aa||f?e.replace(A.fullPath,_a({scroll:f&&_&&_.scroll},T)):e.push(A.fullPath,T)),r.value=A,Ha(A,K,z,f),za()}let ra;function xa(){ra||(ra=e.listen((A,K,z)=>{if(!Fa.listening)return;const aa=y(A),T=ta(aa);if(T){ia(_a(T,{replace:!0,force:!0}),aa).catch(vn);return}h=aa;const m=r.value;It&&Ym(ji(m.fullPath,z.delta),je()),X(aa,m).catch(f=>Is(f,12)?f:Is(f,2)?(ia(_a(I(f.to),{force:!0}),aa).then(_=>{Is(_,20)&&!z.delta&&z.type===xn.pop&&e.go(-1,!1)}).catch(vn),Promise.reject()):(z.delta&&e.go(-z.delta,!1),fa(f,aa,m))).then(f=>{f=f||W(aa,m,!1),f&&(z.delta&&!Is(f,8)?e.go(-z.delta,!1):z.type===xn.pop&&Is(f,20)&&e.go(-1,!1)),ea(aa,m,f)}).catch(vn)}))}let Aa=en(),ga=en(),ha;function fa(A,K,z){za(A);const aa=ga.list();return aa.length?aa.forEach(T=>T(A,K,z)):console.error(A),Promise.reject(A)}function Ra(){return ha&&r.value!==zs?Promise.resolve():new Promise((A,K)=>{Aa.add([A,K])})}function za(A){return ha||(ha=!A,xa(),Aa.list().forEach(([K,z])=>A?z(A):K()),Aa.reset()),A}function Ha(A,K,z,aa){const{scrollBehavior:T}=a;if(!It||!T)return Promise.resolve();const m=!z&&Qm(ji(A.fullPath,0))||(aa||!z)&&history.state&&history.state.scroll||null;return jc().then(()=>T(A,K,m)).then(f=>f&&Gm(f)).catch(f=>fa(f,A,K))}const La=A=>e.go(A);let ts;const Wa=new Set,Fa={currentRoute:r,listening:!0,addRoute:k,removeRoute:M,clearRoutes:t.clearRoutes,hasRoute:O,getRoutes:C,resolve:y,options:a,push:P,replace:Q,go:La,back:()=>La(-1),forward:()=>La(1),beforeEach:l.add,beforeResolve:i.add,afterEach:o.add,onError:ga.add,isReady:Ra,install(A){const K=this;A.component("RouterLink",yb),A.component("RouterView",qb),A.config.globalProperties.$router=K,Object.defineProperty(A.config.globalProperties,"$route",{enumerable:!0,get:()=>Na(r)}),It&&!ts&&r.value===zs&&(ts=!0,P(e.location).catch(T=>{}));const z={};for(const T in zs)Object.defineProperty(z,T,{get:()=>r.value[T],enumerable:!0});A.provide(Id,K),A.provide(kp,mc(z)),A.provide(hd,r);const aa=A.unmount;Wa.add(A),A.unmount=function(){Wa.delete(A),Wa.size<1&&(h=zs,ra&&ra(),ra=null,r.value=zs,ts=!1,ha=!1),aa()}}};function Ma(A){return A.reduce((K,z)=>K.then(()=>G(z)),Promise.resolve())}return Fa}function Tb(a,t){const s=[],n=[],e=[],l=Math.max(t.matched.length,a.matched.length);for(let i=0;i<l;i++){const o=t.matched[i];o&&(a.matched.find(h=>Ft(h,o))?n.push(o):s.push(o));const r=a.matched[i];r&&(t.matched.find(h=>Ft(h,r))||e.push(r))}return[s,n,e]}const Eb="Saya komponen HTML",Cb={__name:"HTML01",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[c("h1",null,Ba(Eb)),s[3]||(s[3]=c("p",null,"Selamat datang di HTML Page",-1)),c("nav",null,[S(n,{to:"/html"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1}),S(n,{to:"/html-kuis-01"},{default:x(()=>s[1]||(s[1]=[w("Go to Kuis 1")])),_:1}),S(n,{to:"/latihanHTML03"},{default:x(()=>s[2]||(s[2]=[w("Go to Latihan 3")])),_:1})])],64)}}},Ab=ca(Cb,[["__scopeId","data-v-adf38692"]]),Lb={__name:"HTML02",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[c("h1",null,Ba(t.count),1),s[3]||(s[3]=c("p",null,"Template format",-1)),c("nav",null,[S(n,{to:"/html"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1}),S(n,{to:"/html-kuis-01"},{default:x(()=>s[1]||(s[1]=[w("Go to Kuis 1")])),_:1}),S(n,{to:"/latihanHTML03"},{default:x(()=>s[2]||(s[2]=[w("Go to Latihan 3")])),_:1})])],64)}}},Mb=ca(Lb,[["__scopeId","data-v-94b3d55c"]]),Rb={__name:"HTML03",setup(a){return(t,s)=>s[0]||(s[0]=Z(`<h2 id="pengenalan" data-v-0cfb088f>Pengenalan</h2><p data-v-0cfb088f>HTML ( HyperText Markup Language ) adalah suatu instruksi untuk menulis document agar bisa ditampilkan ke dalam web browser. web browser akan mengambil file HTML dari penyimpanan local dan akan diubah menjadi halaman website.</p><p data-v-0cfb088f>Dalam Pembuatan website terdapat setidaknya 3 komponen Pembangun:</p><ul data-v-0cfb088f><li data-v-0cfb088f>Kerangka tubuh: HTML</li><li data-v-0cfb088f>Fungsi Tubuh: JavaScript</li><li data-v-0cfb088f>Bagian paling luar tubuh : CSS</li></ul><p data-v-0cfb088f>Secara garis besar kita dapat bayangkan HTML adalah bagian yang akan menjadi penompang dari text dan gambar, JavaScript adalah bagian yang menghasilkan suatu respon akan sesuatu, dan CSS adalah bagian yang akan mengatur tampilan mereka.</p><h2 id="agar-dapat-menguasai" data-v-0cfb088f>Agar dapat menguasai</h2><p data-v-0cfb088f>Dalam penggunaan html, css terdapat opsi untuk menggunakan framework untuk mempercepat proses pembuatan. bagi yang baru mulai belajar diharapkan jangan terlalu mengandalkan framework dalam pembuatan halaman website karena itu akan menghasilkan kebiasaan yang buruk dalam problem solving (Programing Unpas).</p><p data-v-0cfb088f>Contoh mudahnya: Dalam matematika terdapat banyak trick cepat dalam penyelesaian suatu masalah, akan tetapi itu tidak baik karena jika ketemu masalah yang berbeda akan menjadi sulit nanti.</p><p data-v-0cfb088f>Bagi yang masih belum tau Framework. Framework adalah adalah bentuk pondasi yang telah jadi dalam membangun sistem. Dengan framework kita tidak perlu membangun sistem sepenuhnya dari awal (<a href="https://www.codecademy.com/resources/blog/what-is-a-framework/#:~:text=A%20framework%20is%20a%20structure,you%27re%20building%20a%20house" data-v-0cfb088f>https://www.codecademy.com/resources/blog/what-is-a-framework/#:~:text=A%20framework%20is%20a%20structure,you%27re%20building%20a%20house</a>.).</p><p data-v-0cfb088f>Selain itu kita juga harus berani mencoba dan berlatih dalam pembuatan website. Sebuah kesalahan dalam berusaha adalah hal yang mutlak tidak ada yang bisa lari dari itu. Oleh karena itu jika ingin menguasai Pembuatan website maka harus berani mencoba.</p><h2 id="peralatan-membantu" data-v-0cfb088f>Peralatan membantu</h2><p data-v-0cfb088f>Dalam Pemrograman seperti website diperlukan alat untuk membantu pembuatan website. Alat tersebut terkadang berbentuk sabagai hardware maupun software.</p><p data-v-0cfb088f>Tetapi perlu kita wajib pahami adalah sebuah alat hanyalah alat, yang terpenting adalah brainware yang akan menggunakan alat tersebut. </p><p data-v-0cfb088f>Contoh software yang sering digunakan adalah:</p><ul data-v-0cfb088f><li data-v-0cfb088f>Vscode</li><li data-v-0cfb088f>Atom text editor</li><li data-v-0cfb088f>Notepad ++</li></ul><p data-v-0cfb088f>Software Browser:</p><ul data-v-0cfb088f><li data-v-0cfb088f>Google Chrome</li><li data-v-0cfb088f>Opera</li><li data-v-0cfb088f>Mozila Firefox</li></ul><p data-v-0cfb088f>Hardware Pendukung:</p><ul data-v-0cfb088f><li data-v-0cfb088f>Monitor dengan minimal resolusi 1920 * 1080</li><li data-v-0cfb088f>2 Monitor untuk mempermudah pengerjaan</li></ul><p data-v-0cfb088f>Dalam pengerjaan halaman website alangkah baiknya untuk membuka halaman website dan text editor secara continue. Setiap kali kita telah melakukan perubahan bisa langsung di lihat hasilnya di web browser. </p><h2 id="structur-html" data-v-0cfb088f>Structur HTML</h2><p data-v-0cfb088f>Dalam pembuatan style document website, terdapat suatu structur yang paling populer.</p><p data-v-0cfb088f>SRC: <a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure" data-v-0cfb088f>https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure</a></p><ul data-v-0cfb088f><li data-v-0cfb088f><p data-v-0cfb088f>Header: Adalah garis besar yang berada di tempat paling atas document. Biasannya berisi dengan logo dan menu.</p></li><li data-v-0cfb088f><p data-v-0cfb088f>Navigation Bar: adalah bagian yang berfungsi untuk menjadi peta petunjuk pada website. Biasannya berbentuk menu yang menyediakan fitur dan layanan website tersebut. </p></li><li data-v-0cfb088f><p data-v-0cfb088f>main content: </p></li></ul><p data-v-0cfb088f>Adalah bagian paling penting dalam sebuah website, yang berisi mengenai layanan atau topic yang dibahas pada website. </p><p data-v-0cfb088f>Sebagai contoh: pada youtube main content adalah bagian dimana kita melihat video yang sedang berjalan.</p><ul data-v-0cfb088f><li data-v-0cfb088f>Sidebar :</li></ul><p data-v-0cfb088f>Adalah bagian yang berisi informasi tambahan ataupun pilihan layanan lainnya. Biasannya sidebar berada di sebelah main content.</p><p data-v-0cfb088f>Sebagai contoh: pada youtube sidebar adalah bagian kanan video. Sidebar tersebut berisi pilihan video lainnya yang bisa kita tonton.</p><ul data-v-0cfb088f><li data-v-0cfb088f>footer:</li></ul><p data-v-0cfb088f>Biasannya footer berupa garis paling bawah didalam halaman website. Footer berisi mengenai informasi kepimilikan dan informasi kontak dari pemilik website. </p><h2 id="table-pada-html" data-v-0cfb088f>Table pada HTML</h2><table data-v-0cfb088f><thead data-v-0cfb088f><tr data-v-0cfb088f><th data-v-0cfb088f>NIM</th><th data-v-0cfb088f>Name</th><th data-v-0cfb088f>Major</th></tr></thead><tbody data-v-0cfb088f><tr data-v-0cfb088f><td data-v-0cfb088f>0123</td><td data-v-0cfb088f>Rangga</td><td data-v-0cfb088f>Bahasa inggris</td></tr><tr data-v-0cfb088f><td data-v-0cfb088f>0124</td><td data-v-0cfb088f>Wahyu</td><td data-v-0cfb088f>Sistem Informasi</td></tr><tr data-v-0cfb088f><td data-v-0cfb088f>0125</td><td data-v-0cfb088f>Atmoko</td><td data-v-0cfb088f>Pendidikan matematika</td></tr></tbody></table><p data-v-0cfb088f>Diatas adalah contoh dari table. Didalam table terdapat kolom dan baris. </p><p data-v-0cfb088f>Kolom adalah bagian content yang vertical dari atas ke bawah, Contoh: Nim, Name, Major. </p><p data-v-0cfb088f>Baris adalah bagian conten yang horizontal lurus ke kanan, Contoh: rangga, wahyu, atmoko.</p><p data-v-0cfb088f>COntoh code table pada HTML</p><pre data-v-0cfb088f><code data-v-0cfb088f><span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>table</span>&gt;</span>
    <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>tr</span>&gt;</span> 
        <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span> NIM <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span>
        <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span> Name <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span>
        <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span> Major <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span>
    <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>tr</span>&gt;</span>

    <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>tr</span>&gt;</span>
        <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span> 0123 <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span>
        <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span> Rangga <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span>
        <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span> Bahasa INggris <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span>
    <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>tr</span>&gt;</span>

    <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>tr</span>&gt;</span> 
        <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span> 0124 <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span>
        <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span> wahyu <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span>
        <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span> Sistem Informasi <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span>
    <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>tr</span>&gt;</span>

    <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>tr</span>&gt;</span> 
        <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span> 0125 <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span>
        <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span> Atmoko <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span>
        <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span> Pendidikan Matematika <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>td</span>&gt;</span>
    <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>tr</span>&gt;</span>
<span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>table</span>&gt;</span>
</code></pre><h2 id="form-pada-html" data-v-0cfb088f>Form pada html</h2><h2 id="pentingnya-semantic-pada-html" data-v-0cfb088f>Pentingnya semantic pada html</h2><p data-v-0cfb088f>Semantic element pada HTML digunakan untuk memberikan makna pada content yang dimiliki. Fungsi utama adalah untuk memberi tau developer dan user pemahaman lebih mengenai fungsi conten dan tujuannya. Selain itu semantic pada website akan dapat meningkatkan hasil Search Engine Optimization(SEO). </p><p data-v-0cfb088f>Contoh Element Semantic <a href="https://www.petanikode.com/html-semantik/" data-v-0cfb088f>https://www.petanikode.com/html-semantik/</a>:</p><ul data-v-0cfb088f><li data-v-0cfb088f><code data-v-0cfb088f>&lt;article&gt;</code></li><li data-v-0cfb088f><code data-v-0cfb088f>&lt;aside&gt;</code></li><li data-v-0cfb088f><code data-v-0cfb088f>&lt;details&gt;</code></li><li data-v-0cfb088f><code data-v-0cfb088f>&lt;figcaption&gt;</code></li><li data-v-0cfb088f><code data-v-0cfb088f>&lt;figure&gt;</code></li><li data-v-0cfb088f><code data-v-0cfb088f>&lt;footer&gt;</code></li><li data-v-0cfb088f><code data-v-0cfb088f>&lt;main&gt;</code></li><li data-v-0cfb088f><code data-v-0cfb088f>&lt;nav&gt;</code></li></ul><h2 id="proses-pembuatan" data-v-0cfb088f>Proses pembuatan</h2><p data-v-0cfb088f>Fitur HTML:</p><ol data-v-0cfb088f><li data-v-0cfb088f>Menulis text</li><li data-v-0cfb088f>Memberikan ukuran dan ketebalan kedalam text</li><li data-v-0cfb088f>Membuat table</li><li data-v-0cfb088f>memanbahkan gambar </li><li data-v-0cfb088f>Menambahkan Pranala ( lebih kita kenal dengan embedded link )</li><li data-v-0cfb088f>Menambahkan data suara</li><li data-v-0cfb088f>menambahkan Form yang dapat diisi</li></ol><h5 id="contoh-source-code-html" data-v-0cfb088f>Contoh source code HTML</h5><pre data-v-0cfb088f><code data-v-0cfb088f><span class="hljs-meta" data-v-0cfb088f>&lt;!doctype html&gt;</span>
<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>html</span> <span class="hljs-attr" data-v-0cfb088f>lang</span>=<span class="hljs-string" data-v-0cfb088f>&quot;en&quot;</span>&gt;</span>
<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>head</span>&gt;</span>
  <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>title</span>&gt;</span>Homepage<span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>title</span>&gt;</span>
<span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>head</span>&gt;</span>
<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>body</span>&gt;</span>
  <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>p</span>&gt;</span>Hello, World!<span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>p</span>&gt;</span>
<span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>body</span>&gt;</span>
<span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>html</span>&gt;</span>
</code></pre><p data-v-0cfb088f>Mari kita pahami sedikit. </p><ul data-v-0cfb088f><li data-v-0cfb088f><code data-v-0cfb088f>&lt;!doctype html&gt;</code> ini bukan HTML tag, dibutuhkan untuk memberi informasi kepada web browser tentang document apa ini.</li><li data-v-0cfb088f><code data-v-0cfb088f>&lt;html lang=&#39;en&gt;</code> Ini untuk membantu mesin pencari dan web browser dalam mengelola. Untuk informasi lebih banyak <a href="https://www.w3schools.com/tags/ref_language_codes.asp" data-v-0cfb088f>https://www.w3schools.com/tags/ref_language_codes.asp</a>.</li><li data-v-0cfb088f><code data-v-0cfb088f>&lt;head&gt; &lt;/head&gt;</code> data yang biasannya berada di dalamnya adalah title, css-source code, javascript-source code, &#39;META&#39; data, data font style dan lain-lain.</li><li data-v-0cfb088f><code data-v-0cfb088f>&lt;body&gt; &lt;/body&gt;</code> TAG ini digunakan untuk menyimpan informasi atau data sebelum di olah menjadi halaman website.</li><li data-v-0cfb088f><code data-v-0cfb088f>&lt;p&gt; &lt;/p&gt;</code> TAG ini digunakan untuk menulis paragraph biasa didalam document.</li></ul><h2 id="apa-itu-html-element-" data-v-0cfb088f>Apa itu HTML Element?</h2><p data-v-0cfb088f>Html element dimulai dari tag pertama, beberapa content, dan diakhiri dengan tag penutup. Html <strong data-v-0cfb088f>element</strong> adalah semua yang berada dari tag pembuka dan penutup.</p><p data-v-0cfb088f><strong data-v-0cfb088f>nested HTML Elment</strong> adalah sebuah element yang memiliki element lain didalam nya. Contoh: </p><pre data-v-0cfb088f><code data-v-0cfb088f><span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>body</span>&gt;</span>

<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>h1</span>&gt;</span>My First Heading<span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>h1</span>&gt;</span>
<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>p</span>&gt;</span>My first paragraph.<span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>p</span>&gt;</span>

<span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>body</span>&gt;</span>
</code></pre><blockquote data-v-0cfb088f><p data-v-0cfb088f>Untuk beberapa element, terkadang dipanggil sebagai empty element &quot;<br data-v-0cfb088f>&quot; karena tidak memiliki content dan tag penutup </p></blockquote><p data-v-0cfb088f>HTML tidak melakukan &quot;CaseSensitive&quot;, Anda bisa menggunakan huruf besar atau kecil sesuka hati, tetapi usahakan untuk consistent, agar code terlihat rapih.</p><p data-v-0cfb088f>Pada structur page HTML, semua yang berada didalam akan ditampilkan pada halaman browser. Sedangkan semua content yang berada didalam element; akan muncul pada browser title</p><h2 id="html-attribute" data-v-0cfb088f>HTML attribute</h2><p data-v-0cfb088f>Semua element HTML bisa memiliki attribute, untuk memberikan instruksi tambahan atau informasi tambahan. </p><ul data-v-0cfb088f><li data-v-0cfb088f>Attribute selalu ditambahkan pada tag pembuka </li><li data-v-0cfb088f>attribute biasannya ber format <code data-v-0cfb088f>attribute_name = &quot;value&quot;</code> Contoh attribute pada HTML<pre data-v-0cfb088f><code data-v-0cfb088f>&lt;<span class="hljs-selector-tag" data-v-0cfb088f>img</span> src=<span class="hljs-string" data-v-0cfb088f>&quot;img_mountain.jpg&quot;</span> alt=<span class="hljs-string" data-v-0cfb088f>&quot;this is himalaya mountain&quot;</span>&gt;
</code></pre></li></ul><p data-v-0cfb088f>Dalam SRC secara online, URL memiliki dua tipe:</p><ul data-v-0cfb088f><li data-v-0cfb088f>Absolute URL - adalah link yang didapatkan dari platfrom hosted atau website yang bukan milik kita Contoh: saya mengunakan link gambar yang berada di wikipedia untuk menjadi sampul halaman website blogspot saya </li><li data-v-0cfb088f>Relative URL - adalah link yang image / data yang sudah ada di dalam website kita sendiri</li></ul><h4 id="breakdown-struktur-link" data-v-0cfb088f>BreakDown Struktur link</h4><p data-v-0cfb088f><code data-v-0cfb088f>https://github.com/playmakermz/warkop-website/blob/main/document/html.md</code></p><ul data-v-0cfb088f><li data-v-0cfb088f>Schema : &quot;https://&quot;</li><li data-v-0cfb088f>Domain : &quot;github.com&quot;</li><li data-v-0cfb088f>Path : &quot;/playmakermz/warkop-website/blob/main/document/html.md&quot;</li></ul><h2 id="penggunaan-css" data-v-0cfb088f>Penggunaan CSS</h2><ul data-v-0cfb088f><li data-v-0cfb088f><strong data-v-0cfb088f>inline</strong> - dengan menggunakan <code data-v-0cfb088f>style</code> attribute didadalam element HTML</li><li data-v-0cfb088f><strong data-v-0cfb088f>Internal</strong> - dengan menggunakan element <code data-v-0cfb088f>&lt;style&gt;</code> didalam <code data-v-0cfb088f>&lt;head&gt;</code></li><li data-v-0cfb088f><strong data-v-0cfb088f>External</strong> - dengan menggunakan element <code data-v-0cfb088f>&lt;link&gt;</code> pada <code data-v-0cfb088f>&lt;head&gt;</code> untuk merujuk ke source file css</li></ul><pre data-v-0cfb088f><code data-v-0cfb088f><span class="hljs-meta" data-v-0cfb088f>&lt;!DOCTYPE html&gt;</span>
<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>html</span>&gt;</span>
<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>head</span>&gt;</span>
  <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>link</span> <span class="hljs-attr" data-v-0cfb088f>rel</span>=<span class="hljs-string" data-v-0cfb088f>&quot;stylesheet&quot;</span> <span class="hljs-attr" data-v-0cfb088f>href</span>=<span class="hljs-string" data-v-0cfb088f>&quot;styles.css&quot;</span>&gt;</span> <span class="hljs-comment" data-v-0cfb088f>&lt;!-- Exsternal CSS --&gt;</span>

  <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>style</span>&gt;</span><span class="css" data-v-0cfb088f> &lt;!<span class="hljs-selector-tag" data-v-0cfb088f>--</span> <span class="hljs-selector-tag" data-v-0cfb088f>Internal</span> <span class="hljs-selector-tag" data-v-0cfb088f>CSS</span> <span class="hljs-selector-tag" data-v-0cfb088f>--</span>&gt;
    <span class="hljs-selector-tag" data-v-0cfb088f>body</span> {<span class="hljs-attribute" data-v-0cfb088f>background-color</span>: powderblue;}
    <span class="hljs-selector-tag" data-v-0cfb088f>h1</span>   {<span class="hljs-attribute" data-v-0cfb088f>color</span>: blue;}
    <span class="hljs-selector-tag" data-v-0cfb088f>p</span>    {<span class="hljs-attribute" data-v-0cfb088f>color</span>: red;}
  </span><span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>style</span>&gt;</span>

<span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>head</span>&gt;</span>
<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>body</span>&gt;</span>

<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>h1</span> <span class="hljs-attr" data-v-0cfb088f>style</span>=<span class="hljs-string" data-v-0cfb088f>&quot;color:blue;&quot;</span>&gt;</span>This is a heading<span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>h1</span>&gt;</span> <span class="hljs-comment" data-v-0cfb088f>&lt;!-- Inline CSS--&gt;</span>
<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>p</span>&gt;</span>This is a paragraph.<span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>p</span>&gt;</span>

<span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>body</span>&gt;</span>
<span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>html</span>&gt;</span>
</code></pre><h2 id="border" data-v-0cfb088f>Border</h2><p data-v-0cfb088f>Border adalah bagian tepi dari element. Dengan menggunakan property border kita bisa menampilkan gari tepi element dan melakukan pengubahan pada tampilan border. </p><pre data-v-0cfb088f><code data-v-0cfb088f><span class="hljs-keyword" data-v-0cfb088f>border: </span><span class="hljs-number" data-v-0cfb088f>1</span>px solid red<span class="hljs-comment" data-v-0cfb088f>;</span>
</code></pre><h2 id="html-block-dan-inline-element" data-v-0cfb088f>HTML BLock dan inline Element</h2><p data-v-0cfb088f>Pada HTML terdapat berabagai macam display value kita akan melihat yang paling sering digunakan yaitu: Block, dan inline</p><p data-v-0cfb088f><strong data-v-0cfb088f>Block-level Elements</strong></p><p data-v-0cfb088f>block level element akan selalu membuat baris baru setelah kita declarasi. Block level element akan menggambil penuh width/lebar yang tersedia. Ketinggian border dari Block level adalah berdasarkan content yang dimiliki. Contoh dari block level element <code data-v-0cfb088f>&lt;p&gt;</code> dan <code data-v-0cfb088f>&lt;div&gt;</code></p><p data-v-0cfb088f><strong data-v-0cfb088f>Inline Elements</strong></p><p data-v-0cfb088f>Inline element tidak akan membuat baris baru seperti block level. Lebar dari inline element akan sama dengan content yang ada didalamannya, Oleh karena itu kita tidak bisa menggatur <strong data-v-0cfb088f>width dan Height</strong> dari element yang memeiliki inline. Contoh inline element <code data-v-0cfb088f>&lt;em&gt;</code>, <code data-v-0cfb088f>&lt;span&gt;</code>, dan <code data-v-0cfb088f>&lt;strong&gt;</code></p><p data-v-0cfb088f><strong data-v-0cfb088f>inline-block</strong></p><p data-v-0cfb088f>Selain dari block dan inline, ada juga inline-block. Element yang memiliki display inline-block bisa kita atur &quot;width&quot; dan &quot;height&quot; mereka. Secara mudahnnya ini adalah pergabungan antara block dan inline. </p><p data-v-0cfb088f><strong data-v-0cfb088f>display: none</strong></p><p data-v-0cfb088f>Jika kita menambahkan property ini pada element, maka elemnt tersebut akan menghilang dari halaman website. </p><h2 id="pohon-keluarga-pada-document-html" data-v-0cfb088f>Pohon keluarga pada document HTML</h2><p data-v-0cfb088f>Pada pembuatan halaman website, alangkah baiknya untuk bisa memahami struktur pohon keluarga document. </p><p data-v-0cfb088f>Konsep ini sangat penting untuk mempermudah kita menyusun kerangka html yang lebih kompleks (<a href="http://web.simmons.edu/~grabiner/comm244/weekfour/document-tree.html" data-v-0cfb088f>http://web.simmons.edu/~grabiner/comm244/weekfour/document-tree.html</a>).</p><pre data-v-0cfb088f><code class="lang-&lt;body&gt;" data-v-0cfb088f>
<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>div</span> <span class="hljs-attr" data-v-0cfb088f>id</span>=<span class="hljs-string" data-v-0cfb088f>&quot;content&quot;</span>&gt;</span> <span class="hljs-comment" data-v-0cfb088f>&lt;!-- parent --&gt;</span>
    <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>ul</span>&gt;</span>  <span class="hljs-comment" data-v-0cfb088f>&lt;!-- child --&gt;</span>
        <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>li</span>&gt;</span> item 1 <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>li</span>&gt;</span> <span class="hljs-comment" data-v-0cfb088f>&lt;!-- sibling from on e parent --&gt;</span>
        <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>li</span>&gt;</span> item 2 <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>li</span>&gt;</span> <span class="hljs-comment" data-v-0cfb088f>&lt;!-- sibling --&gt;</span>
    <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>ul</span>&gt;</span>
<span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>div</span>&gt;</span>
</code></pre><hr data-v-0cfb088f><h1 id="cheatsheet-area" data-v-0cfb088f>CheatSheet Area</h1><h2 id="penulisan-unordered-list" data-v-0cfb088f>Penulisan Unordered List</h2><p data-v-0cfb088f>Dengan Menggunakan Element <code data-v-0cfb088f>&lt;ul&gt;</code> sebagai container dan element <code data-v-0cfb088f>&lt;li&gt;</code> sebagai item kita bisa membuat Unordered list sama seperti dengan yang ada di microsoft word </p><pre data-v-0cfb088f><code data-v-0cfb088f><span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>h1</span>&gt;</span> Judul <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>h1</span>&gt;</span>

<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>ul</span>&gt;</span>

<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>li</span>&gt;</span> List item 1 <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>li</span>&gt;</span> 
<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>li</span>&gt;</span> list item 2 <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>li</span>&gt;</span>

<span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>ul</span>&gt;</span>
</code></pre><h2 id="penulisan-ordered-list" data-v-0cfb088f>Penulisan Ordered List</h2><p data-v-0cfb088f>Dengan penulisan ber-urut. itu sama membuat list dengan angka secara otomatis.</p><p data-v-0cfb088f><code data-v-0cfb088f>&lt;ol&gt;</code> adalah sebagai container dan <code data-v-0cfb088f>&lt;li&gt;</code> sebagai element untuk item</p><pre data-v-0cfb088f><code data-v-0cfb088f><span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>h1</span>&gt;</span> Judul <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>h1</span>&gt;</span>

<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>ol</span>&gt;</span>
    <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>li</span>&gt;</span> Item 1 <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>li</span>&gt;</span>
    <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>li</span>&gt;</span> item 2 <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>li</span>&gt;</span>
<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>ol</span>&gt;</span>
</code></pre><h2 id="font-style" data-v-0cfb088f>Font style</h2><ul data-v-0cfb088f><li data-v-0cfb088f><p data-v-0cfb088f>Menulis dengan huruf tebal</p><pre data-v-0cfb088f><code data-v-0cfb088f>  &lt;<span class="hljs-keyword" data-v-0cfb088f>strong</span>&gt; <span class="hljs-literal" data-v-0cfb088f>Text</span> akan lebih tebal &lt;<span class="hljs-keyword" data-v-0cfb088f>strong</span>&gt;
</code></pre></li><li data-v-0cfb088f><p data-v-0cfb088f>Menulis Huruf miring</p><pre data-v-0cfb088f><code data-v-0cfb088f>  <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>i</span>&gt;</span> Huruf garis miring <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>i</span>&gt;</span>
</code></pre></li><li data-v-0cfb088f>Menulis Paragraf <pre data-v-0cfb088f><code data-v-0cfb088f>  <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>p</span>&gt;</span> Ini adalah Paragraf <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>p</span>&gt;</span>
</code></pre></li><li data-v-0cfb088f>Menulis Judul atau heading<pre data-v-0cfb088f><code data-v-0cfb088f>  <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>h1</span>&gt;</span> Judul terbesar <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>h1</span>&gt;</span>
  <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>h2</span>&gt;</span> Judul ke dua <span class="hljs-tag" data-v-0cfb088f>&lt;/<span class="hljs-name" data-v-0cfb088f>h2</span>&gt;</span>
</code></pre></li><li data-v-0cfb088f>Garis Horizontal<pre data-v-0cfb088f><code data-v-0cfb088f>  <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>hr</span>/&gt;</span>
  <span class="hljs-comment" data-v-0cfb088f>&lt;!-- Atau tanpa menggunakan garis miring --&gt;</span>
  <span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>hr</span>&gt;</span>
</code></pre></li></ul><h2 id="element-cheatsheet" data-v-0cfb088f>Element CheatSheet</h2><table data-v-0cfb088f><thead data-v-0cfb088f><tr data-v-0cfb088f><th data-v-0cfb088f>Tag</th><th data-v-0cfb088f>Element</th><th data-v-0cfb088f>Description</th></tr></thead><tbody data-v-0cfb088f><tr data-v-0cfb088f><td data-v-0cfb088f>h1 - h6</td><td data-v-0cfb088f><code data-v-0cfb088f>&lt;h1&gt; judul &lt;/h1&gt;</code></td><td data-v-0cfb088f>Heading </td></tr><tr data-v-0cfb088f><td data-v-0cfb088f>p</td><td data-v-0cfb088f><code data-v-0cfb088f>&lt;p&gt; paragraf &lt;/p&gt;</code></td><td data-v-0cfb088f>Paragraph</td></tr><tr data-v-0cfb088f><td data-v-0cfb088f>a</td><td data-v-0cfb088f><code data-v-0cfb088f>&lt;a href=&quot;#&quot;&gt;</code></td><td data-v-0cfb088f>Link \`</td></tr><tr data-v-0cfb088f><td data-v-0cfb088f>img</td><td data-v-0cfb088f><code data-v-0cfb088f>&lt;img src=&quot;#&quot; alt=&quot;text&quot;&gt;</code></td><td data-v-0cfb088f>Image </td></tr><tr data-v-0cfb088f><td data-v-0cfb088f>hr</td><td data-v-0cfb088f><code data-v-0cfb088f>&lt;hr&gt;</code></td><td data-v-0cfb088f>Horizontal Rule, memberikan gari luru secara horizontal</td></tr><tr data-v-0cfb088f><td data-v-0cfb088f>br</td><td data-v-0cfb088f><code data-v-0cfb088f>&lt;br&gt;</code></td><td data-v-0cfb088f>Sebagai line break</td></tr><tr data-v-0cfb088f><td data-v-0cfb088f>pre</td><td data-v-0cfb088f><code data-v-0cfb088f>&lt;pre&gt; this is line &lt;/pre&gt;</code></td><td data-v-0cfb088f>akan menghasilkan fixed text, sama persis dengan content yang didalamnya. jarak tulisan tidak akan diataur oleh komputer</td></tr></tbody></table><h2 id="menambahkan-gambar-pada-document-" data-v-0cfb088f>Menambahkan gambar pada document.</h2><p data-v-0cfb088f>Gambar berformat adalah object yang berada di luar document. Untuk menambahkan gambar ke document kita bisa panggil mereka melalui path yang tepat. Path bisa berasal dari internal source ataupun external source.</p><p data-v-0cfb088f>Contoh menambahkan gambar dari sumber internal.</p><pre data-v-0cfb088f><code data-v-0cfb088f><span class="hljs-comment" data-v-0cfb088f>&lt;!-- &lt;img src=&#39;&#39;/&gt; --&gt;</span>
<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>img</span> <span class="hljs-attr" data-v-0cfb088f>src</span>=<span class="hljs-string" data-v-0cfb088f>&#39;folder/gambar.jpg&#39;</span>/&gt;</span>

<span class="hljs-comment" data-v-0cfb088f>&lt;!-- atau mendefinisikan lebar default --&gt;</span>
<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>img</span> <span class="hljs-attr" data-v-0cfb088f>src</span>=<span class="hljs-string" data-v-0cfb088f>&#39;folder/gambar.jpg&#39;</span> <span class="hljs-attr" data-v-0cfb088f>width</span>=<span class="hljs-string" data-v-0cfb088f>&#39;100&#39;</span>/&gt;</span>

<span class="hljs-comment" data-v-0cfb088f>&lt;!-- text pengganti gambar jika gambar tidak berhasil di render --&gt;</span>
<span class="hljs-tag" data-v-0cfb088f>&lt;<span class="hljs-name" data-v-0cfb088f>img</span> <span class="hljs-attr" data-v-0cfb088f>src</span>=<span class="hljs-string" data-v-0cfb088f>&#39;folder/gambar.jpg&#39;</span> <span class="hljs-attr" data-v-0cfb088f>alt</span>=<span class="hljs-string" data-v-0cfb088f>&#39;ini gambar&#39;</span>/&gt;</span>
</code></pre><p data-v-0cfb088f>Pada dasarnya jika kita memanggil gambar, maka ukuran tinggi dan panjang akan diambil dari sumber aslinya.</p><h2 id="attribute-cheatsheet" data-v-0cfb088f>attribute Cheatsheet</h2><table data-v-0cfb088f><thead data-v-0cfb088f><tr data-v-0cfb088f><th data-v-0cfb088f>attribute</th><th data-v-0cfb088f>Description </th></tr></thead><tbody data-v-0cfb088f><tr data-v-0cfb088f><td data-v-0cfb088f><code data-v-0cfb088f>href=&quot;#&quot;</code></td><td data-v-0cfb088f>Digunakan untuk menambahkan hyperlink / path ke sumber tujuan</td></tr><tr data-v-0cfb088f><td data-v-0cfb088f><code data-v-0cfb088f>src=&quot;#&quot;</code></td><td data-v-0cfb088f>Digunakan untuk memberi tau hyperlink / path yang menuju sumbur gambar</td></tr><tr data-v-0cfb088f><td data-v-0cfb088f><code data-v-0cfb088f>width=&quot;#&quot;</code></td><td data-v-0cfb088f>Menujukan ukuran Lebar</td></tr><tr data-v-0cfb088f><td data-v-0cfb088f><code data-v-0cfb088f>height=#</code></td><td data-v-0cfb088f>menujukan ukuran tinggi</td></tr><tr data-v-0cfb088f><td data-v-0cfb088f><code data-v-0cfb088f>alt=&quot;this is text&quot;</code></td><td data-v-0cfb088f>Biasannya digunakan untuk element &quot;img&quot;, jika gambar gagal dimunculkan text ini akan muncul </td></tr><tr data-v-0cfb088f><td data-v-0cfb088f><code data-v-0cfb088f>style=&quot;#&quot;</code></td><td data-v-0cfb088f>Digunakan untuk menambahkan style pada element, dengan css </td></tr><tr data-v-0cfb088f><td data-v-0cfb088f><code data-v-0cfb088f>title=&quot;this is title&quot;</code></td><td data-v-0cfb088f>Ini akan memunculkan pop-up kecil saat anda mengarahkan mouse ke element tersebut</td></tr><tr data-v-0cfb088f><td data-v-0cfb088f><code data-v-0cfb088f>class=&quot;class_name&quot;</code></td><td data-v-0cfb088f>ini adalah untuk pengelompokan untuk diberi instruksi dari css ke element tersebut</td></tr><tr data-v-0cfb088f><td data-v-0cfb088f><code data-v-0cfb088f>id=&quot;id_name&quot;</code></td><td data-v-0cfb088f>ini adalah pengelompokan untuk diberi instruksi dari css ke element tersebut, dan juga hyperlink </td></tr></tbody></table><h2 id="menghubungkan-file-css-dengan-document-html" data-v-0cfb088f>Menghubungkan file css dengan document HTML</h2><p data-v-0cfb088f>Masuk ke file latihan html 01 di repository ini: <a href="../latihan/html01.md" data-v-0cfb088f>panduan menghubungkan document dan css</a></p><blockquote data-v-0cfb088f><p data-v-0cfb088f>Selamat telah menyelesaikan dasar HTML Materi Selanjutnya akan kita bahas pada bagian CSS Klik untuk lanjut ke halaman <a href="../document/css.md" data-v-0cfb088f>klik ini</a></p></blockquote><hr data-v-0cfb088f><h1 id="latihan-html" data-v-0cfb088f>Latihan HTML</h1><ul data-v-0cfb088f><li data-v-0cfb088f>Menghubungkan file CSS ke dalam document HTML <a href="../latihan/html01.md" data-v-0cfb088f>Latihan 1 HTML</a></li><li data-v-0cfb088f>Membuat Halaman website berisi puisi <a href="../latihan/lt-puisi.md" data-v-0cfb088f>Latihan Puisi</a></li><li data-v-0cfb088f>Latihan Float <a href="../latihan/lt-float.md" data-v-0cfb088f>latihan float</a></li><li data-v-0cfb088f>Membuat Standart Template Website <a href="../latihan/lt-standart-web.md" data-v-0cfb088f>Latihan Standart</a></li><li data-v-0cfb088f>Latihan penggunaan box model <a href="../latihan/html02.md" data-v-0cfb088f>Latihan 2 HTML</a></li><li data-v-0cfb088f>Membuat website dengan grid <a href="../latihan/lt-grid.md" data-v-0cfb088f>Latihan_3</a></li><li data-v-0cfb088f>Membuat website dengan Flexbox <a href="../latihan/lt-flexbox.md" data-v-0cfb088f>Flexbox</a></li><li data-v-0cfb088f>Contoh CSS position <a href="../latihan/lt-css-position.md" data-v-0cfb088f>Contoh CSS</a></li><li data-v-0cfb088f>Membuat landing page website makanan</li><li data-v-0cfb088f>Membuat portofolio pribadi</li></ul><h4 id="refrensi" data-v-0cfb088f>Refrensi</h4><ul data-v-0cfb088f><li data-v-0cfb088f><a href="https://id.wikipedia.org/wiki/HTML" data-v-0cfb088f>https://id.wikipedia.org/wiki/HTML</a></li><li data-v-0cfb088f><a href="https://www.w3schools.com/tags/tag_doctype.asp" data-v-0cfb088f>https://www.w3schools.com/tags/tag_doctype.asp</a></li><li data-v-0cfb088f><a href="https://id.wikipedia.org/wiki/Pranala" data-v-0cfb088f>https://id.wikipedia.org/wiki/Pranala</a></li><li data-v-0cfb088f><a href="https://html.spec.whatwg.org/multipage/introduction.html#introduction" data-v-0cfb088f>https://html.spec.whatwg.org/multipage/introduction.html#introduction</a></li><li data-v-0cfb088f><a href="https://github.com/jgthms/web-design-in-4-minutes" data-v-0cfb088f>https://github.com/jgthms/web-design-in-4-minutes</a></li><li data-v-0cfb088f><a href="https://github.com/jgthms/marksheet" data-v-0cfb088f>https://github.com/jgthms/marksheet</a><a href="https://www.internetingishard.com/" data-v-0cfb088f>https://www.internetingishard.com/</a> <br data-v-0cfb088f><a href="https://github.com/Asabeneh/30-Days-Of-HTML" data-v-0cfb088f>https://github.com/Asabeneh/30-Days-Of-HTML</a> <br data-v-0cfb088f><a href="https://www.w3schools.com/html/" data-v-0cfb088f>https://www.w3schools.com/html/</a></li><li data-v-0cfb088f><a href="https://www.freecodecamp.org/news/the-css-display-property-display-none-display-table-inline-block-and-more/" data-v-0cfb088f>https://www.freecodecamp.org/news/the-css-display-property-display-none-display-table-inline-block-and-more/</a></li><li data-v-0cfb088f><a href="https://www.internetingishard.com/html-and-css/css-box-model/" data-v-0cfb088f>https://www.internetingishard.com/html-and-css/css-box-model/</a></li><li data-v-0cfb088f><a href="https://www.internetingishard.com/html-and-css/" data-v-0cfb088f>https://www.internetingishard.com/html-and-css/</a></li><li data-v-0cfb088f><a href="https://bigshans.github.io/post/css-box/" data-v-0cfb088f>https://bigshans.github.io/post/css-box/</a> [ css box model ]</li></ul>`,113))}},Db=ca(Rb,[["__scopeId","data-v-0cfb088f"]]),Pb={class:"quiz-container"},Ib={class:"quiz-header"},Nb={class:"progress-bar"},Ob={key:0,class:"explanation-section"},Hb=["innerHTML"],Bb=["innerHTML"],$b=["innerHTML"],Fb=["innerHTML"],Jb={class:"quiz-navigation"},Ub={__name:"KuisHTML",setup(a){const t=sa(!1),s=sa(!1),n=sa(!1),e=sa(!1),l=sa(null),i=sa(!1);function o(){t.value=!t.value,s.value=!1,n.value=!1,e.value=!1,i.value=!0}function r(){s.value=!s.value,t.value=!1,n.value=!1,e.value=!1,i.value=!0}function h(){n.value=!n.value,t.value=!1,s.value=!1,e.value=!1,i.value=!0}function u(){e.value=!e.value,t.value=!1,s.value=!1,n.value=!1,i.value=!0}function v(){t.value=!1,s.value=!1,n.value=!1,e.value=!1,l.value=null,i.value=!1}let j=sa(`
<div class="answer-content 

wrong-answer  <!--Ubah bagian kiri ini, yaitu "wrong-answer" ini menjadi "correct-answer" jika pilihan ganda A adalah benar -->

">
  <div class="answer-header">

    <!-- ================== Edit Diantara ini ============= -->
    <span class="icon">❌</span>
    <h3>SSH - Jawaban Salah</h3>
  </div>
  <p><strong>SSH (Secure Shell)</strong> adalah protokol jaringan yang digunakan untuk akses remote yang aman ke komputer lain, bukan untuk web browsing. SSH biasanya digunakan untuk administrasi server dan transfer file yang aman.</p>
  <div class="correct-info">
    <p><strong>Jawaban yang benar adalah HTTPS</strong> - protokol yang digunakan untuk website seperti FPC.</p>
    <!-- ================== Edit Diantara ini ============= -->
  
    </div>
</div>
`);const k=sa(`
<div class="answer-content 

correct-answer  <!--Ubah bagian kiri ini, yaitu "correct-answer" ini menjadi "wrong-answer" jika pilihan ganda B adalah salah -->

">
  <div class="answer-header">

    <span class="icon">✅</span>
    <h3>HTTPS - Jawaban Benar!</h3>
  </div>
  <p><strong>HTTPS (HyperText Transfer Protocol Secure)</strong> memiliki cara kerja yang hampir sama dengan HTTP, perbedaan adalah di sana terdapat enkripsi TLS (Transport Layer Security) tambahan untuk meningkatkan keamanan jaringan. Penambahan keamanan salah satunya berada di sisi server.</p>
  <div class="extra-info">
    <p>HTTPS memastikan data yang dikirim antara browser dan server terenkripsi dan aman dari intersepsi.</p>
  
    </div>
</div>
`);let M=sa(`
<div class="answer-content 

wrong-answer  <!--Ubah bagian kiri ini, yaitu "wrong-answer" ini menjadi "correct-answer" jika pilihan ganda C adalah benar -->

">
  <div class="answer-header">

    <!-- ================== Edit Diantara ini ============= -->
    <span class="icon">❌</span>
    <h3>FTP - Jawaban Salah</h3>
  </div>
  <p>Protokol ini digunakan untuk transfer file antara komputer, memungkinkan pengguna untuk mengunggah atau men-download file.  </p>
  <div class="correct-info">
    <p><strong>Jawaban yang benar adalah HTTPS</strong> - protokol yang digunakan untuk website seperti FPC.</p>
    <!-- ================== Edit Diantara ini ============= -->

  </div>
</div>
`);const C=sa(`
<div class="answer-content 

wrong-answer  <!--Ubah bagian kiri ini, yaitu "wrong-answer" ini menjadi "correct-answer" jika pilihan ganda D adalah benar -->

">
  <div class="answer-header">

     <!-- ================== Edit Diantara ini ============= -->
    <span class="icon">❌</span>
    <h3>HTTP - Jawaban Salah</h3>
  </div>
  <p>Protokol ini digunakan untuk komunikasi di web, memungkinkan transfer data antara browser web dan server web</p>
  <div class="correct-info">
    <p><strong>Jawaban yang benar adalah HTTPS</strong> - protokol yang digunakan untuk website seperti FPC.</p>
    <!-- ================== Edit Diantara ini ============= -->

  </div>
</div>
`);return(O,y)=>{const I=la("RouterLink");return $(),J("div",Pb,[c("div",Ib,[y[0]||(y[0]=c("div",{class:"quiz-badge"},[c("span",{class:"badge-icon"},"🧠"),c("span",null,"Programming Quiz")],-1)),y[1]||(y[1]=c("h1",{class:"quiz-title"}," Network Protocol Challenge ",-1)),c("div",Nb,[c("div",{class:"progress-fill",style:$s({width:i.value?"100%":"0%"})},null,4)])]),y[8]||(y[8]=c("div",{class:"question-card"},[c("div",{class:"question-number"},"Question"),c("h2",{class:"question-text"},[w(" Protokol jaringan apa yang digunakan oleh platform "),c("span",{class:"highlight"},'"FPC (Free Programming Course)"'),w("? ")])],-1)),c("div",{class:"answers-section"},[c("div",{class:"answers-grid"},[c("button",{class:"answer-btn",onClick:o},y[2]||(y[2]=[c("span",{class:"answer-letter"},"A",-1),c("span",{class:"answer-text"}," SSH ",-1)])),c("button",{class:"answer-btn",onClick:r},y[3]||(y[3]=[c("span",{class:"answer-letter"},"B",-1),c("span",{class:"answer-text"}," HTTPS ",-1)])),c("button",{class:"answer-btn",onClick:h},y[4]||(y[4]=[c("span",{class:"answer-letter"},"C",-1),c("span",{class:"answer-text"}," FTP ",-1)])),c("button",{class:"answer-btn",onClick:u},y[5]||(y[5]=[c("span",{class:"answer-letter"},"D",-1),c("span",{class:"answer-text"}," HTTP ",-1)]))])]),S(Gt,{name:"slide-down"},{default:x(()=>[t.value||s.value||n.value||e.value?($(),J("div",Ob,[t.value?($(),J("div",{key:0,innerHTML:Na(j),class:"explanation-card"},null,8,Hb)):qa("",!0),s.value?($(),J("div",{key:1,innerHTML:k.value,class:"explanation-card"},null,8,Bb)):qa("",!0),n.value?($(),J("div",{key:2,innerHTML:Na(M),class:"explanation-card"},null,8,$b)):qa("",!0),e.value?($(),J("div",{key:3,innerHTML:C.value,class:"explanation-card"},null,8,Fb)):qa("",!0),c("div",{class:"quiz-actions"},[c("button",{onClick:v,class:"reset-btn"},y[6]||(y[6]=[c("span",{class:"btn-icon"},"🔄",-1),w(" Try Again ")]))])])):qa("",!0)]),_:1}),c("nav",Jb,[S(I,{to:"/",class:"nav-link"},{default:x(()=>y[7]||(y[7]=[c("span",{class:"nav-icon"},"🏠",-1),w(" Go to Home ")])),_:1})])])}}},Pi=ca(Ub,[["__scopeId","data-v-fe9c1c0f"]]),Vb={class:"quiz-container"},Kb={class:"quiz-header"},zb={class:"progress-bar"},Wb={key:0,class:"explanation-section"},Gb=["innerHTML"],Yb=["innerHTML"],Qb=["innerHTML"],Xb=["innerHTML"],Zb={class:"quiz-navigation"},af={__name:"Template",setup(a){const t=sa(!1),s=sa(!1),n=sa(!1),e=sa(!1),l=sa(null),i=sa(!1);function o(){t.value=!t.value,s.value=!1,n.value=!1,e.value=!1,i.value=!0}function r(){s.value=!s.value,t.value=!1,n.value=!1,e.value=!1,i.value=!0}function h(){n.value=!n.value,t.value=!1,s.value=!1,e.value=!1,i.value=!0}function u(){e.value=!e.value,t.value=!1,s.value=!1,n.value=!1,i.value=!0}function v(){t.value=!1,s.value=!1,n.value=!1,e.value=!1,l.value=null,i.value=!1}let j=sa(`
<div class="answer-content 

wrong-answer  <!--Ubah bagian kiri ini, yaitu "wrong-answer" ini menjadi "correct-answer" jika pilihan ganda A adalah benar -->

">
  <div class="answer-header">

    <!-- ================== Edit Diantara ini ============= -->
    <span class="icon">❌</span>
    <h3>SSH - Jawaban Salah</h3>
  </div>
  <p><strong>SSH (Secure Shell)</strong> adalah protokol jaringan yang digunakan untuk akses remote yang aman ke komputer lain, bukan untuk web browsing. SSH biasanya digunakan untuk administrasi server dan transfer file yang aman.</p>
  <div class="correct-info">
    <p><strong>Jawaban yang benar adalah HTTPS</strong> - protokol yang digunakan untuk website seperti FPC.</p>
    <!-- ================== Edit Diantara ini ============= -->
  
    </div>
</div>
`);const k=sa(`
<div class="answer-content 

correct-answer  <!--Ubah bagian kiri ini, yaitu "correct-answer" ini menjadi "wrong-answer" jika pilihan ganda B adalah salah -->

">
  <div class="answer-header">

    <span class="icon">✅</span>
    <h3>HTTPS - Jawaban Benar!</h3>
  </div>
  <p><strong>HTTPS (HyperText Transfer Protocol Secure)</strong> memiliki cara kerja yang hampir sama dengan HTTP, perbedaan adalah di sana terdapat enkripsi TLS (Transport Layer Security) tambahan untuk meningkatkan keamanan jaringan. Penambahan keamanan salah satunya berada di sisi server.</p>
  <div class="extra-info">
    <p>HTTPS memastikan data yang dikirim antara browser dan server terenkripsi dan aman dari intersepsi.</p>
  
    </div>
</div>
`);let M=sa(`
<div class="answer-content 

wrong-answer  <!--Ubah bagian kiri ini, yaitu "wrong-answer" ini menjadi "correct-answer" jika pilihan ganda C adalah benar -->

">
  <div class="answer-header">

    <!-- ================== Edit Diantara ini ============= -->
    <span class="icon">❌</span>
    <h3>FTP - Jawaban Salah</h3>
  </div>
  <p>Protokol ini digunakan untuk transfer file antara komputer, memungkinkan pengguna untuk mengunggah atau men-download file.  </p>
  <div class="correct-info">
    <p><strong>Jawaban yang benar adalah HTTPS</strong> - protokol yang digunakan untuk website seperti FPC.</p>
    <!-- ================== Edit Diantara ini ============= -->

  </div>
</div>
`);const C=sa(`
<div class="answer-content 

wrong-answer  <!--Ubah bagian kiri ini, yaitu "wrong-answer" ini menjadi "correct-answer" jika pilihan ganda D adalah benar -->

">
  <div class="answer-header">

     <!-- ================== Edit Diantara ini ============= -->
    <span class="icon">❌</span>
    <h3>HTTP - Jawaban Salah</h3>
  </div>
  <p>Protokol ini digunakan untuk komunikasi di web, memungkinkan transfer data antara browser web dan server web</p>
  <div class="correct-info">
    <p><strong>Jawaban yang benar adalah HTTPS</strong> - protokol yang digunakan untuk website seperti FPC.</p>
    <!-- ================== Edit Diantara ini ============= -->

  </div>
</div>
`);return(O,y)=>{const I=la("RouterLink");return $(),J("div",Vb,[c("div",Kb,[y[0]||(y[0]=c("div",{class:"quiz-badge"},[c("span",{class:"badge-icon"},"🧠"),c("span",null,"Programming Quiz")],-1)),y[1]||(y[1]=c("h1",{class:"quiz-title"}," Network Protocol Challenge ",-1)),c("div",zb,[c("div",{class:"progress-fill",style:$s({width:i.value?"100%":"0%"})},null,4)])]),y[8]||(y[8]=c("div",{class:"question-card"},[c("div",{class:"question-number"},"Question"),c("h2",{class:"question-text"},[w(" Protokol jaringan apa yang digunakan oleh platform "),c("span",{class:"highlight"},'"FPC (Free Programming Course)"'),w("? ")])],-1)),c("div",{class:"answers-section"},[c("div",{class:"answers-grid"},[c("button",{class:"answer-btn",onClick:o},y[2]||(y[2]=[c("span",{class:"answer-letter"},"A",-1),c("span",{class:"answer-text"}," SSH ",-1)])),c("button",{class:"answer-btn",onClick:r},y[3]||(y[3]=[c("span",{class:"answer-letter"},"B",-1),c("span",{class:"answer-text"}," HTTPS ",-1)])),c("button",{class:"answer-btn",onClick:h},y[4]||(y[4]=[c("span",{class:"answer-letter"},"C",-1),c("span",{class:"answer-text"}," FTP ",-1)])),c("button",{class:"answer-btn",onClick:u},y[5]||(y[5]=[c("span",{class:"answer-letter"},"D",-1),c("span",{class:"answer-text"}," HTTP ",-1)]))])]),S(Gt,{name:"slide-down"},{default:x(()=>[t.value||s.value||n.value||e.value?($(),J("div",Wb,[t.value?($(),J("div",{key:0,innerHTML:Na(j),class:"explanation-card"},null,8,Gb)):qa("",!0),s.value?($(),J("div",{key:1,innerHTML:k.value,class:"explanation-card"},null,8,Yb)):qa("",!0),n.value?($(),J("div",{key:2,innerHTML:Na(M),class:"explanation-card"},null,8,Qb)):qa("",!0),e.value?($(),J("div",{key:3,innerHTML:C.value,class:"explanation-card"},null,8,Xb)):qa("",!0),c("div",{class:"quiz-actions"},[c("button",{onClick:v,class:"reset-btn"},y[6]||(y[6]=[c("span",{class:"btn-icon"},"🔄",-1),w(" Try Again ")]))])])):qa("",!0)]),_:1}),c("nav",Zb,[S(I,{to:"/",class:"nav-link"},{default:x(()=>y[7]||(y[7]=[c("span",{class:"nav-icon"},"🏠",-1),w(" Go to Home ")])),_:1})])])}}},Ii=ca(af,[["__scopeId","data-v-1ea4cea2"]]),sf={__name:"vim",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="sample-markdown" data-v-0326eaa6>Sample Markdown</h1><p data-v-0326eaa6>This is some basic, sample markdown.</p><h2 id="second-heading" data-v-0326eaa6>Second Heading</h2><ul data-v-0326eaa6><li data-v-0326eaa6>Unordered lists, and:# Vim cheatsheet</li></ul><ul data-v-0326eaa6><li data-v-0326eaa6>Essentials<h2 id="cursor-movement-normal-visual-mode-" data-v-0326eaa6>Cursor movement (Normal/Visual Mode)</h2></li><li data-v-0326eaa6><code data-v-0326eaa6>h j k l</code> - Arrow keys</li><li data-v-0326eaa6><code data-v-0326eaa6>w / b</code>- Next/previous word</li><li data-v-0326eaa6><code data-v-0326eaa6>W / B</code> - Next/previous word (space seperated)</li><li data-v-0326eaa6><code data-v-0326eaa6>e / ge</code> - Next/previous end of word</li><li data-v-0326eaa6><code data-v-0326eaa6>0 / $</code> - Start/End of line</li><li data-v-0326eaa6><code data-v-0326eaa6>^</code> - First non-blank character of line (same as 0w)</li></ul><h2 id="editing-text" data-v-0326eaa6>Editing text</h2><ul data-v-0326eaa6><li data-v-0326eaa6><code data-v-0326eaa6>i / a</code> - Start insert mode at/after cursor</li><li data-v-0326eaa6><code data-v-0326eaa6>I / A</code> - Start insert mode at the beginning/end of the line</li><li data-v-0326eaa6><code data-v-0326eaa6>o / O</code> - Add blank line below/above current line</li><li data-v-0326eaa6><code data-v-0326eaa6>Esc or Ctrl+[</code> - Exit insert mode</li><li data-v-0326eaa6><code data-v-0326eaa6>d</code> - Delete</li><li data-v-0326eaa6><code data-v-0326eaa6>dd</code> - Delete line</li><li data-v-0326eaa6><code data-v-0326eaa6>c</code> - Delete, then start insert mode</li><li data-v-0326eaa6><code data-v-0326eaa6>cc</code> - Delete line, then start insert mode operators Operators also work in Visual Mode</li><li data-v-0326eaa6><code data-v-0326eaa6>d</code> - Deletes from the cursor to the movement location</li><li data-v-0326eaa6><code data-v-0326eaa6>c</code> - Deletes from the cursor to the movement location, then starts insert mode</li><li data-v-0326eaa6><code data-v-0326eaa6>y</code> - Copy from the cursor to the movement location</li><li data-v-0326eaa6><code data-v-0326eaa6>&gt;</code> - Indent one level</li><li data-v-0326eaa6><code data-v-0326eaa6>&lt;</code> - Unindent one level You can also combine operators with motions. Ex: d$ deletes from the cursor to the end of the line. Marking text (visual mode)</li><li data-v-0326eaa6><code data-v-0326eaa6>v</code> - Start visual mode</li><li data-v-0326eaa6><code data-v-0326eaa6>V</code> - Start linewise visual mode</li><li data-v-0326eaa6><code data-v-0326eaa6>Ctrl+v</code>- Start visual block mode</li><li data-v-0326eaa6><code data-v-0326eaa6>Esc or Ctrl+[</code> - Exit visual mode</li><li data-v-0326eaa6><code data-v-0326eaa6>&gt;&gt;</code> indent (move right) line one shiftwidth</li><li data-v-0326eaa6><code data-v-0326eaa6>&lt;&lt;</code> de-indent (move left) line one shiftwidth</li></ul><h2 id="clipboard" data-v-0326eaa6>Clipboard</h2><ul data-v-0326eaa6><li data-v-0326eaa6><code data-v-0326eaa6>yy</code> - Yank (copy) a line</li><li data-v-0326eaa6><code data-v-0326eaa6>p</code> - Paste after cursor</li><li data-v-0326eaa6><code data-v-0326eaa6>P</code> - Paste before cursor</li><li data-v-0326eaa6><code data-v-0326eaa6>dd</code> - Delete (cut) a line</li><li data-v-0326eaa6><code data-v-0326eaa6>x</code> - Delete (cut) current character</li><li data-v-0326eaa6><code data-v-0326eaa6>X</code> - Delete (cut) previous character</li><li data-v-0326eaa6><code data-v-0326eaa6>d / c</code> - By default, these copy the deleted text Exiting</li><li data-v-0326eaa6><code data-v-0326eaa6>:w</code> - Write (save) the file, but don’t quit</li><li data-v-0326eaa6><code data-v-0326eaa6>:wq</code> - Write (save) and quit</li><li data-v-0326eaa6><code data-v-0326eaa6>:q</code> - Quit (fails if anything has changed)</li><li data-v-0326eaa6><code data-v-0326eaa6>:q!</code> - Quit and throw away changes</li></ul><h2 id="search-replace" data-v-0326eaa6>Search/Replace</h2><ul data-v-0326eaa6><li data-v-0326eaa6><code data-v-0326eaa6>/pattern</code> - Search for pattern</li><li data-v-0326eaa6><code data-v-0326eaa6>?pattern</code> - Search backward for pattern</li><li data-v-0326eaa6><code data-v-0326eaa6>n</code> - Repeat search in same direction</li><li data-v-0326eaa6><code data-v-0326eaa6>N</code> - Repeat search in opposite direction</li><li data-v-0326eaa6><code data-v-0326eaa6>:%s/old/new/g</code> - Replace all old with new throughout file (gn is better though)</li><li data-v-0326eaa6><code data-v-0326eaa6>:%s/old/new/gc</code> - Replace all old with new throughout file with confirmations</li></ul><h2 id="general" data-v-0326eaa6>General</h2><ul data-v-0326eaa6><li data-v-0326eaa6><code data-v-0326eaa6>u</code> - Undo</li><li data-v-0326eaa6><code data-v-0326eaa6>Ctrl+r</code> - Redo</li></ul><h2 id="advanced" data-v-0326eaa6>Advanced</h2><p data-v-0326eaa6>Cursor movement</p><ul data-v-0326eaa6><li data-v-0326eaa6><code data-v-0326eaa6>Ctrl+d</code> - Move down half a page</li><li data-v-0326eaa6><code data-v-0326eaa6>Ctrl+u</code> - Move up half a page</li><li data-v-0326eaa6><code data-v-0326eaa6>}</code> - Go forward by paragraph (the next blank line)</li><li data-v-0326eaa6><code data-v-0326eaa6>{</code> - Go backward by paragraph (the next blank line)</li><li data-v-0326eaa6><code data-v-0326eaa6>gg</code> - Go to the top of the page</li><li data-v-0326eaa6><code data-v-0326eaa6>G</code> - Go the bottom of the page</li><li data-v-0326eaa6><code data-v-0326eaa6>: [num] [enter]</code> - Go to that line in the document</li><li data-v-0326eaa6><code data-v-0326eaa6>ctrl+e / ctrl+y</code>- Scroll down/up one line</li></ul><h2 id="character-search" data-v-0326eaa6>Character search</h2><ul data-v-0326eaa6><li data-v-0326eaa6><code data-v-0326eaa6>f [char]</code> - Move forward to the given char</li><li data-v-0326eaa6><code data-v-0326eaa6>F [char]</code> - Move backward to the given char</li><li data-v-0326eaa6><code data-v-0326eaa6>t [char]</code> - Move forward to before the given char</li><li data-v-0326eaa6><code data-v-0326eaa6>T [char]</code> - Move backward to before the given char</li><li data-v-0326eaa6><code data-v-0326eaa6>; / ,</code> - Repeat search forwards/backwards</li></ul><h2 id="editing-text" data-v-0326eaa6>Editing text</h2><ul data-v-0326eaa6><li data-v-0326eaa6><code data-v-0326eaa6>J</code> - Join line below to the current one</li><li data-v-0326eaa6><code data-v-0326eaa6>r</code> [char] - Replace a single character with the specified char (does not use Insert mode)</li></ul><h2 id="visual-mode" data-v-0326eaa6>Visual mode</h2><ul data-v-0326eaa6><li data-v-0326eaa6><code data-v-0326eaa6>O</code> - Move to other corner of block</li><li data-v-0326eaa6><code data-v-0326eaa6>o</code> - Move to other end of marked area</li></ul><p data-v-0326eaa6>File Tabs</p><ul data-v-0326eaa6><li data-v-0326eaa6><code data-v-0326eaa6>:e</code> filename - Edit a file</li><li data-v-0326eaa6><code data-v-0326eaa6>:tabe</code> - Make a new tab</li><li data-v-0326eaa6><code data-v-0326eaa6>gt</code> - Go to the next tab</li><li data-v-0326eaa6><code data-v-0326eaa6>gT</code> - Go to the previous tab</li><li data-v-0326eaa6><code data-v-0326eaa6>:vsp</code> - Vertically split windows</li><li data-v-0326eaa6><code data-v-0326eaa6>ctrl+ws</code> - Split windows horizontally</li><li data-v-0326eaa6><code data-v-0326eaa6>ctrl+wv</code> - Split windows vertically</li><li data-v-0326eaa6><code data-v-0326eaa6>ctrl+ww</code> - Switch between windows</li><li data-v-0326eaa6><code data-v-0326eaa6>ctrl+wq</code> - Quit a window</li></ul><h2 id="marks" data-v-0326eaa6>Marks</h2><p data-v-0326eaa6>Marks allow you to jump to designated points in your code.</p><ul data-v-0326eaa6><li data-v-0326eaa6><code data-v-0326eaa6>m{a-z}</code> - Set mark {a-z} at cursor position A capital mark {A-Z} sets a global mark and will work between files -<code data-v-0326eaa6>&#39;{a-z}</code>- Move the cursor to the start of the line where the mark was set -<code data-v-0326eaa6>&#39;&#39;</code> - Go back to the previous jump location Text Objects Say you have def (arg1, arg2, arg3), where your cursor is somewhere in the middle of the parenthesis. di( deletes everything between the parenthesis. That says “change everything inside the nearest parenthesis”. Without text objects, you would need to do T(dt). Learn more General . - Repeat last command Ctrl+r + 0 in insert mode inserts the last yanked text (or in command mode) gv - reselect (select last selected block of text, from visual mode) % - jumps between matching () or {}</li></ul><h2 id="reference" data-v-0326eaa6>Reference</h2><p data-v-0326eaa6>sopurce: <a href="https://vimsheet.com/" data-v-0326eaa6>https://vimsheet.com/</a></p><ul data-v-0326eaa6><li data-v-0326eaa6><a href="https://vim.rtorr.com/" data-v-0326eaa6>https://vim.rtorr.com/</a><ol data-v-0326eaa6><li data-v-0326eaa6>One</li><li data-v-0326eaa6>Two</li><li data-v-0326eaa6>Three</li><li data-v-0326eaa6>More</li></ol></li></ul><blockquote data-v-0326eaa6><p data-v-0326eaa6>Blockquote</p></blockquote><p data-v-0326eaa6>And <strong data-v-0326eaa6>bold</strong>, <em data-v-0326eaa6>italics</em>, and even <em data-v-0326eaa6>italics and later <strong data-v-0326eaa6>bold</strong></em>. Even <del data-v-0326eaa6>strikethrough</del>. <a href="https://markdowntohtml.com" data-v-0326eaa6>A link</a> to somewhere.</p><p data-v-0326eaa6>And code highlighting:</p><pre data-v-0326eaa6><code class="lang-js" data-v-0326eaa6><span class="hljs-keyword" data-v-0326eaa6>var</span> foo = <span class="hljs-string" data-v-0326eaa6>&#39;bar&#39;</span>;

<span class="hljs-function" data-v-0326eaa6><span class="hljs-keyword" data-v-0326eaa6>function</span> <span class="hljs-title" data-v-0326eaa6>baz</span><span class="hljs-params" data-v-0326eaa6>(s)</span> </span>{
   <span class="hljs-keyword" data-v-0326eaa6>return</span> foo + <span class="hljs-string" data-v-0326eaa6>&#39;:&#39;</span> + s;
}
</code></pre><p data-v-0326eaa6>Or inline code like <code data-v-0326eaa6>var foo = &#39;bar&#39;;</code>.</p><p data-v-0326eaa6>Or an image of bears</p><p data-v-0326eaa6><img src="http://placebear.com/200/200" alt="bears" data-v-0326eaa6></p><p data-v-0326eaa6>The end ...</p>`,38)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},Ni=ca(sf,[["__scopeId","data-v-0326eaa6"]]),tf={__name:"git",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="version-control-git" data-v-ee6e1d83>Version Control Git</h1><p data-v-ee6e1d83>Git adalah version control yang digunakan untuk melakukan tracking perubahan (sama seperti save data pada game) pada folder project. Dengan git kita bisa melihat siapa yang melakukan perubahan, kapan dilakukan perubahan, dan apa yang dirubah. </p><p data-v-ee6e1d83>Version control system adalah software yang digunakan untuk membantu kita mengetahui history perubahan pada project. Dengan ini kita bisa melihat dan membandingkan perubahan dari file. Dan mempermudah kolaborasi dengan orang lain dengan lebih efektif. </p><p data-v-ee6e1d83>Git mengunakan sistem distribusi, yaitu memperbolehkan kita untuk melakukan perubahan saat offline dan &quot;merge&quot; perubahan tersebut saat kita sudah siap dan online. Dengan ini kita sebagai developer tidak perlu terlalu takut jika tidak ada internet. </p><p data-v-ee6e1d83>Beberapa command line git yang paling sering digunakan:</p><ul data-v-ee6e1d83><li data-v-ee6e1d83><code data-v-ee6e1d83>git init</code> Sebagai pembuka git (mengaktifkan git) pada folder </li><li data-v-ee6e1d83><code data-v-ee6e1d83>git add</code> menambahkan perubahan pada &quot;stagin area&quot;</li><li data-v-ee6e1d83><code data-v-ee6e1d83>git commit</code> menulis nama untuk save data | menulis judul / alasan perubahan </li><li data-v-ee6e1d83><code data-v-ee6e1d83>git push</code> upload repository git ke internet. </li><li data-v-ee6e1d83><code data-v-ee6e1d83>git pull</code> mendownload perubahan dari repository yang berada dari luar </li><li data-v-ee6e1d83><code data-v-ee6e1d83>git branch</code> membuat &quot;branch&quot; baru, dan beberapa hal tentang branch </li><li data-v-ee6e1d83><p data-v-ee6e1d83><code data-v-ee6e1d83>git merge</code> menggabungkan branch 1 dan yang lainnya</p><blockquote data-v-ee6e1d83><p data-v-ee6e1d83>Merge is best used when the target branch is supposed to be shared.</p></blockquote></li></ul><p data-v-ee6e1d83>Git juga dilengkapi fitur untuk melakukan pull request (untuk melakukan kolaborasi dengan orang lain) dan code reviews (melihat / membadingkan code). Dengan mode ini kita akan lebih mudah untuk bekerja dengan orang lain.</p><p data-v-ee6e1d83>Secara garis besar git adalah alat yang sangat bermanfaat untuk kita secara jangka panjang. </p><h2 id="git-dan-github" data-v-ee6e1d83>Git dan github</h2><p data-v-ee6e1d83>Git adalah suatu version control system yang dirancang untuk menangani berbagai macam bentuk project. Pengembangan awal pada tahun 2005 oleh Linus Torvalds, Git menjadi titik awal dalam version control pada source code.</p><p data-v-ee6e1d83>Git dapat membantu kita untuk melacak perubahan pada &quot;source code&quot;, dan bisa membantu kita untuk kembali pada versi sebelumnya jika dibuthkan. Ini adalah fungsi yang sangat dibutuhkan oleh para developer untuk membantu mereka mengerjakan semua pekerjaan dengan sangat efektif. </p><p data-v-ee6e1d83>Pada sisi lain terdapat github yang menjadi sistem berbasis hosting untuk project-project &quot;source code&quot;. Github dimulai pada tahun 20008, github menjadi salah satu platfrom hosting yang sangat reliable untuk melakukan colaborasi dengan banyak project, penyelesaian masalah, dan mengelolah code.</p><p data-v-ee6e1d83>Pada github, terdapat fitur &quot;Pull Request&quot; dimana kita sebagai user bisa melakukan collaborasi, dan akan menunggu hasil collaborasi diterima oleh owner. Oleh karena fitur tersebut, colaborasi pada github bisa memiliki aturan sesuai dengan apa yang kita ingin kan. </p><h2 id="mengenai-savepoint" data-v-ee6e1d83>Mengenai savepoint</h2><p data-v-ee6e1d83>Konsep sederhana dari Git adalah savePoint. </p><p data-v-ee6e1d83>Dimana pada suatu game, kita bisa melakukan savepoint untuk menyimpan progress kita, dan kita bisa kembali ke save point sebelumnya jika character yang kita gunakan kalah, atau alasan lainnya. </p><p data-v-ee6e1d83>Konsep pada git juga sama seperti itu.</p><p data-v-ee6e1d83>dengan, kita bisa melihat &quot;history&quot; atau id savepoint sebelumnya.</p><pre data-v-ee6e1d83><code data-v-ee6e1d83>git <span class="hljs-built_in" data-v-ee6e1d83>log</span>
</code></pre><p data-v-ee6e1d83>dengan, kita bisa berpindah ke savepoint sebelumnya. </p><pre data-v-ee6e1d83><code data-v-ee6e1d83>git checkout [commit_id] <span class="hljs-comment" data-v-ee6e1d83># Manual </span>
git checkout <span class="hljs-keyword" data-v-ee6e1d83>master</span> <span class="hljs-title" data-v-ee6e1d83># atau</span> main, untuk kembali ke savepoint paling baru
</code></pre><h2 id="mengenai-rebase" data-v-ee6e1d83>Mengenai Rebase</h2><p data-v-ee6e1d83>Jika terdapat dua perubahan, semisal pada local dan repository.</p><p data-v-ee6e1d83>terdapat conflict history dimana bagian repository telah berada pada versi selanjutnya, sedangkan bagian local tertinggal.</p><p data-v-ee6e1d83>Kita bisa menggunakan perintah</p><pre data-v-ee6e1d83><code data-v-ee6e1d83>git <span class="hljs-keyword" data-v-ee6e1d83>add</span><span class="bash" data-v-ee6e1d83> .
</span>git commit -am <span class="hljs-string" data-v-ee6e1d83>&#39;new&#39;</span>
git pull --rebase
</code></pre><p data-v-ee6e1d83>dimana selama tidak terdapat conflict pada baris code, antara bagian baru dan lama maka masalah akan dapat diselesaikan dengan sangata mudah.</p><h2 id="mengenai-rebase-jika-terdapat-conflict-pada-baris-" data-v-ee6e1d83>Mengenai Rebase ( Jika terdapat conflict pada baris )</h2><p data-v-ee6e1d83>mereka akan secara otomatis akan memberikan tanda seperti ini. dimana terdapat informasi bagian head (Repository) dan local diberi tanda pada file yang kita upload. </p><p data-v-ee6e1d83>Semisal pada baris ke 20, terdapat dua versi code. Terdapat yang baru dan lama.</p><pre data-v-ee6e1d83><code data-v-ee6e1d83>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
<span class="hljs-section" data-v-ee6e1d83>halo saya mau conflict disini
=======</span>
halo saya dari branch belakang apa bisa
&gt;&gt;&gt;&gt;&gt;&gt;&gt; ca838f0 (conf)
</code></pre><h2 id="perbedaan-rebase-dan-merge" data-v-ee6e1d83>Perbedaan Rebase dan Merge</h2><ul data-v-ee6e1d83><li data-v-ee6e1d83><code data-v-ee6e1d83>git pull --rebase</code> adalah fungsi rebase</li><li data-v-ee6e1d83><code data-v-ee6e1d83>git pull --no-rebase</code> adalah fungsi merge</li></ul><table data-v-ee6e1d83><thead data-v-ee6e1d83><tr data-v-ee6e1d83><th data-v-ee6e1d83>Rebase</th><th data-v-ee6e1d83>Merge</th></tr></thead><tbody data-v-ee6e1d83><tr data-v-ee6e1d83><td data-v-ee6e1d83>Mereka akan menulis ulang history</td><td data-v-ee6e1d83>Mereka akan menyimpan history</td></tr><tr data-v-ee6e1d83><td data-v-ee6e1d83>Sangat disarankan untuk menyelesaikan masalah private</td><td data-v-ee6e1d83>sangat disarankan untuk menyelesaikan masalah public</td></tr><tr data-v-ee6e1d83><td data-v-ee6e1d83>conflict pada satu branch yang sama</td><td data-v-ee6e1d83>conflict pada branch yang berbeda</td></tr></tbody></table><p data-v-ee6e1d83>Kapan mereka harus digunakan?</p><ul data-v-ee6e1d83><li data-v-ee6e1d83>Terkadang pada open source mereka menambahkan aturan khusus untuk collaborator. untuk menggunakan <code data-v-ee6e1d83>rebase</code> agar mendapatkan git linear clean history</li><li data-v-ee6e1d83>Terkadang pada project yang membutuhkan banyak collaborator akan membutuhkan git merge.</li></ul><h2 id="cara-manual-alternative-repot-dari-rebase" data-v-ee6e1d83>Cara manual alternative repot dari Rebase</h2><p data-v-ee6e1d83>Semisal terdapat conflict antara local dan repository. kita bisa lakukan</p><ul data-v-ee6e1d83><li data-v-ee6e1d83>copy code yang kita rasa penting dari locale</li><li data-v-ee6e1d83>masukan code tersebut secara manual kedalam repository</li><li data-v-ee6e1d83>hapus keseluruhan code</li><li data-v-ee6e1d83>lalu clone code dari repository</li></ul><hr data-v-ee6e1d83><h1 id="uji-coba-merge" data-v-ee6e1d83>Uji coba Merge</h1><hr data-v-ee6e1d83><ul data-v-ee6e1d83><li data-v-ee6e1d83>Buat satu repo kosong</li><li data-v-ee6e1d83>clone repo</li><li data-v-ee6e1d83>buat branch baru <code data-v-ee6e1d83>git branch [branch-name]</code></li><li data-v-ee6e1d83>pindah branch <code data-v-ee6e1d83>git checkout [branch-name]</code></li><li data-v-ee6e1d83>lakukan perubahan data, semisal pada README.md</li><li data-v-ee6e1d83>push branch baru tersebut, jika error tambahkan <code data-v-ee6e1d83>git push --set-upstream origin [branch-name]</code></li><li data-v-ee6e1d83>kembali ke branch <code data-v-ee6e1d83>main</code>, dan check apakah terdapat perubahan atau belum (locale)</li><li data-v-ee6e1d83>jika belum ada perubahan, lakukan <code data-v-ee6e1d83>git merge [branch-name]</code> maka akan melakukan update</li><li data-v-ee6e1d83>lalu <code data-v-ee6e1d83>push</code> bracnh main</li></ul><h2 id="uji-coba-kedua" data-v-ee6e1d83>Uji coba kedua</h2><p data-v-ee6e1d83>menyelesaikan masalah merge, </p><ul data-v-ee6e1d83><li data-v-ee6e1d83>pada branch main, lakukan perubahan pada file README</li><li data-v-ee6e1d83>pada [branch-name] lakukan perubahan pada file yang sama</li><li data-v-ee6e1d83>lakukan pull request dari branch baru, dan lihat cara penyelesaian nya.</li></ul><h3 id="reference" data-v-ee6e1d83>Reference</h3><ul data-v-ee6e1d83><li data-v-ee6e1d83><p data-v-ee6e1d83><a href="https://www.simplilearn.com/git-rebase-vs-merge-article#:~:text=Git%20merge%20keeps%20the%20commit,more%20organized%2C%20linear%20project%20history" data-v-ee6e1d83>https://www.simplilearn.com/git-rebase-vs-merge-article#:~:text=Git%20merge%20keeps%20the%20commit,more%20organized%2C%20linear%20project%20history</a>.</p></li><li data-v-ee6e1d83><p data-v-ee6e1d83><a href="https://binarysiddhant.hashnode.dev/demystifying-git-pull-rebase-and-git-pull-no-rebase" data-v-ee6e1d83>https://binarysiddhant.hashnode.dev/demystifying-git-pull-rebase-and-git-pull-no-rebase</a></p></li></ul>`,48)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},nf=ca(tf,[["__scopeId","data-v-ee6e1d83"]]),ef={__name:"html1",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<p data-v-b9cbcecc><img src="#" alt="image02" data-v-b9cbcecc></p><p data-v-b9cbcecc>HTML ( HyperText Markup Language ) adalah suatu instruksi untuk menulis document agar bisa ditampilkan ke dalam web browser. web browser akan mengambil file HTML dari penyimpanan local dan akan diubah menjadi halaman website.</p><p data-v-b9cbcecc>Dalam Pembuatan website terdapat setidaknya 3 komponen Pembangun:</p><ul data-v-b9cbcecc><li data-v-b9cbcecc>Kerangka tubuh: HTML</li><li data-v-b9cbcecc>Fungsi Tubuh: JavaScript</li><li data-v-b9cbcecc>Bagian paling luar tubuh : CSS</li></ul><p data-v-b9cbcecc>Secara garis besar kita dapat bayangkan HTML adalah bagian yang akan menjadi penompang dari text dan gambar, JavaScript adalah bagian yang menghasilkan suatu respon akan sesuatu, dan CSS adalah bagian yang akan mengatur tampilan mereka.</p><h2 id="agar-dapat-menguasai" data-v-b9cbcecc>Agar dapat menguasai</h2><p data-v-b9cbcecc>Dalam penggunaan html, css terdapat opsi untuk menggunakan framework untuk mempercepat proses pembuatan. bagi yang baru mulai belajar diharapkan jangan terlalu mengandalkan framework dalam pembuatan halaman website karena itu akan menghasilkan kebiasaan yang buruk dalam problem solving (Programing Unpas).</p><p data-v-b9cbcecc>Contoh mudahnya: Dalam matematika terdapat banyak trick cepat dalam penyelesaian suatu masalah, akan tetapi itu tidak baik karena jika ketemu masalah yang berbeda akan menjadi sulit nanti.</p><p data-v-b9cbcecc>Bagi yang masih belum tau Framework. Framework adalah adalah bentuk pondasi yang telah jadi dalam membangun sistem. Dengan framework kita tidak perlu membangun sistem sepenuhnya dari awal (<a href="https://www.codecademy.com/resources/blog/what-is-a-framework/#:~:text=A%20framework%20is%20a%20structure,you%27re%20building%20a%20house" data-v-b9cbcecc>https://www.codecademy.com/resources/blog/what-is-a-framework/#:~:text=A%20framework%20is%20a%20structure,you%27re%20building%20a%20house</a>.).</p><p data-v-b9cbcecc>Selain itu kita juga harus berani mencoba dan berlatih dalam pembuatan website. Sebuah kesalahan dalam berusaha adalah hal yang mutlak tidak ada yang bisa lari dari itu. Oleh karena itu jika ingin menguasai Pembuatan website maka harus berani mencoba.</p><h2 id="peralatan-membantu" data-v-b9cbcecc>Peralatan membantu</h2><p data-v-b9cbcecc>Dalam Pemrograman seperti website diperlukan alat untuk membantu pembuatan website. Alat tersebut terkadang berbentuk sabagai hardware maupun software.</p><p data-v-b9cbcecc>Tetapi perlu kita wajib pahami adalah sebuah alat hanyalah alat, yang terpenting adalah brainware yang akan menggunakan alat tersebut. </p><p data-v-b9cbcecc>Contoh software yang sering digunakan adalah:</p><ul data-v-b9cbcecc><li data-v-b9cbcecc>Vscode</li><li data-v-b9cbcecc>Atom text editor</li><li data-v-b9cbcecc>Notepad ++</li></ul><p data-v-b9cbcecc>Software Browser:</p><ul data-v-b9cbcecc><li data-v-b9cbcecc>Google Chrome</li><li data-v-b9cbcecc>Opera</li><li data-v-b9cbcecc>Mozila Firefox</li></ul><p data-v-b9cbcecc>Hardware Pendukung:</p><ul data-v-b9cbcecc><li data-v-b9cbcecc>Monitor dengan minimal resolusi 1920 * 1080</li><li data-v-b9cbcecc>2 Monitor untuk mempermudah pengerjaan</li></ul><p data-v-b9cbcecc>Dalam pengerjaan halaman website alangkah baiknya untuk membuka halaman website dan text editor secara continue. Setiap kali kita telah melakukan perubahan bisa langsung di lihat hasilnya di web browser. </p><h2 id="structur-html" data-v-b9cbcecc>Structur HTML</h2><p data-v-b9cbcecc>Dalam pembuatan style document website, terdapat suatu structur yang paling populer.</p><p data-v-b9cbcecc>SRC: <a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure" data-v-b9cbcecc>https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure</a></p><ul data-v-b9cbcecc><li data-v-b9cbcecc><p data-v-b9cbcecc>Header: Adalah garis besar yang berada di tempat paling atas document. Biasannya berisi dengan logo dan menu.</p></li><li data-v-b9cbcecc><p data-v-b9cbcecc>Navigation Bar: adalah bagian yang berfungsi untuk menjadi peta petunjuk pada website. Biasannya berbentuk menu yang menyediakan fitur dan layanan website tersebut. </p></li><li data-v-b9cbcecc><p data-v-b9cbcecc>main content: </p></li></ul><p data-v-b9cbcecc>Adalah bagian paling penting dalam sebuah website, yang berisi mengenai layanan atau topic yang dibahas pada website. </p><p data-v-b9cbcecc>Sebagai contoh: pada youtube main content adalah bagian dimana kita melihat video yang sedang berjalan.</p><ul data-v-b9cbcecc><li data-v-b9cbcecc>Sidebar :</li></ul><p data-v-b9cbcecc>Adalah bagian yang berisi informasi tambahan ataupun pilihan layanan lainnya. Biasannya sidebar berada di sebelah main content.</p><p data-v-b9cbcecc>Sebagai contoh: pada youtube sidebar adalah bagian kanan video. Sidebar tersebut berisi pilihan video lainnya yang bisa kita tonton.</p><ul data-v-b9cbcecc><li data-v-b9cbcecc>footer:</li></ul><p data-v-b9cbcecc>Biasannya footer berupa garis paling bawah didalam halaman website. Footer berisi mengenai informasi kepimilikan dan informasi kontak dari pemilik website. </p><h2 id="table-pada-html" data-v-b9cbcecc>Table pada HTML</h2><table data-v-b9cbcecc><thead data-v-b9cbcecc><tr data-v-b9cbcecc><th data-v-b9cbcecc>NIM</th><th data-v-b9cbcecc>Name</th><th data-v-b9cbcecc>Major</th></tr></thead><tbody data-v-b9cbcecc><tr data-v-b9cbcecc><td data-v-b9cbcecc>0123</td><td data-v-b9cbcecc>Rangga</td><td data-v-b9cbcecc>Bahasa inggris</td></tr><tr data-v-b9cbcecc><td data-v-b9cbcecc>0124</td><td data-v-b9cbcecc>Wahyu</td><td data-v-b9cbcecc>Sistem Informasi</td></tr><tr data-v-b9cbcecc><td data-v-b9cbcecc>0125</td><td data-v-b9cbcecc>Atmoko</td><td data-v-b9cbcecc>Pendidikan matematika</td></tr></tbody></table><p data-v-b9cbcecc>Diatas adalah contoh dari table. Didalam table terdapat kolom dan baris. </p><p data-v-b9cbcecc>Kolom adalah bagian content yang vertical dari atas ke bawah, Contoh: Nim, Name, Major. </p><p data-v-b9cbcecc>Baris adalah bagian conten yang horizontal lurus ke kanan, Contoh: rangga, wahyu, atmoko.</p><p data-v-b9cbcecc>COntoh code table pada HTML</p><pre data-v-b9cbcecc><code data-v-b9cbcecc><span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>table</span>&gt;</span>
    <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>tr</span>&gt;</span> 
        <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span> NIM <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span>
        <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span> Name <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span>
        <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span> Major <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span>
    <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>tr</span>&gt;</span>

    <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>tr</span>&gt;</span>
        <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span> 0123 <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span>
        <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span> Rangga <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span>
        <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span> Bahasa INggris <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span>
    <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>tr</span>&gt;</span>

    <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>tr</span>&gt;</span> 
        <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span> 0124 <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span>
        <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span> wahyu <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span>
        <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span> Sistem Informasi <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span>
    <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>tr</span>&gt;</span>

    <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>tr</span>&gt;</span> 
        <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span> 0125 <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span>
        <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span> Atmoko <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span>
        <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span> Pendidikan Matematika <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>td</span>&gt;</span>
    <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>tr</span>&gt;</span>
<span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>table</span>&gt;</span>
</code></pre><h2 id="form-pada-html" data-v-b9cbcecc>Form pada html</h2><h2 id="pentingnya-semantic-pada-html" data-v-b9cbcecc>Pentingnya semantic pada html</h2><p data-v-b9cbcecc>Semantic element pada HTML digunakan untuk memberikan makna pada content yang dimiliki. Fungsi utama adalah untuk memberi tau developer dan user pemahaman lebih mengenai fungsi conten dan tujuannya. Selain itu semantic pada website akan dapat meningkatkan hasil Search Engine Optimization(SEO). </p><p data-v-b9cbcecc>Contoh Element Semantic <a href="https://www.petanikode.com/html-semantik/" data-v-b9cbcecc>https://www.petanikode.com/html-semantik/</a>:</p><ul data-v-b9cbcecc><li data-v-b9cbcecc><code data-v-b9cbcecc>&lt;article&gt;</code></li><li data-v-b9cbcecc><code data-v-b9cbcecc>&lt;aside&gt;</code></li><li data-v-b9cbcecc><code data-v-b9cbcecc>&lt;details&gt;</code></li><li data-v-b9cbcecc><code data-v-b9cbcecc>&lt;figcaption&gt;</code></li><li data-v-b9cbcecc><code data-v-b9cbcecc>&lt;figure&gt;</code></li><li data-v-b9cbcecc><code data-v-b9cbcecc>&lt;footer&gt;</code></li><li data-v-b9cbcecc><code data-v-b9cbcecc>&lt;main&gt;</code></li><li data-v-b9cbcecc><code data-v-b9cbcecc>&lt;nav&gt;</code></li></ul><h2 id="proses-pembuatan" data-v-b9cbcecc>Proses pembuatan</h2><p data-v-b9cbcecc>Fitur HTML:</p><ol data-v-b9cbcecc><li data-v-b9cbcecc>Menulis text</li><li data-v-b9cbcecc>Memberikan ukuran dan ketebalan kedalam text</li><li data-v-b9cbcecc>Membuat table</li><li data-v-b9cbcecc>memanbahkan gambar </li><li data-v-b9cbcecc>Menambahkan Pranala ( lebih kita kenal dengan embedded link )</li><li data-v-b9cbcecc>Menambahkan data suara</li><li data-v-b9cbcecc>menambahkan Form yang dapat diisi</li></ol><h5 id="contoh-source-code-html" data-v-b9cbcecc>Contoh source code HTML</h5><pre data-v-b9cbcecc><code data-v-b9cbcecc><span class="hljs-meta" data-v-b9cbcecc>&lt;!doctype html&gt;</span>
<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>html</span> <span class="hljs-attr" data-v-b9cbcecc>lang</span>=<span class="hljs-string" data-v-b9cbcecc>&quot;en&quot;</span>&gt;</span>
<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>head</span>&gt;</span>
  <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>title</span>&gt;</span>Homepage<span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>title</span>&gt;</span>
<span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>head</span>&gt;</span>
<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>body</span>&gt;</span>
  <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>p</span>&gt;</span>Hello, World!<span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>p</span>&gt;</span>
<span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>body</span>&gt;</span>
<span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>html</span>&gt;</span>
</code></pre><p data-v-b9cbcecc>Mari kita pahami sedikit. </p><ul data-v-b9cbcecc><li data-v-b9cbcecc><code data-v-b9cbcecc>&lt;!doctype html&gt;</code> ini bukan HTML tag, dibutuhkan untuk memberi informasi kepada web browser tentang document apa ini.</li><li data-v-b9cbcecc><code data-v-b9cbcecc>&lt;html lang=&#39;en&gt;</code> Ini untuk membantu mesin pencari dan web browser dalam mengelola. Untuk informasi lebih banyak <a href="https://www.w3schools.com/tags/ref_language_codes.asp" data-v-b9cbcecc>https://www.w3schools.com/tags/ref_language_codes.asp</a>.</li><li data-v-b9cbcecc><code data-v-b9cbcecc>&lt;head&gt; &lt;/head&gt;</code> data yang biasannya berada di dalamnya adalah title, css-source code, javascript-source code, &#39;META&#39; data, data font style dan lain-lain.</li><li data-v-b9cbcecc><code data-v-b9cbcecc>&lt;body&gt; &lt;/body&gt;</code> TAG ini digunakan untuk menyimpan informasi atau data sebelum di olah menjadi halaman website.</li><li data-v-b9cbcecc><code data-v-b9cbcecc>&lt;p&gt; &lt;/p&gt;</code> TAG ini digunakan untuk menulis paragraph biasa didalam document.</li></ul><h2 id="apa-itu-html-element-" data-v-b9cbcecc>Apa itu HTML Element?</h2><p data-v-b9cbcecc>Html element dimulai dari tag pertama, beberapa content, dan diakhiri dengan tag penutup. Html <strong data-v-b9cbcecc>element</strong> adalah semua yang berada dari tag pembuka dan penutup.</p><p data-v-b9cbcecc><strong data-v-b9cbcecc>nested HTML Elment</strong> adalah sebuah element yang memiliki element lain didalam nya. Contoh: </p><pre data-v-b9cbcecc><code data-v-b9cbcecc><span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>body</span>&gt;</span>

<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>h1</span>&gt;</span>My First Heading<span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>h1</span>&gt;</span>
<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>p</span>&gt;</span>My first paragraph.<span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>p</span>&gt;</span>

<span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>body</span>&gt;</span>
</code></pre><blockquote data-v-b9cbcecc><p data-v-b9cbcecc>Untuk beberapa element, terkadang dipanggil sebagai empty element &quot;<br data-v-b9cbcecc>&quot; karena tidak memiliki content dan tag penutup </p></blockquote><p data-v-b9cbcecc>HTML tidak melakukan &quot;CaseSensitive&quot;, Anda bisa menggunakan huruf besar atau kecil sesuka hati, tetapi usahakan untuk consistent, agar code terlihat rapih.</p><p data-v-b9cbcecc>Pada structur page HTML, semua yang berada didalam ; akan ditampilkan pada halaman browser. Sedangkan semua content yang berada didalam element akan muncul pada browser title</p><h2 id="html-attribute" data-v-b9cbcecc>HTML attribute</h2><p data-v-b9cbcecc>Semua element HTML bisa memiliki attribute, untuk memberikan instruksi tambahan atau informasi tambahan. </p><ul data-v-b9cbcecc><li data-v-b9cbcecc>Attribute selalu ditambahkan pada tag pembuka </li><li data-v-b9cbcecc>attribute biasannya ber format <code data-v-b9cbcecc>attribute_name = &quot;value&quot;</code> Contoh attribute pada HTML<pre data-v-b9cbcecc><code data-v-b9cbcecc>&lt;<span class="hljs-selector-tag" data-v-b9cbcecc>img</span> src=<span class="hljs-string" data-v-b9cbcecc>&quot;img_mountain.jpg&quot;</span> alt=<span class="hljs-string" data-v-b9cbcecc>&quot;this is himalaya mountain&quot;</span>&gt;
</code></pre></li></ul><p data-v-b9cbcecc>Dalam SRC secara online, URL memiliki dua tipe:</p><ul data-v-b9cbcecc><li data-v-b9cbcecc>Absolute URL - adalah link yang didapatkan dari platfrom hosted atau website yang bukan milik kita Contoh: saya mengunakan link gambar yang berada di wikipedia untuk menjadi sampul halaman website blogspot saya </li><li data-v-b9cbcecc>Relative URL - adalah link yang image / data yang sudah ada di dalam website kita sendiri</li></ul><h4 id="breakdown-struktur-link" data-v-b9cbcecc>BreakDown Struktur link</h4><p data-v-b9cbcecc><code data-v-b9cbcecc>https://github.com/playmakermz/warkop-website/blob/main/document/html.md</code></p><ul data-v-b9cbcecc><li data-v-b9cbcecc>Schema : &quot;https://&quot;</li><li data-v-b9cbcecc>Domain : &quot;github.com&quot;</li><li data-v-b9cbcecc>Path : &quot;/playmakermz/warkop-website/blob/main/document/html.md&quot;</li></ul><h2 id="penggunaan-css" data-v-b9cbcecc>Penggunaan CSS</h2><ul data-v-b9cbcecc><li data-v-b9cbcecc><strong data-v-b9cbcecc>inline</strong> - dengan menggunakan <code data-v-b9cbcecc>style</code> attribute didadalam element HTML</li><li data-v-b9cbcecc><strong data-v-b9cbcecc>Internal</strong> - dengan menggunakan element <code data-v-b9cbcecc>&lt;style&gt;</code> didalam <code data-v-b9cbcecc>&lt;head&gt;</code></li><li data-v-b9cbcecc><strong data-v-b9cbcecc>External</strong> - dengan menggunakan element <code data-v-b9cbcecc>&lt;link&gt;</code> pada <code data-v-b9cbcecc>&lt;head&gt;</code> untuk merujuk ke source file css</li></ul><pre data-v-b9cbcecc><code data-v-b9cbcecc><span class="hljs-meta" data-v-b9cbcecc>&lt;!DOCTYPE html&gt;</span>
<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>html</span>&gt;</span>
<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>head</span>&gt;</span>
  <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>link</span> <span class="hljs-attr" data-v-b9cbcecc>rel</span>=<span class="hljs-string" data-v-b9cbcecc>&quot;stylesheet&quot;</span> <span class="hljs-attr" data-v-b9cbcecc>href</span>=<span class="hljs-string" data-v-b9cbcecc>&quot;styles.css&quot;</span>&gt;</span> <span class="hljs-comment" data-v-b9cbcecc>&lt;!-- Exsternal CSS --&gt;</span>

  <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>style</span>&gt;</span><span class="css" data-v-b9cbcecc> &lt;!<span class="hljs-selector-tag" data-v-b9cbcecc>--</span> <span class="hljs-selector-tag" data-v-b9cbcecc>Internal</span> <span class="hljs-selector-tag" data-v-b9cbcecc>CSS</span> <span class="hljs-selector-tag" data-v-b9cbcecc>--</span>&gt;
    <span class="hljs-selector-tag" data-v-b9cbcecc>body</span> {<span class="hljs-attribute" data-v-b9cbcecc>background-color</span>: powderblue;}
    <span class="hljs-selector-tag" data-v-b9cbcecc>h1</span>   {<span class="hljs-attribute" data-v-b9cbcecc>color</span>: blue;}
    <span class="hljs-selector-tag" data-v-b9cbcecc>p</span>    {<span class="hljs-attribute" data-v-b9cbcecc>color</span>: red;}
  </span><span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>style</span>&gt;</span>

<span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>head</span>&gt;</span>
<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>body</span>&gt;</span>

<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>h1</span> <span class="hljs-attr" data-v-b9cbcecc>style</span>=<span class="hljs-string" data-v-b9cbcecc>&quot;color:blue;&quot;</span>&gt;</span>This is a heading<span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>h1</span>&gt;</span> <span class="hljs-comment" data-v-b9cbcecc>&lt;!-- Inline CSS--&gt;</span>
<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>p</span>&gt;</span>This is a paragraph.<span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>p</span>&gt;</span>

<span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>body</span>&gt;</span>
<span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>html</span>&gt;</span>
</code></pre><h2 id="border" data-v-b9cbcecc>Border</h2><p data-v-b9cbcecc>Border adalah bagian tepi dari element. Dengan menggunakan property border kita bisa menampilkan gari tepi element dan melakukan pengubahan pada tampilan border. </p><pre data-v-b9cbcecc><code data-v-b9cbcecc><span class="hljs-keyword" data-v-b9cbcecc>border: </span><span class="hljs-number" data-v-b9cbcecc>1</span>px solid red<span class="hljs-comment" data-v-b9cbcecc>;</span>
</code></pre><h2 id="html-block-dan-inline-element" data-v-b9cbcecc>HTML BLock dan inline Element</h2><p data-v-b9cbcecc>Pada HTML terdapat berabagai macam display value kita akan melihat yang paling sering digunakan yaitu: Block, dan inline</p><p data-v-b9cbcecc><strong data-v-b9cbcecc>Block-level Elements</strong></p><p data-v-b9cbcecc>block level element akan selalu membuat baris baru setelah kita declarasi. Block level element akan menggambil penuh width/lebar yang tersedia. Ketinggian border dari Block level adalah berdasarkan content yang dimiliki. Contoh dari block level element <code data-v-b9cbcecc>&lt;p&gt;</code> dan <code data-v-b9cbcecc>&lt;div&gt;</code></p><p data-v-b9cbcecc><strong data-v-b9cbcecc>Inline Elements</strong></p><p data-v-b9cbcecc>Inline element tidak akan membuat baris baru seperti block level. Lebar dari inline element akan sama dengan content yang ada didalamannya, Oleh karena itu kita tidak bisa menggatur <strong data-v-b9cbcecc>width dan Height</strong> dari element yang memeiliki inline. Contoh inline element <code data-v-b9cbcecc>&lt;em&gt;</code>, <code data-v-b9cbcecc>&lt;span&gt;</code>, dan <code data-v-b9cbcecc>&lt;strong&gt;</code></p><p data-v-b9cbcecc><strong data-v-b9cbcecc>inline-block</strong></p><p data-v-b9cbcecc>Selain dari block dan inline, ada juga inline-block. Element yang memiliki display inline-block bisa kita atur &quot;width&quot; dan &quot;height&quot; mereka. Secara mudahnnya ini adalah pergabungan antara block dan inline. </p><p data-v-b9cbcecc><strong data-v-b9cbcecc>display: none</strong></p><p data-v-b9cbcecc>Jika kita menambahkan property ini pada element, maka elemnt tersebut akan menghilang dari halaman website. </p><h2 id="pohon-keluarga-pada-document-html" data-v-b9cbcecc>Pohon keluarga pada document HTML</h2><p data-v-b9cbcecc>Pada pembuatan halaman website, alangkah baiknya untuk bisa memahami struktur pohon keluarga document. </p><p data-v-b9cbcecc>Konsep ini sangat penting untuk mempermudah kita menyusun kerangka html yang lebih kompleks (<a href="http://web.simmons.edu/~grabiner/comm244/weekfour/document-tree.html" data-v-b9cbcecc>http://web.simmons.edu/~grabiner/comm244/weekfour/document-tree.html</a>).</p><pre data-v-b9cbcecc><code class="lang-&lt;body&gt;" data-v-b9cbcecc>
<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>div</span> <span class="hljs-attr" data-v-b9cbcecc>id</span>=<span class="hljs-string" data-v-b9cbcecc>&quot;content&quot;</span>&gt;</span> <span class="hljs-comment" data-v-b9cbcecc>&lt;!-- parent --&gt;</span>
    <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>ul</span>&gt;</span>  <span class="hljs-comment" data-v-b9cbcecc>&lt;!-- child --&gt;</span>
        <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>li</span>&gt;</span> item 1 <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>li</span>&gt;</span> <span class="hljs-comment" data-v-b9cbcecc>&lt;!-- sibling from on e parent --&gt;</span>
        <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>li</span>&gt;</span> item 2 <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>li</span>&gt;</span> <span class="hljs-comment" data-v-b9cbcecc>&lt;!-- sibling --&gt;</span>
    <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>ul</span>&gt;</span>
<span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>div</span>&gt;</span>
</code></pre><hr data-v-b9cbcecc><h1 id="cheatsheet-area" data-v-b9cbcecc>CheatSheet Area</h1><h2 id="penulisan-unordered-list" data-v-b9cbcecc>Penulisan Unordered List</h2><p data-v-b9cbcecc>Dengan Menggunakan Element <code data-v-b9cbcecc>&lt;ul&gt;</code> sebagai container dan element <code data-v-b9cbcecc>&lt;li&gt;</code> sebagai item kita bisa membuat Unordered list sama seperti dengan yang ada di microsoft word </p><pre data-v-b9cbcecc><code data-v-b9cbcecc><span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>h1</span>&gt;</span> Judul <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>h1</span>&gt;</span>

<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>ul</span>&gt;</span>

<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>li</span>&gt;</span> List item 1 <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>li</span>&gt;</span> 
<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>li</span>&gt;</span> list item 2 <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>li</span>&gt;</span>

<span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>ul</span>&gt;</span>
</code></pre><h2 id="penulisan-ordered-list" data-v-b9cbcecc>Penulisan Ordered List</h2><p data-v-b9cbcecc>Dengan penulisan ber-urut. itu sama membuat list dengan angka secara otomatis.</p><p data-v-b9cbcecc><code data-v-b9cbcecc>&lt;ol&gt;</code> adalah sebagai container dan <code data-v-b9cbcecc>&lt;li&gt;</code> sebagai element untuk item</p><pre data-v-b9cbcecc><code data-v-b9cbcecc><span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>h1</span>&gt;</span> Judul <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>h1</span>&gt;</span>

<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>ol</span>&gt;</span>
    <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>li</span>&gt;</span> Item 1 <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>li</span>&gt;</span>
    <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>li</span>&gt;</span> item 2 <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>li</span>&gt;</span>
<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>ol</span>&gt;</span>
</code></pre><h2 id="font-style" data-v-b9cbcecc>Font style</h2><ul data-v-b9cbcecc><li data-v-b9cbcecc><p data-v-b9cbcecc>Menulis dengan huruf tebal</p><pre data-v-b9cbcecc><code data-v-b9cbcecc>  &lt;<span class="hljs-keyword" data-v-b9cbcecc>strong</span>&gt; <span class="hljs-literal" data-v-b9cbcecc>Text</span> akan lebih tebal &lt;<span class="hljs-keyword" data-v-b9cbcecc>strong</span>&gt;
</code></pre></li><li data-v-b9cbcecc><p data-v-b9cbcecc>Menulis Huruf miring</p><pre data-v-b9cbcecc><code data-v-b9cbcecc>  <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>i</span>&gt;</span> Huruf garis miring <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>i</span>&gt;</span>
</code></pre></li><li data-v-b9cbcecc>Menulis Paragraf <pre data-v-b9cbcecc><code data-v-b9cbcecc>  <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>p</span>&gt;</span> Ini adalah Paragraf <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>p</span>&gt;</span>
</code></pre></li><li data-v-b9cbcecc>Menulis Judul atau heading<pre data-v-b9cbcecc><code data-v-b9cbcecc>  <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>h1</span>&gt;</span> Judul terbesar <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>h1</span>&gt;</span>
  <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>h2</span>&gt;</span> Judul ke dua <span class="hljs-tag" data-v-b9cbcecc>&lt;/<span class="hljs-name" data-v-b9cbcecc>h2</span>&gt;</span>
</code></pre></li><li data-v-b9cbcecc>Garis Horizontal<pre data-v-b9cbcecc><code data-v-b9cbcecc>  <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>hr</span>/&gt;</span>
  <span class="hljs-comment" data-v-b9cbcecc>&lt;!-- Atau tanpa menggunakan garis miring --&gt;</span>
  <span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>hr</span>&gt;</span>
</code></pre></li></ul><h2 id="element-cheatsheet" data-v-b9cbcecc>Element CheatSheet</h2><table data-v-b9cbcecc><thead data-v-b9cbcecc><tr data-v-b9cbcecc><th data-v-b9cbcecc>Tag</th><th data-v-b9cbcecc>Element</th><th data-v-b9cbcecc>Description</th></tr></thead><tbody data-v-b9cbcecc><tr data-v-b9cbcecc><td data-v-b9cbcecc>h1 - h6</td><td data-v-b9cbcecc><code data-v-b9cbcecc>&lt;h1&gt; judul &lt;/h1&gt;</code></td><td data-v-b9cbcecc>Heading </td></tr><tr data-v-b9cbcecc><td data-v-b9cbcecc>p</td><td data-v-b9cbcecc><code data-v-b9cbcecc>&lt;p&gt; paragraf &lt;/p&gt;</code></td><td data-v-b9cbcecc>Paragraph</td></tr><tr data-v-b9cbcecc><td data-v-b9cbcecc>a</td><td data-v-b9cbcecc><code data-v-b9cbcecc>&lt;a href=&quot;#&quot;&gt;</code></td><td data-v-b9cbcecc>Link \`</td></tr><tr data-v-b9cbcecc><td data-v-b9cbcecc>img</td><td data-v-b9cbcecc><code data-v-b9cbcecc>&lt;img src=&quot;#&quot; alt=&quot;text&quot;&gt;</code></td><td data-v-b9cbcecc>Image </td></tr><tr data-v-b9cbcecc><td data-v-b9cbcecc>hr</td><td data-v-b9cbcecc><code data-v-b9cbcecc>&lt;hr&gt;</code></td><td data-v-b9cbcecc>Horizontal Rule, memberikan gari luru secara horizontal</td></tr><tr data-v-b9cbcecc><td data-v-b9cbcecc>br</td><td data-v-b9cbcecc><code data-v-b9cbcecc>&lt;br&gt;</code></td><td data-v-b9cbcecc>Sebagai line break</td></tr><tr data-v-b9cbcecc><td data-v-b9cbcecc>pre</td><td data-v-b9cbcecc><code data-v-b9cbcecc>&lt;pre&gt; this is line &lt;/pre&gt;</code></td><td data-v-b9cbcecc>akan menghasilkan fixed text, sama persis dengan content yang didalamnya. jarak tulisan tidak akan diataur oleh komputer</td></tr></tbody></table><h2 id="menambahkan-gambar-pada-document-" data-v-b9cbcecc>Menambahkan gambar pada document.</h2><p data-v-b9cbcecc>Gambar berformat adalah object yang berada di luar document. Untuk menambahkan gambar ke document kita bisa panggil mereka melalui path yang tepat. Path bisa berasal dari internal source ataupun external source.</p><p data-v-b9cbcecc>Contoh menambahkan gambar dari sumber internal.</p><pre data-v-b9cbcecc><code data-v-b9cbcecc><span class="hljs-comment" data-v-b9cbcecc>&lt;!-- &lt;img src=&#39;&#39;/&gt; --&gt;</span>
<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>img</span> <span class="hljs-attr" data-v-b9cbcecc>src</span>=<span class="hljs-string" data-v-b9cbcecc>&#39;folder/gambar.jpg&#39;</span>/&gt;</span>

<span class="hljs-comment" data-v-b9cbcecc>&lt;!-- atau mendefinisikan lebar default --&gt;</span>
<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>img</span> <span class="hljs-attr" data-v-b9cbcecc>src</span>=<span class="hljs-string" data-v-b9cbcecc>&#39;folder/gambar.jpg&#39;</span> <span class="hljs-attr" data-v-b9cbcecc>width</span>=<span class="hljs-string" data-v-b9cbcecc>&#39;100&#39;</span>/&gt;</span>

<span class="hljs-comment" data-v-b9cbcecc>&lt;!-- text pengganti gambar jika gambar tidak berhasil di render --&gt;</span>
<span class="hljs-tag" data-v-b9cbcecc>&lt;<span class="hljs-name" data-v-b9cbcecc>img</span> <span class="hljs-attr" data-v-b9cbcecc>src</span>=<span class="hljs-string" data-v-b9cbcecc>&#39;folder/gambar.jpg&#39;</span> <span class="hljs-attr" data-v-b9cbcecc>alt</span>=<span class="hljs-string" data-v-b9cbcecc>&#39;ini gambar&#39;</span>/&gt;</span>
</code></pre><p data-v-b9cbcecc>Pada dasarnya jika kita memanggil gambar, maka ukuran tinggi dan panjang akan diambil dari sumber aslinya.</p><h2 id="attribute-cheatsheet" data-v-b9cbcecc>attribute Cheatsheet</h2><table data-v-b9cbcecc><thead data-v-b9cbcecc><tr data-v-b9cbcecc><th data-v-b9cbcecc>attribute</th><th data-v-b9cbcecc>Description </th></tr></thead><tbody data-v-b9cbcecc><tr data-v-b9cbcecc><td data-v-b9cbcecc><code data-v-b9cbcecc>href=&quot;#&quot;</code></td><td data-v-b9cbcecc>Digunakan untuk menambahkan hyperlink / path ke sumber tujuan</td></tr><tr data-v-b9cbcecc><td data-v-b9cbcecc><code data-v-b9cbcecc>src=&quot;#&quot;</code></td><td data-v-b9cbcecc>Digunakan untuk memberi tau hyperlink / path yang menuju sumbur gambar</td></tr><tr data-v-b9cbcecc><td data-v-b9cbcecc><code data-v-b9cbcecc>width=&quot;#&quot;</code></td><td data-v-b9cbcecc>Menujukan ukuran Lebar</td></tr><tr data-v-b9cbcecc><td data-v-b9cbcecc><code data-v-b9cbcecc>height=#</code></td><td data-v-b9cbcecc>menujukan ukuran tinggi</td></tr><tr data-v-b9cbcecc><td data-v-b9cbcecc><code data-v-b9cbcecc>alt=&quot;this is text&quot;</code></td><td data-v-b9cbcecc>Biasannya digunakan untuk element &quot;img&quot;, jika gambar gagal dimunculkan text ini akan muncul </td></tr><tr data-v-b9cbcecc><td data-v-b9cbcecc><code data-v-b9cbcecc>style=&quot;#&quot;</code></td><td data-v-b9cbcecc>Digunakan untuk menambahkan style pada element, dengan css </td></tr><tr data-v-b9cbcecc><td data-v-b9cbcecc><code data-v-b9cbcecc>title=&quot;this is title&quot;</code></td><td data-v-b9cbcecc>Ini akan memunculkan pop-up kecil saat anda mengarahkan mouse ke element tersebut</td></tr><tr data-v-b9cbcecc><td data-v-b9cbcecc><code data-v-b9cbcecc>class=&quot;class_name&quot;</code></td><td data-v-b9cbcecc>ini adalah untuk pengelompokan untuk diberi instruksi dari css ke element tersebut</td></tr><tr data-v-b9cbcecc><td data-v-b9cbcecc><code data-v-b9cbcecc>id=&quot;id_name&quot;</code></td><td data-v-b9cbcecc>ini adalah pengelompokan untuk diberi instruksi dari css ke element tersebut, dan juga hyperlink </td></tr></tbody></table><h2 id="menghubungkan-file-css-dengan-document-html" data-v-b9cbcecc>Menghubungkan file css dengan document HTML</h2><p data-v-b9cbcecc>Masuk ke file latihan html 01 di repository ini: <a href="../latihan/html01.md" data-v-b9cbcecc>panduan menghubungkan document dan css</a></p><blockquote data-v-b9cbcecc><p data-v-b9cbcecc>Selamat telah menyelesaikan dasar HTML Materi Selanjutnya akan kita bahas pada bagian CSS Klik untuk lanjut ke halaman <a href="../document/css.md" data-v-b9cbcecc>klik ini</a></p></blockquote><hr data-v-b9cbcecc><h1 id="latihan-html" data-v-b9cbcecc>Latihan HTML</h1><ul data-v-b9cbcecc><li data-v-b9cbcecc>Menghubungkan file CSS ke dalam document HTML <a href="../latihan/html01.md" data-v-b9cbcecc>Latihan 1 HTML</a></li><li data-v-b9cbcecc>Membuat Halaman website berisi puisi <a href="../latihan/lt-puisi.md" data-v-b9cbcecc>Latihan Puisi</a></li><li data-v-b9cbcecc>Latihan Float <a href="../latihan/lt-float.md" data-v-b9cbcecc>latihan float</a></li><li data-v-b9cbcecc>Membuat Standart Template Website <a href="../latihan/lt-standart-web.md" data-v-b9cbcecc>Latihan Standart</a></li><li data-v-b9cbcecc>Latihan penggunaan box model <a href="../latihan/html02.md" data-v-b9cbcecc>Latihan 2 HTML</a></li><li data-v-b9cbcecc>Membuat website dengan grid <a href="../latihan/lt-grid.md" data-v-b9cbcecc>Latihan_3</a></li><li data-v-b9cbcecc>Membuat website dengan Flexbox <a href="../latihan/lt-flexbox.md" data-v-b9cbcecc>Flexbox</a></li><li data-v-b9cbcecc>Contoh CSS position <a href="../latihan/lt-css-position.md" data-v-b9cbcecc>Contoh CSS</a></li><li data-v-b9cbcecc>Membuat landing page website makanan</li><li data-v-b9cbcecc>Membuat portofolio pribadi</li></ul><h4 id="refrensi" data-v-b9cbcecc>Refrensi</h4><ul data-v-b9cbcecc><li data-v-b9cbcecc><a href="https://id.wikipedia.org/wiki/HTML" data-v-b9cbcecc>https://id.wikipedia.org/wiki/HTML</a></li><li data-v-b9cbcecc><a href="https://www.w3schools.com/tags/tag_doctype.asp" data-v-b9cbcecc>https://www.w3schools.com/tags/tag_doctype.asp</a></li><li data-v-b9cbcecc><a href="https://id.wikipedia.org/wiki/Pranala" data-v-b9cbcecc>https://id.wikipedia.org/wiki/Pranala</a></li><li data-v-b9cbcecc><a href="https://html.spec.whatwg.org/multipage/introduction.html#introduction" data-v-b9cbcecc>https://html.spec.whatwg.org/multipage/introduction.html#introduction</a></li><li data-v-b9cbcecc><a href="https://github.com/jgthms/web-design-in-4-minutes" data-v-b9cbcecc>https://github.com/jgthms/web-design-in-4-minutes</a></li><li data-v-b9cbcecc><a href="https://github.com/jgthms/marksheet" data-v-b9cbcecc>https://github.com/jgthms/marksheet</a><a href="https://www.internetingishard.com/" data-v-b9cbcecc>https://www.internetingishard.com/</a> <br data-v-b9cbcecc><a href="https://github.com/Asabeneh/30-Days-Of-HTML" data-v-b9cbcecc>https://github.com/Asabeneh/30-Days-Of-HTML</a> <br data-v-b9cbcecc><a href="https://www.w3schools.com/html/" data-v-b9cbcecc>https://www.w3schools.com/html/</a></li><li data-v-b9cbcecc><a href="https://www.freecodecamp.org/news/the-css-display-property-display-none-display-table-inline-block-and-more/" data-v-b9cbcecc>https://www.freecodecamp.org/news/the-css-display-property-display-none-display-table-inline-block-and-more/</a></li><li data-v-b9cbcecc><a href="https://www.internetingishard.com/html-and-css/css-box-model/" data-v-b9cbcecc>https://www.internetingishard.com/html-and-css/css-box-model/</a></li><li data-v-b9cbcecc><a href="https://www.internetingishard.com/html-and-css/" data-v-b9cbcecc>https://www.internetingishard.com/html-and-css/</a></li><li data-v-b9cbcecc><a href="https://bigshans.github.io/post/css-box/" data-v-b9cbcecc>https://bigshans.github.io/post/css-box/</a> [ css box model ]asic, sample markdown.</li></ul><h2 id="second-heading" data-v-b9cbcecc>Second Heading</h2><ul data-v-b9cbcecc><li data-v-b9cbcecc>Unordered lists, and:<ol data-v-b9cbcecc><li data-v-b9cbcecc>One</li><li data-v-b9cbcecc>Two</li><li data-v-b9cbcecc>Three</li></ol></li><li data-v-b9cbcecc>More</li></ul><blockquote data-v-b9cbcecc><p data-v-b9cbcecc>Blockquote</p></blockquote><p data-v-b9cbcecc>And <strong data-v-b9cbcecc>bold</strong>, <em data-v-b9cbcecc>italics</em>, and even <em data-v-b9cbcecc>italics and later <strong data-v-b9cbcecc>bold</strong></em>. Even <del data-v-b9cbcecc>strikethrough</del>. <a href="https://markdowntohtml.com" data-v-b9cbcecc>A link</a> to somewhere.</p><p data-v-b9cbcecc>And code highlighting:</p><pre data-v-b9cbcecc><code class="lang-js" data-v-b9cbcecc><span class="hljs-keyword" data-v-b9cbcecc>var</span> foo = <span class="hljs-string" data-v-b9cbcecc>&#39;bar&#39;</span>;

<span class="hljs-function" data-v-b9cbcecc><span class="hljs-keyword" data-v-b9cbcecc>function</span> <span class="hljs-title" data-v-b9cbcecc>baz</span><span class="hljs-params" data-v-b9cbcecc>(s)</span> </span>{
   <span class="hljs-keyword" data-v-b9cbcecc>return</span> foo + <span class="hljs-string" data-v-b9cbcecc>&#39;:&#39;</span> + s;
}
</code></pre><p data-v-b9cbcecc>Or inline code like <code data-v-b9cbcecc>var foo = &#39;bar&#39;;</code>.</p><p data-v-b9cbcecc>Or an image of bears</p><p data-v-b9cbcecc><img src="http://placebear.com/200/200" alt="bears" data-v-b9cbcecc></p><p data-v-b9cbcecc>The end ...</p>`,123)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},df=ca(ef,[["__scopeId","data-v-b9cbcecc"]]),lf={__name:"css",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="css-introduction" data-v-38a34f0e>CSS Introduction</h1><p data-v-38a34f0e>Cascading Style Sheet (CSS) merupakan instruksi penulisan untuk mengatur tata letak dan penampilan document HTML. Dengan adannya Bantuan CSS sebagai pengelola tampilan dari document akan sangat mempermudah penulis menciptakan karyanya. </p><p data-v-38a34f0e>Beberapa Fitur CSS:</p><ol data-v-38a34f0e><li data-v-38a34f0e>Mengubah warna text maupun background</li><li data-v-38a34f0e>Mengubah ukuran gambar atau text</li><li data-v-38a34f0e>Membuat animasi atau effect</li><li data-v-38a34f0e>Mengatur penempatan object</li><li data-v-38a34f0e>Memberikan border</li></ol><h2 id="mengenal-css-syntax" data-v-38a34f0e>Mengenal CSS syntax</h2><p data-v-38a34f0e>CSS snytax merujuk kepada format aturan dalam pembuatan style. CSS Syntax berisi deklarasi, properties, dan Selector</p><h2 id="cara-menghubungkan-css-dengan-document-html" data-v-38a34f0e>Cara menghubungkan css dengan document html</h2><p data-v-38a34f0e>Ada tiga cara untuk menghubungkan CSS kedalam document HTML:</p><ol data-v-38a34f0e><li data-v-38a34f0e>Inline Style Sheet Menulis code CSS tepat didalam object yang dituju. Contoh <code data-v-38a34f0e>&lt;p style=&#39;color:red;&#39;&gt; &lt;/p&gt;</code></li><li data-v-38a34f0e>Embedded Style sheet Menulis code CSS didalam TAG HEAD. contoh:</li></ol><pre data-v-38a34f0e><code data-v-38a34f0e><span class="hljs-tag" data-v-38a34f0e>&lt;<span class="hljs-name" data-v-38a34f0e>head</span>&gt;</span>
<span class="hljs-tag" data-v-38a34f0e>&lt;<span class="hljs-name" data-v-38a34f0e>style</span>&gt;</span><span class="css" data-v-38a34f0e>
<span class="hljs-selector-tag" data-v-38a34f0e>p</span> {<span class="hljs-attribute" data-v-38a34f0e>color</span>: <span class="hljs-string" data-v-38a34f0e>&#39;red&#39;</span>;}
</span><span class="hljs-tag" data-v-38a34f0e>&lt;/<span class="hljs-name" data-v-38a34f0e>style</span>&gt;</span>
<span class="hljs-tag" data-v-38a34f0e>&lt;/<span class="hljs-name" data-v-38a34f0e>head</span>&gt;</span>
</code></pre><ol data-v-38a34f0e><li data-v-38a34f0e>External CSS Link menuju tempat penyimpanan CSS kita, ditulis didalam TAG <code data-v-38a34f0e>&lt;head&gt;</code>. <code data-v-38a34f0e>&lt;link href=&#39;style.css&#39; rel=&#39;stylesheet&#39;&gt;</code></li></ol><h2 id="css-property" data-v-38a34f0e>CSS Property</h2><pre data-v-38a34f0e><code data-v-38a34f0e><span class="hljs-selector-tag" data-v-38a34f0e>p</span> {
    <span class="hljs-attribute" data-v-38a34f0e>color</span>: red;
}
</code></pre><p data-v-38a34f0e>Pada kode diatas, &quot;p&quot; adalah element selector atau disebut selector. Sedangkan &quot;color&quot; adalah property. property adalah yang memberikan instruksi bagian mana dari selector tersebut berubah secara visual. </p><h2 id="menggenai-id" data-v-38a34f0e>Menggenai Id</h2><p data-v-38a34f0e>Konsep dari attribute id itu sama dengan attribute class, kita dapat menlakukan perubahan pada tampilan mereka.</p><p data-v-38a34f0e>Tetapi jika ada id dan class yang memiliki style berlawanan maka, style dari id yang akan dipakai.</p><p data-v-38a34f0e>Dibawah ini adalah contoh mendifinisikan id pada css, dan melakukan pengaturan style:</p><pre data-v-38a34f0e><code data-v-38a34f0e><span class="hljs-selector-id" data-v-38a34f0e>#div-main</span> {
  <span class="hljs-attribute" data-v-38a34f0e>background-color</span>: white;
}
</code></pre><h2 id="menggenai-padding" data-v-38a34f0e>Menggenai padding</h2><p data-v-38a34f0e>pada pengaturan ukuran element terdapat setidaknya tiga property dasar: padding, border, dan margin.</p><p data-v-38a34f0e>Kita mulai dari padding, padding adalah jarak dari content didalam element ke bagian border. <code data-v-38a34f0e>padding: 1px 1px 1px 1px;</code></p><p data-v-38a34f0e>Border adalah batas luar dari content. Kita dapat melihat border, dengan mendefinisikan border ke dalam element tersebut. <code data-v-38a34f0e>border: 1px solid red;</code></p><p data-v-38a34f0e>Sedangkan margin adalah jarak antara element satu dengan yang lainnya. <code data-v-38a34f0e>margin: 1px 1px 1px 1px;</code></p><p data-v-38a34f0e>Dibawah ini adalah format untuk value padding dan margin:</p><pre data-v-38a34f0e><code data-v-38a34f0e>padding: <span class="hljs-number" data-v-38a34f0e>40</span>px <span class="hljs-number" data-v-38a34f0e>20</span>px <span class="hljs-number" data-v-38a34f0e>20</span>px <span class="hljs-number" data-v-38a34f0e>40</span>px;
  // Format penempatan : padding-<span class="hljs-built_in" data-v-38a34f0e>top</span>, padding-<span class="hljs-built_in" data-v-38a34f0e>right</span>, padding-<span class="hljs-built_in" data-v-38a34f0e>bottom</span>, and padding-<span class="hljs-built_in" data-v-38a34f0e>left</span>
</code></pre><h2 id="css-selectors" data-v-38a34f0e>CSS Selectors</h2><p data-v-38a34f0e>Untuk mempermudah kita dalam melakukan configurasi tampilan halaman, kita bisa mengunakan fungsi <em data-v-38a34f0e>CSS Selector</em>. </p><p data-v-38a34f0e>Dimana kita sebagai brainware / developer, cukup mendefinisikan nama element di dalam style css, lalu melakukan configurasi disana.</p><p data-v-38a34f0e>Sebagai perumpamaan: Terdapat sebuah perumahan yang beriisi banyak blok dan setiap blok memiliki aturan pewarnaan bangunan sendiri-sendiri. Sebagai contoh blok A terdiri dari bangunan yang memiliki dominan warna merah, sedangkan blok B terdiri dari bangunan yang memiliki dominan warna biru.</p><p data-v-38a34f0e>Disini adalah pertanyaan nya!</p><p data-v-38a34f0e>Terdapat seorang kurir yang bertanya kepada kita, Seperti apa penanda bangunan untuk blok B?</p><p data-v-38a34f0e>Jawaban:</p><p data-v-38a34f0e>a. kita menjawab dengan memberitahui warna dominan pada blok B. b. Kita menjawab dengan memberitau blok B berada di dekat blok A.</p><p data-v-38a34f0e>Penyelesaian: Jika jawaban kita adalah a. maka itu benar. Karena konsep dari css selector adalah menuliskan alamat tujuan dari element yang kita tuju (<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors?retiredLocale=id" data-v-38a34f0e>https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors?retiredLocale=id</a>).</p><h2 id="attribute-selector" data-v-38a34f0e>Attribute selector</h2><pre data-v-38a34f0e><code data-v-38a34f0e><span class="hljs-comment" data-v-38a34f0e>/*ini akan mendefinisikan alamat yang didalam attribute class terdapat kata &quot;link&quot; */</span>

<span class="hljs-selector-attr" data-v-38a34f0e>[class~=&quot;link&quot;]</span> {
  <span class="hljs-attribute" data-v-38a34f0e>margin</span>: <span class="hljs-number" data-v-38a34f0e>20px</span> <span class="hljs-number" data-v-38a34f0e>0px</span> <span class="hljs-number" data-v-38a34f0e>20px</span> <span class="hljs-number" data-v-38a34f0e>0px</span>;
}
</code></pre><h2 id="css-box-model" data-v-38a34f0e>CSS Box Model</h2><p data-v-38a34f0e>Didalam Sebuah Element HTMl itu terdiri dari:</p><ul data-v-38a34f0e><li data-v-38a34f0e>Content - Adalah area utama dimana jika kita menuliskan suatu text, text tersbut berada didalam contetn</li><li data-v-38a34f0e>Padding - Adalah area kosong yang menjadi jarak antara content dengan border / bagian tepi element </li><li data-v-38a34f0e>Border - Adalah bagian tepi dari suatu element. Berada diantara padding dan margin </li><li data-v-38a34f0e>Margin - adalah bagian luar dari border. Yang memberi jarak antara element satu dengan yang lainnya</li></ul><h2 id="box-sizing-border-box" data-v-38a34f0e>Box-sizing:border-box</h2><p data-v-38a34f0e>&quot;box-sizing: border-box&quot; adalah salah satu properti css yang dapat digunakan untuk mengatur box model dalam suatu element HTML. Secara simple &quot;border-box&quot; adalah digunakan untuk memastikan tinggi dan lebar dari element sesuai dengan keingginan kita. </p><p data-v-38a34f0e>Cerita:</p><ul data-v-38a34f0e><li data-v-38a34f0e><p data-v-38a34f0e>Pada dasarnya element akan memiliki tipe &quot;box-sizing: content-box&quot;, yang dimana ukuran element akan dihitung berdasarkan ukuran kontent ditambah padding dan border, Sehingga jika kita menambahkan padding atau border ukuran total element akan membesar. </p></li><li data-v-38a34f0e><p data-v-38a34f0e>Jika &quot;box-sizing: border-box&quot; mereka akan mengatur agar ukuran lebar dan tinggi sesuai dengan spesifikasi yang sudah kita tulis.</p></li></ul><p data-v-38a34f0e>Pada dasarnya box model mengunakan perhitungan nilai width x height pada element sperti berikut</p><pre data-v-38a34f0e><code data-v-38a34f0e>Width = width + <span class="hljs-built_in" data-v-38a34f0e>left</span> padding + <span class="hljs-built_in" data-v-38a34f0e>right</span> padding + <span class="hljs-built_in" data-v-38a34f0e>left</span> border + <span class="hljs-built_in" data-v-38a34f0e>right</span> border

Height = height + <span class="hljs-built_in" data-v-38a34f0e>top</span> padding + <span class="hljs-built_in" data-v-38a34f0e>bottom</span> padding + <span class="hljs-built_in" data-v-38a34f0e>top</span> border + <span class="hljs-built_in" data-v-38a34f0e>bottom</span> border
</code></pre><p data-v-38a34f0e>src: <a href="https://medium.com/@elelvyra/learn-css-box-model-dan-box-sizing-6b19a367478d#:~:text=Box%20sizing%20adalah%20properti%20yang,width%20dan%20height%20suatu%20elemen" data-v-38a34f0e>https://medium.com/@elelvyra/learn-css-box-model-dan-box-sizing-6b19a367478d#:~:text=Box%20sizing%20adalah%20properti%20yang,width%20dan%20height%20suatu%20elemen</a>.</p><p data-v-38a34f0e>Mari kita coba untuk membuat box model terlebih dahulu, dengan width 200 px, height 200px, padding kanan-kiri 20px, padding atas-bawah 20px, border kanan-kiri 20px, dan border atas-bawah 20px.</p><p data-v-38a34f0e>mari kita hitung dengan cara diatas</p><pre data-v-38a34f0e><code data-v-38a34f0e>width = <span class="hljs-number" data-v-38a34f0e>200</span> + <span class="hljs-number" data-v-38a34f0e>10</span> + <span class="hljs-number" data-v-38a34f0e>10</span> + <span class="hljs-number" data-v-38a34f0e>10</span> + <span class="hljs-number" data-v-38a34f0e>10</span> = <span class="hljs-number" data-v-38a34f0e>240</span>
height = <span class="hljs-number" data-v-38a34f0e>200</span> + <span class="hljs-number" data-v-38a34f0e>10</span> + <span class="hljs-number" data-v-38a34f0e>10</span> + <span class="hljs-number" data-v-38a34f0e>10</span> + <span class="hljs-number" data-v-38a34f0e>10</span> = <span class="hljs-number" data-v-38a34f0e>240</span>
</code></pre><p data-v-38a34f0e>Total width adalah 240 dan juga height nya. Ada cara jika kita ingin menghasilkan 200px tersebut adalah keseluruhan dari width dan height, yaitu menambahkan property <code data-v-38a34f0e>box-sizing: border-box;</code>. <strong data-v-38a34f0e>border-sizing</strong> akan mengatur agar lebar atau tinggi dari element tersebut sesuai dengan ukuran width dan height yang sudah ada. </p><p data-v-38a34f0e>Mari kita lihat ukuran total pada gambar sebelum box-sizing.</p><p data-v-38a34f0e><img src="#" alt="Sebelum box sizing" data-v-38a34f0e></p><p data-v-38a34f0e>Jika semisal Kita menambahkan property box sizing seperti code dibawah</p><pre data-v-38a34f0e><code data-v-38a34f0e><span class="hljs-selector-tag" data-v-38a34f0e>div</span><span class="hljs-selector-class" data-v-38a34f0e>.main</span> {
        <span class="hljs-attribute" data-v-38a34f0e>width</span>: <span class="hljs-number" data-v-38a34f0e>200px</span>;
        <span class="hljs-attribute" data-v-38a34f0e>height</span>: <span class="hljs-number" data-v-38a34f0e>200px</span>;
        <span class="hljs-attribute" data-v-38a34f0e>background-color</span>: green;
        <span class="hljs-attribute" data-v-38a34f0e>padding</span>: <span class="hljs-number" data-v-38a34f0e>10px</span>;
        <span class="hljs-attribute" data-v-38a34f0e>border</span>: <span class="hljs-number" data-v-38a34f0e>10px</span> solid black; 
        <span class="hljs-attribute" data-v-38a34f0e>box-sizing</span>: border-box;
      }
</code></pre><p data-v-38a34f0e>Intinya:</p><pre data-v-38a34f0e><code data-v-38a34f0e><span class="hljs-built_in" data-v-38a34f0e>box</span>-sizing: <span class="hljs-built_in" data-v-38a34f0e>border</span>-<span class="hljs-built_in" data-v-38a34f0e>box</span>;

<span class="hljs-comment" data-v-38a34f0e>/* berbeda dengan */</span>

<span class="hljs-built_in" data-v-38a34f0e>box</span>-sizing: <span class="hljs-built_in" data-v-38a34f0e>content</span>-<span class="hljs-built_in" data-v-38a34f0e>box</span>;
</code></pre><p data-v-38a34f0e>hasilnya akan menjadi Seperti gambar dibawah. <code data-v-38a34f0e>box-sizing: border-box</code> akan membuat komputer mengatur secara otomatis pembagian dari width dan height untuk membuat hasil total tidak lebih dari yang sudah dideklarasi kan</p><p data-v-38a34f0e><img src="#" alt="setelah boxsizing" data-v-38a34f0e></p><h2 id="css-float" data-v-38a34f0e>CSS float</h2><p data-v-38a34f0e>Untuk source code bisa dilihat disini: <a href="https://replit.com/@SayaManusia/CSS-Floats#index.html" data-v-38a34f0e>https://replit.com/@SayaManusia/CSS-Floats#index.html</a></p><p data-v-38a34f0e>Float adalah property css yang dapat membantu anda untuk mengatur agar element bisa bergerak secara horizontal. Float tidak hanya untuk mengatur arah gerak element, float akan membuat element disekitarnya bisa berada didalam area element float, tidak bergerak dibawah dari element float </p><p data-v-38a34f0e>Seperti pada digambar dibawah ini. Kotak kecil berwana merah memiliki property float, tetpai kotak kuning besar tidak memiliki float. Maka kotak kuning besar akan berjalan dibawah kotak merah. </p><p data-v-38a34f0e><img src="#" alt="float test" data-v-38a34f0e></p><p data-v-38a34f0e>Ada tiga value float yang sering dipakai: </p><ol data-v-38a34f0e><li data-v-38a34f0e>right</li><li data-v-38a34f0e>left </li><li data-v-38a34f0e>none, Akan menggubah ke tempat default </li></ol><p data-v-38a34f0e>cara penggunaan <code data-v-38a34f0e>float: left;</code></p><p data-v-38a34f0e>dan ada tiga cara yang biasaanya digunakan untuk memindahkan element</p><ol data-v-38a34f0e><li data-v-38a34f0e><code data-v-38a34f0e>float: left;</code> untuk memindahkan ke area kiri</li><li data-v-38a34f0e><code data-v-38a34f0e>margin: 0 auto;</code> Untuk memindahkan ke area tengah</li><li data-v-38a34f0e><code data-v-38a34f0e>float: right;</code> untuk memindahkan ke area kanan </li></ol><h2 id="html-document-tree" data-v-38a34f0e>HTML document Tree</h2><p data-v-38a34f0e><a href="http://web.simmons.edu/~grabiner/comm244/weekfour/document-tree.html#:~:text=Parent%20and%20Child,element%20in%20the%20document%20tree" data-v-38a34f0e>http://web.simmons.edu/~grabiner/comm244/weekfour/document-tree.html#:~:text=Parent%20and%20Child,element%20in%20the%20document%20tree</a>.</p><h2 id="flexbox" data-v-38a34f0e>Flexbox</h2><p data-v-38a34f0e>Untuk melihat source code kecil menggenai flexbox: <a href="../code/flexbox-test" data-v-38a34f0e>flexbox src</a></p><p data-v-38a34f0e>Flexbox memiliki kemiripan dengan float, tetapi disini kita bisa mengatur penuh tata letak element. Mulai dari Posisi, urutan, garis arah dan ukuran dari element. </p><p data-v-38a34f0e>Untuk memahami penggunaan dari float dan flexbox. Flexbox memiliki fungsi yang lebih lengkap daripada float, flex akan bisa bekerja jika ada minimal &quot;parent&quot;, &quot;child&quot; element. Flexbox sangat disarankan jika ingin mengatur bagian yang besar pada website. </p><p data-v-38a34f0e>Sedangkan float akan dipakai pada element kecil pada halaman website, yang tidak memerlukan fungsi kompleks. </p><p data-v-38a34f0e>Istillah bagian kecil float pada halaman website adalah <strong data-v-38a34f0e>Magaine-style layouts</strong> istilah bagian besar yang ditanggani oleh flexbox adalah <strong data-v-38a34f0e>overall page structure</strong> src: <a href="https://www.internetingishard.com/html-and-css/flexbox/" data-v-38a34f0e>https://www.internetingishard.com/html-and-css/flexbox/</a></p><p data-v-38a34f0e>Pada Flexbox ada dua tipe box yang perlu kita pahami, yaitu &quot;flex container&quot; dan &quot;flex items&quot;. element HTML yang ada didalam element container itu disebut sebagai item. Kita bisa mengatur setiap item secara individu, tetapi sebagian besar tergantung dengan container untuk mengaturnya bagaimana. </p><p data-v-38a34f0e>Untuk menggunakan flexbox, kita harus menambahkan property <code data-v-38a34f0e>display: flex;</code> kedalam container, karena jika tidak maka semua property flexbox tidak akan dibaca oleh komputer. </p><p data-v-38a34f0e>FLex vontainer hanya memperhatikan posisi element yang berada di satu level dibawahnya ( element didalam dari container adalah item ). Container tidak akan mengatur element yang berada didalam item.</p><p data-v-38a34f0e>Untuk melakukan customisasi pada element pada bidang horizontal, kita akan memakai property <code data-v-38a34f0e>justify-content</code> ini akan membantu untuk memindahkan element, dan mengatur jarak antar item. </p><p data-v-38a34f0e>value yang bisa dipilah pada property justify-content:</p><ul data-v-38a34f0e><li data-v-38a34f0e>Center - akan membuat element berada di tengah</li><li data-v-38a34f0e>Flex-start - akan memindahkan element ke bagian kiri </li><li data-v-38a34f0e>Flex-end - akan memindahkan element kebagian kanan </li><li data-v-38a34f0e>Space-between akan memberikan jarak antar element saja, tidak termasuk border</li><li data-v-38a34f0e>space-around akan memberikan jarak antar element dan border </li></ul><p data-v-38a34f0e>Untuk mengelompokan element pada flexbox, kita cukup buat flexbox lagi didalam container, seperti code dibawah ini</p><pre data-v-38a34f0e><code data-v-38a34f0e>
&lt;div <span class="hljs-class" data-v-38a34f0e><span class="hljs-keyword" data-v-38a34f0e>class</span></span>=<span class="hljs-string" data-v-38a34f0e>&#39;menu-container&#39;</span>&gt; <span class="xml" data-v-38a34f0e><span class="hljs-comment" data-v-38a34f0e>&lt;!-- This is main container--&gt;</span>
        <span class="hljs-tag" data-v-38a34f0e>&lt;<span class="hljs-name" data-v-38a34f0e>div</span> <span class="hljs-attr" data-v-38a34f0e>class</span>=<span class="hljs-string" data-v-38a34f0e>&#39;menu&#39;</span>&gt;</span> 

            <span class="hljs-tag" data-v-38a34f0e>&lt;<span class="hljs-name" data-v-38a34f0e>div</span> <span class="hljs-attr" data-v-38a34f0e>class</span>=<span class="hljs-string" data-v-38a34f0e>&#39;date&#39;</span>&gt;</span>Aug 14, 2016<span class="hljs-tag" data-v-38a34f0e>&lt;/<span class="hljs-name" data-v-38a34f0e>div</span>&gt;</span>    <span class="hljs-comment" data-v-38a34f0e>&lt;!-- main container item --&gt;</span>
            <span class="hljs-tag" data-v-38a34f0e>&lt;<span class="hljs-name" data-v-38a34f0e>div</span> <span class="hljs-attr" data-v-38a34f0e>class</span>=<span class="hljs-string" data-v-38a34f0e>&#39;links&#39;</span>&gt;</span>                     <span class="hljs-comment" data-v-38a34f0e>&lt;!-- This is second container --&gt;</span>
                <span class="hljs-tag" data-v-38a34f0e>&lt;<span class="hljs-name" data-v-38a34f0e>div</span> <span class="hljs-attr" data-v-38a34f0e>class</span>=<span class="hljs-string" data-v-38a34f0e>&#39;signup&#39;</span>&gt;</span>Sign Up<span class="hljs-tag" data-v-38a34f0e>&lt;/<span class="hljs-name" data-v-38a34f0e>div</span>&gt;</span>   <span class="hljs-comment" data-v-38a34f0e>&lt;!-- second container item --&gt;</span>
                <span class="hljs-tag" data-v-38a34f0e>&lt;<span class="hljs-name" data-v-38a34f0e>div</span> <span class="hljs-attr" data-v-38a34f0e>class</span>=<span class="hljs-string" data-v-38a34f0e>&#39;login&#39;</span>&gt;</span>Login<span class="hljs-tag" data-v-38a34f0e>&lt;/<span class="hljs-name" data-v-38a34f0e>div</span>&gt;</span>      <span class="hljs-comment" data-v-38a34f0e>&lt;!-- second container item --&gt;</span>
            <span class="hljs-tag" data-v-38a34f0e>&lt;/<span class="hljs-name" data-v-38a34f0e>div</span>&gt;</span>

        <span class="hljs-tag" data-v-38a34f0e>&lt;/<span class="hljs-name" data-v-38a34f0e>div</span>&gt;</span>
    <span class="hljs-tag" data-v-38a34f0e>&lt;/<span class="hljs-name" data-v-38a34f0e>div</span>&gt;</span></span>
</code></pre><p data-v-38a34f0e><img src="#" alt="flexbox kelompom" data-v-38a34f0e></p><p data-v-38a34f0e>Flexbox juga dapat mengatur pergerakan elementdalam bidang vertikal, dengan menggunakan property <code data-v-38a34f0e>align-items</code>.</p><p data-v-38a34f0e>Beberapa value yang terdapat pada alig-items:</p><ul data-v-38a34f0e><li data-v-38a34f0e>Center - mengatur posisi item ke tengah </li><li data-v-38a34f0e>flex-start - akan mengatur element ke bagian atas container </li><li data-v-38a34f0e>flex-end - akan mengatur elemet ke bagian bawah container </li><li data-v-38a34f0e>stretch- akan mengatur element menjadi memanjang kebawah</li></ul><h2 id="css-grid" data-v-38a34f0e>CSS Grid</h2><p data-v-38a34f0e>CSS grid adalah suatu sistem layout dua dimensi pada website, sama seperti flexbox. </p><p data-v-38a34f0e>Sistem layout design berfungsi untuk mengontrol pergerakan, ukuran, dan penempatan pada element. Dengan CSS grid kita dapat membuat aturan dalam penempatan element di dalam website.</p><p data-v-38a34f0e>Penggunaan yang baik untuk grid adalah untuk mengatur bagian kecil pada website. Sedangkan element induk yang mencakup element kecil-kecil dikonfigurasi oleh Flexbox.</p><h2 id="css-transform-and-transition" data-v-38a34f0e>CSS transform and transition</h2><p data-v-38a34f0e>Adalah suatu protokol untuk melakukan perubahan secara visual yang terdapat pada element web. Kedua transformasi tersebut melakukan bentuk animasi tanpa harus menggunakan javascript.</p><ul data-v-38a34f0e><li data-v-38a34f0e><p data-v-38a34f0e>CSS Transform fungsi ini digunakan untuk memanipulasi bentuk visual dari element, dengan cara mengubah posisi, ukuran, rotasi, dan persepktif. Sebagai contoh element akan berotasi sesuai dengan berapa derajat yang diinginkan. </p></li><li data-v-38a34f0e><p data-v-38a34f0e>CSS Transition fungsi ini akan membantu dalam melakukan perubahan kondisi dari element. anda juga dapat menjelaskan detail seberapa cepat durasi effek, dan sebagainnya. contoh efek transition adalah mengubah ukuran visual dari element. Referensi: <a href="https://www.w3schools.com/css/css3_transitions.asp" data-v-38a34f0e>https://www.w3schools.com/css/css3_transitions.asp</a></p></li></ul><hr data-v-38a34f0e><h1 id="cheatsheet-area" data-v-38a34f0e>Cheatsheet area</h1><h4 id="contoh-code-css" data-v-38a34f0e>Contoh code CSS</h4><p data-v-38a34f0e><code data-v-38a34f0e>p { color: red; }</code></p><ul data-v-38a34f0e><li data-v-38a34f0e><code data-v-38a34f0e>p</code> CSS akan mengambil object bernama &#39;p&#39; dari HTML.</li><li data-v-38a34f0e><code data-v-38a34f0e>color</code> membuat fungsi untuk memilih warna. jika tidak ada &#39;color&#39; maka warna yang dipakai adalah default.</li><li data-v-38a34f0e><code data-v-38a34f0e>red</code> memilih warna merah.</li></ul><h3 id="css-media-query" data-v-38a34f0e>CSS media Query</h3><p data-v-38a34f0e>Adalah teknologi atau tool yang akan membantu kita membuat skenario khusus pada device tertentu.</p><ul data-v-38a34f0e><li data-v-38a34f0e><p data-v-38a34f0e><code data-v-38a34f0e>min-width</code>: Jika yang digunakan adalah ini, maka semua device yang telah melebihi batas minimal akan dilakukan perubahan. </p></li><li data-v-38a34f0e><p data-v-38a34f0e><code data-v-38a34f0e>max-width</code>: jika yang digunakan adalah ini, maka semua device yang lebih kecil dari batas maksimal akan dilakukan perubahan </p></li><li data-v-38a34f0e><p data-v-38a34f0e><code data-v-38a34f0e>(min-width) and (max-width)</code>: Jika yang digunakan adalah ini maka hanya device yang telah melewati batas minimal, dan tidak melebihi batas maksimal akan mengalami perubahan. </p></li></ul><p data-v-38a34f0e>contoh code </p><pre data-v-38a34f0e><code data-v-38a34f0e>@<span class="hljs-keyword" data-v-38a34f0e>media</span> (min-width: <span class="hljs-number" data-v-38a34f0e>400px</span>) and (max-width: <span class="hljs-number" data-v-38a34f0e>500px</span>) {
  <span class="hljs-selector-tag" data-v-38a34f0e>body</span> {
    <span class="hljs-attribute" data-v-38a34f0e>background-color</span>: purple;
  }

<span class="hljs-comment" data-v-38a34f0e>/* ============= */</span>
@<span class="hljs-keyword" data-v-38a34f0e>media</span> (min-width: <span class="hljs-number" data-v-38a34f0e>400px</span>) {

<span class="hljs-selector-tag" data-v-38a34f0e>body</span> {
<span class="hljs-attribute" data-v-38a34f0e>background-color</span>: red;
}

}


<span class="hljs-comment" data-v-38a34f0e>/* ============= */</span>

@<span class="hljs-keyword" data-v-38a34f0e>media</span> (max-width: <span class="hljs-number" data-v-38a34f0e>600px</span>){

<span class="hljs-selector-tag" data-v-38a34f0e>body</span> {
<span class="hljs-attribute" data-v-38a34f0e>background-color</span>: purple;
}
}

<span class="hljs-comment" data-v-38a34f0e>/* ============= */</span>
</code></pre><h4 id="refrensi" data-v-38a34f0e>Refrensi</h4><ul data-v-38a34f0e><li data-v-38a34f0e><a href="https://id.wikipedia.org/wiki/Cascading_Style_Sheets" data-v-38a34f0e>https://id.wikipedia.org/wiki/Cascading_Style_Sheets</a></li><li data-v-38a34f0e><a href="https://www.w3schools.com/css/css_howto.asp" data-v-38a34f0e>https://www.w3schools.com/css/css_howto.asp</a></li><li data-v-38a34f0e><a href="https://www.freecodecamp.org/" data-v-38a34f0e>https://www.freecodecamp.org/</a></li><li data-v-38a34f0e><a href="https://css-tricks.com/a-complete-guide-to-css-media-queries/" data-v-38a34f0e>https://css-tricks.com/a-complete-guide-to-css-media-queries/</a> (media query)</li></ul>`,108)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},cf=ca(lf,[["__scopeId","data-v-38a34f0e"]]),pf={__name:"java",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="mari-belajar-bahasa-jawa-java-language-" data-v-ce7696b9>Mari Belajar Bahasa Jawa ( java language )</h1><h2 id="instalasi-java-debian-terminal" data-v-ce7696b9>instalasi java debian terminal</h2><pre data-v-ce7696b9><code data-v-ce7696b9>sudo apt <span class="hljs-keyword" data-v-ce7696b9>update</span>
sudo apt <span class="hljs-keyword" data-v-ce7696b9>install</span> <span class="hljs-keyword" data-v-ce7696b9>default</span>-jre <span class="hljs-keyword" data-v-ce7696b9>default</span>-jdk
</code></pre><p data-v-ce7696b9>Ref: <a href="https://www.digitalocean.com/community/tutorials/how-to-install-java-with-apt-on-ubuntu-20-04" data-v-ce7696b9>https://www.digitalocean.com/community/tutorials/how-to-install-java-with-apt-on-ubuntu-20-04</a></p><h2 id="compile-and-run" data-v-ce7696b9>Compile and run</h2><pre data-v-ce7696b9><code data-v-ce7696b9><span class="hljs-keyword" data-v-ce7696b9>javac </span>namafile.<span class="hljs-keyword" data-v-ce7696b9>java
</span><span class="hljs-keyword" data-v-ce7696b9>java </span>namafile
</code></pre><p data-v-ce7696b9>ref: <a href="https://www.javatpoint.com/how-to-compile-and-run-java-program" data-v-ce7696b9>https://www.javatpoint.com/how-to-compile-and-run-java-program</a></p><h2 id="point-penting-pada-java" data-v-ce7696b9>point penting pada java</h2><ul data-v-ce7696b9><li data-v-ce7696b9>jangan lupa semicolon pada setiap perintah</li></ul><h2 id="tahapan-belajar" data-v-ce7696b9>Tahapan Belajar</h2><ul data-v-ce7696b9><li data-v-ce7696b9>disediakan set code </li><li data-v-ce7696b9>dilakukan breakdown setiap baris ( jika telah dijelaskan pada kesempatan sebelumnya, maka baris tersebut tidak akan dijelaskan lagi )</li><li data-v-ce7696b9>catatan kecil mengenai hal baru yang telah dipelajari</li><li data-v-ce7696b9>untuk latihan lakukan penyelesaian kasus menggunakan ilmu yang telah dipelajari ( contoh kasus akan diberikan pada akhir halaman )</li></ul><h2 id="public-class-static-void-" data-v-ce7696b9>Public, class, static, void ?</h2><pre data-v-ce7696b9><code data-v-ce7696b9><span class="hljs-keyword" data-v-ce7696b9>public</span> <span class="hljs-keyword" data-v-ce7696b9>class</span> <span class="hljs-title" data-v-ce7696b9>start</span> { <span class="hljs-comment" data-v-ce7696b9>// Java run start</span>
    <span class="hljs-function" data-v-ce7696b9><span class="hljs-keyword" data-v-ce7696b9>public</span> <span class="hljs-keyword" data-v-ce7696b9>static</span> <span class="hljs-keyword" data-v-ce7696b9>void</span> <span class="hljs-title" data-v-ce7696b9>main</span>(<span class="hljs-params" data-v-ce7696b9>String[] args</span>) </span>{
        <span class="hljs-comment" data-v-ce7696b9>// Membuat variabel integer dengan nama &#39;angka&#39; dan memberinya nilai 7</span>
        <span class="hljs-keyword" data-v-ce7696b9>int</span> nilai = <span class="hljs-number" data-v-ce7696b9>1945</span>; <span class="hljs-comment" data-v-ce7696b9>// variabel &quot;nilai&quot;</span>

        <span class="hljs-comment" data-v-ce7696b9>// Menampilkan nilai variabel ke dalam terminal</span>
        System.<span class="hljs-keyword" data-v-ce7696b9>out</span>.println(<span class="hljs-string" data-v-ce7696b9>&quot;Nilai didalam variabel adalah&quot;</span> + nilai);
    }
}
<span class="hljs-comment" data-v-ce7696b9>// javac start.Java</span>
<span class="hljs-comment" data-v-ce7696b9>// java start</span>
</code></pre><blockquote data-v-ce7696b9><p data-v-ce7696b9>hasil breakdown </p></blockquote><p data-v-ce7696b9>Tentu, berikut adalah penjelasan untuk setiap baris kode tersebut:</p><ul data-v-ce7696b9><li data-v-ce7696b9><p data-v-ce7696b9>public class start :(awalan, deklarasi wajib sebuah publik class, yang dapat diakses oleh file atau class lainnya)</p></li><li data-v-ce7696b9><p data-v-ce7696b9>public static void main(string[] args) :(ini adalah kelompok pertama yang akan dieksekusi oleh file bernama &quot;main&quot;, sedangkan args digunakan untuk menerima perintah yang masuk)</p></li><li data-v-ce7696b9><p data-v-ce7696b9>int nilai = 1945; :( int digunakan untuk memberi tau java tipe data apa yang akan di input nanti, &quot;nilai&quot; adalah variabel, &quot;1945&quot; adalah value )</p></li><li data-v-ce7696b9><p data-v-ce7696b9>System.out.printLn(&quot;string bro &quot; + nilai); :(bertujuan menampilkan nilai didalam kurung buka)</p></li></ul><p data-v-ce7696b9>}: Menutup blok kode untuk metode main.</p><p data-v-ce7696b9>}: Menutup blok kode untuk kelas start.</p><p data-v-ce7696b9>// javac start.Java: Komentar yang menunjukkan perintah untuk mengkompilasi file Java. Namun, perlu diperhatikan bahwa Java bersifat case-sensitive, jadi seharusnya perintahnya adalah javac start.java.</p><p data-v-ce7696b9>// java start: Komentar yang menunjukkan perintah untuk menjalankan program Java yang telah dikompilasi.</p><blockquote data-v-ce7696b9><p data-v-ce7696b9>point penting</p></blockquote><pre data-v-ce7696b9><code data-v-ce7696b9>public class <span class="hljs-keyword" data-v-ce7696b9>start</span> { // <span class="hljs-keyword" data-v-ce7696b9>Java</span> run <span class="hljs-keyword" data-v-ce7696b9>start</span>
    <span class="hljs-keyword" data-v-ce7696b9>public</span> <span class="hljs-keyword" data-v-ce7696b9>static</span> <span class="hljs-built_in" data-v-ce7696b9>void</span> <span class="hljs-keyword" data-v-ce7696b9>main</span>(<span class="hljs-keyword" data-v-ce7696b9>String</span>[] args) {
        // Membuat variabel <span class="hljs-built_in" data-v-ce7696b9>integer</span> dengan nama <span class="hljs-string" data-v-ce7696b9>&#39;angka&#39;</span> dan memberinya nilai <span class="hljs-number" data-v-ce7696b9>7</span>
        <span class="hljs-built_in" data-v-ce7696b9>int</span> nilai = <span class="hljs-number" data-v-ce7696b9>1945</span>; // variabel &quot;nilai&quot;
</code></pre><hr data-v-ce7696b9><h2 id="array-satu-dimensi" data-v-ce7696b9>array satu dimensi</h2><p data-v-ce7696b9>Tentu, saya akan menjelaskan setiap baris dari kode Java yang Anda berikan:</p><pre data-v-ce7696b9><code class="lang-java" data-v-ce7696b9>public class start { // Mendeklarasikan kelas dengan nama <span class="hljs-string" data-v-ce7696b9>&quot;start&quot;</span>
   <span class="hljs-keyword" data-v-ce7696b9> public</span><span class="hljs-keyword" data-v-ce7696b9> static</span> void main(String[] args) { // Metode utama yang akan dijalankan oleh JVM (Java Virtual Machine)
        // Membuat variabel<span class="hljs-built_in" data-v-ce7696b9> array
</span>        int[] arraySatu = {12,10,40}; // Inisialisasi<span class="hljs-built_in" data-v-ce7696b9> array </span><span class="hljs-string" data-v-ce7696b9>&quot;arraySatu&quot;</span> dengan tiga elemen: 12, 10, dan 40

        // Menampilkan nilai variabel ke dalam terminal
        System.out.print(<span class="hljs-string" data-v-ce7696b9>&quot;Array: [&quot;</span>); // Mencetak teks <span class="hljs-string" data-v-ce7696b9>&quot;Array: [&quot;</span> tanpa baris baru di akhir
        for (int i = 0; i &lt; arraySatu.length; i++) { // Perulangan for untuk mengakses setiap elemen<span class="hljs-built_in" data-v-ce7696b9> array
</span>            System.out.print(arraySatu[i]); // Mencetak elemen saat ini dari<span class="hljs-built_in" data-v-ce7696b9> array </span><span class="hljs-string" data-v-ce7696b9>&quot;arraySatu&quot;</span>
           <span class="hljs-built_in" data-v-ce7696b9> if </span>(i &lt; arraySatu.length - 1) { // Jika ini bukan elemen terakhir dari array,
                System.out.print(<span class="hljs-string" data-v-ce7696b9>&quot;, &quot;</span>); // maka cetak koma dan spasi
            }
        }
        System.out.println(<span class="hljs-string" data-v-ce7696b9>&quot;]&quot;</span>); // Mencetak tanda kurung tutup <span class="hljs-string" data-v-ce7696b9>&quot;]&quot;</span> dan baris baru
    }
}
</code></pre><blockquote data-v-ce7696b9><p data-v-ce7696b9>breakdown</p></blockquote><ul data-v-ce7696b9><li data-v-ce7696b9><code data-v-ce7696b9>public class start</code>: Ini mendeklarasikan kelas dengan nama <code data-v-ce7696b9>start</code>. Di Java, setiap file harus memiliki setidaknya satu kelas, dan nama kelas harus sama dengan nama file jika kelas tersebut adalah kelas publik.</li><li data-v-ce7696b9><code data-v-ce7696b9>public static void main(String[] args)</code>: Ini adalah metode <code data-v-ce7696b9>main</code> yang merupakan titik masuk dari setiap aplikasi Java. <code data-v-ce7696b9>String[] args</code> adalah parameter yang digunakan untuk menerima argumen baris perintah saat menjalankan program.</li><li data-v-ce7696b9><code data-v-ce7696b9>int[] arraySatu = {12,10,40};</code>: Ini mendeklarasikan dan menginisialisasi sebuah array integer bernama <code data-v-ce7696b9>arraySatu</code> dengan tiga nilai: 12, 10, dan 40.</li><li data-v-ce7696b9><code data-v-ce7696b9>System.out.print(&quot;Array: [&quot;);</code>: Ini mencetak string <code data-v-ce7696b9>&quot;Array: [&quot;</code> ke konsol tanpa menambahkan baris baru di akhir.</li><li data-v-ce7696b9><code data-v-ce7696b9>for (int i = 0; i &lt; arraySatu.length; i++)</code>: Ini adalah perulangan <code data-v-ce7696b9>for</code> yang digunakan untuk mengiterasi melalui setiap elemen dari array <code data-v-ce7696b9>arraySatu</code>.</li><li data-v-ce7696b9><code data-v-ce7696b9>System.out.print(arraySatu[i]);</code>: Ini mencetak elemen saat ini dari array <code data-v-ce7696b9>arraySatu</code> ke konsol.</li><li data-v-ce7696b9><code data-v-ce7696b9>if (i &lt; arraySatu.length - 1)</code>: Ini adalah kondisi yang memeriksa apakah elemen saat ini bukan elemen terakhir dari array. Jika tidak, maka cetak koma dan spasi.</li><li data-v-ce7696b9><code data-v-ce7696b9>System.out.println(&quot;]&quot;);</code>: Ini mencetak tanda kurung tutup <code data-v-ce7696b9>&quot;]&quot;</code> dan menambahkan baris baru di akhir.</li></ul><p data-v-ce7696b9>Perintah <code data-v-ce7696b9>// javac start.Java</code> digunakan untuk mengkompilasi file <code data-v-ce7696b9>start.Java</code> dan <code data-v-ce7696b9>// java start</code> digunakan untuk menjalankan kelas <code data-v-ce7696b9>start</code> yang telah dikompilasi. Pastikan bahwa nama file dan nama kelas sesuai, dan perhatikan bahwa Java peka terhadap huruf besar/kecil, jadi <code data-v-ce7696b9>start.Java</code> harus ditulis sebagai <code data-v-ce7696b9>start.java</code>.</p><blockquote data-v-ce7696b9><p data-v-ce7696b9>point penting </p></blockquote><pre data-v-ce7696b9><code data-v-ce7696b9>int[] arraySatu = {12,10,40}; // Inisialisasi<span class="hljs-built_in" data-v-ce7696b9> array </span><span class="hljs-string" data-v-ce7696b9>&quot;arraySatu&quot;</span> dengan tiga elemen: 12, 10, dan 40

        // Menampilkan nilai variabel ke dalam terminal
        System.out.print(<span class="hljs-string" data-v-ce7696b9>&quot;Array: [&quot;</span>); // Mencetak teks <span class="hljs-string" data-v-ce7696b9>&quot;Array: [&quot;</span> tanpa baris baru di akhir
        for (int i = 0; i &lt; arraySatu.length; i++) { // Perulangan for untuk mengakses setiap elemen<span class="hljs-built_in" data-v-ce7696b9> array
</span>            System.out.print(arraySatu[i]); // Mencetak elemen saat ini dari<span class="hljs-built_in" data-v-ce7696b9> array </span><span class="hljs-string" data-v-ce7696b9>&quot;arraySatu&quot;</span>
           <span class="hljs-built_in" data-v-ce7696b9> if </span>(i &lt; arraySatu.length - 1) { // Jika ini bukan elemen terakhir dari array,
                System.out.print(<span class="hljs-string" data-v-ce7696b9>&quot;, &quot;</span>); // maka cetak koma dan spasi
            }
</code></pre><hr data-v-ce7696b9><h2 id="array-matriks-3x3" data-v-ce7696b9>array matriks 3x3</h2><p data-v-ce7696b9>Tentu saja, berikut adalah penjelasan untuk setiap baris kode Java yang Anda berikan:</p><pre data-v-ce7696b9><code class="lang-java" data-v-ce7696b9>public class start { // Mendeklarasikan kelas dengan nama <span class="hljs-string" data-v-ce7696b9>&quot;start&quot;</span>
   <span class="hljs-keyword" data-v-ce7696b9> public</span><span class="hljs-keyword" data-v-ce7696b9> static</span> void main(String[] args) { // Metode utama yang akan dijalankan oleh JVM (Java Virtual Machine)
        // Matriks array, variabel arrayDua
        int[][] arrayDua = {
            {12, 10, 40}, // Baris pertama dari matriks<span class="hljs-built_in" data-v-ce7696b9> array
</span>            {13, 11, 41}, // Baris kedua dari matriks<span class="hljs-built_in" data-v-ce7696b9> array
</span>            {14, 12, 42}  // Baris ketiga dari matriks<span class="hljs-built_in" data-v-ce7696b9> array
</span>        }; // Inisialisasi<span class="hljs-built_in" data-v-ce7696b9> array </span>dua dimensi <span class="hljs-string" data-v-ce7696b9>&quot;arrayDua&quot;</span> dengan nilai-nilai yang diberikan

        // Menampilkan isi<span class="hljs-built_in" data-v-ce7696b9> array </span>dua dimensi ke dalam terminal, secara manual
        for (int i = 0; i &lt; 3; i++) { // Loop luar untuk baris
            for (int j = 0; j &lt; 3; j++) { // Loop dalam untuk kolom
                System.out.print(arrayDua[i][j] + <span class="hljs-string" data-v-ce7696b9>&quot; &quot;</span>); // Mencetak elemen<span class="hljs-built_in" data-v-ce7696b9> array </span>dua dimensi
            }
            System.out.println(); // Mencetak baris baru setelah setiap baris dari matriks
        }
    }
}
</code></pre><blockquote data-v-ce7696b9><p data-v-ce7696b9>breakdown </p><ul data-v-ce7696b9><li data-v-ce7696b9><code data-v-ce7696b9>public class start</code>: Ini mendeklarasikan kelas dengan nama <code data-v-ce7696b9>start</code>. Di Java, setiap file harus memiliki setidaknya satu kelas, dan nama kelas harus sama dengan nama file jika kelas tersebut adalah kelas publik.</li><li data-v-ce7696b9><code data-v-ce7696b9>public static void main(String[] args)</code>: Ini adalah metode <code data-v-ce7696b9>main</code> yang merupakan titik masuk dari setiap aplikasi Java. <code data-v-ce7696b9>String[] args</code> adalah parameter yang digunakan untuk menerima argumen baris perintah saat menjalankan program.</li><li data-v-ce7696b9><code data-v-ce7696b9>int[][] arrayDua = {...};</code>: Ini mendeklarasikan dan menginisialisasi sebuah array dua dimensi integer bernama <code data-v-ce7696b9>arrayDua</code> dengan tiga baris dan tiga kolom, diisi dengan nilai-nilai yang diberikan.</li><li data-v-ce7696b9><code data-v-ce7696b9>for (int i = 0; i &lt; 3; i++)</code>: Ini adalah loop luar yang digunakan untuk mengiterasi melalui setiap baris dari array <code data-v-ce7696b9>arrayDua</code>.</li><li data-v-ce7696b9><code data-v-ce7696b9>for (int j = 0; j &lt; 3; j++)</code>: Ini adalah loop dalam yang digunakan untuk mengiterasi melalui setiap kolom dalam baris saat ini dari array <code data-v-ce7696b9>arrayDua</code>.</li><li data-v-ce7696b9><code data-v-ce7696b9>System.out.print(arrayDua[i][j] + &quot; &quot;);</code>: Ini mencetak elemen saat ini dari array <code data-v-ce7696b9>arrayDua</code> ditambah dengan spasi ke konsol.</li><li data-v-ce7696b9><code data-v-ce7696b9>System.out.println();</code>: Ini mencetak baris baru ke konsol, yang menyebabkan output dari baris berikutnya dari array <code data-v-ce7696b9>arrayDua</code> akan dimulai dari baris baru.</li></ul></blockquote><p data-v-ce7696b9>Perintah <code data-v-ce7696b9>// javac start.Java</code> digunakan untuk mengkompilasi file <code data-v-ce7696b9>start.Java</code> dan <code data-v-ce7696b9>// java start</code> digunakan untuk menjalankan kelas <code data-v-ce7696b9>start</code> yang telah dikompilasi. Pastikan bahwa nama file dan nama kelas sesuai, dan perhatikan bahwa Java peka terhadap huruf besar/kecil, jadi <code data-v-ce7696b9>start.Java</code> harus ditulis sebagai <code data-v-ce7696b9>start.java</code>.</p><blockquote data-v-ce7696b9><p data-v-ce7696b9>point penting </p></blockquote><pre data-v-ce7696b9><code class="lang-java" data-v-ce7696b9>        int[][] arrayDua = {
            {12, 10, 40}, // Baris pertama dari matriks<span class="hljs-built_in" data-v-ce7696b9> array
</span>            {13, 11, 41}, // Baris kedua dari matriks<span class="hljs-built_in" data-v-ce7696b9> array
</span>            {14, 12, 42}  // Baris ketiga dari matriks<span class="hljs-built_in" data-v-ce7696b9> array
</span>        }; // Inisialisasi<span class="hljs-built_in" data-v-ce7696b9> array </span>dua dimensi <span class="hljs-string" data-v-ce7696b9>&quot;arrayDua&quot;</span> dengan nilai-nilai yang diberikan
</code></pre><h2 id="latihan-java" data-v-ce7696b9>Latihan java</h2><p data-v-ce7696b9><a href="../latihan-bahasa/latihan-java.md" data-v-ce7696b9>latihan java</a></p><h2 id="topic-lanjutan" data-v-ce7696b9>Topic lanjutan</h2><ul data-v-ce7696b9><li data-v-ce7696b9><a href="./fundamental-java.md" data-v-ce7696b9>Fundamental</a></li><li data-v-ce7696b9><a href="./array-java.md" data-v-ce7696b9>Array</a></li></ul>`,43)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},rf=ca(pf,[["__scopeId","data-v-ce7696b9"]]),of={__name:"javascript",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[6]||(s[6]=Z(`<h1 id="sample-markdown" data-v-3361323d>Sample Markdown</h1><h1 id="javascript" data-v-3361323d>Javascript</h1><h2 id="table-of-content" data-v-3361323d>Table of content</h2><ul data-v-3361323d><li data-v-3361323d><a href="#01" data-v-3361323d>comment</a></li><li data-v-3361323d><a href="#02" data-v-3361323d>Variabel</a></li><li data-v-3361323d><a href="#03" data-v-3361323d>if statement</a></li><li data-v-3361323d><a href="#04" data-v-3361323d>Menambahkan variabel ke template string</a></li><li data-v-3361323d><a href="#05" data-v-3361323d>loops and iteration</a></li><li data-v-3361323d><a href="#06" data-v-3361323d>do..while</a></li><li data-v-3361323d><a href="#07" data-v-3361323d>while statement</a></li><li data-v-3361323d><a href="#08" data-v-3361323d>Labeled statement</a></li><li data-v-3361323d><a href="#09" data-v-3361323d>Conver a string to into number</a></li><li data-v-3361323d><a href="#10" data-v-3361323d>function</a></li><li data-v-3361323d><a href="#11" data-v-3361323d>parameters</a></li><li data-v-3361323d><a href="#12" data-v-3361323d>return value</a></li><li data-v-3361323d><a href="#13" data-v-3361323d>get the last element in array</a></li><li data-v-3361323d><a href="#14" data-v-3361323d>function expression</a></li><li data-v-3361323d><a href="#15" data-v-3361323d>function arrow</a></li><li data-v-3361323d><a href="#16" data-v-3361323d>callback function</a></li><li data-v-3361323d><a href="#17" data-v-3361323d>rest parameters</a></li><li data-v-3361323d><a href="#18" data-v-3361323d>object notation</a></li><li data-v-3361323d><a href="#19" data-v-3361323d>class syntax</a></li><li data-v-3361323d><a href="#20" data-v-3361323d>what is a class</a></li><li data-v-3361323d><a href="#21" data-v-3361323d>class expression</a></li><li data-v-3361323d><a href="#22" data-v-3361323d>Getters / stters</a></li><li data-v-3361323d><a href="#23" data-v-3361323d>computed names</a></li><li data-v-3361323d><a href="#24" data-v-3361323d>class fields</a></li><li data-v-3361323d><a href="#25" data-v-3361323d>class inheritance</a></li><li data-v-3361323d><a href="#26" data-v-3361323d>inheritance</a></li><li data-v-3361323d><a href="#27" data-v-3361323d>encapsulation programming</a></li><li data-v-3361323d><a href="#28" data-v-3361323d>For each</a></li><li data-v-3361323d><a href="#29" data-v-3361323d>Array find</a></li><li data-v-3361323d><a href="#30" data-v-3361323d>filter</a></li><li data-v-3361323d><a href="#31" data-v-3361323d>map</a></li><li data-v-3361323d><a href="#32" data-v-3361323d>exports and require</a></li><li data-v-3361323d><a href="#33" data-v-3361323d>Module exports</a></li></ul><p data-v-3361323d>file format untuk javascript adalah .js, Untuk menjalankan javascript bisa menggunakan:</p><ol data-v-3361323d><li data-v-3361323d>web browser console </li><li data-v-3361323d>Terminal linux ( dengan menggunakan &#39;node&#39; application)</li></ol><p data-v-3361323d>“ECMAScript is a standard.”</p><p data-v-3361323d>“JavaScript is a standard.”</p><p data-v-3361323d>“ECMAScript is a specification.”</p><p data-v-3361323d>“JavaScript is an implementation of the ECMAScript standard.”</p><p data-v-3361323d>“ECMAScript is standardized JavaScript.”</p><p data-v-3361323d>“ECMAScript is a language.”</p><p data-v-3361323d>“JavaScript is a dialect of ECMAScript.”</p><p data-v-3361323d>“ECMAScript is JavaScript.”</p><p data-v-3361323d>JavaScript engines are commonly found in web browsers, including V8 in Chrome, SpiderMonkey in Firefox, and Chakra in Edge. Each engine is like a language module for its application, allowing it to support a certain subset of the JavaScript language.</p><p data-v-3361323d>source: <a href="https://www.freecodecamp.org/news/whats-the-difference-between-javascript-and-ecmascript-cba48c73a2b5/" data-v-3361323d>https://www.freecodecamp.org/news/whats-the-difference-between-javascript-and-ecmascript-cba48c73a2b5/</a></p><h2 id="paradigma-programming" data-v-3361323d>Paradigma programming</h2><p data-v-3361323d>Ada beberapa paradigma pemrograman yang berbeda, masing-masing memiliki ciri khas dan cara pandang yang berbeda dalam mengatasi masalah. Berikut adalah beberapa paradigma pemrograman yang umum:</p><p data-v-3361323d>Paradigma Pemrograman Prosedural: pendekatan yang fokus pada urutan instruksi yang dilakukan pada data.</p><p data-v-3361323d>Paradigma Pemrograman Fungsional: pendekatan yang lebih fokus pada fungsi, atau bagaimana data dimanipulasi dan diproses dalam program.</p><p data-v-3361323d>Paradigma Pemrograman Berorientasi Objek: pendekatan yang mengorganisir program dalam objek yang terdiri dari data dan metode yang dapat memanipulasi data tersebut.</p><h2 id="comment" data-v-3361323d>Comment</h2><h3 id="01" data-v-3361323d>01</h3><p data-v-3361323d>Penulisan komentar pada Javascript </p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-comment" data-v-3361323d>// Menulis komentar satu baris </span>
<span class="hljs-comment" data-v-3361323d>/*
Penulisan komentar yang terkelompok,
bisa dua baris ataupun lebih 
*/</span>
</code></pre><h2 id="variabel" data-v-3361323d>Variabel</h2><h3 id="02" data-v-3361323d>02</h3><p data-v-3361323d>Varibel adalan sebuah fungsi untuk menyimpan data. Beberapa cara declarasi variabel </p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-attr" data-v-3361323d>var_a</span> = <span class="hljs-number" data-v-3361323d>10</span>
<span class="hljs-keyword" data-v-3361323d>let</span> <span class="hljs-attr" data-v-3361323d>var_b</span> = <span class="hljs-number" data-v-3361323d>10</span>
const <span class="hljs-attr" data-v-3361323d>var_c</span> = <span class="hljs-number" data-v-3361323d>10</span>
</code></pre><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>let</span> <span class="hljs-attr" data-v-3361323d>user</span> = <span class="hljs-string" data-v-3361323d>&quot;Budi&quot;</span>,
    <span class="hljs-attr" data-v-3361323d>umur</span> = <span class="hljs-number" data-v-3361323d>25</span>
</code></pre><p data-v-3361323d>Tidak boleh melakukan declarasi 2 kali dalam satu ruang</p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>let</span> <span class="hljs-attr" data-v-3361323d>user</span>  = <span class="hljs-string" data-v-3361323d>&quot;budi&quot;</span>

<span class="hljs-keyword" data-v-3361323d>let</span> <span class="hljs-attr" data-v-3361323d>user</span> = <span class="hljs-string" data-v-3361323d>&quot;bambang&quot;</span>

// akan muncul SyntaxError
</code></pre><p data-v-3361323d>Didalam penamaan variabel, tidak boleh ada angka dipaling depan variabel </p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>let</span> <span class="hljs-number" data-v-3361323d>01</span>halo = <span class="hljs-string" data-v-3361323d>&quot;text&quot;</span>

<span class="hljs-comment" data-v-3361323d>// akan ada error</span>
</code></pre><p data-v-3361323d>Refrence: <a href="https://javascript.info/variables" data-v-3361323d>https://javascript.info/variables</a></p><h2 id="if-statement" data-v-3361323d>If statement</h2><h3 id="03" data-v-3361323d>03</h3><p data-v-3361323d>Dengan if statement kita bisa membuat instruksi yang akan dijalanakan jika persyaratan sudah terpenuhi</p><pre data-v-3361323d><code data-v-3361323d>let <span class="hljs-built_in" data-v-3361323d>year</span> = <span class="hljs-number" data-v-3361323d>2022</span>
<span class="hljs-keyword" data-v-3361323d>if</span> (<span class="hljs-built_in" data-v-3361323d>year</span> == <span class="hljs-number" data-v-3361323d>2022</span>) console.<span class="hljs-built_in" data-v-3361323d>log</span>(<span class="hljs-string" data-v-3361323d>&quot;tahun 2022&quot;</span>)
<span class="hljs-comment" data-v-3361323d>// Output tahun 2022</span>
</code></pre><pre data-v-3361323d><code data-v-3361323d>let <span class="hljs-built_in" data-v-3361323d>year</span> = <span class="hljs-number" data-v-3361323d>2022</span> 
<span class="hljs-keyword" data-v-3361323d>if</span> (<span class="hljs-built_in" data-v-3361323d>year</span> == <span class="hljs-number" data-v-3361323d>2022</span>) {
    console.<span class="hljs-built_in" data-v-3361323d>log</span>(<span class="hljs-string" data-v-3361323d>&quot;tahun 2022 &quot;</span>)
}

<span class="hljs-comment" data-v-3361323d>// output</span>
<span class="hljs-comment" data-v-3361323d>// tahun 2022</span>
</code></pre><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>let</span> var_a = <span class="hljs-number" data-v-3361323d>10</span> 

<span class="hljs-keyword" data-v-3361323d>if</span> (var_a == <span class="hljs-number" data-v-3361323d>10</span>){
    <span class="hljs-built_in" data-v-3361323d>console</span>.log(<span class="hljs-string" data-v-3361323d>&#39;10&#39;</span>)
} <span class="hljs-keyword" data-v-3361323d>else</span> <span class="hljs-keyword" data-v-3361323d>if</span> (var_a &gt; <span class="hljs-number" data-v-3361323d>10</span>) {
    <span class="hljs-built_in" data-v-3361323d>console</span>.log(<span class="hljs-string" data-v-3361323d>&#39;11&#39;</span>)
} <span class="hljs-keyword" data-v-3361323d>else</span> {
<span class="hljs-built_in" data-v-3361323d>console</span>.log(<span class="hljs-string" data-v-3361323d>&#39;9&#39;</span>)
}
</code></pre><h3 id="inline-if-statement-conditional-operator-" data-v-3361323d>Inline if statement(Conditional operator)</h3><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>let</span> <span class="hljs-attr" data-v-3361323d>var_a</span> = (<span class="hljs-number" data-v-3361323d>2022</span>)

<span class="hljs-keyword" data-v-3361323d>let</span> <span class="hljs-attr" data-v-3361323d>year</span> = ( <span class="hljs-attr" data-v-3361323d>var_a</span> == <span class="hljs-number" data-v-3361323d>2022</span> ) ? <span class="hljs-string" data-v-3361323d>&quot;sekarang tahun 2022&quot;</span> : <span class="hljs-string" data-v-3361323d>&quot;sekarang bukan 2022&quot;</span>

// <span class="hljs-literal" data-v-3361323d>true</span> : <span class="hljs-literal" data-v-3361323d>false</span> 
// sekarang tahun <span class="hljs-number" data-v-3361323d>2022</span>
</code></pre><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>let</span> age = <span class="hljs-number" data-v-3361323d>18</span>;

<span class="hljs-keyword" data-v-3361323d>let</span> message = (age &lt; <span class="hljs-number" data-v-3361323d>3</span>) ? <span class="hljs-string" data-v-3361323d>&#39;Hi, baby!&#39;</span> :
  (age &lt; <span class="hljs-number" data-v-3361323d>18</span>) ? <span class="hljs-string" data-v-3361323d>&#39;Hello!&#39;</span> :
  (age &lt; <span class="hljs-number" data-v-3361323d>100</span>) ? <span class="hljs-string" data-v-3361323d>&#39;Greetings!&#39;</span> :
  <span class="hljs-string" data-v-3361323d>&#39;What an unusual age!&#39;</span>;

<span class="hljs-built_in" data-v-3361323d>console</span>.log(message)
<span class="hljs-comment" data-v-3361323d>// Greetings!</span>
</code></pre><p data-v-3361323d>SOurce: <a href="https://javascript.info/ifelse" data-v-3361323d>https://javascript.info/ifelse</a></p><h2 id="menambahkan-variabel-kedalam-string-template-litteral-" data-v-3361323d>Menambahkan variabel kedalam string (Template litteral)</h2><h3 id="04" data-v-3361323d>04</h3><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>let</span> budi = <span class="hljs-string" data-v-3361323d>&quot;nama siswa&quot;</span>
<span class="hljs-keyword" data-v-3361323d>let</span> var_a = \`halo \${budi}\`
</code></pre><p data-v-3361323d>src: <a href="https://www.freecodecamp.org/news/javascript-switch-case-js-switch-statement-example/" data-v-3361323d>https://www.freecodecamp.org/news/javascript-switch-case-js-switch-statement-example/</a> (case statement)</p><h2 id="loops-and-iteration" data-v-3361323d>Loops and iteration</h2><h3 id="05" data-v-3361323d>05</h3><p data-v-3361323d>Loop dapat membuat sebuah instruksi yang berulang.</p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>for</span> (<span class="hljs-keyword" data-v-3361323d>let</span> langkah = <span class="hljs-number" data-v-3361323d>0</span>; langkah &lt; <span class="hljs-number" data-v-3361323d>5</span>; langkah++){
    <span class="hljs-built_in" data-v-3361323d>console</span>.log(<span class="hljs-string" data-v-3361323d>&#39;berjalan satu langkah&#39;</span>)
}
</code></pre><h4 id="for-structure" data-v-3361323d>For structure</h4><pre data-v-3361323d><code data-v-3361323d>for (<span class="hljs-string" data-v-3361323d>[initialExpression]</span>; <span class="hljs-string" data-v-3361323d>[conditionExpression]</span>; <span class="hljs-string" data-v-3361323d>[incrementExpression]</span>)
  statement
</code></pre><ol data-v-3361323d><li data-v-3361323d>&quot;initialExpression&quot; biasannya sebagai loop counter (jumlah loop)</li><li data-v-3361323d>&quot;conditionExpression&quot; adalah requirement dalam if statement ( jika memenuhi persyaratan maka akan dijalanakan )</li><li data-v-3361323d>&quot;statement&quot; <code data-v-3361323d>{...}</code></li><li data-v-3361323d>Setelah dijalankan instruksi selanjutnya. dilakukan increment pada literal</li><li data-v-3361323d>kembali ke step conditionExpression</li></ol><h2 id="do-while" data-v-3361323d>do...while</h2><h3 id="06" data-v-3361323d>06</h3><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>do</span> {<span class="hljs-keyword" data-v-3361323d>statement</span>}
<span class="hljs-keyword" data-v-3361323d>while</span> (condition);
</code></pre><p data-v-3361323d>Jika condition itu &quot;true&quot; maka statement akan terus dijalankan.</p><p data-v-3361323d>sebagai contoh</p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>let</span> i = <span class="hljs-number" data-v-3361323d>0</span>;
<span class="hljs-keyword" data-v-3361323d>do</span> {
  i += <span class="hljs-number" data-v-3361323d>1</span>;
  console.<span class="hljs-built_in" data-v-3361323d>log</span>(i);
} <span class="hljs-keyword" data-v-3361323d>while</span> (i &lt; <span class="hljs-number" data-v-3361323d>5</span>);
</code></pre><h2 id="while-statement" data-v-3361323d>While statement</h2><h3 id="07" data-v-3361323d>07</h3><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>while</span> (<span class="hljs-keyword" data-v-3361323d>condition</span>)
{statement}
</code></pre><pre data-v-3361323d><code data-v-3361323d>let <span class="hljs-built_in" data-v-3361323d>n</span> = <span class="hljs-number" data-v-3361323d>0</span>;
let x = <span class="hljs-number" data-v-3361323d>0</span>;
while (<span class="hljs-built_in" data-v-3361323d>n</span> &lt; <span class="hljs-number" data-v-3361323d>3</span>) {
  <span class="hljs-built_in" data-v-3361323d>n</span>++;
  x += <span class="hljs-built_in" data-v-3361323d>n</span>;
}
</code></pre><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>let</span> main = <span class="hljs-literal" data-v-3361323d>true</span>
<span class="hljs-keyword" data-v-3361323d>let</span> <span class="hljs-keyword" data-v-3361323d>value</span> = <span class="hljs-number" data-v-3361323d>0</span>
<span class="hljs-keyword" data-v-3361323d>while</span> (main) {
  <span class="hljs-keyword" data-v-3361323d>value</span> += <span class="hljs-number" data-v-3361323d>1</span>
  <span class="hljs-keyword" data-v-3361323d>if</span> (<span class="hljs-keyword" data-v-3361323d>value</span> == <span class="hljs-number" data-v-3361323d>5</span>){
    console.log(<span class="hljs-string" data-v-3361323d>&#39;end&#39;</span>)
    main = <span class="hljs-literal" data-v-3361323d>false</span>}
}
</code></pre><h2 id="labeled-statement" data-v-3361323d>Labeled statement</h2><h3 id="08" data-v-3361323d>08</h3><p data-v-3361323d>dengan labeled statement kita bisa menutup loop kita tuju dengan lebih spesifik.</p><p data-v-3361323d>tidak harus menggunakan &quot;break&quot;, kita juga bisa gunakan &quot;continue&quot; untuk restart loop dari awal lagi </p><p data-v-3361323d>contoh:</p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>let</span> x = <span class="hljs-number" data-v-3361323d>0</span>;
<span class="hljs-keyword" data-v-3361323d>let</span> z = <span class="hljs-number" data-v-3361323d>0</span>;
labelCancelLoops: <span class="hljs-keyword" data-v-3361323d>while</span> (<span class="hljs-literal" data-v-3361323d>true</span>) {
  <span class="hljs-built_in" data-v-3361323d>console</span>.log(<span class="hljs-string" data-v-3361323d>&#39;Outer loops: &#39;</span> + x);
  x += <span class="hljs-number" data-v-3361323d>1</span>;
  z = <span class="hljs-number" data-v-3361323d>1</span>;
  <span class="hljs-keyword" data-v-3361323d>while</span> (<span class="hljs-literal" data-v-3361323d>true</span>) {
    <span class="hljs-built_in" data-v-3361323d>console</span>.log(<span class="hljs-string" data-v-3361323d>&#39;Inner loops: &#39;</span> + z);
    z += <span class="hljs-number" data-v-3361323d>1</span>;
    <span class="hljs-keyword" data-v-3361323d>if</span> (z === <span class="hljs-number" data-v-3361323d>10</span> &amp;&amp; x === <span class="hljs-number" data-v-3361323d>10</span>) {
      <span class="hljs-keyword" data-v-3361323d>break</span> labelCancelLoops;
    } <span class="hljs-keyword" data-v-3361323d>else</span> <span class="hljs-keyword" data-v-3361323d>if</span> (z === <span class="hljs-number" data-v-3361323d>10</span>) {
      <span class="hljs-keyword" data-v-3361323d>break</span>;
    }
  }
}
</code></pre><h2 id="for-in" data-v-3361323d>For in</h2><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>let</span> makanan = [<span class="hljs-string" data-v-3361323d>&#39;nasi&#39;</span>, <span class="hljs-string" data-v-3361323d>&#39;tahu&#39;</span>, <span class="hljs-string" data-v-3361323d>&#39;tempe&#39;</span>]

<span class="hljs-keyword" data-v-3361323d>for</span> (<span class="hljs-keyword" data-v-3361323d>let</span> i <span class="hljs-keyword" data-v-3361323d>in</span> makanan ){
  <span class="hljs-built_in" data-v-3361323d>console</span>.log(i)
}

<span class="hljs-comment" data-v-3361323d>// 0 1 2</span>
</code></pre><h2 id="for-of" data-v-3361323d>for of</h2><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>let</span> makanan = [<span class="hljs-string" data-v-3361323d>&#39;nasi&#39;</span>, <span class="hljs-string" data-v-3361323d>&#39;tahu&#39;</span>, <span class="hljs-string" data-v-3361323d>&#39;tempe&#39;</span>]

<span class="hljs-keyword" data-v-3361323d>for</span> (<span class="hljs-keyword" data-v-3361323d>let</span> i <span class="hljs-keyword" data-v-3361323d>of</span> makanan ){
  <span class="hljs-built_in" data-v-3361323d>console</span>.log(i)
}

<span class="hljs-comment" data-v-3361323d>// nasi tahu tempe</span>
</code></pre><p data-v-3361323d>source: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration?retiredLocale=id" data-v-3361323d>https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration?retiredLocale=id</a></p><h2 id="convert-a-string-to-number" data-v-3361323d>Convert a string to number</h2><h3 id="09" data-v-3361323d>09</h3><ol data-v-3361323d><li data-v-3361323d><code data-v-3361323d>parseInt()</code></li></ol><pre data-v-3361323d><code data-v-3361323d>myString = <span class="hljs-string" data-v-3361323d>&#39;140&#39;</span>
<span class="hljs-comment" data-v-3361323d>// 140 </span>

<span class="hljs-selector-tag" data-v-3361323d>a</span> = <span class="hljs-number" data-v-3361323d>34.22</span>
<span class="hljs-comment" data-v-3361323d>// 34</span>
</code></pre><ol data-v-3361323d><li data-v-3361323d><code data-v-3361323d>Number()</code></li></ol><pre data-v-3361323d><code data-v-3361323d><span class="hljs-built_in" data-v-3361323d>Number</span>(<span class="hljs-string" data-v-3361323d>&quot;10&quot;</span>);          <span class="hljs-comment" data-v-3361323d>// 10 </span>
<span class="hljs-built_in" data-v-3361323d>Number</span>(<span class="hljs-string" data-v-3361323d>&quot; 10  &quot;</span>);       <span class="hljs-comment" data-v-3361323d>// 10</span>
<span class="hljs-built_in" data-v-3361323d>Number</span>(<span class="hljs-string" data-v-3361323d>&quot;10.33&quot;</span>);       <span class="hljs-comment" data-v-3361323d>// 10.33</span>
</code></pre><p data-v-3361323d>src: <a href="https://dev.to/sanchithasr/7-ways-to-convert-a-string-to-number-in-javascript-4l" data-v-3361323d>https://dev.to/sanchithasr/7-ways-to-convert-a-string-to-number-in-javascript-4l</a></p><h2 id="function-es5" data-v-3361323d>Function | ES5</h2><h3 id="10" data-v-3361323d>10</h3><pre data-v-3361323d><code data-v-3361323d><span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>function</span> <span class="hljs-title" data-v-3361323d>namaFungsi</span>(<span class="hljs-params" data-v-3361323d></span>)</span>{
    <span class="hljs-built_in" data-v-3361323d>console</span>.log(<span class="hljs-string" data-v-3361323d>&#39;halo&#39;</span>)
}
</code></pre><pre data-v-3361323d><code data-v-3361323d><span class="hljs-function" data-v-3361323d><span class="hljs-title" data-v-3361323d>namaFungsi</span><span class="hljs-params" data-v-3361323d>()</span></span>
</code></pre><p data-v-3361323d>Dengan menggunakan Function kita bisa menggunakan block code tersebut kapan saja </p><p data-v-3361323d><strong data-v-3361323d>Local variabel</strong></p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>function</span> <span class="hljs-title" data-v-3361323d>myFunction</span>(<span class="hljs-params" data-v-3361323d></span>)</span>{
    <span class="hljs-keyword" data-v-3361323d>let</span> var_a = <span class="hljs-string" data-v-3361323d>&quot;hello&quot;</span>
}
</code></pre><p data-v-3361323d><strong data-v-3361323d>catatan tambahan function</strong></p><p data-v-3361323d>Ekspression function dan function biasa telah ada dari versi &#39;ES5&#39;, function versi &#39;ES6&#39; adalah penambahan arrow function. </p><p data-v-3361323d>Pada node js, mereka akan mengutamakan function, oleh karena itu jika kita pangil function lalu tulis function tersebut pada baris terakhir, mereka akan terpangil normal. <strong data-v-3361323d>Hanya berlaku pada function normal</strong></p><p data-v-3361323d>ref: <a href="https://medium.com/@zac_heisey/es5-vs-es6-functions-cb51536002ee" data-v-3361323d>https://medium.com/@zac_heisey/es5-vs-es6-functions-cb51536002ee</a></p><h2 id="parameters" data-v-3361323d>Parameters</h2><h3 id="11" data-v-3361323d>11</h3><pre data-v-3361323d><code data-v-3361323d><span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>function</span> <span class="hljs-title" data-v-3361323d>myFunction</span>(<span class="hljs-params" data-v-3361323d>nama</span>)</span>{
    <span class="hljs-built_in" data-v-3361323d>console</span>.log(nama)
}
</code></pre><p data-v-3361323d><strong data-v-3361323d>Parameter default</strong></p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>function</span> <span class="hljs-title" data-v-3361323d>myFunction</span>(<span class="hljs-params" data-v-3361323d>nama = <span class="hljs-string" data-v-3361323d>&quot;budi&quot;</span></span>)</span>{
    <span class="hljs-built_in" data-v-3361323d>console</span>.log(nama)
    <span class="hljs-comment" data-v-3361323d>// budi</span>
}
</code></pre><h2 id="return-value" data-v-3361323d>Return value</h2><h3 id="12" data-v-3361323d>12</h3><pre data-v-3361323d><code data-v-3361323d>function myName(<span class="hljs-selector-tag" data-v-3361323d>a</span>,b){
    return <span class="hljs-selector-tag" data-v-3361323d>a</span> + <span class="hljs-selector-tag" data-v-3361323d>b</span>
}
</code></pre><p data-v-3361323d>return digunakan untuk menggembalikan nilai </p><p data-v-3361323d>Functions are actions. So their name is usually a verb. It should be brief, as accurate as possible and describe what the function does, so that someone reading the code gets an indication of what the function does.</p><p data-v-3361323d>It is a widespread practice to start a function with a verbal prefix which vaguely describes the action. There must be an agreement within the team on the meaning of the prefixes.</p><p data-v-3361323d>For instance, functions that start with &quot;show&quot; usually show something.</p><p data-v-3361323d>Function starting with…</p><p data-v-3361323d>&quot;get…&quot; – return a value, &quot;calc…&quot; – calculate something, &quot;create…&quot; – create something, &quot;check…&quot; – check something and return a boolean, etc.</p><p data-v-3361323d>SRC: <a href="https://javascript.info/function-basics" data-v-3361323d>https://javascript.info/function-basics</a></p><h2 id="get-the-last-element-in-array" data-v-3361323d>Get the last element in array</h2><h3 id="13" data-v-3361323d>13</h3><pre data-v-3361323d><code data-v-3361323d>let abc = [<span class="hljs-number" data-v-3361323d>1</span>,<span class="hljs-number" data-v-3361323d>2</span>,<span class="hljs-number" data-v-3361323d>3</span>,<span class="hljs-number" data-v-3361323d>4</span>,<span class="hljs-number" data-v-3361323d>5</span>]
console.log(abc[abc.length - <span class="hljs-number" data-v-3361323d>1</span>])
<span class="hljs-comment" data-v-3361323d>// 5</span>
</code></pre><p data-v-3361323d>atau dengan <code data-v-3361323d>slice()</code></p><pre data-v-3361323d><code data-v-3361323d>let abc = [<span class="hljs-number" data-v-3361323d>1</span>,<span class="hljs-number" data-v-3361323d>2</span>,<span class="hljs-number" data-v-3361323d>3</span>,<span class="hljs-number" data-v-3361323d>4</span>,<span class="hljs-number" data-v-3361323d>5</span>]
console.log(abc.slice(<span class="hljs-number" data-v-3361323d>-1</span>))
<span class="hljs-comment" data-v-3361323d>// 5</span>
</code></pre><p data-v-3361323d>refrence: <a href="https://flexiple.com/get-last-array-element-javascript/" data-v-3361323d>https://flexiple.com/get-last-array-element-javascript/</a></p><pre data-v-3361323d><code data-v-3361323d>let abc = [<span class="hljs-number" data-v-3361323d>1</span>,<span class="hljs-number" data-v-3361323d>2</span>,<span class="hljs-number" data-v-3361323d>3</span>,<span class="hljs-number" data-v-3361323d>4</span>,<span class="hljs-number" data-v-3361323d>5</span>]
console.log(Math.max(...abc))
<span class="hljs-comment" data-v-3361323d>// akan mengambil nilai terbesar yaitu: 5</span>
</code></pre><p data-v-3361323d>refrence: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/max?retiredLocale=id" data-v-3361323d>https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/max?retiredLocale=id</a></p><h2 id="function-expressions" data-v-3361323d>Function expressions</h2><h3 id="14" data-v-3361323d>14</h3><p data-v-3361323d>cara lain untuk membuat function yaitu dengan function expression. Membantu kita untuk membuat sebuah fungsi didalam expressions</p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>let</span> myFunction = <span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>function</span>(<span class="hljs-params" data-v-3361323d></span>)</span>{
    <span class="hljs-built_in" data-v-3361323d>console</span>.log(<span class="hljs-string" data-v-3361323d>&#39;hello&#39;</span>)
}
</code></pre><p data-v-3361323d><strong data-v-3361323d>function expression vs function declaration</strong> src: <a href="https://javascript.info/function-expressions" data-v-3361323d>https://javascript.info/function-expressions</a></p><p data-v-3361323d><strong data-v-3361323d>Memasukan function declaration kedalam variabel</strong></p><pre data-v-3361323d><code data-v-3361323d>function hai(){
    console.log(<span class="hljs-string" data-v-3361323d>&#39;hai&#39;</span>)
}

let var_a = hai()

<span class="hljs-function" data-v-3361323d><span class="hljs-title" data-v-3361323d>var_a</span><span class="hljs-params" data-v-3361323d>()</span></span> <span class="hljs-comment" data-v-3361323d>// hai </span>
<span class="hljs-function" data-v-3361323d><span class="hljs-title" data-v-3361323d>hai</span><span class="hljs-params" data-v-3361323d>()</span></span> <span class="hljs-comment" data-v-3361323d>// hai</span>
</code></pre><h2 id="function-arrow" data-v-3361323d>Function arrow</h2><h3 id="15" data-v-3361323d>15</h3><pre data-v-3361323d><code data-v-3361323d>let myFunction = <span class="hljs-function" data-v-3361323d><span class="hljs-params" data-v-3361323d>()</span> =&gt;</span> {
    <span class="hljs-built_in" data-v-3361323d>console</span>.log(<span class="hljs-string" data-v-3361323d>&#39;hallo&#39;</span>)
}
</code></pre><p data-v-3361323d>Arrow function diatas bisa dijalankan seperti fungsi biasa, tetapi untuk yang dibawah ini adalah coditional, artinya pada konsep tertentu saja bisa berjalan.</p><p data-v-3361323d>Mereka tidak bisa dijalankan karena tidak dipanggil.</p><pre data-v-3361323d><code data-v-3361323d>() =&gt; {<span class="hljs-keyword" data-v-3361323d>return</span> <span class="hljs-string" data-v-3361323d>&#39;halo&#39;</span>}
</code></pre><p data-v-3361323d>Ref: <a href="https://www.freecodecamp.org/news/javascript-arrow-functions-in-depth/#:~:text=The%20arrow%20function%20syntax%20offers,not%20bound%20to%20the%20function" data-v-3361323d>https://www.freecodecamp.org/news/javascript-arrow-functions-in-depth/#:~:text=The%20arrow%20function%20syntax%20offers,not%20bound%20to%20the%20function</a>.</p><h2 id="callback-function" data-v-3361323d>Callback function</h2><h3 id="16" data-v-3361323d>16</h3><p data-v-3361323d>Sebuah konsep untuk memasukan fungsi kedalam argument</p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>function</span> <span class="hljs-title" data-v-3361323d>konsole</span><span class="hljs-params" data-v-3361323d>(argument)</span>{</span>
    console.<span class="hljs-built_in" data-v-3361323d>log</span>(argument)
}

<span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>function</span> <span class="hljs-title" data-v-3361323d>myCal</span><span class="hljs-params" data-v-3361323d>(x, y, tampilkan)</span>{</span>
    let <span class="hljs-built_in" data-v-3361323d>sum</span> = x + y
    <span class="hljs-comment" data-v-3361323d>// memanggil function konsole</span>
    tampilkan(<span class="hljs-built_in" data-v-3361323d>sum</span>)
}

myCal(<span class="hljs-number" data-v-3361323d>2</span>, <span class="hljs-number" data-v-3361323d>2</span>, konsole)
<span class="hljs-comment" data-v-3361323d>// 4</span>
<span class="hljs-comment" data-v-3361323d>// kita menggunkan function dari konsole</span>
</code></pre><p data-v-3361323d>refrence: <a href="https://www.w3schools.com/js/js_callback.asp" data-v-3361323d>https://www.w3schools.com/js/js_callback.asp</a> refrence: <a href="https://javascript.info/function-expressions" data-v-3361323d>https://javascript.info/function-expressions</a></p><h2 id="rest-parameters" data-v-3361323d>Rest parameters</h2><h3 id="17" data-v-3361323d>17</h3><p data-v-3361323d>src: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters" data-v-3361323d>https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters</a></p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>function</span> <span class="hljs-title" data-v-3361323d>abc</span><span class="hljs-params" data-v-3361323d>(<span class="hljs-rest_arg" data-v-3361323d>...My</span>)</span></span>{
  <span class="hljs-keyword" data-v-3361323d>for</span> (i of My){
    console.log(i)
  }
}

abc(<span class="hljs-string" data-v-3361323d>&#39;halo&#39;</span>, <span class="hljs-string" data-v-3361323d>&#39;budi&#39;</span>, <span class="hljs-string" data-v-3361323d>&#39;nice&#39;</span>)

<span class="hljs-comment" data-v-3361323d>// halo</span>
<span class="hljs-comment" data-v-3361323d>// budi </span>
<span class="hljs-comment" data-v-3361323d>// nice</span>
</code></pre><pre data-v-3361323d><code data-v-3361323d><span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>function</span> <span class="hljs-title" data-v-3361323d>efg</span><span class="hljs-params" data-v-3361323d>(<span class="hljs-rest_arg" data-v-3361323d>...My</span>)</span></span>{
  <span class="hljs-keyword" data-v-3361323d>for</span> (i <span class="hljs-keyword" data-v-3361323d>in</span> My){
    console.log(My[i])
  }
}

console.log(efg(<span class="hljs-string" data-v-3361323d>&#39;h&#39;</span>,<span class="hljs-string" data-v-3361323d>&#39;i&#39;</span>, <span class="hljs-string" data-v-3361323d>&#39;o&#39;</span>))
</code></pre><h2 id="object-notation" data-v-3361323d>object notation</h2><h3 id="18" data-v-3361323d>18</h3><p data-v-3361323d>src: <a href="https://stackoverflow.com/questions/4908378/javascript-array-of-functions" data-v-3361323d>https://stackoverflow.com/questions/4908378/javascript-array-of-functions</a></p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>let</span> myFunct = {

<span class="hljs-attr" data-v-3361323d>functName</span> : <span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>function</span>(<span class="hljs-params" data-v-3361323d></span>)</span>{
    <span class="hljs-built_in" data-v-3361323d>console</span>.log(<span class="hljs-string" data-v-3361323d>&#39;halo&#39;</span>)
},

<span class="hljs-attr" data-v-3361323d>name</span>: <span class="hljs-function" data-v-3361323d><span class="hljs-params" data-v-3361323d>()</span> =&gt;</span> {
    <span class="hljs-built_in" data-v-3361323d>console</span>.log(<span class="hljs-string" data-v-3361323d>&#39;dunia&#39;</span>)
}

}


myFunct.functName() <span class="hljs-comment" data-v-3361323d>// halo </span>

myFunct.name() <span class="hljs-comment" data-v-3361323d>// dunia</span>
</code></pre><h2 id="class-syntax" data-v-3361323d>Class Syntax</h2><h3 id="19" data-v-3361323d>19</h3><pre data-v-3361323d><code data-v-3361323d><span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>User</span> </span>{

<span class="hljs-keyword" data-v-3361323d>constructor</span>(name){
    <span class="hljs-keyword" data-v-3361323d>this</span>.name = name;
}

welcome(){
    <span class="hljs-built_in" data-v-3361323d>console</span>.log(<span class="hljs-string" data-v-3361323d>\`selamat datang kembali <span class="hljs-subst" data-v-3361323d>\${<span class="hljs-keyword" data-v-3361323d>this</span>.name}</span>\`</span>)
}}


<span class="hljs-keyword" data-v-3361323d>let</span> budi = <span class="hljs-keyword" data-v-3361323d>new</span> User(<span class="hljs-string" data-v-3361323d>&quot;budi&quot;</span>) <span class="hljs-comment" data-v-3361323d>// new object is created</span>

budi.welcome();
</code></pre><h2 id="what-is-a-class-" data-v-3361323d>What is a class?</h2><h3 id="20" data-v-3361323d>20</h3><blockquote data-v-3361323d><p data-v-3361323d>a class is a kind of function</p></blockquote><p data-v-3361323d>Dikutip dari Petanikode</p><ul data-v-3361323d><li data-v-3361323d>class adalah rancangan atau blue print dari sebuah objek</li><li data-v-3361323d>Object dalam pemrograman adalah sebuah variabel yang merupakan instance dari class</li><li data-v-3361323d>instance bisa diartikan sebagai wujud dari class </li><li data-v-3361323d>class berisi definisi variabel dan fungsi yang menggambarkan sebuah objek</li></ul><p data-v-3361323d><a href="https://javascript.info/class" data-v-3361323d>https://javascript.info/class</a></p><p data-v-3361323d>Contoh, bayangkan sebuah rumah, didalamnya ada TV, Kursi, Sofa dan alat- alat lainnya. Dalam PBO, rumah adalah class, sedangkan TV, Kursi, Sofa adalah instance.</p><p data-v-3361323d>src: <a href="https://id.quora.com/Dalam-pemrograman-apa-maksud-instance-dari-sebuah-objek" data-v-3361323d>https://id.quora.com/Dalam-pemrograman-apa-maksud-instance-dari-sebuah-objek</a></p><p data-v-3361323d>From stackoverflow <a href="https://stackoverflow.com/questions/2885385/what-is-the-difference-between-an-instance-and-an-object" data-v-3361323d>https://stackoverflow.com/questions/2885385/what-is-the-difference-between-an-instance-and-an-object</a></p><p data-v-3361323d>Intinya <strong data-v-3361323d>instance</strong> adalah variabel yang bertugas sebagai object, object satu dan yang lainnya itu berbeda</p><blockquote data-v-3361323d><p data-v-3361323d>Answered By Yuval Karmi Excellent question.</p></blockquote><p data-v-3361323d>I&#39;ll explain it in the simplest way possible: Say you have 5 apples in your basket. Each of those apples is an object of type Apple, which has some characteristics (i.e. big, round, grows on trees).</p><p data-v-3361323d>In programming terms, you can have a class called Apple, which has variables size:big, shape:round, habitat:grows on trees. To have 5 apples in your basket, you need to instantiate 5 apples. Apple apple1, Apple apple2, Apple apple3 etc....</p><p data-v-3361323d>Alternatively: Objects are the definitions of something, instances are the physical things.</p><p data-v-3361323d>Does this make sense?</p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>User</span> </span>{
    <span class="hljs-keyword" data-v-3361323d>constructor</span>(name) {<span class="hljs-keyword" data-v-3361323d>this</span>.name = name;}
    welcome() { <span class="hljs-built_in" data-v-3361323d>console</span>.log(<span class="hljs-string" data-v-3361323d>\`Selamat datang <span class="hljs-subst" data-v-3361323d>\${<span class="hljs-keyword" data-v-3361323d>this</span>.name}</span>\`</span>) }
}

<span class="hljs-built_in" data-v-3361323d>console</span>.log(<span class="hljs-keyword" data-v-3361323d>typeof</span> User) <span class="hljs-comment" data-v-3361323d>// function</span>
</code></pre><h2 id="oop-memiliki-empat-konsep-utama" data-v-3361323d>OOP memiliki empat konsep utama</h2><ol data-v-3361323d><li data-v-3361323d><p data-v-3361323d>&quot;encapsulation&quot;: digunakan agar code kita lebih private, memberikan informasi kepada developer lain bahwa kode ini tidak boleh dirubah. Bisa berwujud local variabel ( kebalikan dari global variabel )</p></li><li data-v-3361323d><p data-v-3361323d>&quot;inheritance&quot;: adalah proses untuk membuat kelas baru tetapi memiliki karaktersitik dari class yang menjadi parent. </p></li><li data-v-3361323d><p data-v-3361323d>&quot;Polymorphism&quot;: adalah bentuk dari inheritance, tetapi class childer telah melakukan perubahan pada method dari class parent.</p></li></ol><p data-v-3361323d>contoh:</p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>Animal</span> </span>{
  sound() {
    console.log(<span class="hljs-symbol" data-v-3361323d>&#39;This</span> animal makes a sound&#39;);
  }
}

<span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>Dog</span> <span class="hljs-keyword" data-v-3361323d>extends</span> <span class="hljs-title" data-v-3361323d>Animal</span> </span>{
  sound() {
    console.log(<span class="hljs-symbol" data-v-3361323d>&#39;Bark</span>! <span class="hljs-type" data-v-3361323d>Bark</span>!&#39;);
  }
}

<span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>Cat</span> <span class="hljs-keyword" data-v-3361323d>extends</span> <span class="hljs-title" data-v-3361323d>Animal</span> </span>{
  sound() {
    console.log(<span class="hljs-symbol" data-v-3361323d>&#39;Meow</span>!&#39;);
  }
}

const animal1 = <span class="hljs-keyword" data-v-3361323d>new</span> <span class="hljs-type" data-v-3361323d>Animal</span>();
const dog1 = <span class="hljs-keyword" data-v-3361323d>new</span> <span class="hljs-type" data-v-3361323d>Dog</span>();
const cat1 = <span class="hljs-keyword" data-v-3361323d>new</span> <span class="hljs-type" data-v-3361323d>Cat</span>();

animal1.sound(); <span class="hljs-comment" data-v-3361323d>// Output: This animal makes a sound</span>
dog1.sound(); <span class="hljs-comment" data-v-3361323d>// Output: Bark! Bark!</span>
cat1.sound(); <span class="hljs-comment" data-v-3361323d>// Output: Meow!</span>
</code></pre><ul data-v-3361323d><li data-v-3361323d>&quot;abstration&quot;: Dengan abstration kita bisa lebih fokus ke prosesnya daripada menggenai menulis detail data secara manual. Dengan abstraction kita bisa memasukan parameter ke object secara langsung. Dengan begitu object akan lebih berfariasi daripada tipe diatas </li></ul><pre data-v-3361323d><code data-v-3361323d><span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>Animal</span> </span>{
  constructor(name, sound) {
    <span class="hljs-keyword" data-v-3361323d>this</span>.name = name;
    <span class="hljs-keyword" data-v-3361323d>this</span>.sound = sound;
  }

  makeSound() {
    <span class="hljs-keyword" data-v-3361323d>throw</span> <span class="hljs-keyword" data-v-3361323d>new</span> <span class="hljs-type" data-v-3361323d>Error</span>(<span class="hljs-string" data-v-3361323d>&quot;makeSound method must be implemented&quot;</span>);
  }
}

<span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>Dog</span> <span class="hljs-keyword" data-v-3361323d>extends</span> <span class="hljs-title" data-v-3361323d>Animal</span> </span>{
  makeSound() {
    console.log(\`\${<span class="hljs-keyword" data-v-3361323d>this</span>.name} barks: \${<span class="hljs-keyword" data-v-3361323d>this</span>.sound}\`);
  }
}

const dog = <span class="hljs-keyword" data-v-3361323d>new</span> <span class="hljs-type" data-v-3361323d>Dog</span>(<span class="hljs-string" data-v-3361323d>&quot;Buddy&quot;</span>, <span class="hljs-string" data-v-3361323d>&quot;Woof woof!&quot;</span>);
<span class="hljs-comment" data-v-3361323d>// insert paramter ^</span>
dog.makeSound();
</code></pre><h3 id="konsep-oop-dengan-garbage-collection" data-v-3361323d>Konsep OOP dengan garbage collection</h3><p data-v-3361323d>OOP dan garbage collection itu berbeda. Garbage collection digunakan untuk membersihkan penggunaan memory dari aplikasi yang tidak berjalan.</p><h2 id="class-expression" data-v-3361323d>Class Expression</h2><h3 id="21" data-v-3361323d>21</h3><p data-v-3361323d>sama seperti function class juga bisa dimasukan kedalam expression(variabel)</p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>let</span> User = <span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> </span>{
    Hi(){ <span class="hljs-built_in" data-v-3361323d>console</span>.log(<span class="hljs-string" data-v-3361323d>&#39;halo dunia&#39;</span>) }
}

<span class="hljs-keyword" data-v-3361323d>new</span> User().Hi() <span class="hljs-comment" data-v-3361323d>// ini works</span>
<span class="hljs-comment" data-v-3361323d>// halo dunia</span>
</code></pre><p data-v-3361323d>kit juga bisa memasukan class kedalam function</p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>function</span> <span class="hljs-title" data-v-3361323d>makeClass</span>(<span class="hljs-params" data-v-3361323d>abc</span>) </span>{

    <span class="hljs-keyword" data-v-3361323d>return</span> <span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> </span>{
    Hi() {
    <span class="hljs-built_in" data-v-3361323d>console</span>.log(abc)
    }
}
}

<span class="hljs-keyword" data-v-3361323d>let</span> budi = makeClass(<span class="hljs-string" data-v-3361323d>&quot; selamat datang budi&quot;</span>)

<span class="hljs-keyword" data-v-3361323d>new</span> budi().Hi() <span class="hljs-comment" data-v-3361323d>// selamat datang budi</span>
</code></pre><h2 id="getters-setters" data-v-3361323d>Getters / setters</h2><h3 id="22" data-v-3361323d>22</h3><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>User</span> {

  constructor(name){
    <span class="hljs-keyword" data-v-3361323d>this</span>.name = name;
  }

  <span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>get</span> <span class="hljs-title" data-v-3361323d>name</span>(<span class="hljs-params" data-v-3361323d></span>) </span>{
    <span class="hljs-keyword" data-v-3361323d>return</span> <span class="hljs-keyword" data-v-3361323d>this</span>._name
  }

  <span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>set</span> <span class="hljs-title" data-v-3361323d>name</span>(<span class="hljs-params" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>value</span></span>)</span>{
    <span class="hljs-keyword" data-v-3361323d>if</span> (<span class="hljs-keyword" data-v-3361323d>value</span>.length &lt; <span class="hljs-number" data-v-3361323d>4</span>){
      console.log(<span class="hljs-string" data-v-3361323d>&#39;the name is to short&#39;</span>)
      <span class="hljs-keyword" data-v-3361323d>return</span>
    }
    <span class="hljs-keyword" data-v-3361323d>this</span>._name = <span class="hljs-keyword" data-v-3361323d>value</span>
  }

}


<span class="hljs-keyword" data-v-3361323d>let</span> budi = <span class="hljs-keyword" data-v-3361323d>new</span> User(<span class="hljs-string" data-v-3361323d>&#39;budi&#39;</span>)
console.log(budi.name)
</code></pre><h2 id="computed-names" data-v-3361323d>Computed names</h2><h3 id="23" data-v-3361323d>23</h3><pre data-v-3361323d><code data-v-3361323d><span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>User</span> {</span>

    [<span class="hljs-string" data-v-3361323d>&#39;say&#39;</span>+<span class="hljs-string" data-v-3361323d>&#39;Hi&#39;</span>](){
        <span class="hljs-built_in" data-v-3361323d>console</span>.log(<span class="hljs-string" data-v-3361323d>&#39;halo dunia&#39;</span>)
    }
}

<span class="hljs-keyword" data-v-3361323d>new</span> User().sayHi()
</code></pre><h2 id="class-fields" data-v-3361323d>Class fields</h2><h3 id="24" data-v-3361323d>24</h3><p data-v-3361323d>class property</p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>User</span> </span>{
    name = <span class="hljs-string" data-v-3361323d>&quot;budi&quot;</span> <span class="hljs-comment" data-v-3361323d>// property</span>

    Hi(){ <span class="hljs-built_in" data-v-3361323d>console</span>.log(<span class="hljs-string" data-v-3361323d>\`selamat datang <span class="hljs-subst" data-v-3361323d>\${name}</span>\`</span>) }
}

<span class="hljs-keyword" data-v-3361323d>let</span> abc = <span class="hljs-keyword" data-v-3361323d>new</span> User().name

<span class="hljs-built_in" data-v-3361323d>console</span>.log(abc)
</code></pre><h2 id="class-inheritance" data-v-3361323d>Class inheritance</h2><h3 id="25" data-v-3361323d>25</h3><pre data-v-3361323d><code data-v-3361323d><span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>NamaBarang</span></span>{
    constructor(name, price){<span class="hljs-keyword" data-v-3361323d>this</span>.name = name, <span class="hljs-keyword" data-v-3361323d>this</span>.price = price}

    showPrice(){console.log(<span class="hljs-keyword" data-v-3361323d>this</span>.price)}
}

<span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>NamaMakanan</span> <span class="hljs-keyword" data-v-3361323d>extends</span> <span class="hljs-title" data-v-3361323d>NamaBarang</span></span>{
    showName(){console.log(<span class="hljs-keyword" data-v-3361323d>this</span>.name)}

    result(){<span class="hljs-keyword" data-v-3361323d>this</span>.showName(); <span class="hljs-keyword" data-v-3361323d>super</span>.showPrice();}

}

let nasiGoreng = <span class="hljs-keyword" data-v-3361323d>new</span> <span class="hljs-type" data-v-3361323d>NamaMakanan</span>(<span class="hljs-symbol" data-v-3361323d>&#39;nasi</span> goreng&#39;, <span class="hljs-number" data-v-3361323d>15</span>)

nasiGoreng.result()

<span class="hljs-comment" data-v-3361323d>// nasi goreng</span>
<span class="hljs-comment" data-v-3361323d>// 15</span>
</code></pre><ul data-v-3361323d><li data-v-3361323d><code data-v-3361323d>constructor</code> digunakan untuk menggambil argument seperti halnya function. Karena function itu sudah built in constructor sedangkan class tidak</li><li data-v-3361323d><code data-v-3361323d>this</code> ini gunakan untuk menggambil method child</li><li data-v-3361323d><code data-v-3361323d>this</code> juga digunakan untuk menggambil property didalam class</li><li data-v-3361323d><code data-v-3361323d>super</code> ini digunakan untuk menggambil constructor parent, jika kita ingin melakukan perubahan pada constructor harus ada super()\\</li><li data-v-3361323d><code data-v-3361323d>super</code> scope dari super adalah untuk property pada parent saja, sebagai contoh code diatas akan error jika <code data-v-3361323d>this</code> diubah ke super</li></ul><p data-v-3361323d>contoh: akan terjadi error jika kita tidak pakai super</p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>Animal</span> </span>{
    <span class="hljs-keyword" data-v-3361323d>constructor</span>(name){
        <span class="hljs-keyword" data-v-3361323d>this</span>.speed = <span class="hljs-number" data-v-3361323d>0</span>;
        <span class="hljs-keyword" data-v-3361323d>this</span>.name = name;
    }
}

<span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>Rabit</span> <span class="hljs-keyword" data-v-3361323d>extends</span> <span class="hljs-title" data-v-3361323d>Animal</span> </span>{
    <span class="hljs-keyword" data-v-3361323d>constructor</span>(name, earLength){
        <span class="hljs-keyword" data-v-3361323d>super</span>()
        <span class="hljs-keyword" data-v-3361323d>this</span>.name = <span class="hljs-string" data-v-3361323d>&quot;white rabbit&quot;</span>;
        <span class="hljs-keyword" data-v-3361323d>this</span>.earLength = earLength
        <span class="hljs-built_in" data-v-3361323d>console</span>.log(<span class="hljs-string" data-v-3361323d>\`halo ini adalah <span class="hljs-subst" data-v-3361323d>\${<span class="hljs-keyword" data-v-3361323d>this</span>.name}</span>\`</span>)
    }
}

<span class="hljs-keyword" data-v-3361323d>let</span> rabbit = <span class="hljs-keyword" data-v-3361323d>new</span> Rabit(<span class="hljs-string" data-v-3361323d>&quot;black rabit&quot;</span>, <span class="hljs-number" data-v-3361323d>10</span>)

<span class="hljs-built_in" data-v-3361323d>console</span>.log()
</code></pre><p data-v-3361323d>## </p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>Barang</span> </span>{
    <span class="hljs-keyword" data-v-3361323d>constructor</span>(name, price){
        <span class="hljs-keyword" data-v-3361323d>this</span>.name = name
        <span class="hljs-keyword" data-v-3361323d>this</span>.price = price
    }
}

<span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>Makanan</span> <span class="hljs-keyword" data-v-3361323d>extends</span> <span class="hljs-title" data-v-3361323d>Barang</span></span>{
    <span class="hljs-keyword" data-v-3361323d>constructor</span>(name, price, level){
        <span class="hljs-comment" data-v-3361323d>/* super(name, price)
         *Kita bisa memakai cara ini sebagai alternatif yang dibawah
            untuk menggambil constructor parent, jadi tidak perlu this.name.
         */</span>
        <span class="hljs-keyword" data-v-3361323d>super</span>()
        <span class="hljs-keyword" data-v-3361323d>this</span>.name = name
        <span class="hljs-keyword" data-v-3361323d>this</span>.price = price
        <span class="hljs-keyword" data-v-3361323d>this</span>.level = level
    }

    result(){
        <span class="hljs-keyword" data-v-3361323d>return</span> <span class="hljs-string" data-v-3361323d>\`
nama makanan : <span class="hljs-subst" data-v-3361323d>\${<span class="hljs-keyword" data-v-3361323d>this</span>.name}</span>
harga makanan : <span class="hljs-subst" data-v-3361323d>\${<span class="hljs-keyword" data-v-3361323d>this</span>.price}</span>
tingkat pedas : <span class="hljs-subst" data-v-3361323d>\${<span class="hljs-keyword" data-v-3361323d>this</span>.level}</span>
        \`</span>
    }
}

<span class="hljs-keyword" data-v-3361323d>let</span> bakmie = <span class="hljs-keyword" data-v-3361323d>new</span> Makanan(<span class="hljs-string" data-v-3361323d>&#39;bakmie&#39;</span>, <span class="hljs-number" data-v-3361323d>15</span>, <span class="hljs-number" data-v-3361323d>10</span>)

<span class="hljs-built_in" data-v-3361323d>console</span>.log(bakmie.result())
</code></pre><p data-v-3361323d>jika kita ingin melakukan perubahan pada constructor di inheritance class pastikan declarasikan <code data-v-3361323d>super()</code></p><p data-v-3361323d>dan juga jangan lupa untuk argumentnya ditulis ulang juga, jika masih dipakai</p><h2 id="inheritance" data-v-3361323d>Inheritance</h2><h3 id="26" data-v-3361323d>26</h3><p data-v-3361323d>Ini adalah suatu konsep didalam OOP (object oriented programming) untuk membantu kita membuat sebuah class atau blueprint yang memiliki karakteristik yang sama antara satu dan yang lainnya.</p><p data-v-3361323d>Sebagai gambaran: ada blueprint untuk kendaraan, kendaran tersebut memiliki ciri-ciri ada pintu dan roda 4 </p><p data-v-3361323d>kita bisa membuat sebuah instruksi baru yang memiliki ciri-ciri diatas dengan melakukan inheritance. </p><p data-v-3361323d>ada blueprint yang berasal dari blueprint diatas bernama &quot;mobil kecil&quot;, ada ciri-ciri baru yaitu ukurannya tidak lebih dari 4 meter</p><p data-v-3361323d>dan juga ada blueprint mobil yang berukuran lebih dari 4 meter.</p><p data-v-3361323d>Kesimpulan: inheritance digunakan untuk membuat sebuah model blueprint yang sama, tanpa harus buat buat dari awal </p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>Kendaraan</span></span>{
    constructor(nama, pintu, warna){
        <span class="hljs-keyword" data-v-3361323d>this</span>.nama = nama
        <span class="hljs-keyword" data-v-3361323d>this</span>.pintu = pintu
        <span class="hljs-keyword" data-v-3361323d>this</span>.warna = warna
    }

    show(){
        <span class="hljs-keyword" data-v-3361323d>return</span> \`ini adalah kendaraan roda empat\`
    }
}

<span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>MobilKecil</span> <span class="hljs-keyword" data-v-3361323d>extends</span> <span class="hljs-title" data-v-3361323d>Kendaraan</span></span>{
    show(){
        <span class="hljs-keyword" data-v-3361323d>return</span> \`
        ini adalah kendaraan kecil
        memiliki \${<span class="hljs-keyword" data-v-3361323d>this</span>.pintu} pintu dan berwarna \${<span class="hljs-keyword" data-v-3361323d>this</span>.warna}
        \`
    }
}

<span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>class</span> <span class="hljs-title" data-v-3361323d>MobilBesar</span> <span class="hljs-keyword" data-v-3361323d>extends</span> <span class="hljs-title" data-v-3361323d>Kendaraan</span></span>{
    show(){
        <span class="hljs-keyword" data-v-3361323d>return</span> \`
        ini adalah kendaran besar
        memiliki \${<span class="hljs-keyword" data-v-3361323d>this</span>.pintu} pintu dan berwarna \${<span class="hljs-keyword" data-v-3361323d>this</span>.warna}
        \`
    }
}


let abc = <span class="hljs-keyword" data-v-3361323d>new</span> <span class="hljs-type" data-v-3361323d>MobilKecil</span>(<span class="hljs-symbol" data-v-3361323d>&#39;ab</span>c&#39;, <span class="hljs-number" data-v-3361323d>4</span>, <span class="hljs-symbol" data-v-3361323d>&#39;puti</span>h&#39;)
console.log(abc.show())


let abcBesar = <span class="hljs-keyword" data-v-3361323d>new</span> <span class="hljs-type" data-v-3361323d>MobilBesar</span>(\`abc <span class="hljs-type" data-v-3361323d>Besar</span>\`, <span class="hljs-number" data-v-3361323d>4</span>, <span class="hljs-symbol" data-v-3361323d>&#39;hita</span>m&#39;)
console.log(abcBesar.show())
</code></pre><h2 id="encapsulation-programming" data-v-3361323d>Encapsulation programming</h2><h3 id="27" data-v-3361323d>27</h3><p data-v-3361323d>adalah sebuah metode pendekatan dalam pembuatan sebuah program agar function maupun variabel tidak bertabrakan antara satu dan yang lainnya.</p><p data-v-3361323d>Misalkan kita ingin membuat sebuah program yang besar, dengan teknik encapulasi kita bisa memastikan bahwa tidak ada variabel atau fungsi duplikat didalam program yang akan menyebabkan error. </p><p data-v-3361323d>Karena encapulasi itu akan memberikan batasan scope untuk variabel dan function. </p><p data-v-3361323d><strong data-v-3361323d>Carannya</strong> Kita bisa menulis functi ataupun variabel didalam suatu class. Maka variabel atau function tersebut hanya bisa dijalankan didalam class tersebut saja. Dengan begitu bisa dipastikan jika kita menulis nama variabel atau fungsi yang sama tidak akan terjadi error</p><p data-v-3361323d>kita juga bisa melakukan encapulasi didalam class yaitu dengan menggunakan function scope. variabel yang didalam function hanya bisa dipakai dan dijalankan didalam function tersebut saja</p><p data-v-3361323d>Kesimpulan: ini adalah pendekatan untuk memastikan tidak ada variabel atau function duplikat yang akan menghasilkan bug.</p><p data-v-3361323d>Karena diprogram yang bersekala besar itu akan mengakibatkan bug yang tidak terlihat</p><p data-v-3361323d>src: <a href="https://www.youtube.com/watch?v=sNKKxc4QHqA&amp;list=PLxvooGgpi4NeugSB4Pk546MXTPmGqPdc4&amp;index=6" data-v-3361323d>https://www.youtube.com/watch?v=sNKKxc4QHqA&amp;list=PLxvooGgpi4NeugSB4Pk546MXTPmGqPdc4&amp;index=6</a></p><h2 id="for-each-" data-v-3361323d>For each()</h2><h3 id="28" data-v-3361323d>28</h3><p data-v-3361323d>Method forEach ini digunakan untuk memanggil nilai didalam secara berurutan</p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>let</span> abc = [<span class="hljs-string" data-v-3361323d>&#39;rangga&#39;</span>, <span class="hljs-string" data-v-3361323d>&#39;wahyu&#39;</span>, <span class="hljs-string" data-v-3361323d>&#39;atmoko&#39;</span>]

abc.forEach(<span class="hljs-function" data-v-3361323d><span class="hljs-params" data-v-3361323d>item</span> =&gt;</span> <span class="hljs-built_in" data-v-3361323d>console</span>.log(item))
</code></pre><p data-v-3361323d>atau </p><pre data-v-3361323d><code data-v-3361323d>let abc = [<span class="hljs-string" data-v-3361323d>&#39;rangga&#39;</span>, <span class="hljs-string" data-v-3361323d>&#39;wahyu&#39;</span>, <span class="hljs-string" data-v-3361323d>&#39;atmoko&#39;</span>]

abc.forEach(<span class="hljs-function" data-v-3361323d><span class="hljs-params" data-v-3361323d>(item)</span> =&gt;</span> {<span class="hljs-built_in" data-v-3361323d>console</span>.log(item)})
</code></pre><p data-v-3361323d>Atau </p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>function</span> <span class="hljs-title" data-v-3361323d>setList</span>(<span class="hljs-params" data-v-3361323d>name</span>)</span>{
    <span class="hljs-built_in" data-v-3361323d>console</span>.log(name)
}

<span class="hljs-keyword" data-v-3361323d>let</span> var_a = [<span class="hljs-string" data-v-3361323d>&#39;budi&#39;</span>, <span class="hljs-string" data-v-3361323d>&#39;bambang&#39;</span>, <span class="hljs-string" data-v-3361323d>&#39;bagus&#39;</span>]

var_a.forEach(setList)
</code></pre><p data-v-3361323d>src: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach" data-v-3361323d>https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach</a></p><h2 id="array-find" data-v-3361323d>Array find</h2><h3 id="29" data-v-3361323d>29</h3><p data-v-3361323d>untuk mendapatkan satu nilai yang sesuai permintaan</p><pre data-v-3361323d><code data-v-3361323d>let varA = [<span class="hljs-number" data-v-3361323d>4</span>,<span class="hljs-number" data-v-3361323d>6</span>,<span class="hljs-number" data-v-3361323d>8</span>,<span class="hljs-number" data-v-3361323d>3</span>,<span class="hljs-number" data-v-3361323d>5</span>]

let result = varA.find(item =&gt; item &gt; <span class="hljs-number" data-v-3361323d>6</span>)

console.log(result)
</code></pre><p data-v-3361323d>atau </p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>function</span> <span class="hljs-title" data-v-3361323d>test</span>(<span class="hljs-params" data-v-3361323d>arg</span>) </span>{
    <span class="hljs-keyword" data-v-3361323d>return</span> arg &gt; <span class="hljs-number" data-v-3361323d>6</span>
}

<span class="hljs-keyword" data-v-3361323d>let</span> varA = [<span class="hljs-number" data-v-3361323d>4</span>,<span class="hljs-number" data-v-3361323d>6</span>,<span class="hljs-number" data-v-3361323d>8</span>,<span class="hljs-number" data-v-3361323d>3</span>,<span class="hljs-number" data-v-3361323d>5</span>]

<span class="hljs-keyword" data-v-3361323d>let</span> result = varA.find(test)

<span class="hljs-built_in" data-v-3361323d>console</span>.log(result)
</code></pre><h2 id="filter" data-v-3361323d>filter</h2><h3 id="30" data-v-3361323d>30</h3><p data-v-3361323d>menggambil semua nilai yang sesuai dengan permintaan </p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>const</span> words = [<span class="hljs-string" data-v-3361323d>&#39;spray&#39;</span>, <span class="hljs-string" data-v-3361323d>&#39;limit&#39;</span>, <span class="hljs-string" data-v-3361323d>&#39;elite&#39;</span>, <span class="hljs-string" data-v-3361323d>&#39;exuberant&#39;</span>, <span class="hljs-string" data-v-3361323d>&#39;destruction&#39;</span>, <span class="hljs-string" data-v-3361323d>&#39;present&#39;</span>]<span class="hljs-comment" data-v-3361323d>;</span>

<span class="hljs-keyword" data-v-3361323d>const</span> result = words.filter(word =&gt; word.length &gt; <span class="hljs-number" data-v-3361323d>6</span>)<span class="hljs-comment" data-v-3361323d>;</span>

console.<span class="hljs-built_in" data-v-3361323d>log</span>(result)<span class="hljs-comment" data-v-3361323d>;</span>
// expected output: Array [<span class="hljs-string" data-v-3361323d>&quot;exuberant&quot;</span>, <span class="hljs-string" data-v-3361323d>&quot;destruction&quot;</span>, <span class="hljs-string" data-v-3361323d>&quot;present&quot;</span>]
</code></pre><p data-v-3361323d>atau </p><pre data-v-3361323d><code data-v-3361323d>function test(arg){
    return arg &gt; <span class="hljs-number" data-v-3361323d>6</span>
}

let varA = [<span class="hljs-number" data-v-3361323d>1</span>,<span class="hljs-number" data-v-3361323d>4</span>,<span class="hljs-number" data-v-3361323d>5</span>,<span class="hljs-number" data-v-3361323d>6</span>,<span class="hljs-number" data-v-3361323d>8</span>,<span class="hljs-number" data-v-3361323d>8</span>,<span class="hljs-number" data-v-3361323d>4</span>,<span class="hljs-number" data-v-3361323d>9</span>,<span class="hljs-number" data-v-3361323d>7</span>]

let result = varA.filter(test)

console.log(result)
</code></pre><h2 id="map" data-v-3361323d>Map</h2><h3 id="31" data-v-3361323d>31</h3><p data-v-3361323d>Melakukan perhitungan atau menggelolah data didalam array</p><p data-v-3361323d>src: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map" data-v-3361323d>https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map</a></p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>const</span> array1 = [<span class="hljs-number" data-v-3361323d>1</span>, <span class="hljs-number" data-v-3361323d>4</span>, <span class="hljs-number" data-v-3361323d>9</span>, <span class="hljs-number" data-v-3361323d>16</span>];

<span class="hljs-comment" data-v-3361323d>// pass a function to map</span>
<span class="hljs-keyword" data-v-3361323d>const</span> map1 = array1.map(<span class="hljs-function" data-v-3361323d><span class="hljs-params" data-v-3361323d>x</span> =&gt;</span> x * <span class="hljs-number" data-v-3361323d>2</span>);

<span class="hljs-built_in" data-v-3361323d>console</span>.log(map1);
<span class="hljs-comment" data-v-3361323d>// expected output: Array [2, 8, 18, 32]</span>
</code></pre><p data-v-3361323d>atau </p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>function</span> <span class="hljs-title" data-v-3361323d>test</span>(<span class="hljs-params" data-v-3361323d>arg</span>)</span>{
    <span class="hljs-keyword" data-v-3361323d>return</span> arg * <span class="hljs-number" data-v-3361323d>2</span>
}

<span class="hljs-keyword" data-v-3361323d>let</span> varA = [<span class="hljs-number" data-v-3361323d>1</span>,<span class="hljs-number" data-v-3361323d>2</span>,<span class="hljs-number" data-v-3361323d>3</span>,<span class="hljs-number" data-v-3361323d>4</span>,<span class="hljs-number" data-v-3361323d>5</span>]

<span class="hljs-keyword" data-v-3361323d>let</span> result = varA.map(test)

<span class="hljs-built_in" data-v-3361323d>console</span>.log(result)
</code></pre><h2 id="export-dan-require" data-v-3361323d>export dan require</h2><h3 id="32" data-v-3361323d>32</h3><blockquote data-v-3361323d><p data-v-3361323d>ex.js \`\`\` let name = &quot;budi&quot; let age = 28</p></blockquote><p data-v-3361323d>exports.name = name exports.age = age</p><pre data-v-3361323d><code data-v-3361323d>
&gt; <span class="hljs-selector-tag" data-v-3361323d>im</span><span class="hljs-selector-class" data-v-3361323d>.js</span>
</code></pre><p data-v-3361323d>let user = require(&#39;./ex&#39;)</p><p data-v-3361323d>console.log(user.name, user.age)</p><pre data-v-3361323d><code data-v-3361323d>
<span class="hljs-symbol" data-v-3361323d>Sekarang</span> untuk <span class="hljs-keyword" data-v-3361323d>banyak </span>paket 

&gt; ex.js
</code></pre><p data-v-3361323d>let name = &#39;budi&#39; let age = 28</p><p data-v-3361323d>exports.name = name exports.age = age</p><pre data-v-3361323d><code data-v-3361323d>
&gt; <span class="hljs-selector-tag" data-v-3361323d>im</span><span class="hljs-selector-class" data-v-3361323d>.js</span>
</code></pre><p data-v-3361323d>const {name, age} = require(&#39;./ex&#39;)</p><p data-v-3361323d>console.log(name, age)</p><pre data-v-3361323d><code data-v-3361323d>
## Module exports 
### <span class="hljs-number" data-v-3361323d>33</span>

&gt; ex.js
</code></pre><p data-v-3361323d>let user = &#39;budi&#39; let age = 28</p><p data-v-3361323d>module.exports = user module.exports = age module.exports = &quot;ini bagian terakhir&quot;</p><pre data-v-3361323d><code data-v-3361323d>
ini <span class="hljs-keyword" data-v-3361323d>digunakan </span>untuk menggambil satu exports saja, yaitu <span class="hljs-keyword" data-v-3361323d>bagian </span>terakhir

&gt; im.<span class="hljs-keyword" data-v-3361323d>js</span>
</code></pre><p data-v-3361323d>let name = require(&#39;./ex&#39;)</p><p data-v-3361323d>console.log(name)</p><pre data-v-3361323d><code data-v-3361323d>
### Export <span class="hljs-keyword" data-v-3361323d>module</span> <span class="hljs-keyword" data-v-3361323d>class</span>
</code></pre><p data-v-3361323d>// Export.js</p><p data-v-3361323d>class Math{ constructor(a,b){ this.x = a, this.y = b, }</p><pre data-v-3361323d><code data-v-3361323d>Tampilkan {
    console.log(<span class="hljs-keyword" data-v-3361323d>this</span>.x + <span class="hljs-keyword" data-v-3361323d>this</span>.y)
</code></pre><p data-v-3361323d>} }</p><p data-v-3361323d>module.exports = Math</p><pre data-v-3361323d><code data-v-3361323d>
</code></pre><p data-v-3361323d>// Import.js let Math = require(&#39;./Export&#39;)</p><p data-v-3361323d>let abc = new Math(1,2)</p><p data-v-3361323d>abc.Tampilkan()</p><pre data-v-3361323d><code data-v-3361323d>
[<span class="hljs-string" data-v-3361323d>Detail Catatan</span>](<span class="hljs-link" data-v-3361323d>https://github.com/playmakermz/warkop-website/blob/main/code/js-import/catatan.md</span>)

[<span class="hljs-string" data-v-3361323d>Diskusi Export dan Import</span>](<span class="hljs-link" data-v-3361323d>https://stackoverflow.com/questions/49616639/how-can-i-export-all-functions-from-a-file-in-js</span>)

Src: 
<span class="hljs-bullet" data-v-3361323d>- </span>https://www.freecodecamp.org/news/node-module-exports-explained-with-javascript-export-function-examples/
<span class="hljs-bullet" data-v-3361323d>- </span>https://www.sitepoint.com/understanding-module-exports-exports-node-js/
<span class="hljs-bullet" data-v-3361323d>- </span>https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export?retiredLocale=id

<span class="hljs-section" data-v-3361323d>## Callback function </span>
<span class="hljs-section" data-v-3361323d>### 34</span>

Disini kita menggunakan function sebagai argumentnya. 
Tidak perlu ada penulisan &quot;()&quot; pada nama function yang dijadikan argument
</code></pre><p data-v-3361323d>function test(arg){ return arg * 2 }</p><p data-v-3361323d>let varA = [1,2,3,4,5]</p><p data-v-3361323d>let result = varA.map(test)</p><p data-v-3361323d>console.log(result)</p><pre data-v-3361323d><code data-v-3361323d>

<span class="crmsh" data-v-3361323d>***
<span class="hljs-comment" data-v-3361323d># Note kedua </span>
<span class="hljs-comment" data-v-3361323d>## install node </span>

installing <span class="hljs-keyword" data-v-3361323d>node</span> <span class="hljs-title" data-v-3361323d>js</span> <span class="hljs-keyword" data-v-3361323d>in</span> linux. \`sudo pacman -S <span class="hljs-keyword" data-v-3361323d>node</span><span class="hljs-title" data-v-3361323d>\`

## jalankan</span> <span class="hljs-keyword" data-v-3361323d>node</span> 

<span class="hljs-title" data-v-3361323d>ketik</span> \`<span class="hljs-keyword" data-v-3361323d>node</span><span class="hljs-title" data-v-3361323d>\` didalam</span> terminal 

<span class="hljs-comment" data-v-3361323d>## aritmatika sederhana</span></span>
</code></pre><p data-v-3361323d>1 <em data-v-3361323d> 2 (2+3) </em> (3+2) 14 % 2 14 / 4 2 ** 6</p><pre data-v-3361323d><code data-v-3361323d>
## Penggunaan underscore 
\`_\` untuk menyimpan nilai terakhir
</code></pre><p data-v-3361323d>2 <em data-v-3361323d> 3 // 6 _ </em> _ // 36</p><pre data-v-3361323d><code data-v-3361323d>
## Membuat <span class="hljs-keyword" data-v-3361323d>function</span>  <span class="hljs-title" data-v-3361323d>|</span> ES5
</code></pre><p data-v-3361323d>function tambah(a,b){ return a + b }</p><pre data-v-3361323d><code data-v-3361323d>
## membuat object
</code></pre><p data-v-3361323d>let obj = new object() obj.alas = 3 obj.tinggi = 5 obj.luas = function() { return (obj.alas * obj.tinggi) / 2 } obj.luas() // 7.5 </p><pre data-v-3361323d><code data-v-3361323d>
## Variabel
</code></pre><p data-v-3361323d>let a = &#39;b&#39; // variabel ini masih bisa dirubah const c = &#39;d&#39; // variabel ini tidak bisa dirubah let d, e = &#39;d&#39;, &#39;e&#39;</p><pre data-v-3361323d><code data-v-3361323d>
## readline-sync ( input )
</code></pre><p data-v-3361323d>// sama bisa seperti input() function di python let readline = require(&#39;readline-sync&#39;)</p><p data-v-3361323d>let nama = readline.question(&#39;Nama anda?&#39;) // ambil input dari console</p><pre data-v-3361323d><code data-v-3361323d>
cara download <span class="hljs-class" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>module</span> <span class="hljs-title" data-v-3361323d>readline</span>-<span class="hljs-title" data-v-3361323d>sync</span> <span class="hljs-title" data-v-3361323d>adalah</span> <span class="hljs-title" data-v-3361323d>dengan</span></span>
</code></pre><p data-v-3361323d>npm install readline-sync</p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>Ref</span>: https://medium.com/@quinnfeng26276/getting-<span class="hljs-literal" data-v-3361323d>started</span>-with-readline-sync-building-command-line-applications-<span class="hljs-keyword" data-v-3361323d>in</span>-<span class="hljs-keyword" data-v-3361323d>node</span><span class="hljs-title" data-v-3361323d>-js-81fa3bbaa237</span>

<span class="hljs-comment" data-v-3361323d>## Check tipe data</span>
</code></pre><p data-v-3361323d>let a = 3 typeof a // ouput &#39;number&#39;</p><p data-v-3361323d>let b = new Number(9) typeof b // ouput &#39;object&#39;</p><pre data-v-3361323d><code data-v-3361323d>
## Mengubah nilai ke string
</code></pre><p data-v-3361323d>let a = 9 a.toString() // &#39;9&#39;</p><pre data-v-3361323d><code data-v-3361323d>## Tipe number
</code></pre><p data-v-3361323d>// dalam beberapa bahasa program // ada bilangan int dan float // javascript tidak membedakan bilangan berikut // alternative declare number let number = 255; / 10 let binner = 0b1111; / 2 let oktal = 0o377; // 8 let heksadesimal = 0xff; // 16</p><p data-v-3361323d>let float = 123.123</p><pre data-v-3361323d><code data-v-3361323d>
## Penulisan string
</code></pre><p data-v-3361323d>// petik tunggal &#39;&#39; // petik ganda &quot;&quot; // tick <code data-v-3361323d>\` &#39;tunggal&#39; &quot;ganda&quot;</code>tick\`</p><pre data-v-3361323d><code data-v-3361323d>
## <span class="hljs-built_in" data-v-3361323d>escape</span>, squence, <span class="hljs-keyword" data-v-3361323d>new</span> <span class="hljs-built_in" data-v-3361323d>line</span>, horizontal <span class="hljs-keyword" data-v-3361323d>tab</span>
</code></pre><p data-v-3361323d>&#39;halo \\n halo&#39; // halo // halo </p><pre data-v-3361323d><code data-v-3361323d>## boolean
</code></pre><p data-v-3361323d>let betul = true let salah = false</p><pre data-v-3361323d><code data-v-3361323d>
## undefined vs null
</code></pre><p data-v-3361323d>let a typeof a // undefined</p><p data-v-3361323d>let c = undefined // entah bagaimana dilarang pada komunitas!! <a href="https://www.geeksforgeeks.org/undefined-vs-null-in-javascript/" data-v-3361323d>https://www.geeksforgeeks.org/undefined-vs-null-in-javascript/</a></p><p data-v-3361323d>let b = null typeof b // null</p><p data-v-3361323d>null == undefined // True ( mereka mempresentasikan konsep yang sama ) null === undefined // False ( tipe nilai mereka berbeda )</p><pre data-v-3361323d><code data-v-3361323d>
-<span class="ruby" data-v-3361323d> Undefined
</span>  -<span class="ruby" data-v-3361323d> adalah bentuk kosong sepenuhnya. Semisal declarasi variabel tetapi tidak ada nilai dialamnya
</span>
-<span class="ruby" data-v-3361323d> null
</span>    -<span class="ruby" data-v-3361323d> adalah nilai yang bisa kita masukan kedalam variabel, yang menjadi representasi area nilai belum terisi
</span>
ref: https://www.geeksforgeeks.org/undefined-vs-null-in-javascript/

## Get And Setter
</code></pre><p data-v-3361323d>class budiFamily {</p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>constructor</span>(namaDepan, namaBelakang) {
    <span class="hljs-keyword" data-v-3361323d>this</span>._firstName = namaDepan
    <span class="hljs-keyword" data-v-3361323d>this</span>._lastName = namaBelakang
}

<span class="hljs-keyword" data-v-3361323d>get</span> firstName() {
    console.log(<span class="hljs-string" data-v-3361323d>&#39;aku dari get masuk urutan ke ... dengan &#39;</span> + <span class="hljs-keyword" data-v-3361323d>this</span>._firstName)
    <span class="hljs-keyword" data-v-3361323d>return</span> <span class="hljs-keyword" data-v-3361323d>this</span>._firstName
}

<span class="hljs-keyword" data-v-3361323d>set</span> firstName(parameter) {
</code></pre><p data-v-3361323d>console.log(&#39;aku dari set masuk urutan ke ... dengan &#39; + this._firstName) if (parameter != &quot;budi&quot;) { throw new Error(&#39;First Name must be budi!&#39;) }</p><pre data-v-3361323d><code data-v-3361323d>    <span class="hljs-keyword" data-v-3361323d>this</span>._firstName = parameter

}
</code></pre><p data-v-3361323d>}</p><p data-v-3361323d>let anakBudi = new budiFamily(&quot;budi&quot;, &#39;toni&#39;) console.log(anakBudi.firstName) // Ini akan mengakses get firstname console.log(anakBudi._firstName) // ini akan mengakses _firstName langsung console.log(anakBudi.lastName) // Undefined // anakBudi.firstName = &#39;wahyu&#39;</p><p data-v-3361323d>// Set Disini akan bekerja saat kita melakukan perubahan pada properti // anakBudi.firstName = &quot;wahyu&quot;</p><pre data-v-3361323d><code data-v-3361323d>Atau Pada <span class="hljs-selector-tag" data-v-3361323d>code</span> dibawah ini:
</code></pre><p data-v-3361323d>class budiFamily {</p><pre data-v-3361323d><code data-v-3361323d><span class="hljs-keyword" data-v-3361323d>constructor</span>(namaDepan, namaBelakang) {
    <span class="hljs-keyword" data-v-3361323d>this</span>._firstName = namaDepan
    <span class="hljs-keyword" data-v-3361323d>this</span>._lastName = namaBelakang
}

<span class="hljs-keyword" data-v-3361323d>get</span> firstName() {
    <span class="hljs-keyword" data-v-3361323d>if</span> (<span class="hljs-keyword" data-v-3361323d>this</span>._firstName != <span class="hljs-string" data-v-3361323d>&#39;budi&#39;</span>) {
        <span class="hljs-keyword" data-v-3361323d>throw</span> new Error(<span class="hljs-string" data-v-3361323d>&#39;Parameter default harus Budi!&#39;</span>)
    }
    <span class="hljs-keyword" data-v-3361323d>return</span> <span class="hljs-keyword" data-v-3361323d>this</span>._firstName
}

<span class="hljs-keyword" data-v-3361323d>set</span> firstName(parameter) {
    <span class="hljs-keyword" data-v-3361323d>if</span> (parameter != <span class="hljs-string" data-v-3361323d>&quot;budi&quot;</span>) {
        <span class="hljs-keyword" data-v-3361323d>throw</span> new Error(<span class="hljs-string" data-v-3361323d>&#39;Nilai yang dirubah juga harus budi!&#39;</span>)
    }

    <span class="hljs-keyword" data-v-3361323d>this</span>._firstName = parameter

}
</code></pre><p data-v-3361323d>}</p><p data-v-3361323d>let anakBudi = new budiFamily(&quot;budi&quot;, &#39;toni&#39;)</p><p data-v-3361323d>console.log(anakBudi.firstName) // Ini akan mengakses get firstname console.log(anakBudi._firstName) // ini akan mengakses _firstName langsung</p><p data-v-3361323d>anakBudi.firstName = &quot;wahyu&quot; // Maka akan terjadi error dari set </p><p data-v-3361323d>let anakOmBudi = new budiFamily(&#39;rangga&#39;, &#39;wahyu&#39;) // Maka akan terjadi error dari get</p><pre data-v-3361323d><code data-v-3361323d>
<span class="hljs-attribute" data-v-3361323d>Note</span>: 

<span class="smali" data-v-3361323d>Pada code diatas bercerita tentang keluarga budi. Dengan Semua keturunan harus memiliki nama awalan Wajib budi.

Break down:
- Get Bekerja saat awal kita membuat instance. Mereka akan melakukan pengecekan pada argument yang dimasukan.

- Set akan bekerja saat<span class="hljs-built_in" data-v-3361323d> instance </span>sudah terbuat dan memiliki parameter. Mereka hanya akan aktif jika Melakukan perubahan pada properti yang ada

- Pola pengerjaan mereka setelah<span class="hljs-built_in" data-v-3361323d> instance </span>telah dibuat dan dilakukan perubahan adalah, Argument pertama-tama akan diolah pada set dan akan dikirim kepada get untuk menyimpan data tersebut, dan menampilkan data jika dipanggil 

- Get Bekerja juga sebagai argument function. Mereka adalah function tetapi sebenarnnya adalah argument, oleh karena itu tidak ada () pada akhir pemanggilan. 
- Didalam get tidak boleh ada parameter 


<span class="hljs-comment" data-v-3361323d>## Destructuring Array parameter</span>

Tujuan adalah menggunakan value pada<span class="hljs-built_in" data-v-3361323d> array </span>sebagai parameter.</span>
</code></pre><p data-v-3361323d>function math({a,b}) { console.log({a}) return a + b }</p><p data-v-3361323d>console.log(math({a:1, b:2}))</p><pre data-v-3361323d><code data-v-3361323d>
-<span class="ruby" data-v-3361323d> Parmeter dibuat dengan <span class="hljs-string" data-v-3361323d>\`{}\`</span>
</span>-<span class="ruby" data-v-3361323d> Menambahkan value dengan <span class="hljs-string" data-v-3361323d>\`math({a:1, b:2}))\`</span>
</span>

**Contoh Lain Array**
</code></pre><p data-v-3361323d>// Array dengan setiap item memiliki relasi let buahDetail = [&#39;Appel&#39;, &#39;Manis&#39;]</p><p data-v-3361323d>// Function dibuat untuk mengambil buahDetail // Dengan konsep parameter Destructuring</p><p data-v-3361323d>function dapDetail ([nama, rasa]) { console.log(<code data-v-3361323d>Nama buah: \${nama}, rasanya \${rasa}</code>) }</p><p data-v-3361323d>dapDetail(buahDetail)</p><pre data-v-3361323d><code data-v-3361323d>
**Contoh lain dengan<span class="hljs-built_in" data-v-3361323d> array </span>of object**
</code></pre><p data-v-3361323d>let buah = { name: &#39;Appel&#39;, id: 1211, size: &#39;kecil&#39; }</p><p data-v-3361323d>// Parmeter yang digunakan adalah alias, bisa pakai alias atau tidak // merujuk pada property array</p><p data-v-3361323d>function getDetails({name: nama, size: ukuran}) { console.log(<code data-v-3361323d>Nama buah \${nama} ukuran \${ukuran}</code>) }</p><p data-v-3361323d>getDetails(buah)</p><pre data-v-3361323d><code data-v-3361323d>
**Contoh lain,<span class="hljs-built_in" data-v-3361323d> array </span>of object didalam array**
</code></pre><p data-v-3361323d>let buah = { name: &#39;Appel&#39;, id: 1211, size: &#39;kecil&#39;, address: { city: &#39;malang&#39;, code: 123 } }</p><p data-v-3361323d>// Memasukan object kedalam destructured // untuk mengakses address.city</p><p data-v-3361323d>function getDetails({ name: name, size: size, address: {city} }) { let abc = <code data-v-3361323d>Nama buah \${name}, ukuran \${size}, dari kota: \${city}</code> console.log(abc) }</p><p data-v-3361323d>getDetails(buah)</p><pre data-v-3361323d><code data-v-3361323d>
## Rest parameter 
\`...args | ...parameters\`
</code></pre><p data-v-3361323d>function fun(...arg){ arg.map((i) =&gt; console.log(i)) }</p><p data-v-3361323d>fun(1,2,3,4,5,6,7)</p><pre data-v-3361323d><code data-v-3361323d>
## preventDefault()

https:<span class="hljs-comment" data-v-3361323d>//www.w3schools.com/jsref/tryit.asp?filename=tryjsref_event_preventdefault</span>

jika pada form, dengan mengunakan tool ini kita bisa memastikan tag \`form\` tidak akan melakukan refresh halaman. 

Ref: https:<span class="hljs-comment" data-v-3361323d>//www.geeksforgeeks.org/parameter-destructuring/</span>

## Melakukan perubahan pada property object didalam array
melakukan perubahan pada array <span class="hljs-keyword" data-v-3361323d>of</span> object didalam array. 

\`\`\`Js
<span class="hljs-keyword" data-v-3361323d>let</span> employees_data = [
    {
        employee_id: <span class="hljs-number" data-v-3361323d>1</span>,
        employee_group: <span class="hljs-string" data-v-3361323d>&#39;Alpha&#39;</span>,
        employee_name: <span class="hljs-string" data-v-3361323d>&quot;Aman&quot;</span>,
    },
    {
        employee_id: <span class="hljs-number" data-v-3361323d>2</span>,
        employee_group: <span class="hljs-string" data-v-3361323d>&#39;Alpha&#39;</span>,
        employee_name: <span class="hljs-string" data-v-3361323d>&quot;Bhargava&quot;</span>,
    },
    {
        employee_id: <span class="hljs-number" data-v-3361323d>3</span>,
        employee_group: <span class="hljs-string" data-v-3361323d>&#39;Delta&#39;</span>,
        employee_name: <span class="hljs-string" data-v-3361323d>&quot;Chaitanya&quot;</span>,
    },
];
<span class="hljs-keyword" data-v-3361323d>let</span> new_updated_data =
    employees_data.map((employee) =&gt; {
        <span class="hljs-keyword" data-v-3361323d>if</span> (employee.employee_id === <span class="hljs-number" data-v-3361323d>2</span>) {
            return {
                ...employee,
                employee_name: <span class="hljs-string" data-v-3361323d>&quot;Anthony&quot;</span>,
            };
        }
        return employee;
    });
console.log(<span class="hljs-string" data-v-3361323d>&quot;Updated Data: &quot;</span>);
console.log(new_updated_data);
</code></pre><p data-v-3361323d>Ref: <a href="https://www.geeksforgeeks.org/how-to-modify-an-objects-property-in-an-array-of-objects-in-javascript/" data-v-3361323d>https://www.geeksforgeeks.org/how-to-modify-an-objects-property-in-an-array-of-objects-in-javascript/</a> | MAP()</p><h2 id="switch-case" data-v-3361323d>Switch case</h2><pre data-v-3361323d><code class="lang-Js" data-v-3361323d>
<span class="hljs-keyword" data-v-3361323d>let</span> <span class="hljs-keyword" data-v-3361323d>abc</span> = <span class="hljs-number" data-v-3361323d>3</span>

<span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>function</span> <span class="hljs-title" data-v-3361323d>Print</span><span class="hljs-params" data-v-3361323d>(item)</span>{</span>
    console.<span class="hljs-built_in" data-v-3361323d>log</span>(item)
}

<span class="hljs-keyword" data-v-3361323d>if</span> (<span class="hljs-keyword" data-v-3361323d>abc</span> === <span class="hljs-number" data-v-3361323d>3</span>){
    <span class="hljs-keyword" data-v-3361323d>Print</span>(<span class="hljs-number" data-v-3361323d>3</span>)
}
<span class="hljs-keyword" data-v-3361323d>else</span> <span class="hljs-keyword" data-v-3361323d>if</span> (<span class="hljs-keyword" data-v-3361323d>abc</span> === <span class="hljs-number" data-v-3361323d>4</span>){
    <span class="hljs-keyword" data-v-3361323d>Print</span>(<span class="hljs-keyword" data-v-3361323d>abc</span>)
}
<span class="hljs-keyword" data-v-3361323d>else</span> {
    <span class="hljs-keyword" data-v-3361323d>Print</span>(<span class="hljs-keyword" data-v-3361323d>abc</span>)
}
// ================== If Statement


switch(<span class="hljs-keyword" data-v-3361323d>abc</span>){
    case <span class="hljs-number" data-v-3361323d>1</span>:
        <span class="hljs-keyword" data-v-3361323d>Print</span>(<span class="hljs-string" data-v-3361323d>&#39;hi &#39;</span>+ <span class="hljs-keyword" data-v-3361323d>abc</span>)
        <span class="hljs-keyword" data-v-3361323d>break</span>
    case <span class="hljs-number" data-v-3361323d>2</span>:
        <span class="hljs-keyword" data-v-3361323d>Print</span>(<span class="hljs-string" data-v-3361323d>&#39;hi &#39;</span>+ <span class="hljs-keyword" data-v-3361323d>abc</span>)
        <span class="hljs-keyword" data-v-3361323d>break</span>
    case <span class="hljs-number" data-v-3361323d>3</span>:
        <span class="hljs-keyword" data-v-3361323d>Print</span>(<span class="hljs-string" data-v-3361323d>&#39;hi &#39;</span>+ <span class="hljs-keyword" data-v-3361323d>abc</span>)
        <span class="hljs-keyword" data-v-3361323d>break</span>
    defaul<span class="hljs-variable" data-v-3361323d>t:</span>
        <span class="hljs-keyword" data-v-3361323d>Print</span>(<span class="hljs-string" data-v-3361323d>&#39;de&#39;</span>+<span class="hljs-keyword" data-v-3361323d>abc</span>)
}
</code></pre><p data-v-3361323d>Fungsi dan kegunaan sama, tetapi fokus dari mereka berbeda. </p><ul data-v-3361323d><li data-v-3361323d><code data-v-3361323d>if</code> - mencari nilai true dan false </li><li data-v-3361323d><code data-v-3361323d>switch</code> - mencari nilai yang sama</li></ul><p data-v-3361323d>Ref: <a href="https://medium.com/@michellekwong2/switch-vs-if-else-1d458e7b0711" data-v-3361323d>https://medium.com/@michellekwong2/switch-vs-if-else-1d458e7b0711</a></p><hr data-v-3361323d><h1 id="mencari-nilai-bilangan-prima" data-v-3361323d>Mencari Nilai Bilangan Prima</h1><hr data-v-3361323d><pre data-v-3361323d><code class="lang-Js" data-v-3361323d><span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>function</span> <span class="hljs-title" data-v-3361323d>isPrime</span>(<span class="hljs-params" data-v-3361323d>num</span>) </span>{
  <span class="hljs-keyword" data-v-3361323d>if</span> (num &lt;= <span class="hljs-number" data-v-3361323d>1</span>) <span class="hljs-keyword" data-v-3361323d>return</span> <span class="hljs-literal" data-v-3361323d>false</span>;
  <span class="hljs-keyword" data-v-3361323d>for</span> (<span class="hljs-keyword" data-v-3361323d>let</span> i = <span class="hljs-number" data-v-3361323d>2</span>; i &lt;= <span class="hljs-built_in" data-v-3361323d>Math</span>.sqrt(num); i++) {
    <span class="hljs-keyword" data-v-3361323d>if</span> (num % i === <span class="hljs-number" data-v-3361323d>0</span>) <span class="hljs-keyword" data-v-3361323d>return</span> <span class="hljs-literal" data-v-3361323d>false</span> ;
  }
  <span class="hljs-keyword" data-v-3361323d>return</span> <span class="hljs-literal" data-v-3361323d>true</span>; <span class="hljs-comment" data-v-3361323d>// Jika bilangan prima, maka return</span>
}


<span class="hljs-keyword" data-v-3361323d>let</span> myArray = [<span class="hljs-number" data-v-3361323d>1</span>,<span class="hljs-number" data-v-3361323d>2</span>,<span class="hljs-number" data-v-3361323d>3</span>,<span class="hljs-number" data-v-3361323d>4</span>,<span class="hljs-number" data-v-3361323d>5</span>,<span class="hljs-number" data-v-3361323d>6</span>,<span class="hljs-number" data-v-3361323d>7</span>]

<span class="hljs-keyword" data-v-3361323d>let</span> abc = myArray.filter(<span class="hljs-function" data-v-3361323d>(<span class="hljs-params" data-v-3361323d>item</span>) =&gt;</span> { <span class="hljs-keyword" data-v-3361323d>return</span> isPrime(item)})

<span class="hljs-built_in" data-v-3361323d>console</span>.log(abc); <span class="hljs-comment" data-v-3361323d>// Output: true</span>
</code></pre><p data-v-3361323d>Dengan logika:</p><ul data-v-3361323d><li data-v-3361323d>jika nilai adalah &quot;kurang, atau sama&quot; dengan 1 maka bukan. </li><li data-v-3361323d>Lakukan loop </li></ul><p data-v-3361323d>Ref: <a href="https://stackoverflow.com/questions/5811151/why-do-we-check-up-to-the-square-root-of-a-number-to-determine-if-the-number-is" data-v-3361323d>https://stackoverflow.com/questions/5811151/why-do-we-check-up-to-the-square-root-of-a-number-to-determine-if-the-number-is</a> | mengunakan sqrt untuk bilangan prima</p><h2 id="mencari-bilangan-genap" data-v-3361323d>Mencari bilangan genap</h2><pre data-v-3361323d><code class="lang-Js" data-v-3361323d><span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>function</span> <span class="hljs-title" data-v-3361323d>isEven</span>(<span class="hljs-params" data-v-3361323d>num</span>) </span>{
    <span class="hljs-keyword" data-v-3361323d>if</span> ((num % <span class="hljs-number" data-v-3361323d>2</span>) === <span class="hljs-number" data-v-3361323d>0</span>) {
        <span class="hljs-keyword" data-v-3361323d>return</span> <span class="hljs-literal" data-v-3361323d>true</span>
    }
    <span class="hljs-keyword" data-v-3361323d>else</span> {
        <span class="hljs-keyword" data-v-3361323d>return</span> <span class="hljs-literal" data-v-3361323d>false</span>
    }
}


<span class="hljs-keyword" data-v-3361323d>let</span> myArray = [<span class="hljs-number" data-v-3361323d>1</span>,<span class="hljs-number" data-v-3361323d>2</span>,<span class="hljs-number" data-v-3361323d>3</span>,<span class="hljs-number" data-v-3361323d>4</span>,<span class="hljs-number" data-v-3361323d>5</span>,<span class="hljs-number" data-v-3361323d>6</span>,<span class="hljs-number" data-v-3361323d>7</span>,<span class="hljs-number" data-v-3361323d>8</span>]

<span class="hljs-keyword" data-v-3361323d>let</span> abc = myArray.filter(<span class="hljs-function" data-v-3361323d>(<span class="hljs-params" data-v-3361323d>item</span>) =&gt;</span> { <span class="hljs-keyword" data-v-3361323d>return</span> isEven(item)} )

<span class="hljs-built_in" data-v-3361323d>console</span>.log(myArray)
<span class="hljs-built_in" data-v-3361323d>console</span>.log(abc); <span class="hljs-comment" data-v-3361323d>// Output: true</span>
</code></pre><h2 id="array-sort" data-v-3361323d>Array Sort</h2><pre data-v-3361323d><code class="lang-js" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>const</span> points = [<span class="hljs-number" data-v-3361323d>40</span>, <span class="hljs-number" data-v-3361323d>100</span>, <span class="hljs-number" data-v-3361323d>1</span>, <span class="hljs-number" data-v-3361323d>5</span>, <span class="hljs-number" data-v-3361323d>25</span>, <span class="hljs-number" data-v-3361323d>10</span>];

<span class="hljs-keyword" data-v-3361323d>let</span> abc = points.sort(<span class="hljs-function" data-v-3361323d>(<span class="hljs-params" data-v-3361323d>a,b</span>) =&gt;</span> {<span class="hljs-keyword" data-v-3361323d>return</span> a - b})

<span class="hljs-built_in" data-v-3361323d>console</span>.log(abc)

<span class="hljs-comment" data-v-3361323d>// [ 1, 5, 10, 25, 40, 100 ]</span>
</code></pre><p data-v-3361323d>Dengan cara kerja:</p><ul data-v-3361323d><li data-v-3361323d>paramater &quot;a&quot; adalah tugas loop 1. Dimana semua item akan dibandingkan dengannya. </li><li data-v-3361323d>Jika ditemukan bahwa &quot;a&quot; lebih kecil dari item yang dibandingkan maka simpan &quot;a&quot; sebagai indikasi nilai paling kecil. </li><li data-v-3361323d>Dan seterusnya. </li></ul><p data-v-3361323d>Maka bentuk sebaliknya </p><pre data-v-3361323d><code class="lang-Js" data-v-3361323d>const points = [<span class="hljs-number" data-v-3361323d>40</span>, <span class="hljs-number" data-v-3361323d>100</span>, <span class="hljs-number" data-v-3361323d>1</span>, <span class="hljs-number" data-v-3361323d>5</span>, <span class="hljs-number" data-v-3361323d>25</span>, <span class="hljs-number" data-v-3361323d>10</span>];
points.sort(function(a, b){return b - a});
</code></pre><p data-v-3361323d>ref: <a href="https://www.w3schools.com/js/js_array_sort.asp" data-v-3361323d>https://www.w3schools.com/js/js_array_sort.asp</a></p><hr data-v-3361323d><h2 id="additional-note" data-v-3361323d>Additional note</h2>`,377)),c("ul",null,[c("li",null,[S(n,{to:"/js1",class:"LFT-Item"},{default:x(()=>s[0]||(s[0]=[w(" Javascript Class ")])),_:1})]),c("li",null,[S(n,{to:"/js2",class:"LFT-Item"},{default:x(()=>s[1]||(s[1]=[w(" Javascript Array ")])),_:1})]),c("li",null,[S(n,{to:"/js3",class:"LFT-Item"},{default:x(()=>s[2]||(s[2]=[w(" Javascript Fundamental ")])),_:1})]),c("li",null,[S(n,{to:"/js4",class:"LFT-Item"},{default:x(()=>s[3]||(s[3]=[w(" Javascript synchronous ")])),_:1})]),c("li",null,[S(n,{to:"/js5",class:"LFT-Item"},{default:x(()=>s[4]||(s[4]=[w(" Javascript AJAX ")])),_:1})])]),s[7]||(s[7]=Z(`<h2 id="latihan-javascript" data-v-3361323d>Latihan Javascript</h2><ul data-v-3361323d><li data-v-3361323d><a href="../document/latihan-bahasa/latihan-js.md" data-v-3361323d>Latihan javascript</a></li></ul><hr data-v-3361323d><h2 id="reference-" data-v-3361323d>Reference:</h2><ul data-v-3361323d><li data-v-3361323d>internet is hard </li><li data-v-3361323d>freecodecamp </li><li data-v-3361323d>mozzila</li><li data-v-3361323d>chatgpt</li><li data-v-3361323d><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get" data-v-3361323d>https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get</a> (get dan set) This is some basic, sample markdown.</li></ul><h2 id="second-heading" data-v-3361323d>Second Heading</h2><ul data-v-3361323d><li data-v-3361323d>Unordered lists, and:<ol data-v-3361323d><li data-v-3361323d>One</li><li data-v-3361323d>Two</li><li data-v-3361323d>Three</li></ol></li><li data-v-3361323d>More</li></ul><blockquote data-v-3361323d><p data-v-3361323d>Blockquote</p></blockquote><p data-v-3361323d>And <strong data-v-3361323d>bold</strong>, <em data-v-3361323d>italics</em>, and even <em data-v-3361323d>italics and later <strong data-v-3361323d>bold</strong></em>. Even <del data-v-3361323d>strikethrough</del>. <a href="https://markdowntohtml.com" data-v-3361323d>A link</a> to somewhere.</p><p data-v-3361323d>And code highlighting:</p><pre data-v-3361323d><code class="lang-js" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>var</span> foo = <span class="hljs-string" data-v-3361323d>&#39;bar&#39;</span>;

<span class="hljs-function" data-v-3361323d><span class="hljs-keyword" data-v-3361323d>function</span> <span class="hljs-title" data-v-3361323d>baz</span><span class="hljs-params" data-v-3361323d>(s)</span> </span>{
   <span class="hljs-keyword" data-v-3361323d>return</span> foo + <span class="hljs-string" data-v-3361323d>&#39;:&#39;</span> + s;
}
</code></pre><p data-v-3361323d>Or inline code like <code data-v-3361323d>var foo = &#39;bar&#39;;</code>.</p><p data-v-3361323d>Or an image of bears</p><p data-v-3361323d><img src="http://placebear.com/200/200" alt="bears" data-v-3361323d></p><p data-v-3361323d>The end ...</p>`,15)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[5]||(s[5]=[w("Go to Home")])),_:1})])],64)}}},uf=ca(of,[["__scopeId","data-v-3361323d"]]),hf={__name:"python",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[2]||(s[2]=Z(`<h1 id="introduction-python" data-v-05f02cc5>Introduction python</h1><h1 id="introduction" data-v-05f02cc5>Introduction</h1><p data-v-05f02cc5>salah satu tujuan dari guido dalam mebuat bahasa python adalah bahasa yang bisa dengan mudah dibaca.</p><p data-v-05f02cc5>Kositensi sangatlah penting. Kosistensi didalam project sangat penting.</p><h2 id="-code-layout-" data-v-05f02cc5><em data-v-05f02cc5>Code layout</em></h2><h3 id="indentation" data-v-05f02cc5>Indentation</h3><p data-v-05f02cc5>Gunakan 4 space untuk setiap level indent</p><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-comment" data-v-05f02cc5># Correct:</span>

<span class="hljs-comment" data-v-05f02cc5># Aligned with opening delimiter.</span>
foo = long_function_name(var_one, var_two,
                         var_three, var_four)

<span class="hljs-comment" data-v-05f02cc5># Add 4 spaces (an extra level of indentation) to distinguish arguments from the rest.</span>
<span class="hljs-function" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>def</span> <span class="hljs-title" data-v-05f02cc5>long_function_name</span><span class="hljs-params" data-v-05f02cc5>(
        var_one, var_two, var_three,
        var_four)</span>:</span>
    print(var_one)

<span class="hljs-comment" data-v-05f02cc5># Hanging indents should add a level.</span>
foo = long_function_name(
    var_one, var_two,
    var_three, var_four)

<span class="hljs-comment" data-v-05f02cc5># Or / optional</span>

<span class="hljs-comment" data-v-05f02cc5># Hanging indents *may* be indented to other than 4 spaces.</span>
foo = long_function_name(
  var_one, var_two,
  var_three, var_four)

<span class="hljs-comment" data-v-05f02cc5># No extra indentation.</span>
<span class="hljs-keyword" data-v-05f02cc5>if</span> (this_is_one_thing <span class="hljs-keyword" data-v-05f02cc5>and</span>
    that_is_another_thing):
    do_something()

<span class="hljs-comment" data-v-05f02cc5># Add a comment, which will provide some distinction in editors</span>
<span class="hljs-comment" data-v-05f02cc5># supporting syntax highlighting.</span>
<span class="hljs-keyword" data-v-05f02cc5>if</span> (this_is_one_thing <span class="hljs-keyword" data-v-05f02cc5>and</span>
    that_is_another_thing):
    <span class="hljs-comment" data-v-05f02cc5># Since both conditions are true, we can frobnicate.</span>
    do_something()

<span class="hljs-comment" data-v-05f02cc5># Add some extra indentation on the conditional continuation line.</span>
<span class="hljs-keyword" data-v-05f02cc5>if</span> (this_is_one_thing
        <span class="hljs-keyword" data-v-05f02cc5>and</span> that_is_another_thing):
    do_something()

my_list = [
    <span class="hljs-number" data-v-05f02cc5>1</span>, <span class="hljs-number" data-v-05f02cc5>2</span>, <span class="hljs-number" data-v-05f02cc5>3</span>,
    <span class="hljs-number" data-v-05f02cc5>4</span>, <span class="hljs-number" data-v-05f02cc5>5</span>, <span class="hljs-number" data-v-05f02cc5>6</span>,
]
result = some_function_that_takes_arguments(
    <span class="hljs-string" data-v-05f02cc5>&#39;a&#39;</span>, <span class="hljs-string" data-v-05f02cc5>&#39;b&#39;</span>, <span class="hljs-string" data-v-05f02cc5>&#39;c&#39;</span>,
    <span class="hljs-string" data-v-05f02cc5>&#39;d&#39;</span>, <span class="hljs-string" data-v-05f02cc5>&#39;e&#39;</span>, <span class="hljs-string" data-v-05f02cc5>&#39;f&#39;</span>,
)
</code></pre><h3 id="tabs-or-spaces-" data-v-05f02cc5>Tabs or spaces?</h3><ul data-v-05f02cc5><li data-v-05f02cc5>spaces lebih disarankan untuk digunakan untuk melakukan indentasi</li><li data-v-05f02cc5>Jika sudah memakai tabs, maka selanjutnya juga harus memakai tabs</li></ul><p data-v-05f02cc5>python tidak memperbolehkan untuk menggunakan tabs dan space bersamaan</p><h3 id="maximum-line-lenght" data-v-05f02cc5>Maximum line lenght</h3><p data-v-05f02cc5>ini adalah aturan komunitas</p><ul data-v-05f02cc5><li data-v-05f02cc5>Untuk penulisan code adalah 79 characters / kata</li><li data-v-05f02cc5>untuk docs / commenct adalah 72 kata</li></ul><p data-v-05f02cc5>Backslashes masih bisa digunakan untuk membuat kelanjutan code. Dan jangan lupa untuk menambahkan indent pada baris tersebut</p><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>with</span> open(&#39;/path/<span class="hljs-keyword" data-v-05f02cc5>to</span>/<span class="hljs-keyword" data-v-05f02cc5>some</span>/<span class="hljs-built_in" data-v-05f02cc5>file</span>/you/want/<span class="hljs-keyword" data-v-05f02cc5>to</span>/<span class="hljs-built_in" data-v-05f02cc5>read</span>&#39;) <span class="hljs-keyword" data-v-05f02cc5>as</span> file_1, \\\\
     open(&#39;/path/<span class="hljs-keyword" data-v-05f02cc5>to</span>/<span class="hljs-keyword" data-v-05f02cc5>some</span>/<span class="hljs-built_in" data-v-05f02cc5>file</span>/being/written&#39;, &#39;w&#39;) <span class="hljs-keyword" data-v-05f02cc5>as</span> file_2:
    file_2.<span class="hljs-built_in" data-v-05f02cc5>write</span>(file_1.<span class="hljs-built_in" data-v-05f02cc5>read</span>())
</code></pre><h2 id="penempatan-break-setelah-atau-sebelum-operator-" data-v-05f02cc5>Penempatan Break setelah atau sebelum operator?</h2><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-meta" data-v-05f02cc5># Wrong:</span>
<span class="hljs-meta" data-v-05f02cc5># operators sit far away from their operands</span>
income = (gross_wages +
          taxable_interest +
          (dividends - qualified_dividends) -
          ira_deduction -
          student_loan_interest)

<span class="hljs-meta" data-v-05f02cc5># Correct:</span>
<span class="hljs-meta" data-v-05f02cc5># easy to match operators with operands</span>
income = (gross_wages
          + taxable_interest
          + (dividends - qualified_dividends)
          - ira_deduction
          - student_loan_interest)
</code></pre><h2 id="penempatan-blank-line" data-v-05f02cc5>Penempatan blank line</h2><p data-v-05f02cc5>beri jarak untuk function dan class yaitu 2 blank line</p><p data-v-05f02cc5>dan method yang berada didalam class beri jarak 1 blank line</p><h2 id="source-file-encoding" data-v-05f02cc5>Source file encoding</h2><p data-v-05f02cc5>code didalam python secara default memakai UTF-8, dan jangan dirubah kecuali untuk testing</p><h3 id="import-harus-memiliki-baris-yang-terpisah" data-v-05f02cc5>Import harus memiliki baris yang terpisah</h3><pre data-v-05f02cc5><code data-v-05f02cc5>## Betul
<span class="hljs-keyword" data-v-05f02cc5>import</span> os
<span class="hljs-keyword" data-v-05f02cc5>import</span> sys

## Salah
<span class="hljs-keyword" data-v-05f02cc5>import</span> os, sys

## kalau seperti ini boleh, ambil dua object dari satu tempat
<span class="hljs-keyword" data-v-05f02cc5>from</span> subprocess <span class="hljs-keyword" data-v-05f02cc5>import</span> Popen, PIPE
</code></pre><p data-v-05f02cc5>Imports should be grouped in the following order:</p><ol data-v-05f02cc5><li data-v-05f02cc5>Standard library imports.</li><li data-v-05f02cc5>Related third party imports.</li><li data-v-05f02cc5>Local application/library specific imports.</li></ol><p data-v-05f02cc5>You should put a blank line between each group of imports.</p><ul data-v-05f02cc5><li data-v-05f02cc5>Absolute imports are recommended,</li></ul><pre data-v-05f02cc5><code data-v-05f02cc5># contoh <span class="hljs-number" data-v-05f02cc5>1</span>
<span class="hljs-keyword" data-v-05f02cc5>import</span> mypkg.sibling
<span class="hljs-keyword" data-v-05f02cc5>from</span> mypkg <span class="hljs-keyword" data-v-05f02cc5>import</span> sibling
<span class="hljs-keyword" data-v-05f02cc5>from</span> mypkg.sibling <span class="hljs-keyword" data-v-05f02cc5>import</span> example

## Contoh <span class="hljs-number" data-v-05f02cc5>2</span>

<span class="hljs-keyword" data-v-05f02cc5>from</span> . <span class="hljs-keyword" data-v-05f02cc5>import</span> sibling
<span class="hljs-keyword" data-v-05f02cc5>from</span> .sibling <span class="hljs-keyword" data-v-05f02cc5>import</span> example
</code></pre><ul data-v-05f02cc5><li data-v-05f02cc5>Disaat import class, dari module yang memiliki class</li></ul><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>from</span> myclass <span class="hljs-keyword" data-v-05f02cc5>import</span> MyClass
<span class="hljs-keyword" data-v-05f02cc5>from</span> foo.bar.yourclass <span class="hljs-keyword" data-v-05f02cc5>import</span> YourClass
</code></pre><h2 id="pengunaan-space-untuk-menata-code" data-v-05f02cc5>Pengunaan space untuk menata code</h2><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-comment" data-v-05f02cc5># Correct:</span>
spam(ham[<span class="hljs-number" data-v-05f02cc5>1</span>], {eggs: <span class="hljs-number" data-v-05f02cc5>2</span>})
<span class="hljs-comment" data-v-05f02cc5># Wrong:</span>
spam( ham[ <span class="hljs-number" data-v-05f02cc5>1</span> ], { eggs: <span class="hljs-number" data-v-05f02cc5>2</span> } )

<span class="hljs-comment" data-v-05f02cc5># Correct:</span>
foo = (<span class="hljs-number" data-v-05f02cc5>0</span>,)
<span class="hljs-comment" data-v-05f02cc5># Wrong:</span>
bar = (<span class="hljs-number" data-v-05f02cc5>0</span>, )

<span class="hljs-comment" data-v-05f02cc5># Correct:</span>
<span class="hljs-keyword" data-v-05f02cc5>if</span> x == <span class="hljs-number" data-v-05f02cc5>4</span>: print(x, y); x, y = y, x
<span class="hljs-comment" data-v-05f02cc5># Wrong:</span>
<span class="hljs-keyword" data-v-05f02cc5>if</span> x == <span class="hljs-number" data-v-05f02cc5>4</span> : print(x , y) ; x , y = y , x

<span class="hljs-comment" data-v-05f02cc5># Correct:</span>
spam(<span class="hljs-number" data-v-05f02cc5>1</span>)
<span class="hljs-comment" data-v-05f02cc5># Wrong:</span>
spam (<span class="hljs-number" data-v-05f02cc5>1</span>)

<span class="hljs-comment" data-v-05f02cc5># Correct:</span>
ham[<span class="hljs-number" data-v-05f02cc5>1</span>:<span class="hljs-number" data-v-05f02cc5>9</span>], ham[<span class="hljs-number" data-v-05f02cc5>1</span>:<span class="hljs-number" data-v-05f02cc5>9</span>:<span class="hljs-number" data-v-05f02cc5>3</span>], ham[:<span class="hljs-number" data-v-05f02cc5>9</span>:<span class="hljs-number" data-v-05f02cc5>3</span>], ham[<span class="hljs-number" data-v-05f02cc5>1</span>::<span class="hljs-number" data-v-05f02cc5>3</span>], ham[<span class="hljs-number" data-v-05f02cc5>1</span>:<span class="hljs-number" data-v-05f02cc5>9</span>:]
ham[lower:upper], ham[lower:upper:], ham[lower::step]
ham[lower+ffset : upper+offset]
ham[: upper_fn(x) : step_fn(x)], ham[:: step_fn(x)]
ham[lower + offset : upper + offset]
<span class="hljs-comment" data-v-05f02cc5># Wrong:</span>
ham[lower + offset:upper + offset]
ham[<span class="hljs-number" data-v-05f02cc5>1</span>: <span class="hljs-number" data-v-05f02cc5>9</span>], ham[<span class="hljs-number" data-v-05f02cc5>1</span> :<span class="hljs-number" data-v-05f02cc5>9</span>], ham[<span class="hljs-number" data-v-05f02cc5>1</span>:<span class="hljs-number" data-v-05f02cc5>9</span> :<span class="hljs-number" data-v-05f02cc5>3</span>]
ham[lower : : upper]
ham[ : upper]

<span class="hljs-comment" data-v-05f02cc5># Correct:</span>
dct[<span class="hljs-string" data-v-05f02cc5>&#39;key&#39;</span>] = lst[index]
<span class="hljs-comment" data-v-05f02cc5># Wrong:</span>
dct [<span class="hljs-string" data-v-05f02cc5>&#39;key&#39;</span>] = lst [index]

<span class="hljs-comment" data-v-05f02cc5># Correct:</span>
x = <span class="hljs-number" data-v-05f02cc5>1</span>
y = <span class="hljs-number" data-v-05f02cc5>2</span>
long_variable = <span class="hljs-number" data-v-05f02cc5>3</span>
<span class="hljs-comment" data-v-05f02cc5># Wrong:</span>
x             = <span class="hljs-number" data-v-05f02cc5>1</span>
y             = <span class="hljs-number" data-v-05f02cc5>2</span>
long_variable = <span class="hljs-number" data-v-05f02cc5>3</span>

<span class="hljs-comment" data-v-05f02cc5># Correct:</span>
i = i + <span class="hljs-number" data-v-05f02cc5>1</span>
submitted += <span class="hljs-number" data-v-05f02cc5>1</span>
x = x*<span class="hljs-number" data-v-05f02cc5>2</span> - <span class="hljs-number" data-v-05f02cc5>1</span>
hypot2 = x*x + y*y
c = (a+b) * (a-b)
<span class="hljs-comment" data-v-05f02cc5># Wrong:</span>
i=i+<span class="hljs-number" data-v-05f02cc5>1</span>
submitted +=<span class="hljs-number" data-v-05f02cc5>1</span>
x = x * <span class="hljs-number" data-v-05f02cc5>2</span> - <span class="hljs-number" data-v-05f02cc5>1</span>
hypot2 = x * x + y * y
c = (a + b) * (a - b)

<span class="hljs-comment" data-v-05f02cc5># Correct:</span>
<span class="hljs-function" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>def</span> <span class="hljs-title" data-v-05f02cc5>munge</span><span class="hljs-params" data-v-05f02cc5>(input: AnyStr)</span>:</span> ...
<span class="hljs-function" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>def</span> <span class="hljs-title" data-v-05f02cc5>munge</span><span class="hljs-params" data-v-05f02cc5>()</span> -&gt; PosInt:</span> ...
<span class="hljs-comment" data-v-05f02cc5># Wrong:</span>
<span class="hljs-function" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>def</span> <span class="hljs-title" data-v-05f02cc5>munge</span><span class="hljs-params" data-v-05f02cc5>(input:AnyStr)</span>:</span> ...
<span class="hljs-function" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>def</span> <span class="hljs-title" data-v-05f02cc5>munge</span><span class="hljs-params" data-v-05f02cc5>()</span>-&gt;PosInt:</span> ...

<span class="hljs-comment" data-v-05f02cc5># Correct:</span>
<span class="hljs-function" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>def</span> <span class="hljs-title" data-v-05f02cc5>complex</span><span class="hljs-params" data-v-05f02cc5>(real, imag=<span class="hljs-number" data-v-05f02cc5>0.0</span>)</span>:</span>
    <span class="hljs-keyword" data-v-05f02cc5>return</span> magic(r=real, i=imag)
<span class="hljs-comment" data-v-05f02cc5># Wrong:</span>
<span class="hljs-function" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>def</span> <span class="hljs-title" data-v-05f02cc5>complex</span><span class="hljs-params" data-v-05f02cc5>(real, imag = <span class="hljs-number" data-v-05f02cc5>0.0</span>)</span>:</span>
    <span class="hljs-keyword" data-v-05f02cc5>return</span> magic(r = real, i = imag)

<span class="hljs-comment" data-v-05f02cc5># Correct:</span>
<span class="hljs-function" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>def</span> <span class="hljs-title" data-v-05f02cc5>munge</span><span class="hljs-params" data-v-05f02cc5>(sep: AnyStr = None)</span>:</span> ...
<span class="hljs-function" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>def</span> <span class="hljs-title" data-v-05f02cc5>munge</span><span class="hljs-params" data-v-05f02cc5>(input: AnyStr, sep: AnyStr = None, limit=<span class="hljs-number" data-v-05f02cc5>1000</span>)</span>:</span> ...
<span class="hljs-comment" data-v-05f02cc5># Wrong:</span>
<span class="hljs-function" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>def</span> <span class="hljs-title" data-v-05f02cc5>munge</span><span class="hljs-params" data-v-05f02cc5>(input: AnyStr=None)</span>:</span> ...
<span class="hljs-function" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>def</span> <span class="hljs-title" data-v-05f02cc5>munge</span><span class="hljs-params" data-v-05f02cc5>(input: AnyStr, limit = <span class="hljs-number" data-v-05f02cc5>1000</span>)</span>:</span> ...

<span class="hljs-comment" data-v-05f02cc5># Correct:</span>
<span class="hljs-keyword" data-v-05f02cc5>if</span> foo == <span class="hljs-string" data-v-05f02cc5>&#39;blah&#39;</span>:
    do_blah_thing()
do_one()
do_two()
do_three()
<span class="hljs-comment" data-v-05f02cc5># Rather not:</span>

<span class="hljs-comment" data-v-05f02cc5># Wrong:</span>
<span class="hljs-keyword" data-v-05f02cc5>if</span> foo == <span class="hljs-string" data-v-05f02cc5>&#39;blah&#39;</span>: do_blah_thing()
do_one(); do_two(); do_three()

<span class="hljs-comment" data-v-05f02cc5># Wrong:</span>
<span class="hljs-keyword" data-v-05f02cc5>if</span> foo == <span class="hljs-string" data-v-05f02cc5>&#39;blah&#39;</span>: do_blah_thing()
<span class="hljs-keyword" data-v-05f02cc5>for</span> x <span class="hljs-keyword" data-v-05f02cc5>in</span> lst: total += x
<span class="hljs-keyword" data-v-05f02cc5>while</span> t &lt; <span class="hljs-number" data-v-05f02cc5>10</span>: t = delay()
<span class="hljs-comment" data-v-05f02cc5># Definitely not:</span>

<span class="hljs-comment" data-v-05f02cc5># Wrong:</span>
<span class="hljs-keyword" data-v-05f02cc5>if</span> foo == <span class="hljs-string" data-v-05f02cc5>&#39;blah&#39;</span>: do_blah_thing()
<span class="hljs-keyword" data-v-05f02cc5>else</span>: do_non_blah_thing()

<span class="hljs-keyword" data-v-05f02cc5>try</span>: something()
<span class="hljs-keyword" data-v-05f02cc5>finally</span>: cleanup()

do_one(); do_two(); do_three(long, argument,
                             list, like, this)

<span class="hljs-keyword" data-v-05f02cc5>if</span> foo == <span class="hljs-string" data-v-05f02cc5>&#39;blah&#39;</span>: one(); two(); three()
</code></pre><h2 id="when-to-use-trailing-commas" data-v-05f02cc5>When to use trailing commas</h2><p data-v-05f02cc5>trailling commas biasaanya itu opsional, akan tetapi mungkin saja anda butuhkan jika ingin melakukan updata data tersebut.</p><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-meta" data-v-05f02cc5># Correct:</span>
FILES = (<span class="hljs-string" data-v-05f02cc5>&#39;setup.cfg&#39;</span>,)
<span class="hljs-meta" data-v-05f02cc5># Wrong:</span>
FILES = <span class="hljs-string" data-v-05f02cc5>&#39;setup.cfg&#39;</span>,

<span class="hljs-meta" data-v-05f02cc5># Wrong:</span>
FILES = [<span class="hljs-string" data-v-05f02cc5>&#39;setup.cfg&#39;</span>, <span class="hljs-string" data-v-05f02cc5>&#39;tox.ini&#39;</span>,]
initialize(FILES, error=True,)
</code></pre><p data-v-05f02cc5><code data-v-05f02cc5>x **=** x **+** **1** *# Increment x*</code></p><p data-v-05f02cc5>But sometimes, this is useful:</p><p data-v-05f02cc5><code data-v-05f02cc5>x **=** x **+** **1** *# Compensate for border*</code></p><ul data-v-05f02cc5><li data-v-05f02cc5><a href="https://peps.python.org/pep-0257" data-v-05f02cc5>PEP 257</a> describes good docstring conventions. Note that most importantly, the <code data-v-05f02cc5>&quot;&quot;&quot;</code> that ends a multiline docstring should be on a line by itself:</li></ul><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-string" data-v-05f02cc5>&quot;&quot;&quot;Return a foobang

Optional plotz says to frobnicate the bizbaz first.
&quot;&quot;&quot;</span>
</code></pre><ul data-v-05f02cc5><li data-v-05f02cc5><p data-v-05f02cc5>For one liner docstrings, please keep the closing <code data-v-05f02cc5>&quot;&quot;&quot;</code> on the same line:</p><p data-v-05f02cc5><em data-v-05f02cc5><code data-v-05f02cc5>&quot;&quot;&quot;Return an ex-parrot.&quot;&quot;&quot;</code></em></p></li></ul><h2 id="penulisan-comment" data-v-05f02cc5>Penulisan comment</h2><p data-v-05f02cc5>comment yang berbeda dengan code, bukan comment. Up to date comment jika anda melakukan perubahan.</p><p data-v-05f02cc5>Comment haruslah kalimat lengkap, dan dimulai dengan huruf besar. Pastikan comment tersebut bisa dibaca oleh orang yang menjadi tujuan anda</p><h2 id="penamaan" data-v-05f02cc5>Penamaan</h2><p data-v-05f02cc5>The following naming styles are commonly distinguished:</p><ul data-v-05f02cc5><li data-v-05f02cc5><code data-v-05f02cc5>b</code> (single lowercase letter)</li><li data-v-05f02cc5><code data-v-05f02cc5>B</code> (single uppercase letter)</li><li data-v-05f02cc5><code data-v-05f02cc5>lowercase</code></li><li data-v-05f02cc5><code data-v-05f02cc5>lower_case_with_underscores</code></li><li data-v-05f02cc5><code data-v-05f02cc5>UPPERCASE</code></li><li data-v-05f02cc5><code data-v-05f02cc5>UPPER_CASE_WITH_UNDERSCORES</code></li><li data-v-05f02cc5><p data-v-05f02cc5><code data-v-05f02cc5>CapitalizedWords</code> (or CapWords, or CamelCase – so named because of the bumpy look of its letters <a href="https://peps.python.org/pep-0008/#id8" data-v-05f02cc5>[4]</a>). This is also sometimes known as StudlyCaps.</p><p data-v-05f02cc5> Note: When using acronyms in CapWords, capitalize all the letters of the acronym. Thus HTTPServerError is better than HttpServerError.</p></li><li data-v-05f02cc5><p data-v-05f02cc5><code data-v-05f02cc5>mixedCase</code> (differs from CapitalizedWords by initial lowercase character!)</p></li><li data-v-05f02cc5><code data-v-05f02cc5>Capitalized_Words_With_Underscores</code> (ugly!)</li></ul><h2 id="pengunaan-is" data-v-05f02cc5>Pengunaan is</h2><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-comment" data-v-05f02cc5># Correct:</span>
<span class="hljs-keyword" data-v-05f02cc5>if</span> foo <span class="hljs-keyword" data-v-05f02cc5>is</span> <span class="hljs-keyword" data-v-05f02cc5>not</span> <span class="hljs-keyword" data-v-05f02cc5>None</span>:
<span class="hljs-comment" data-v-05f02cc5># Wrong:</span>
<span class="hljs-keyword" data-v-05f02cc5>if</span> <span class="hljs-keyword" data-v-05f02cc5>not</span> foo <span class="hljs-keyword" data-v-05f02cc5>is</span> <span class="hljs-keyword" data-v-05f02cc5>None</span>:
</code></pre><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-comment" data-v-05f02cc5># Correct:</span>
<span class="hljs-function" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>def</span> <span class="hljs-title" data-v-05f02cc5>f</span><span class="hljs-params" data-v-05f02cc5>(x)</span>:</span> <span class="hljs-keyword" data-v-05f02cc5>return</span> <span class="hljs-number" data-v-05f02cc5>2</span>*x
<span class="hljs-comment" data-v-05f02cc5># Wrong:</span>
f = <span class="hljs-keyword" data-v-05f02cc5>lambda</span> x: <span class="hljs-number" data-v-05f02cc5>2</span>*x
</code></pre><h2 id="konsisten-dalam-melakukan-if-statement" data-v-05f02cc5>Konsisten dalam melakukan if statement</h2><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-comment" data-v-05f02cc5># Correct:</span>

<span class="hljs-function" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>def</span> <span class="hljs-title" data-v-05f02cc5>foo</span><span class="hljs-params" data-v-05f02cc5>(x)</span>:</span>
    <span class="hljs-keyword" data-v-05f02cc5>if</span> x &gt;= <span class="hljs-number" data-v-05f02cc5>0</span>:
        <span class="hljs-keyword" data-v-05f02cc5>return</span> math.sqrt(x)
    <span class="hljs-keyword" data-v-05f02cc5>else</span>:
        <span class="hljs-keyword" data-v-05f02cc5>return</span> <span class="hljs-keyword" data-v-05f02cc5>None</span>

<span class="hljs-function" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>def</span> <span class="hljs-title" data-v-05f02cc5>bar</span><span class="hljs-params" data-v-05f02cc5>(x)</span>:</span>
    <span class="hljs-keyword" data-v-05f02cc5>if</span> x &lt; <span class="hljs-number" data-v-05f02cc5>0</span>:
        <span class="hljs-keyword" data-v-05f02cc5>return</span> <span class="hljs-keyword" data-v-05f02cc5>None</span>
    <span class="hljs-keyword" data-v-05f02cc5>return</span> math.sqrt(x)
<span class="hljs-comment" data-v-05f02cc5># Wrong:</span>

<span class="hljs-function" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>def</span> <span class="hljs-title" data-v-05f02cc5>foo</span><span class="hljs-params" data-v-05f02cc5>(x)</span>:</span>
    <span class="hljs-keyword" data-v-05f02cc5>if</span> x &gt;= <span class="hljs-number" data-v-05f02cc5>0</span>:
        <span class="hljs-keyword" data-v-05f02cc5>return</span> math.sqrt(x)

<span class="hljs-function" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>def</span> <span class="hljs-title" data-v-05f02cc5>bar</span><span class="hljs-params" data-v-05f02cc5>(x)</span>:</span>
    <span class="hljs-keyword" data-v-05f02cc5>if</span> x &lt; <span class="hljs-number" data-v-05f02cc5>0</span>:
        <span class="hljs-keyword" data-v-05f02cc5>return</span>
    <span class="hljs-keyword" data-v-05f02cc5>return</span> math.sqrt(x)
</code></pre><h2 id="note" data-v-05f02cc5>Note</h2><aside data-v-05f02cc5> 💡 Untuk istilah atau kata kunci penting </aside><ul data-v-05f02cc5><li data-v-05f02cc5>assert statement</li><li data-v-05f02cc5>multiline if-statement</li><li data-v-05f02cc5>multiple with-statement</li></ul><h2 id="refrence-" data-v-05f02cc5>Refrence:</h2><ul data-v-05f02cc5><li data-v-05f02cc5><a href="https://peps.python.org/pep-0008/" data-v-05f02cc5>https://peps.python.org/pep-0008/</a>o</li></ul><h1 id="python-code-guide" data-v-05f02cc5>python code guide</h1><h2 id="variabel" data-v-05f02cc5>Variabel</h2><p data-v-05f02cc5>variabel adalah tempat untuk menyimpan data dengan tipe data tertentu. </p><p data-v-05f02cc5>Beberapa tipe data yang ada:</p><ul data-v-05f02cc5><li data-v-05f02cc5><p data-v-05f02cc5>Integer</p><p data-v-05f02cc5> Integer adalah bentuk nilai / angka. Dan memiliki jangkauan nilai </p><p data-v-05f02cc5> misalkan -32768 hingga 32768 </p></li><li data-v-05f02cc5><p data-v-05f02cc5>Float ( nilai riil )</p><p data-v-05f02cc5> Perbedaan antara float dan integer adalah nilai dibelakang koma. </p><p data-v-05f02cc5> contoh : 3.14 </p></li><li data-v-05f02cc5><p data-v-05f02cc5>character</p><p data-v-05f02cc5> “\\n” adalah kata yang digunakan untuk membuat baris baru. </p></li><li data-v-05f02cc5><p data-v-05f02cc5>string</p><p data-v-05f02cc5> harus diawali dengan “ atau ‘. string berisi kumpulan text</p></li><li data-v-05f02cc5><p data-v-05f02cc5>boolean</p><p data-v-05f02cc5> tipe data untuk menyatakan benar / salah </p></li><li data-v-05f02cc5><p data-v-05f02cc5>tipe tersetruktuk / function</p><p data-v-05f02cc5> block code atau kumpulan kode yang dapat dipakai kapan saja </p></li></ul><h1 id="python-guide" data-v-05f02cc5>Python guide</h1><h2 id="perbedaan-dari-cache-dan-database" data-v-05f02cc5>Perbedaan dari cache dan database</h2><p data-v-05f02cc5>Kita harus mengetahui ini. Ingat pattern input - proses - output</p><p data-v-05f02cc5>Pada cache kau menyimpan data <strong data-v-05f02cc5>output</strong>. Jika bisa jauhi caching, karena ini tidak akan memberimu outdated data. Kau tidak perlu untuk backup data cache karena bisa dibuat lagi</p><p data-v-05f02cc5>Pada database data yang kau simpan adalah input. Biasaanya dimasukan oleh manusia atau data yang merepresentasikan data didunia nyata. Itu sangat penting untuk menyimpan data database, karena kau tidak bisa membuatnya lagi. Sedangkan output seperti (html, json) tidak memiliki nilai yang besar, karena kita bisa membuatnya lagi.</p><h2 id="relational-database" data-v-05f02cc5>Relational database</h2><p data-v-05f02cc5>Pakailah SQL databases, karena itu bisa dipakai diberbagai kondisi. Misalkan PostgreSQL sebagai databases, sedangankan NoSQL sebagai penyimpan cache.</p><p data-v-05f02cc5>Postgressql memliki dokumentasi yang bagus: <a href="https://www.postgresql.org/docs/current/index.html" data-v-05f02cc5>https://www.postgresql.org/docs/current/index.html</a></p><h2 id="cardinality" data-v-05f02cc5>Cardinality</h2><p data-v-05f02cc5>refrence:</p><ul data-v-05f02cc5><li data-v-05f02cc5><a href="https://en.wikipedia.org/wiki/Cardinality_(data_modeling" data-v-05f02cc5>https://en.wikipedia.org/wiki/Cardinality_(data_modeling)</a>)</li><li data-v-05f02cc5><a href="https://github.com/guettli/programming-guidelines#2-data-structures" data-v-05f02cc5>https://github.com/guettli/programming-guidelines#2-data-structures</a></li></ul><hr data-v-05f02cc5><h2 id="basic" data-v-05f02cc5>Basic</h2><p data-v-05f02cc5>Cara ini di gunakan untuk orang yang memahami atau sudah pernah bermain dengan bahasa program sebelumnya</p><h2 id="literal-constant" data-v-05f02cc5>Literal constant</h2><p data-v-05f02cc5>Literals pada python: Numeric, string, boolean, special (none) and Literal collection</p><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-attr" data-v-05f02cc5>var_a</span> = <span class="hljs-number" data-v-05f02cc5>4</span>  # Integer
<span class="hljs-attr" data-v-05f02cc5>var_b</span> = <span class="hljs-number" data-v-05f02cc5>3.14</span>  # Float
<span class="hljs-attr" data-v-05f02cc5>var_c</span> = <span class="hljs-string" data-v-05f02cc5>&#39;nama orang&#39;</span> # string
</code></pre><p data-v-05f02cc5>&quot;var_a&quot; adalah integer atau numeric literal &quot;var_b&quot; adalah nilai decimal, bentuknya adalah float &quot;var_c&quot; adalah string</p><h2 id="kata-kunci-yang-tidak-bisa-dipakai-sebagai-variabel" data-v-05f02cc5>Kata kunci yang tidak bisa dipakai sebagai variabel</h2><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>if</span>, <span class="hljs-keyword" data-v-05f02cc5>else</span>, <span class="hljs-keyword" data-v-05f02cc5>for</span>, <span class="hljs-keyword" data-v-05f02cc5>while</span>, <span class="hljs-keyword" data-v-05f02cc5>is</span>, <span class="hljs-keyword" data-v-05f02cc5>as</span>, or, not, and, None, def, <span class="hljs-class" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>class</span>, <span class="hljs-type" data-v-05f02cc5>return</span>, <span class="hljs-type" data-v-05f02cc5>yield</span>,<span class="hljs-type" data-v-05f02cc5>pass</span>, <span class="hljs-type" data-v-05f02cc5>raise</span>, <span class="hljs-type" data-v-05f02cc5>True</span>, <span class="hljs-type" data-v-05f02cc5>False</span></span>
</code></pre><h2 id="operands" data-v-05f02cc5>Operands</h2><p data-v-05f02cc5>operands juga bisa disebut sebagai variabel. nama variabel tidak boleh dimulai dari angka dan python itu case sensitive</p><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-comment" data-v-05f02cc5>## Dynamically typed:</span>

<span class="hljs-attr" data-v-05f02cc5>my_var</span> = <span class="hljs-number" data-v-05f02cc5>34</span>
<span class="hljs-attr" data-v-05f02cc5>my_var</span> = <span class="hljs-string" data-v-05f02cc5>&quot;string&quot;</span>
<span class="hljs-attr" data-v-05f02cc5>my_var</span> = [<span class="hljs-number" data-v-05f02cc5>1</span>,<span class="hljs-number" data-v-05f02cc5>2</span>,<span class="hljs-number" data-v-05f02cc5>3</span>,<span class="hljs-number" data-v-05f02cc5>4</span>]
<span class="hljs-attr" data-v-05f02cc5>my_var</span> = <span class="hljs-number" data-v-05f02cc5>3.14</span>

<span class="hljs-comment" data-v-05f02cc5># Variabel bukanlah sebuah type, python is garbage collected</span>
</code></pre><p data-v-05f02cc5>Beberapa teknik untuk menamai style:</p><ul data-v-05f02cc5><li data-v-05f02cc5>camel casing names ( sesuai untuk varibel ) myVar, myString</li><li data-v-05f02cc5>capital camel casing names ( sesuai untuk penamaan class ) MyVar, FileData</li><li data-v-05f02cc5>snake casing names ( sesuai untuk variabel atau function names ) my_var, file_data</li></ul><h2 id="operators" data-v-05f02cc5>Operators</h2><p data-v-05f02cc5>Operators dipakai untuk menjalankan operands atau variabel. Operator seperti arithmetic, assignment, comparison, bitwise</p><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-comment" data-v-05f02cc5># Aritmetic operators</span>
+, -, \\\\*, /, %, \\\\*\\\\*, //

<span class="hljs-comment" data-v-05f02cc5># assignment operators</span>
=, +=, -=, /*=, /=, %=, //=, \\\\*\\\\*=, &amp;=, |=, &gt;&gt;=, &lt;&lt;=

<span class="hljs-comment" data-v-05f02cc5># comparison operators</span>
==, !=, &gt;, &lt;, &gt;=, &lt;=

<span class="hljs-comment" data-v-05f02cc5># Bitwise operators</span>
&amp;, |, ~, &lt;&lt;, &gt;&gt;

<span class="hljs-comment" data-v-05f02cc5># Logical operators</span>
<span class="hljs-keyword" data-v-05f02cc5>not</span>, <span class="hljs-keyword" data-v-05f02cc5>and</span>, <span class="hljs-keyword" data-v-05f02cc5>or</span>

<span class="hljs-comment" data-v-05f02cc5># Membership operators</span>

<span class="hljs-keyword" data-v-05f02cc5>in</span>, <span class="hljs-keyword" data-v-05f02cc5>not</span> <span class="hljs-keyword" data-v-05f02cc5>in</span>

<span class="hljs-comment" data-v-05f02cc5># Identity operators</span>

<span class="hljs-keyword" data-v-05f02cc5>is</span>, <span class="hljs-keyword" data-v-05f02cc5>not</span> <span class="hljs-keyword" data-v-05f02cc5>in</span>
</code></pre><h2 id="expressions" data-v-05f02cc5>Expressions</h2><p data-v-05f02cc5>Expression adalah evaluasi dari python interpreter, value atau sequnce dengan melakukan operation ( aritmatik/ conditional / lambda function ). Mereka</p><pre data-v-05f02cc5><code data-v-05f02cc5># Some example

<span class="hljs-string" data-v-05f02cc5>&quot;yes&quot;</span> + <span class="hljs-comment" data-v-05f02cc5>&quot; this</span>
<span class="hljs-keyword" data-v-05f02cc5>x</span> + <span class="hljs-number" data-v-05f02cc5>6</span>
<span class="hljs-keyword" data-v-05f02cc5>if</span> <span class="hljs-keyword" data-v-05f02cc5>a</span>==<span class="hljs-number" data-v-05f02cc5>3</span> <span class="hljs-keyword" data-v-05f02cc5>else</span> <span class="hljs-number" data-v-05f02cc5>2</span>
    <span class="hljs-keyword" data-v-05f02cc5>a</span> <span class="hljs-built_in" data-v-05f02cc5>or</span> <span class="hljs-keyword" data-v-05f02cc5>b</span>
    <span class="hljs-number" data-v-05f02cc5>2</span> <span class="hljs-built_in" data-v-05f02cc5>and</span> <span class="hljs-number" data-v-05f02cc5>3</span>
    lambda <span class="hljs-keyword" data-v-05f02cc5>x</span>:<span class="hljs-keyword" data-v-05f02cc5>x</span>**<span class="hljs-number" data-v-05f02cc5>2</span>
</code></pre><p data-v-05f02cc5>SRC: <a href="https://www.petanikode.com/statement-vs-expression/" data-v-05f02cc5>https://www.petanikode.com/statement-vs-expression/</a></p><ul data-v-05f02cc5><li data-v-05f02cc5>Statement - adalah bagian yang mengerjakan sesuatu </li><li data-v-05f02cc5>Expression - adalah bagian yang menghasilkan nilai </li></ul><p data-v-05f02cc5>Contoh statement = loop, if, declare variabel dan lain-lain contoh code </p><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>if</span> <span class="hljs-literal" data-v-05f02cc5>True</span>: <span class="hljs-meta" data-v-05f02cc5># ini adalah statement</span>
    nilai = <span class="hljs-number" data-v-05f02cc5>2</span> + <span class="hljs-number" data-v-05f02cc5>3</span> <span class="hljs-meta" data-v-05f02cc5># nilai adalah statement, dan 2 + 3 adlah expression</span>
    print(nilai) <span class="hljs-meta" data-v-05f02cc5># <span class="hljs-string" data-v-05f02cc5>&quot;print&quot;</span> adalah statement</span>
</code></pre><p data-v-05f02cc5>print bisa menjadi expresssion jika dimasukan kedalam variabel. </p><p data-v-05f02cc5>ada dua cara yang dapat dipakai untuk membedakan statement atau bukan. Coba masukan command tersebut kadalam variabel. Jika bisa dimasukan ke variabel maka itu termasuk expresssion, jika tidak maka itu statement. </p><p data-v-05f02cc5>contoh expression </p><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-attr" data-v-05f02cc5>nilaiA</span> = eval(<span class="hljs-string" data-v-05f02cc5>&quot;1 + 1&quot;</span>)
<span class="hljs-attr" data-v-05f02cc5>nilaiB</span> = eval()
</code></pre><pre data-v-05f02cc5><code data-v-05f02cc5>value = <span class="hljs-number" data-v-05f02cc5>10</span> 
requirement = <span class="hljs-symbol" data-v-05f02cc5>&#39;my</span> apple <span class="hljs-keyword" data-v-05f02cc5>is</span> <span class="hljs-number" data-v-05f02cc5>10</span>&#39; <span class="hljs-keyword" data-v-05f02cc5>if</span> value &lt; <span class="hljs-number" data-v-05f02cc5>10</span> <span class="hljs-keyword" data-v-05f02cc5>else</span> <span class="hljs-symbol" data-v-05f02cc5>&#39;my</span> apple <span class="hljs-keyword" data-v-05f02cc5>not</span> <span class="hljs-number" data-v-05f02cc5>10</span>&#39;
</code></pre><p data-v-05f02cc5>SRC: <a href="https://www.petanikode.com/statement-vs-expression/" data-v-05f02cc5>https://www.petanikode.com/statement-vs-expression/</a></p><h2 id="python-syntatic-sugar" data-v-05f02cc5>Python syntatic sugar</h2><p data-v-05f02cc5>cara lain untuk menulis expression / stattements cara cepat</p><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-comment" data-v-05f02cc5>## Some examples</span>

<span class="hljs-attr" data-v-05f02cc5>a</span> = <span class="hljs-attr" data-v-05f02cc5>b</span> = <span class="hljs-attr" data-v-05f02cc5>c</span> = <span class="hljs-number" data-v-05f02cc5>10</span>
<span class="hljs-comment" data-v-05f02cc5># nilainya 10 semua</span>

<span class="hljs-attr" data-v-05f02cc5>text</span> = <span class="hljs-string" data-v-05f02cc5>&quot;This is text 1.&quot;</span> \\\\
<span class="hljs-string" data-v-05f02cc5>&quot;This is text 2&quot;</span> \\\\
<span class="hljs-string" data-v-05f02cc5>&quot;And I can also continue here in the next line.&quot;</span>
</code></pre><h2 id="comments" data-v-05f02cc5>Comments</h2><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-comment" data-v-05f02cc5># Ini adalah single comment</span>

<span class="hljs-comment" data-v-05f02cc5># ini adalah todo comment</span>

<span class="hljs-string" data-v-05f02cc5>&quot;&quot;&quot;
Ini adalah multiline comment / todo comment
&quot;&quot;&quot;</span>
</code></pre><h2 id="indentation" data-v-05f02cc5>Indentation</h2><p data-v-05f02cc5>Ini dipakai Flow Control, Exception Handling, Function/Class definitions pada python, indentationError itu muncul jika teman-teman salah menggunakan indentasi</p><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-comment" data-v-05f02cc5>## Example 1</span>

<span class="hljs-keyword" data-v-05f02cc5>if</span> 10 &gt; 5:
    <span class="hljs-built_in" data-v-05f02cc5>print</span>(<span class="hljs-string" data-v-05f02cc5>&#39;printed&#39;</span>)
</code></pre><h2 id="three-types-of-namespaces" data-v-05f02cc5>three types of namespaces</h2><ul data-v-05f02cc5><li data-v-05f02cc5>built-in</li><li data-v-05f02cc5>global</li><li data-v-05f02cc5>local</li></ul><pre data-v-05f02cc5><code data-v-05f02cc5><span class="hljs-comment" data-v-05f02cc5>## Built-in namespace</span>

<span class="hljs-comment" data-v-05f02cc5># For example, some functions</span>
<span class="hljs-comment" data-v-05f02cc5># print(), len(), map(), range(), list(), set(), str(), etc.</span>

<span class="hljs-comment" data-v-05f02cc5>## Global namespace</span>

<span class="hljs-keyword" data-v-05f02cc5>import</span> time
my_var = <span class="hljs-number" data-v-05f02cc5>10</span>

<span class="hljs-comment" data-v-05f02cc5># import any module</span>
<span class="hljs-comment" data-v-05f02cc5># variabel / functions / classes</span>

<span class="hljs-comment" data-v-05f02cc5>## Local namespace</span>

<span class="hljs-function" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>def</span> <span class="hljs-title" data-v-05f02cc5>name_function</span><span class="hljs-params" data-v-05f02cc5>()</span>:</span>
    my_var = <span class="hljs-number" data-v-05f02cc5>10</span>

    <span class="hljs-function" data-v-05f02cc5><span class="hljs-keyword" data-v-05f02cc5>def</span> <span class="hljs-title" data-v-05f02cc5>name_fun</span><span class="hljs-params" data-v-05f02cc5>()</span>:</span>
        <span class="hljs-keyword" data-v-05f02cc5>pass</span>

<span class="hljs-comment" data-v-05f02cc5># variabel dan function itu berada didalam local namespace</span>
</code></pre><h2 id="note" data-v-05f02cc5>Note</h2><ul data-v-05f02cc5><li data-v-05f02cc5>[ ] condition / if statement</li><li data-v-05f02cc5>[ ] case / exception</li><li data-v-05f02cc5>[ ] function</li><li data-v-05f02cc5>[ ] list, tuple, sets, dictionaries</li></ul><h2 id="list" data-v-05f02cc5>List</h2><p data-v-05f02cc5><code data-v-05f02cc5>[1, 2, &#39;halo&#39;]</code></p><p data-v-05f02cc5>list disini memiliki banyak sekali manfaat. Yang dapat membantu kita menyimpan data secara ter urut.</p><h2 id="dictionary" data-v-05f02cc5>Dictionary</h2><pre data-v-05f02cc5><code data-v-05f02cc5>{
<span class="hljs-symbol" data-v-05f02cc5>&#39;name</span>&#39; : &#39;<span class="hljs-type" data-v-05f02cc5>rangga</span>&#39;,
<span class="hljs-symbol" data-v-05f02cc5>&#39;age</span>&#39; : 20,
<span class="hljs-symbol" data-v-05f02cc5>&#39;major</span>&#39; : &#39;<span class="hljs-type" data-v-05f02cc5>sains</span>&#39;
}
</code></pre><p data-v-05f02cc5>Dictionary tidak terurut seperti list, tetapi berbentuk <code data-v-05f02cc5>key:value</code></p><h2 id="tuple" data-v-05f02cc5>Tuple</h2><pre data-v-05f02cc5><code data-v-05f02cc5>(<span class="hljs-symbol" data-v-05f02cc5>&#39;nasi</span> padang&#39;, <span class="hljs-symbol" data-v-05f02cc5>&#39;nasi</span> goreng&#39;, <span class="hljs-symbol" data-v-05f02cc5>&#39;nasi</span> rawon&#39;)
</code></pre><p data-v-05f02cc5>Tuple sama seperti list, tetapi kita tidak bisa menggubah isinya setelah berhasil dibuat.</p><h2 id="set" data-v-05f02cc5>Set</h2><pre data-v-05f02cc5><code data-v-05f02cc5>{<span class="hljs-string" data-v-05f02cc5>&#39;kucing&#39;</span>, <span class="hljs-string" data-v-05f02cc5>&#39;anjing&#39;</span>, <span class="hljs-string" data-v-05f02cc5>&#39;katak&#39;</span>, <span class="hljs-string" data-v-05f02cc5>&#39;katak&#39;</span>}
</code></pre><p data-v-05f02cc5>Kita tidak bisa melakukan indexing pada set, dan data pada set tidak dapat dirubah. Tetapi data bisa datambahkan dan dikurangi</p><p data-v-05f02cc5>Kelebihan utama set adalah menghilangkan duplikasi pada data. Data yang terduplikasi akan ditampilkan satu pada set </p><p data-v-05f02cc5>SRC: <a href="https://www.programiz.com/python-programming/list" data-v-05f02cc5>https://www.programiz.com/python-programming/list</a></p><h1 id="latihan-python" data-v-05f02cc5>Latihan Python</h1>`,133)),c("p",null,[S(n,{to:"/ltPython",class:"LFT-Item"},{default:x(()=>s[0]||(s[0]=[w(" Latihan Python ")])),_:1})]),s[3]||(s[3]=Z('<h2 id="source" data-v-05f02cc5>Source</h2><ul data-v-05f02cc5><li data-v-05f02cc5><a href="https://docs.python.org/3/tutorial/" data-v-05f02cc5>https://docs.python.org/3/tutorial/</a></li><li data-v-05f02cc5><a href="https://github.com/huangsam/ultimate-python" data-v-05f02cc5>https://github.com/huangsam/ultimate-python</a></li><li data-v-05f02cc5><a href="https://github.com/guettli/programming-guidelines" data-v-05f02cc5>https://github.com/guettli/programming-guidelines</a></li><li data-v-05f02cc5><a href="https://github.com/Anku5hk/Programmers_guide_to_Python/blob/main/book.md" data-v-05f02cc5>https://github.com/Anku5hk/Programmers_guide_to_Python/blob/main/book.md</a></li><li data-v-05f02cc5><a href="https://github.com/Asabeneh/Python-for-Everyone" data-v-05f02cc5>https://github.com/Asabeneh/Python-for-Everyone</a></li><li data-v-05f02cc5><a href="https://roadmap.sh/python" data-v-05f02cc5>https://roadmap.sh/python</a></li></ul>',2)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[1]||(s[1]=[w("Go to Home")])),_:1})])],64)}}},vf=ca(hf,[["__scopeId","data-v-05f02cc5"]]),mf={__name:"react",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[9]||(s[9]=Z(`<h1 id="react-js" data-v-d3905b01>React Js</h1><p data-v-d3905b01>ReactJs adalah salah satu open-source library Javascript yang digunakan untuk membuat user interface (UI) pada halaman website dan aplikasi mobile. ReactJS dibuat dan dibangun oleh Facebook dan ReactJS cukup populer di antara developer.</p><p data-v-d3905b01>beberapa contoh pengguna react adalah Netflix, Airbnb, dan uber. </p><p data-v-d3905b01>ReactJS Library menggunakan bentuk virtual dari DOM (Document Object Model) yang membantu kita untuk membuat representasi ringan dari DOM asli dan secara tidak langsung mengantikan DOM manual, untuk menjadi proses update UI lebih efisien.</p><p data-v-d3905b01>Beberapa Fitur Populer dari ReactJs:</p><ul data-v-d3905b01><li data-v-d3905b01>JSX: adalah syntax, untuk menambahkan kode html melalui perintah Javascript</li><li data-v-d3905b01>Virtual DOM: Reperentasi dari DOM yang lebih ringgan, agar Update UI lebih efisien.</li><li data-v-d3905b01>Component-based Architecture: Membantu kita untuk menggunakan komponent UI yang sudah ada (Reusable). </li><li data-v-d3905b01>One-way data Binding: menyajikan jalan simple dan efisient untuk mengatur data di dalam aplikasi</li><li data-v-d3905b01>Declarative Programming: Memperbolehkan kita sebagai developer untuk mendeskripsikan seperti apa UI itu bekerja</li></ul><p data-v-d3905b01>ReactJS dapat dikombinasi dengan banyak library, seperti Next.js dan lain-lain. Yang menjadikan reacjs Menjadi lebih populer.</p><h2 id="jquery-atau-react-" data-v-d3905b01>Jquery atau react?</h2><ul data-v-d3905b01><li data-v-d3905b01>Menurut chatgpt</li></ul><p data-v-d3905b01>Tidak harus mempeljarai Jquery sebelum React. Jquery digunakan untuk mengatur DOM dan react juga bisa mengatur DOM oleh karena itu pelajari saja versi teknologi yang lebih baru.</p><h3 id="membuat-component" data-v-d3905b01>membuat component</h3><p data-v-d3905b01><strong data-v-d3905b01>komponent React</strong> adalah suatu blok code dasar dari aplikasi React. komponen adalah sebuah potongan kode yang dapat kita gunakan kemabali yang mewakili bagian dari UI. komponen dapat berupa sebuah element sederhana, atau bentuk yang lebih complex.</p><p data-v-d3905b01>Manfaat komponen react:</p><ul data-v-d3905b01><li data-v-d3905b01>Modularitas: komponen React adalah suatu bagian kecil dari keseluruhan UI. Ini akan sangat memudahkan kita untuk melakukan pemeliharaan code kedepannya.</li><li data-v-d3905b01>Dapat digunakan kembali, sama seperti konsep function</li><li data-v-d3905b01>Enkapsulasi: semua variabel didalam komponen, hanya bisa diakses oleh komponen tersebut, dan tidak akan mempengaruhi komponen lain.</li></ul><p data-v-d3905b01>Terdapat dua bentuk componentL:</p><ul data-v-d3905b01><li data-v-d3905b01>function component</li><li data-v-d3905b01>Class component</li></ul><h2 id="variabel-jsx" data-v-d3905b01>Variabel JSX</h2><pre data-v-d3905b01><code data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>const</span> buttonText = <span class="xml" data-v-d3905b01><span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>button</span>&gt;</span>Click Me!<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>button</span>&gt;</span></span>;

<span class="hljs-function" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>function</span> <span class="hljs-title" data-v-d3905b01>MyComponent</span>(<span class="hljs-params" data-v-d3905b01></span>) </span>{
  <span class="hljs-keyword" data-v-d3905b01>return</span> (
    <span class="xml" data-v-d3905b01><span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>div</span>&gt;</span>
      {buttonText}
    <span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>div</span>&gt;</span></span>
  );
}
</code></pre><h2 id="comment-pada-jsx" data-v-d3905b01>comment pada JSX</h2><pre data-v-d3905b01><code data-v-d3905b01><span class="hljs-comment" data-v-d3905b01>// Ini adalah komentar satu baris tentang komponen</span>

<span class="hljs-function" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>function</span> <span class="hljs-title" data-v-d3905b01>MyComponent</span>(<span class="hljs-params" data-v-d3905b01></span>) </span>{
  <span class="hljs-keyword" data-v-d3905b01>return</span> (
    <span class="xml" data-v-d3905b01><span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>div</span>&gt;</span>
      {/* Ini adalah komentar multi-baris
          tentang isi komponen */}
      <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>h1</span>&gt;</span>Hello, World!<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>h1</span>&gt;</span>
    <span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>div</span>&gt;</span></span>
  );
}
</code></pre><h1 id="aturan-jsx" data-v-d3905b01>aturan JSX</h1><ul data-v-d3905b01><li data-v-d3905b01>untuk beberapa attribute HTML, kita harus menggunakan &quot;camelCase&quot; sebagai penulisan. Contoh: <code data-v-d3905b01>onClick</code>, <code data-v-d3905b01>onChange</code></li><li data-v-d3905b01>untuk penamaan attribute class adalah <code data-v-d3905b01>className</code></li><li data-v-d3905b01>untuk single tag, gunakan seperti ini <code data-v-d3905b01>&lt;img src=&quot;#&quot; /&gt;</code> harus memiliki penutup akhir. <code data-v-d3905b01>&lt;br /&gt;</code></li><li data-v-d3905b01>penulisan inline css <code data-v-d3905b01>Teks merah dengan ukuran 20px&lt;/p&gt;</code></li><li data-v-d3905b01>penulisan jika didalam JSX, <code data-v-d3905b01>&lt;button onClick={() =&gt; alert(&quot;Hello, World!&quot;)}&gt;</code> perjelas informasi yang kita berikan itu string. </li><li data-v-d3905b01>perhatikan dalam membuat JSX, harus terdapat container!, jika didalam JSX terdapat banyak eleemnt.</li></ul><p data-v-d3905b01>src: <a href="https://legacy.reactjs.org/docs/introducing-jsx.html" data-v-d3905b01>https://legacy.reactjs.org/docs/introducing-jsx.html</a></p><h2 id="react-jsx" data-v-d3905b01>React JSX</h2><p data-v-d3905b01>Fitur untuk menulis kode HTML didalam Javascript. Ada beberapa Persyaratan untuk JSX ini: </p><h2 id="jsx-javascript-xml-" data-v-d3905b01>JSX (Javascript XML)</h2><p data-v-d3905b01>adalah sebuah interaksi antara Javascript dengan HTML. dimana kita bisa menambahkan code Javascript dengan HTMl secara bersamaan.</p><p data-v-d3905b01>contoh:</p><pre data-v-d3905b01><code data-v-d3905b01><span class="xml" data-v-d3905b01><span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>p</span>&gt;</span> </span><span class="hljs-template-variable" data-v-d3905b01>{1 + 2}</span><span class="xml" data-v-d3905b01> <span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>p</span>&gt;</span></span>
</code></pre><p data-v-d3905b01>hasilnya adalah 3 </p><h2 id="state" data-v-d3905b01>State</h2><p data-v-d3905b01>state adalah bentuk konsep dimana kita bisa menyimpan suatu data, dan data tersebut bisa kita panggil, dan ubah kapan saja. konsep <code data-v-d3905b01>state</code> itu sama seperti <code data-v-d3905b01>property</code> pada class. </p><pre data-v-d3905b01><code data-v-d3905b01><span class="hljs-function" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>constructor</span><span class="hljs-params" data-v-d3905b01>(props)</span><span class="hljs-comment" data-v-d3905b01>{
        super(props)
        this.state = {count: 0}</span>
    }</span>
</code></pre><h2 id="event" data-v-d3905b01>Event</h2><p data-v-d3905b01>Event didalam React adalah suatu fungsi dimana user bisa melakukan interaksi dengan component yang kita buat. untuk melakukannya kita akan menggunakan <code data-v-d3905b01>method</code> untuk menerima interaksi. </p><pre data-v-d3905b01><code data-v-d3905b01> <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>button</span> <span class="hljs-attr" data-v-d3905b01>onClick</span>=<span class="hljs-string" data-v-d3905b01>{()</span> =&gt;</span> {this.handleClick()}}&gt; + <span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>button</span>&gt;</span>
</code></pre><h2 id="akses-state" data-v-d3905b01>akses state</h2><p data-v-d3905b01>menampilkkan state kedalam JSX. </p><pre data-v-d3905b01><code data-v-d3905b01> <span class="hljs-variable" data-v-d3905b01>&lt;h1&gt;</span>{this.<span class="hljs-keyword" data-v-d3905b01>state</span>.count}&lt;/h1&gt;
</code></pre><h2 id="perbarui-state" data-v-d3905b01>perbarui state</h2><pre data-v-d3905b01><code data-v-d3905b01>this.<span class="hljs-built_in" data-v-d3905b01>set</span>State({count : this.<span class="hljs-keyword" data-v-d3905b01>state</span>.count + <span class="hljs-number" data-v-d3905b01>1</span>})
</code></pre><ul data-v-d3905b01><li data-v-d3905b01>dimana <code data-v-d3905b01>setState</code> adalah suatu method, yang bisa kita gunakan untuk melakukan perubahan state. </li><li data-v-d3905b01><code data-v-d3905b01>count</code> adalah state yang dipilih </li><li data-v-d3905b01><code data-v-d3905b01>this.state.count</code> adalah nilai didalam state, dan cara memangil mereka </li><li data-v-d3905b01>hasil dari aritmatika tersebut, akan disimpan ke <code data-v-d3905b01>count</code> state</li></ul><hr data-v-d3905b01><h1 id="bagian-2" data-v-d3905b01>Bagian 2</h1><hr data-v-d3905b01><h2 id="membuat-style-inline-css-" data-v-d3905b01>Membuat Style ( Inline CSS )</h2><pre data-v-d3905b01><code data-v-d3905b01>&lt;p  style={styles.colorP}&gt; Ini berwarna merah &lt;/p&gt;

// Styles bisa kita tempatkan diluar dari class, atau <span class="hljs-keyword" data-v-d3905b01>function</span>.
<span class="hljs-keyword" data-v-d3905b01>let</span> styles = { 
colorP: {color: <span class="hljs-string" data-v-d3905b01>&#39;red&#39;</span>, fontSize: <span class="hljs-string" data-v-d3905b01>&#39;40px&#39;</span>},
colorH1: {color: <span class="hljs-string" data-v-d3905b01>&#39;red&#39;</span>, fontSize: <span class="hljs-string" data-v-d3905b01>&#39;40px&#39;</span>},
}
</code></pre><h2 id="membuat-banyak-component" data-v-d3905b01>membuat banyak component</h2><p data-v-d3905b01><a href="../code/jsPro/membuat-banyak-component" data-v-d3905b01>Source Code</a></p><h2 id="method-map-" data-v-d3905b01>Method map()</h2><pre data-v-d3905b01><code data-v-d3905b01>render(){
        <span class="hljs-keyword" data-v-d3905b01>let</span> abc = [{<span class="hljs-attr" data-v-d3905b01>id</span>: <span class="hljs-number" data-v-d3905b01>1</span>, <span class="hljs-attr" data-v-d3905b01>name</span>:<span class="hljs-string" data-v-d3905b01>&#39;appel&#39;</span>, <span class="hljs-attr" data-v-d3905b01>completed</span>:<span class="hljs-literal" data-v-d3905b01>false</span>},
    {<span class="hljs-attr" data-v-d3905b01>id</span>: <span class="hljs-number" data-v-d3905b01>2</span>, <span class="hljs-attr" data-v-d3905b01>name</span>:<span class="hljs-string" data-v-d3905b01>&#39;manggo&#39;</span>, <span class="hljs-attr" data-v-d3905b01>completed</span>:<span class="hljs-literal" data-v-d3905b01>false</span>},
    {<span class="hljs-attr" data-v-d3905b01>id</span>: <span class="hljs-number" data-v-d3905b01>3</span>, <span class="hljs-attr" data-v-d3905b01>name</span>:<span class="hljs-string" data-v-d3905b01>&#39;banana&#39;</span>, <span class="hljs-attr" data-v-d3905b01>completed</span>:<span class="hljs-literal" data-v-d3905b01>false</span>},]

        <span class="hljs-keyword" data-v-d3905b01>return</span>(
            <span class="xml" data-v-d3905b01><span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>div</span>&gt;</span>
                {abc.map((item) =&gt; {
                    return(<span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>p</span>&gt;</span>{item.name}<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>p</span>&gt;</span>)
                })}
            <span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>div</span>&gt;</span></span>
        )
    }
</code></pre><h2 id="pemanggilan-jsx" data-v-d3905b01>Pemanggilan JSX</h2><p data-v-d3905b01>terdapat dua cara pemanggilan JSX:</p><pre data-v-d3905b01><code data-v-d3905b01><span class="hljs-function" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>function</span> <span class="hljs-title" data-v-d3905b01>App</span>(<span class="hljs-params" data-v-d3905b01></span>) </span>{
    <span class="hljs-keyword" data-v-d3905b01>let</span> abc = <span class="xml" data-v-d3905b01><span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>p</span>&gt;</span> Saya Adalah JSX Variabel<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>p</span>&gt;</span></span>

    <span class="hljs-function" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>function</span> <span class="hljs-title" data-v-d3905b01>Acc</span>(<span class="hljs-params" data-v-d3905b01></span>)</span>{ <span class="hljs-comment" data-v-d3905b01>// untuk render Element JSX wajib huruf besar pada awalan</span>
        <span class="hljs-keyword" data-v-d3905b01>return</span>  <span class="xml" data-v-d3905b01><span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>h1</span>&gt;</span> Saya adalah JSX Function<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>h1</span>&gt;</span></span>
    }

    <span class="hljs-keyword" data-v-d3905b01>return</span>(
        <span class="xml" data-v-d3905b01><span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>div</span>&gt;</span>
            {abc}
            <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>Acc</span> /&gt;</span>
        <span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>div</span>&gt;</span></span>
    )
}
</code></pre><p data-v-d3905b01>Aturan diatas akan berlaku jika component memiliki bentuk function. </p><p data-v-d3905b01>jika component memiliki bentuk class maka cara pemanggilan akan seperti ini: <code data-v-d3905b01>{this.Acc()}</code></p><p data-v-d3905b01>method yang dipanggil JSX, harus huruf besar pada awalan. </p><h2 id="-statename-" data-v-d3905b01>{ stateName ? }</h2><pre data-v-d3905b01><code data-v-d3905b01><span class="hljs-class" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>class</span> <span class="hljs-title" data-v-d3905b01>PokeDetail</span> <span class="hljs-keyword" data-v-d3905b01>extends</span> <span class="hljs-title" data-v-d3905b01>React</span>.<span class="hljs-title" data-v-d3905b01>Component</span> </span>{
    <span class="hljs-keyword" data-v-d3905b01>constructor</span>(props){
        <span class="hljs-keyword" data-v-d3905b01>super</span>(props)
        <span class="hljs-keyword" data-v-d3905b01>this</span>.state = {<span class="hljs-attr" data-v-d3905b01>ch</span>: <span class="hljs-literal" data-v-d3905b01>true</span>}
    }

    Acc(){ <span class="hljs-comment" data-v-d3905b01>// untuk render Element JSX wajib huruf besar pada awalan</span>
        <span class="hljs-keyword" data-v-d3905b01>let</span> abc = <span class="xml" data-v-d3905b01><span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>p</span>&gt;</span> Saya Adalah JSX Variabel<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>p</span>&gt;</span></span>
        <span class="hljs-keyword" data-v-d3905b01>return</span>  <span class="xml" data-v-d3905b01><span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>h1</span>&gt;</span> Saya adalah JSX Function<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>h1</span>&gt;</span></span>
    }

    render(){
        <span class="hljs-keyword" data-v-d3905b01>return</span>(
            <span class="xml" data-v-d3905b01><span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>div</span>&gt;</span>
                {this.state.ch? this.Acc() : <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>p</span>&gt;</span>hi<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>p</span>&gt;</span> }
            <span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>div</span>&gt;</span></span>
        )
    }
}
</code></pre><p data-v-d3905b01>Ini adalah konep sederhana, dimana kita menempatkan dua element, dan salah satu element akan di render jika nilai <code data-v-d3905b01>this.state.ch</code> adalah <code data-v-d3905b01>true</code>. </p><p data-v-d3905b01>contoh diatas, yang akan dirender adalaj <code data-v-d3905b01>this.Acc()</code></p><hr data-v-d3905b01><h1 id="bagian-code" data-v-d3905b01>Bagian code</h1><hr data-v-d3905b01><h2 id="cheatsheet" data-v-d3905b01>Cheatsheet</h2><h3 id="menambahkan-variabel-jsx" data-v-d3905b01>Menambahkan variabel JSX</h3><p data-v-d3905b01><code data-v-d3905b01>const CSX = &lt;p&gt; Ini adalah p &lt;/p&gt;;</code> atau <code data-v-d3905b01>const csx = (&lt;ul&gt; &lt;li&gt;ini &lt;/li&gt; &lt;li&gt;ini &lt;/li&gt; &lt;/ul&gt; )</code></p><h3 id="menambahkan-comment" data-v-d3905b01>Menambahkan Comment</h3><p data-v-d3905b01><code data-v-d3905b01>const csx = (&lt;ul&gt; &lt;li&gt;ini &lt;/li&gt; {/*Ini komment*/} &lt;li&gt;ini &lt;/li&gt; &lt;/ul&gt; )</code></p><p data-v-d3905b01>Ref: <a href="https://forum.freecodecamp.org/t/freecodecamp-challenge-guide-add-comments-in-jsx/301376" data-v-d3905b01>https://forum.freecodecamp.org/t/freecodecamp-challenge-guide-add-comments-in-jsx/301376</a></p><h3 id="membuat-component" data-v-d3905b01>membuat component</h3><p data-v-d3905b01><strong data-v-d3905b01>komponent React</strong> adalah suatu blok code dasar dari aplikasi React. komponen adalah sebuah potongan kode yang dapat kita gunakan kemabali yang mewakili bagian dari UI. komponen dapat berupa sebuah element sederhana, atau bentuk yang lebih complex. </p><p data-v-d3905b01>Manfaat komponen react: </p><ul data-v-d3905b01><li data-v-d3905b01>Modularitas: komponen React adalah suatu bagian kecil dari keseluruhan UI. Ini akan sangat memudahkan kita untuk melakukan pemeliharaan code kedepannya. </li><li data-v-d3905b01>Dapat digunakan kembali, sama seperti konsep function </li><li data-v-d3905b01>Enkapsulasi: semua variabel didalam komponen, hanya bisa diakses oleh komponen tersebut, dan tidak akan mempengaruhi komponen lain. </li></ul><p data-v-d3905b01>Terdapat dua bentuk componentL:</p><ul data-v-d3905b01><li data-v-d3905b01>function component </li><li data-v-d3905b01>Class component</li></ul><h3 id="menimpa-element-lama-render" data-v-d3905b01>Menimpa element lama | Render</h3><p data-v-d3905b01>Menimpa element lama dengan element dari react </p><pre data-v-d3905b01><code data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>import</span> React <span class="hljs-keyword" data-v-d3905b01>from</span> <span class="hljs-string" data-v-d3905b01>&#39;react&#39;</span>;
<span class="hljs-keyword" data-v-d3905b01>import</span> ReactDOM <span class="hljs-keyword" data-v-d3905b01>from</span> <span class="hljs-string" data-v-d3905b01>&#39;react-dom&#39;</span>;

<span class="hljs-keyword" data-v-d3905b01>const</span> element = <span class="xml" data-v-d3905b01><span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>h1</span>&gt;</span>Hello, world!<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>h1</span>&gt;</span></span>;

ReactDOM.render(element, <span class="hljs-built_in" data-v-d3905b01>document</span>.getElementById(<span class="hljs-string" data-v-d3905b01>&#39;root&#39;</span>));
</code></pre><h3 id="penempatan-dari-jsx" data-v-d3905b01>Penempatan dari JSX</h3><p data-v-d3905b01>JSX hanya ditempatkan pada bagian &quot;return&quot;.</p><p data-v-d3905b01>atau jika ingin membuat code Javascript, maka mereka harus tetap berada pada bagian method &quot;render().&quot;</p><pre data-v-d3905b01><code data-v-d3905b01>
<span class="hljs-comment" data-v-d3905b01>// Import React from &#39;&#39;</span>
<span class="hljs-keyword" data-v-d3905b01>import</span> <span class="hljs-type" data-v-d3905b01>React</span> from <span class="hljs-symbol" data-v-d3905b01>&#39;reac</span>t&#39;;

let text = <span class="hljs-string" data-v-d3905b01>&quot;Halo dunia ini&quot;</span>

<span class="hljs-comment" data-v-d3905b01>// lakukan inheritance dari component</span>
<span class="hljs-class" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>class</span> <span class="hljs-title" data-v-d3905b01>App</span> <span class="hljs-keyword" data-v-d3905b01>extends</span> <span class="hljs-title" data-v-d3905b01>React</span>.<span class="hljs-title" data-v-d3905b01>Component</span> </span>{
  render () {
    <span class="hljs-keyword" data-v-d3905b01>return</span> (
      &lt;h1&gt; {text} &lt;/h1&gt;
    );
  }
}

export <span class="hljs-keyword" data-v-d3905b01>default</span> <span class="hljs-type" data-v-d3905b01>App</span>;
</code></pre><p data-v-d3905b01>untuk melakukan export code Javascript kedalam JSX, bisa dilakukan dengan cara tersebut. aturan variabel tetap pada method render().</p><pre data-v-d3905b01><code data-v-d3905b01>{ namaVariabel }
</code></pre><h3 id="mengatur-style-dari-jsx-menambahkan-class" data-v-d3905b01>mengatur style dari JSX | Menambahkan class</h3><pre data-v-d3905b01><code data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>import</span> React <span class="hljs-keyword" data-v-d3905b01>from</span> <span class="hljs-string" data-v-d3905b01>&#39;react&#39;</span>;

<span class="hljs-function" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>function</span> <span class="hljs-title" data-v-d3905b01>MyComponent</span>(<span class="hljs-params" data-v-d3905b01></span>) </span>{
  <span class="hljs-keyword" data-v-d3905b01>return</span> (
    <span class="xml" data-v-d3905b01><span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>div</span> <span class="hljs-attr" data-v-d3905b01>className</span>=<span class="hljs-string" data-v-d3905b01>&quot;my-class&quot;</span>&gt;</span>
      <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>h1</span>&gt;</span>Hello, world!<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>h1</span>&gt;</span>
      <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>p</span>&gt;</span>This is my component.<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>p</span>&gt;</span>
    <span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>div</span>&gt;</span></span>
  );
}
</code></pre><p data-v-d3905b01>Penggunaan &quot;className&quot; adalah bentuk reserved dari &quot;class&quot; attribute pada html. </p><p data-v-d3905b01>pada render JSX hanya diperbolehkan untuk mengirim satu element. <strong data-v-d3905b01>tidak boleh ada banyak container!</strong>.</p><h3 id="untuk-tag-element-yang-tidak-memiliki-kontent-satu-tag" data-v-d3905b01>Untuk tag element yang tidak memiliki kontent | satu tag</h3><pre data-v-d3905b01><code data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>import</span> React <span class="hljs-keyword" data-v-d3905b01>from</span> <span class="hljs-string" data-v-d3905b01>&#39;react&#39;</span>;

<span class="hljs-function" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>function</span> <span class="hljs-title" data-v-d3905b01>MyComponent</span>(<span class="hljs-params" data-v-d3905b01></span>) </span>{
  <span class="hljs-keyword" data-v-d3905b01>return</span> (
    <span class="xml" data-v-d3905b01><span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>div</span> <span class="hljs-attr" data-v-d3905b01>className</span>=<span class="hljs-string" data-v-d3905b01>&quot;my-class&quot;</span>&gt;</span>
      <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>h1</span>&gt;</span>Hello, world!<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>h1</span>&gt;</span>
      <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>br</span> /&gt;</span> 
      <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>hr</span> /&gt;</span>
      <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>p</span>&gt;</span>This is my component.<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>p</span>&gt;</span>
    <span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>div</span>&gt;</span></span>
  );
}
</code></pre><p data-v-d3905b01>yang awalnya seperti ini <code data-v-d3905b01>&lt;br&gt;</code> kita tulis menjadi <code data-v-d3905b01>&lt;br /&gt;</code></p><h3 id="contoh-lain-dengan-class" data-v-d3905b01>Contoh lain dengan class</h3><pre data-v-d3905b01><code data-v-d3905b01>
<span class="hljs-comment" data-v-d3905b01>// Import React from &#39;&#39;</span>
<span class="hljs-keyword" data-v-d3905b01>import</span> <span class="hljs-type" data-v-d3905b01>React</span> from <span class="hljs-symbol" data-v-d3905b01>&#39;reac</span>t&#39;;

<span class="hljs-comment" data-v-d3905b01>// lakukan inheritance dari component</span>
<span class="hljs-class" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>class</span> <span class="hljs-title" data-v-d3905b01>App</span> <span class="hljs-keyword" data-v-d3905b01>extends</span> <span class="hljs-title" data-v-d3905b01>React</span>.<span class="hljs-title" data-v-d3905b01>Component</span> </span>{
  render () {
    <span class="hljs-keyword" data-v-d3905b01>return</span> (
      &lt;h1&gt;<span class="hljs-type" data-v-d3905b01>React</span> <span class="hljs-type" data-v-d3905b01>Berjalan</span>&lt;/h1&gt;
    );
  }
}

export <span class="hljs-keyword" data-v-d3905b01>default</span> <span class="hljs-type" data-v-d3905b01>App</span>;
</code></pre><h3 id="menulis-komentar-pada-jsx" data-v-d3905b01>Menulis komentar pada JSX</h3><pre data-v-d3905b01><code data-v-d3905b01>{<span class="hljs-comment" data-v-d3905b01>/* Ini adalah Komentar  */</span>}
</code></pre><h3 id="memasukan-attribute-dom-kedalam-jsx" data-v-d3905b01>Memasukan attribute DOM kedalam JSX</h3><pre data-v-d3905b01><code class="lang-Js" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>import</span> <span class="hljs-type" data-v-d3905b01>React</span> from <span class="hljs-symbol" data-v-d3905b01>&#39;reac</span>t&#39;;

<span class="hljs-class" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>class</span> <span class="hljs-title" data-v-d3905b01>App</span> <span class="hljs-keyword" data-v-d3905b01>extends</span> <span class="hljs-title" data-v-d3905b01>React</span>.<span class="hljs-title" data-v-d3905b01>Component</span> </span>{

render(){
    <span class="hljs-keyword" data-v-d3905b01>return</span> (

        &lt;div&gt; 

            &lt;h1&gt;test button&lt;/h1&gt;

            &lt;button onClick={()=&gt; {console.log(<span class="hljs-symbol" data-v-d3905b01>&#39;halo</span> terminal&#39;)}}&gt; click me! &lt;/button&gt;


        &lt;/div&gt;
            )
        }
}
</code></pre><h3 id="tool-pada-react" data-v-d3905b01>Tool pada React</h3><ul data-v-d3905b01><li data-v-d3905b01><p data-v-d3905b01>event = Adalah bentuk interaksi dari JSX kepada user. ini memiliki contoh seperti interaksi <code data-v-d3905b01>onClick()</code> pada script.</p></li><li data-v-d3905b01><p data-v-d3905b01>state = state adalah nilai yang dapat kita ubah berdasarkan adaannya tindakan dari user.</p></li></ul><p data-v-d3905b01>contoh deklarasi state.</p><pre data-v-d3905b01><code class="lang-Js" data-v-d3905b01>\\\\ Class React.Component {

<span class="hljs-keyword" data-v-d3905b01>constructor</span>(props){
    <span class="hljs-keyword" data-v-d3905b01>super</span>(props);
    <span class="hljs-keyword" data-v-d3905b01>this</span>.state = {<span class="hljs-attr" data-v-d3905b01>name</span>:<span class="hljs-string" data-v-d3905b01>&#39;Nama Ku&#39;</span>}
                }

}
</code></pre><p data-v-d3905b01><strong data-v-d3905b01>Contoh deklarasi state, didalam JSX</strong></p><pre data-v-d3905b01><code class="lang-Js" data-v-d3905b01><span class="hljs-comment" data-v-d3905b01>// Import React from &#39;&#39;</span>
<span class="hljs-keyword" data-v-d3905b01>import</span> <span class="hljs-type" data-v-d3905b01>React</span> from <span class="hljs-symbol" data-v-d3905b01>&#39;reac</span>t&#39;;

<span class="hljs-comment" data-v-d3905b01>// lakukan inheritance dari component</span>
<span class="hljs-class" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>class</span> <span class="hljs-title" data-v-d3905b01>App</span> <span class="hljs-keyword" data-v-d3905b01>extends</span> <span class="hljs-title" data-v-d3905b01>React</span>.<span class="hljs-title" data-v-d3905b01>Component</span> </span>{


constructor(props){
    <span class="hljs-keyword" data-v-d3905b01>super</span>(props);
    <span class="hljs-keyword" data-v-d3905b01>this</span>.state = {name:<span class="hljs-symbol" data-v-d3905b01>&#39;Nama</span> <span class="hljs-type" data-v-d3905b01>Ku</span>&#39;}
    }

  render () {
    <span class="hljs-keyword" data-v-d3905b01>return</span> (
      &lt;h1&gt;<span class="hljs-type" data-v-d3905b01>Selamat</span> <span class="hljs-type" data-v-d3905b01>Datang</span> {<span class="hljs-keyword" data-v-d3905b01>this</span>.state.name}!&lt;/h1&gt;
        );
  }
}

export <span class="hljs-keyword" data-v-d3905b01>default</span> <span class="hljs-type" data-v-d3905b01>App</span>;
</code></pre><hr data-v-d3905b01><h1 id="life-cycle" data-v-d3905b01>Life-Cycle</h1><hr data-v-d3905b01><pre data-v-d3905b01><code class="lang-Js" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>import</span> React, { useState, useEffect } <span class="hljs-keyword" data-v-d3905b01>from</span> <span class="hljs-string" data-v-d3905b01>&#39;react&#39;</span>;

<span class="hljs-function" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>function</span> <span class="hljs-title" data-v-d3905b01>Counter</span>(<span class="hljs-params" data-v-d3905b01>{setGCount, gCount}</span>) </span>{
  <span class="hljs-keyword" data-v-d3905b01>const</span> [count, setCount] = useState(<span class="hljs-number" data-v-d3905b01>0</span>);

  <span class="hljs-keyword" data-v-d3905b01>const</span> increment = <span class="hljs-function" data-v-d3905b01><span class="hljs-params" data-v-d3905b01>()</span> =&gt;</span> {
    setCount(count + <span class="hljs-number" data-v-d3905b01>1</span>);
  };

  <span class="hljs-keyword" data-v-d3905b01>const</span> decrement = <span class="hljs-function" data-v-d3905b01><span class="hljs-params" data-v-d3905b01>()</span> =&gt;</span> {
    setCount(count - <span class="hljs-number" data-v-d3905b01>1</span>);
  };

  <span class="hljs-comment" data-v-d3905b01>// Lifecycle methods</span>
  <span class="hljs-function" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>function</span> <span class="hljs-title" data-v-d3905b01>componentDidMount</span>(<span class="hljs-params" data-v-d3905b01></span>) </span>{
    <span class="hljs-built_in" data-v-d3905b01>console</span>.log(<span class="hljs-string" data-v-d3905b01>&#39;Component Counter() mounted!&#39;</span>); <span class="hljs-comment" data-v-d3905b01>// Logs when the component is inserted into the DOM</span>
  }

  useEffect(<span class="hljs-function" data-v-d3905b01><span class="hljs-params" data-v-d3905b01>()</span> =&gt;</span> {
      setGCount(gCount + <span class="hljs-number" data-v-d3905b01>1</span>)
       <span class="hljs-built_in" data-v-d3905b01>console</span>.log(<span class="hljs-string" data-v-d3905b01>\`Nilai Count :  <span class="hljs-subst" data-v-d3905b01>\${count}</span>\`</span>)
  }, [count]);

  <span class="hljs-comment" data-v-d3905b01>// ============================</span>

  componentDidMount()

  <span class="hljs-comment" data-v-d3905b01>// ===========================</span>

  <span class="hljs-keyword" data-v-d3905b01>return</span> (
    <span class="xml" data-v-d3905b01><span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>div</span>&gt;</span>
      <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>p</span>&gt;</span>Count: {count}<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>p</span>&gt;</span>
      <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>button</span> <span class="hljs-attr" data-v-d3905b01>onClick</span>=<span class="hljs-string" data-v-d3905b01>{increment}</span>&gt;</span>Increment<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>button</span>&gt;</span>
      <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>button</span> <span class="hljs-attr" data-v-d3905b01>onClick</span>=<span class="hljs-string" data-v-d3905b01>{decrement}</span>&gt;</span>Decrement<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>button</span>&gt;</span>
    <span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>div</span>&gt;</span></span>
  );
}


<span class="hljs-comment" data-v-d3905b01>// ======================== hit() =============</span>
<span class="hljs-function" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>function</span> <span class="hljs-title" data-v-d3905b01>Hit</span>(<span class="hljs-params" data-v-d3905b01></span>) </span>{
  <span class="hljs-keyword" data-v-d3905b01>const</span> [count, setCount] = useState(<span class="hljs-number" data-v-d3905b01>0</span>);

  <span class="hljs-keyword" data-v-d3905b01>const</span> increment = <span class="hljs-function" data-v-d3905b01><span class="hljs-params" data-v-d3905b01>()</span> =&gt;</span> {
    setCount(count + <span class="hljs-number" data-v-d3905b01>1</span>);
  };

  <span class="hljs-keyword" data-v-d3905b01>const</span> decrement = <span class="hljs-function" data-v-d3905b01><span class="hljs-params" data-v-d3905b01>()</span> =&gt;</span> {
    setCount(count - <span class="hljs-number" data-v-d3905b01>1</span>);
  };

  <span class="hljs-comment" data-v-d3905b01>// Lifecycle methods</span>
  <span class="hljs-function" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>function</span> <span class="hljs-title" data-v-d3905b01>componentDidMount</span>(<span class="hljs-params" data-v-d3905b01></span>) </span>{
    <span class="hljs-built_in" data-v-d3905b01>console</span>.log(<span class="hljs-string" data-v-d3905b01>&#39;Component Hit() mounted!&#39;</span>); <span class="hljs-comment" data-v-d3905b01>// Logs when the component is inserted into the DOM</span>
  }

  useEffect(<span class="hljs-function" data-v-d3905b01><span class="hljs-params" data-v-d3905b01>()</span> =&gt;</span> {
       <span class="hljs-built_in" data-v-d3905b01>console</span>.log(<span class="hljs-string" data-v-d3905b01>\`Nilai Count :  <span class="hljs-subst" data-v-d3905b01>\${count}</span>\`</span>)
  }, [count]);


  <span class="hljs-comment" data-v-d3905b01>// ============================</span>

  componentDidMount()

  <span class="hljs-comment" data-v-d3905b01>// ===========================</span>

  <span class="hljs-keyword" data-v-d3905b01>return</span> (
    <span class="xml" data-v-d3905b01><span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>div</span>&gt;</span>
      <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>p</span>&gt;</span>Hit: {count}<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>p</span>&gt;</span>
      <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>button</span> <span class="hljs-attr" data-v-d3905b01>onClick</span>=<span class="hljs-string" data-v-d3905b01>{increment}</span>&gt;</span>Increment<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>button</span>&gt;</span>
      <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>button</span> <span class="hljs-attr" data-v-d3905b01>onClick</span>=<span class="hljs-string" data-v-d3905b01>{decrement}</span>&gt;</span>Decrement<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>button</span>&gt;</span>
    <span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>div</span>&gt;</span></span>
  );
}

<span class="hljs-comment" data-v-d3905b01>// ====================== App() =============</span>
<span class="hljs-function" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>function</span> <span class="hljs-title" data-v-d3905b01>App</span>(<span class="hljs-params" data-v-d3905b01></span>)</span>{

<span class="hljs-keyword" data-v-d3905b01>let</span> [gCount, setGCount] = useState(<span class="hljs-number" data-v-d3905b01>0</span>)
<span class="hljs-built_in" data-v-d3905b01>console</span>.log(<span class="hljs-string" data-v-d3905b01>\`gCount main container : <span class="hljs-subst" data-v-d3905b01>\${gCount}</span>\`</span>)
<span class="hljs-comment" data-v-d3905b01>// ========= Jika diatas dijalankan maka terjadi re-render ======</span>

<span class="hljs-function" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>function</span> <span class="hljs-title" data-v-d3905b01>componentWillUnmount</span>(<span class="hljs-params" data-v-d3905b01></span>) </span>{
    <span class="hljs-built_in" data-v-d3905b01>console</span>.log(<span class="hljs-string" data-v-d3905b01>&#39;Component unmounted!&#39;</span>); <span class="hljs-comment" data-v-d3905b01>// Logs before the component is removed from the DOM</span>
  }

  componentWillUnmount()

<span class="hljs-keyword" data-v-d3905b01>return</span>(
&lt;&gt;

&lt;Counter setGCount={setGCount} gCount={gCount}/&gt;

&lt;h1&gt; ============ H1 ============ &lt;/h1&gt;

&lt;Hit /&gt;
&lt;/&gt;
)
}

export default App;
</code></pre><p data-v-d3905b01>Terdapat 3 fase state:</p><ul data-v-d3905b01><li data-v-d3905b01><strong data-v-d3905b01>Mounting</strong> Load Component dalam website. </li><li data-v-d3905b01><strong data-v-d3905b01>Updating</strong> Lakukan update berdasarkan informasi state.</li><li data-v-d3905b01><strong data-v-d3905b01>UnMounting</strong> Unload component, berpindah component.</li></ul><hr data-v-d3905b01><h1 id="use-memo" data-v-d3905b01>Use-Memo</h1><hr data-v-d3905b01><pre data-v-d3905b01><code class="lang-Js" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>import</span> { View, Button, Text } <span class="hljs-keyword" data-v-d3905b01>from</span> <span class="hljs-string" data-v-d3905b01>&#39;react-native&#39;</span>;
<span class="hljs-keyword" data-v-d3905b01>import</span> { useState, useMemo } <span class="hljs-keyword" data-v-d3905b01>from</span> <span class="hljs-string" data-v-d3905b01>&#39;react&#39;</span>;

<span class="hljs-function" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>function</span> <span class="hljs-title" data-v-d3905b01>Home</span>(<span class="hljs-params" data-v-d3905b01></span>)</span>{

  <span class="hljs-built_in" data-v-d3905b01>console</span>.log(<span class="hljs-string" data-v-d3905b01>\`Component Home() telah di render\`</span>)

  <span class="hljs-keyword" data-v-d3905b01>return</span>(
    <span class="xml" data-v-d3905b01><span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>View</span>&gt;</span>
      <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>App</span>/&gt;</span>
    <span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>View</span>&gt;</span></span>
  )
}

<span class="hljs-function" data-v-d3905b01><span class="hljs-keyword" data-v-d3905b01>function</span> <span class="hljs-title" data-v-d3905b01>App</span>(<span class="hljs-params" data-v-d3905b01></span>)</span>{
  <span class="hljs-keyword" data-v-d3905b01>let</span> [count, setCount] = useState(<span class="hljs-number" data-v-d3905b01>0</span>)
  <span class="hljs-built_in" data-v-d3905b01>console</span>.log(<span class="hljs-string" data-v-d3905b01>\`Component App telah terpangil (Re-Render)\`</span>)
  <span class="hljs-keyword" data-v-d3905b01>const</span> ItemOr = useMemo(<span class="hljs-function" data-v-d3905b01><span class="hljs-params" data-v-d3905b01>()</span> =&gt;</span> Item(count), [count]); <span class="hljs-comment" data-v-d3905b01>// ===== Gunakan ini agar tidak perlu re-render =======</span>
  <span class="hljs-comment" data-v-d3905b01>// const ItemOr = useMemo(() =&gt; Item(), []) bisa seperti ini juga!</span>

  <span class="hljs-keyword" data-v-d3905b01>return</span> (
    <span class="xml" data-v-d3905b01><span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>View</span>&gt;</span>
      <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>Text</span>&gt;</span>This is Counter App<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>Text</span>&gt;</span>
      <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>Text</span>&gt;</span>Count : \${count}<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>Text</span>&gt;</span>

      <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>Button</span> <span class="hljs-attr" data-v-d3905b01>onPress</span>=<span class="hljs-string" data-v-d3905b01>{()</span> =&gt;</span> setCount(count+1)} title=&quot;Count Button&quot;/&gt;
      {ItemOr}
    <span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>View</span>&gt;</span>
  )
}

function Item(count){
  console.log(\`Component count dikirm : \${count}\`)
  console.log(\`Component Item telah terpangil (Re-Render)\`)
  return(
    <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>View</span>&gt;</span>
      <span class="hljs-tag" data-v-d3905b01>&lt;<span class="hljs-name" data-v-d3905b01>Text</span>&gt;</span>This Content From Item : {count}<span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>Text</span>&gt;</span>
    <span class="hljs-tag" data-v-d3905b01>&lt;/<span class="hljs-name" data-v-d3905b01>View</span>&gt;</span>
  )
}


export default Home</span>
</code></pre><h3 id="usememo" data-v-d3905b01>useMemo</h3><p data-v-d3905b01>adalah sebuah untuk react &quot;Hook&quot;, dimana ini sedikit menyerupai &quot;Event Listener&quot;. Maka Component hanya akan dijalankan jika terjadi perubahan pada state khusus. </p><p data-v-d3905b01>Ref: <a href="https://www.w3schools.com/react/react_usememo.asp" data-v-d3905b01>https://www.w3schools.com/react/react_usememo.asp</a></p><p data-v-d3905b01>Contoh kasar: <a href="https://www.joshwcomeau.com/react/why-react-re-renders/" data-v-d3905b01>https://www.joshwcomeau.com/react/why-react-re-renders/</a></p><h2 id="catatan-tambahan" data-v-d3905b01>Catatan tambahan</h2>`,119)),c("ul",null,[c("li",null,[S(n,{to:"/react-note1",class:"LFT-Item"},{default:x(()=>s[0]||(s[0]=[w(" Membuat comoponent sederhana ")])),_:1})]),c("li",null,[S(n,{to:"/react-note2",class:"LFT-Item"},{default:x(()=>s[1]||(s[1]=[w(" Membuat banyak content ")])),_:1})]),c("li",null,[S(n,{to:"/react-note3",class:"LFT-Item"},{default:x(()=>s[2]||(s[2]=[w(" Membuat element interaktive ")])),_:1})]),c("li",null,[S(n,{to:"/react-note4",class:"LFT-Item"},{default:x(()=>s[3]||(s[3]=[w(" Install react ")])),_:1})]),c("li",null,[S(n,{to:"/react-note5",class:"LFT-Item"},{default:x(()=>s[4]||(s[4]=[w(" Membuat formulir interacctive ")])),_:1})]),c("li",null,[S(n,{to:"/react-note6",class:"LFT-Item"},{default:x(()=>s[5]||(s[5]=[w(" Add, Update, List JSX ")])),_:1})]),c("li",null,[S(n,{to:"/react-note7",class:"LFT-Item"},{default:x(()=>s[6]||(s[6]=[w(" Context ")])),_:1})]),c("li",null,[S(n,{to:"/react-note8",class:"LFT-Item"},{default:x(()=>s[7]||(s[7]=[w(" UseEffect ")])),_:1})])]),s[10]||(s[10]=Z('<h2 id="contoh-project" data-v-d3905b01>Contoh project</h2><ul data-v-d3905b01><li data-v-d3905b01><a href="./project-react/add-component.md" data-v-d3905b01>Membuat button menambahkan element</a></li><li data-v-d3905b01><a href="./project-react/counter.md" data-v-d3905b01>Membuat konsep counter</a></li><li data-v-d3905b01><a href="./project-react/add-delete.md" data-v-d3905b01>membuat element muncul dan hilang</a></li><li data-v-d3905b01><a href="./project-react/form-react.md" data-v-d3905b01>Membuat Form Lengkap fiture</a></li><li data-v-d3905b01><a href="./project-react/todo.md" data-v-d3905b01>Todo app</a> &lt;!--- </li><li data-v-d3905b01><a href="./project-react/pokemonApi.md" data-v-d3905b01>PokemonApi</a> --&gt;</li></ul><h2 id="referensi-" data-v-d3905b01>Referensi:</h2><ul data-v-d3905b01><li data-v-d3905b01><a href="https://www.niagahoster.co.id/blog/react-js-adalah/?gclid=Cj0KCQiAx6ugBhCcARIsAGNmMbi_g36zJkerxEangrozL6QmcfFd7ZZwtxXRiqvmDhPGnGX4Jt_rrM0aAtnGEALw_wcB" data-v-d3905b01>https://www.niagahoster.co.id/blog/react-js-adalah/?gclid=Cj0KCQiAx6ugBhCcARIsAGNmMbi_g36zJkerxEangrozL6QmcfFd7ZZwtxXRiqvmDhPGnGX4Jt_rrM0aAtnGEALw_wcB</a></li></ul>',4)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[8]||(s[8]=[w("Go to Home")])),_:1})])],64)}}},bf=ca(mf,[["__scopeId","data-v-d3905b01"]]),ff={__name:"r",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[2]||(s[2]=Z(`<h1 id="r-language" data-v-df35502f>R language</h1><h2 id="ubuntu-installation" data-v-df35502f>Ubuntu installation</h2><pre data-v-df35502f><code data-v-df35502f>sudo apt <span class="hljs-keyword" data-v-df35502f>install</span> r-base
</code></pre><p data-v-df35502f>untuk menjalankan integreted r di terminal tekan </p><pre data-v-df35502f><code data-v-df35502f><span class="hljs-attribute" data-v-df35502f>R</span>
</code></pre><p data-v-df35502f>Untuk keluar ide </p><pre data-v-df35502f><code data-v-df35502f><span class="hljs-string" data-v-df35502f>q()</span>
</code></pre><h2 id="untuk-menjalankan-r-script" data-v-df35502f>Untuk menjalankan r script</h2><pre data-v-df35502f><code data-v-df35502f><span class="hljs-keyword" data-v-df35502f>Rscript </span>namafile.r
</code></pre><h2 id="contoh-code-r" data-v-df35502f>COntoh code R</h2><pre data-v-df35502f><code data-v-df35502f># Membuat data frame dengan kolom <span class="hljs-string" data-v-df35502f>&quot;nama&quot;</span> dan <span class="hljs-string" data-v-df35502f>&quot;usia&quot;</span>
dataframe &lt;- data.frame(
  nama = c(<span class="hljs-string" data-v-df35502f>&quot;Andi&quot;</span>, <span class="hljs-string" data-v-df35502f>&quot;Budi&quot;</span>, <span class="hljs-string" data-v-df35502f>&quot;Cindy&quot;</span>, <span class="hljs-string" data-v-df35502f>&quot;Dini&quot;</span>),
  usia = c(<span class="hljs-number" data-v-df35502f>25</span>, <span class="hljs-number" data-v-df35502f>30</span>, <span class="hljs-number" data-v-df35502f>27</span>, <span class="hljs-number" data-v-df35502f>24</span>)
)

# Menampilkan isi data frame
print(dataframe)
</code></pre><h2 id="mencari-akar-dengan-sqrt" data-v-df35502f>Mencari Akar dengan SQRT</h2><p data-v-df35502f><code data-v-df35502f>sqrt(9) # output: 3</code></p><h2 id="membuat-array" data-v-df35502f>Membuat array</h2><pre data-v-df35502f><code data-v-df35502f>## Bottom is array

x &lt;- c(<span class="hljs-number" data-v-df35502f>2</span>, <span class="hljs-number" data-v-df35502f>3</span>, <span class="hljs-number" data-v-df35502f>4</span>, <span class="hljs-number" data-v-df35502f>5</span>, <span class="hljs-number" data-v-df35502f>6</span>, <span class="hljs-number" data-v-df35502f>7</span>, <span class="hljs-number" data-v-df35502f>8</span>, <span class="hljs-number" data-v-df35502f>9</span>, <span class="hljs-number" data-v-df35502f>10</span>, <span class="hljs-number" data-v-df35502f>11</span>, <span class="hljs-number" data-v-df35502f>12</span>, <span class="hljs-number" data-v-df35502f>13</span>, <span class="hljs-number" data-v-df35502f>14</span>, <span class="hljs-number" data-v-df35502f>15</span>)

y &lt;- c(<span class="hljs-number" data-v-df35502f>-8</span>,<span class="hljs-number" data-v-df35502f>-7</span>,<span class="hljs-number" data-v-df35502f>-6</span>,<span class="hljs-number" data-v-df35502f>-5</span>,<span class="hljs-number" data-v-df35502f>-4</span>,<span class="hljs-number" data-v-df35502f>-3</span>,<span class="hljs-number" data-v-df35502f>-2</span>,<span class="hljs-number" data-v-df35502f>-1</span>,<span class="hljs-number" data-v-df35502f>0</span>,<span class="hljs-number" data-v-df35502f>1</span>,<span class="hljs-number" data-v-df35502f>2</span>,<span class="hljs-number" data-v-df35502f>3</span>,<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>5</span>,<span class="hljs-number" data-v-df35502f>6</span>,<span class="hljs-number" data-v-df35502f>7</span>,<span class="hljs-number" data-v-df35502f>8</span>)

z &lt;- c(<span class="hljs-number" data-v-df35502f>1.0</span>, <span class="hljs-number" data-v-df35502f>1.1</span>, <span class="hljs-number" data-v-df35502f>1.2</span>, <span class="hljs-number" data-v-df35502f>1.3</span>, <span class="hljs-number" data-v-df35502f>1.4</span>, <span class="hljs-number" data-v-df35502f>1.5</span>, <span class="hljs-number" data-v-df35502f>1.6</span>, <span class="hljs-number" data-v-df35502f>1.7</span>, <span class="hljs-number" data-v-df35502f>1.8</span>, <span class="hljs-number" data-v-df35502f>1.9</span>, <span class="hljs-number" data-v-df35502f>2.0</span>)

p &lt;- c(<span class="hljs-number" data-v-df35502f>3</span>, <span class="hljs-number" data-v-df35502f>7</span>, <span class="hljs-number" data-v-df35502f>8</span>, <span class="hljs-number" data-v-df35502f>15</span>)

q &lt;- rep(<span class="hljs-number" data-v-df35502f>9</span>, times = <span class="hljs-number" data-v-df35502f>6</span>)

print(q)
</code></pre><h2 id="membuat-dataframe" data-v-df35502f>Membuat dataframe</h2><pre data-v-df35502f><code data-v-df35502f><span class="hljs-meta" data-v-df35502f># Create variables</span>
<span class="hljs-title" data-v-df35502f>jurusan</span> &lt;- c(<span class="hljs-string" data-v-df35502f>&quot;Komputer&quot;</span>, <span class="hljs-string" data-v-df35502f>&quot;Fisika&quot;</span>, <span class="hljs-string" data-v-df35502f>&quot;Komputer&quot;</span>, <span class="hljs-string" data-v-df35502f>&quot;Fisika&quot;</span>, <span class="hljs-string" data-v-df35502f>&quot;Komputer&quot;</span>,  <span class="hljs-string" data-v-df35502f>&quot;Fisika&quot;</span>, <span class="hljs-string" data-v-df35502f>&quot;komputer&quot;</span>, <span class="hljs-string" data-v-df35502f>&quot;Fisika&quot;</span>)
<span class="hljs-title" data-v-df35502f>asal_daerah</span> &lt;- c(<span class="hljs-string" data-v-df35502f>&quot;Bogor&quot;</span>, <span class="hljs-string" data-v-df35502f>&quot;Bogor&quot;</span>, <span class="hljs-string" data-v-df35502f>&quot;Bandung&quot;</span>, <span class="hljs-string" data-v-df35502f>&quot;Bandung&quot;</span>, <span class="hljs-string" data-v-df35502f>&quot;Bogor&quot;</span>, <span class="hljs-string" data-v-df35502f>&quot;Bogor&quot;</span>, <span class="hljs-string" data-v-df35502f>&quot;Bandung&quot;</span>, <span class="hljs-string" data-v-df35502f>&quot;Bandung&quot;</span>)
<span class="hljs-title" data-v-df35502f>usia</span> &lt;- c(<span class="hljs-number" data-v-df35502f>25</span>, <span class="hljs-number" data-v-df35502f>25</span>, <span class="hljs-number" data-v-df35502f>25</span>, <span class="hljs-number" data-v-df35502f>25</span>, <span class="hljs-number" data-v-df35502f>26</span>, <span class="hljs-number" data-v-df35502f>26</span>, <span class="hljs-number" data-v-df35502f>26</span>, <span class="hljs-number" data-v-df35502f>26</span>)

<span class="hljs-meta" data-v-df35502f># Combine variables into a data frame</span>
<span class="hljs-title" data-v-df35502f>df</span> &lt;- <span class="hljs-class" data-v-df35502f><span class="hljs-keyword" data-v-df35502f>data</span>.frame(<span class="hljs-title" data-v-df35502f>jurusan</span>, <span class="hljs-title" data-v-df35502f>asal_daerah</span>, <span class="hljs-title" data-v-df35502f>usia</span>)</span>

<span class="hljs-title" data-v-df35502f>print</span>(df)


<span class="hljs-meta" data-v-df35502f>## Above is dataframe</span>
</code></pre><h2 id="membuat-matriks" data-v-df35502f>Membuat matriks</h2><pre data-v-df35502f><code data-v-df35502f># Array Matriks A
A &lt;- matrix(c(<span class="hljs-number" data-v-df35502f>7</span>, <span class="hljs-number" data-v-df35502f>8</span>, <span class="hljs-number" data-v-df35502f>9</span>, <span class="hljs-number" data-v-df35502f>10</span>, <span class="hljs-number" data-v-df35502f>11</span>, <span class="hljs-number" data-v-df35502f>12</span>, <span class="hljs-number" data-v-df35502f>13</span>, <span class="hljs-number" data-v-df35502f>14</span>, <span class="hljs-number" data-v-df35502f>14</span>, <span class="hljs-number" data-v-df35502f>16</span>, <span class="hljs-number" data-v-df35502f>17</span>, <span class="hljs-number" data-v-df35502f>18</span>), nrow=<span class="hljs-number" data-v-df35502f>3</span>, ncol=<span class="hljs-number" data-v-df35502f>4</span>, byrow=<span class="hljs-literal" data-v-df35502f>TRUE</span>)
# Array Matriks B
B &lt;- matrix(c(<span class="hljs-number" data-v-df35502f>10</span>, <span class="hljs-number" data-v-df35502f>14</span>, <span class="hljs-number" data-v-df35502f>11</span>, <span class="hljs-number" data-v-df35502f>15</span>, <span class="hljs-number" data-v-df35502f>12</span>, <span class="hljs-number" data-v-df35502f>16</span>, <span class="hljs-number" data-v-df35502f>13</span>, <span class="hljs-number" data-v-df35502f>17</span>), nrow=<span class="hljs-number" data-v-df35502f>4</span>, ncol=<span class="hljs-number" data-v-df35502f>2</span>, byrow=<span class="hljs-literal" data-v-df35502f>TRUE</span>)
# Tampilkan kedua nilai
print(A)
print(B)
</code></pre><h2 id="membuat-tabel" data-v-df35502f>Membuat tabel</h2><pre data-v-df35502f><code data-v-df35502f>quarter &lt;- data.frame(
Qtr1 = c(<span class="hljs-string" data-v-df35502f>-11</span>, <span class="hljs-string" data-v-df35502f>-7</span>, <span class="hljs-string" data-v-df35502f>-3</span>, 1, 5, 9),
Qtr2 = c(<span class="hljs-string" data-v-df35502f>-10</span>, <span class="hljs-string" data-v-df35502f>-6</span>, <span class="hljs-string" data-v-df35502f>-2</span>, 2, 6, 10),
Qtr3 = c(<span class="hljs-string" data-v-df35502f>-9</span>, <span class="hljs-string" data-v-df35502f>-5</span>, <span class="hljs-string" data-v-df35502f>-1</span>, 3, 7, 11),
Qtr4 = c(<span class="hljs-string" data-v-df35502f>-8</span>, <span class="hljs-string" data-v-df35502f>-4</span>, 0, 4, 8, &quot; &quot;),
row.names = c(2010:2015) # row object harus berada dibagian bawah sendiri.
)
# menampilkan variabel quarter
print(quarter)
</code></pre><p data-v-df35502f>Qtr, akan mengisi baris 1</p><table data-v-df35502f><thead data-v-df35502f><tr data-v-df35502f><th data-v-df35502f>Qtr1</th><th data-v-df35502f>Qtr2</th><th data-v-df35502f>Qtr3</th><th data-v-df35502f>Qtr4 </th></tr></thead><tbody data-v-df35502f><tr data-v-df35502f><td data-v-df35502f>-11</td><td data-v-df35502f>-10</td><td data-v-df35502f>-9</td><td data-v-df35502f>-8 </td></tr></tbody></table><p data-v-df35502f><img src="https://github.com/playmakermz/warkop-website/assets/60807663/ae55eafa-aaa5-447c-953f-2f059103dce9" alt="image" data-v-df35502f></p><h4 id="contoh-tabel" data-v-df35502f>Contoh tabel</h4><pre data-v-df35502f><code data-v-df35502f><span class="hljs-meta" data-v-df35502f># Build date column</span>
<span class="hljs-type" data-v-df35502f>Jan</span> &lt;- c(<span class="hljs-string" data-v-df35502f>&quot;&quot;</span>, <span class="hljs-number" data-v-df35502f>21</span>)
<span class="hljs-type" data-v-df35502f>Feb</span> &lt;- c(<span class="hljs-number" data-v-df35502f>10</span>, <span class="hljs-number" data-v-df35502f>22</span>)
<span class="hljs-type" data-v-df35502f>Mar</span> &lt;- c(<span class="hljs-number" data-v-df35502f>11</span>, <span class="hljs-number" data-v-df35502f>23</span>)
<span class="hljs-type" data-v-df35502f>Apr</span> &lt;- c(<span class="hljs-number" data-v-df35502f>12</span>, <span class="hljs-number" data-v-df35502f>24</span>)
<span class="hljs-type" data-v-df35502f>May</span> &lt;- c(<span class="hljs-number" data-v-df35502f>13</span>, <span class="hljs-number" data-v-df35502f>25</span>)
<span class="hljs-type" data-v-df35502f>Jun</span> &lt;- c(<span class="hljs-number" data-v-df35502f>14</span>, <span class="hljs-number" data-v-df35502f>26</span>)
<span class="hljs-type" data-v-df35502f>Jul</span> &lt;- c(<span class="hljs-number" data-v-df35502f>15</span>, <span class="hljs-number" data-v-df35502f>27</span>)
<span class="hljs-type" data-v-df35502f>Aug</span> &lt;- c(<span class="hljs-number" data-v-df35502f>16</span>, <span class="hljs-number" data-v-df35502f>28</span>)
<span class="hljs-type" data-v-df35502f>Sep</span> &lt;- c(<span class="hljs-number" data-v-df35502f>17</span>, <span class="hljs-number" data-v-df35502f>29</span>)
<span class="hljs-type" data-v-df35502f>Oct</span> &lt;- c(<span class="hljs-number" data-v-df35502f>18</span>, <span class="hljs-number" data-v-df35502f>30</span>)
<span class="hljs-type" data-v-df35502f>Nov</span> &lt;- c(<span class="hljs-number" data-v-df35502f>19</span>, <span class="hljs-string" data-v-df35502f>&quot;&quot;</span>)
<span class="hljs-type" data-v-df35502f>Dec</span> &lt;- c(<span class="hljs-number" data-v-df35502f>20</span>, <span class="hljs-string" data-v-df35502f>&quot;&quot;</span>)

<span class="hljs-meta" data-v-df35502f># Manage column, and convert to dataframe</span>
<span class="hljs-title" data-v-df35502f>dataset</span> &lt;- <span class="hljs-class" data-v-df35502f><span class="hljs-keyword" data-v-df35502f>data</span>.frame(<span class="hljs-type" data-v-df35502f>Jan</span>, <span class="hljs-type" data-v-df35502f>Feb</span>, <span class="hljs-type" data-v-df35502f>Mar</span>, <span class="hljs-type" data-v-df35502f>Apr</span>, <span class="hljs-type" data-v-df35502f>May</span>, <span class="hljs-type" data-v-df35502f>Jun</span>, <span class="hljs-type" data-v-df35502f>Jul</span>, <span class="hljs-type" data-v-df35502f>Aug</span>, <span class="hljs-type" data-v-df35502f>Sep</span>, <span class="hljs-type" data-v-df35502f>Oct</span>, <span class="hljs-type" data-v-df35502f>Nov</span>, <span class="hljs-type" data-v-df35502f>Dec</span>)</span>

<span class="hljs-meta" data-v-df35502f># Memberikan label baris dari dataset yang telah ada</span>
<span class="hljs-title" data-v-df35502f>rownames</span>(dataset) &lt;- c(<span class="hljs-string" data-v-df35502f>&quot;2020&quot;</span>, <span class="hljs-string" data-v-df35502f>&quot;2021&quot;</span>)

<span class="hljs-meta" data-v-df35502f># print dataframe into terminal</span>
<span class="hljs-title" data-v-df35502f>print</span>(dataset)
</code></pre><h2 id="ls-pat" data-v-df35502f>ls pat</h2><p data-v-df35502f>code 1: <code data-v-df35502f>ls(pat=&quot;y&quot;)</code></p><hr data-v-df35502f><p data-v-df35502f>kode ls() pada R dapat kita gunakan untuk mencari object pada einvronment (script) yang sedang berjalan saat ini. Berfungsi untuk membantu kita mencari tau, apakah nama object tersebut sudah ada yang memakai atau belum.</p><p data-v-df35502f>Parameter <code data-v-df35502f>pat=&quot;y&quot;</code> ini digunakan untuk mencari tau apakah ada object yang memiliki huruf &quot;y&quot; pada nama mereka.</p><p data-v-df35502f>Sebagai contoh dengan code diatas, kita akan mendapatkan list dari object yang telah kita buat sebelumnnya.</p><p data-v-df35502f><img src="https://user-images.githubusercontent.com/60807663/234479345-ce45cbe3-dd35-4f73-9af3-dbd1876bd3a8.png" alt="image" data-v-df35502f></p><p data-v-df35502f>code 2: <code data-v-df35502f>for (i in 1:30) {print(i)}</code></p><hr data-v-df35502f><p data-v-df35502f><img src="https://user-images.githubusercontent.com/60807663/234479737-336e7aa9-a8be-4849-8b6c-a5a8221fbcb6.png" alt="image" data-v-df35502f></p><p data-v-df35502f>Kode diatas digunakan untuk melakukan loop yang akan berjalan dari 1 hingga 30. Dengan menampilkan nilai &quot;i&quot;.</p><p data-v-df35502f>Sedangkan nilai &quot;i&quot; itu sendiri adalah loop counter, maka nilai 1 hingga 30 akan ditampilkan secara terpisah dan satu persatu.</p><p data-v-df35502f>&quot;i&quot; tersebut digunakan sebagai iteration, atau loop counter.</p><p data-v-df35502f>code 3: <code data-v-df35502f>setwd(&quot;C:\\B&quot;)</code></p><hr data-v-df35502f><p data-v-df35502f>pada kode <code data-v-df35502f>setwd(&quot;C:\\B&quot;)</code>, terdapat kesalah pada penulisan backslah(), Karena pada R penempatan dan 1 backslah() memiliki makna dan kegunaan spesial. Oleh karena itu perlu ada tambahan backslah agar bisa dibaca sebagai path.</p><p data-v-df35502f>Kode yang diharapkan <code data-v-df35502f>setwd(&quot;C:\\\\B&quot;)</code>. Kode ini berfungsi untuk berpindah directori pada R language. Fungsinya hampir sama dengan <code data-v-df35502f>dir</code> pada CMD windows, atau <code data-v-df35502f>ls</code> pada linux terminal.</p><p data-v-df35502f>Dibawah ini adalah contoh setwd pada linux chromebook saya</p><pre data-v-df35502f><code data-v-df35502f><span class="hljs-function" data-v-df35502f><span class="hljs-title" data-v-df35502f>setwd</span><span class="hljs-params" data-v-df35502f>(<span class="hljs-string" data-v-df35502f>&quot;/home/yukina&quot;</span>)</span></span>

list.files()
</code></pre><p data-v-df35502f>Hasilnya:</p><p data-v-df35502f><img src="https://user-images.githubusercontent.com/60807663/234482474-61f571b7-5e5d-4621-89b4-af634ef34bd4.png" alt="image" data-v-df35502f></p><h2 id="melakukan-perhitungan-gaussian-ellimination-" data-v-df35502f>Melakukan perhitungan gaussian ellimination.</h2><pre data-v-df35502f><code data-v-df35502f># deklarasi matriks M
M &lt;- matrix(c(<span class="hljs-number" data-v-df35502f>9</span>, <span class="hljs-number" data-v-df35502f>2</span>, <span class="hljs-number" data-v-df35502f>8</span>, <span class="hljs-number" data-v-df35502f>3</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>10</span>, <span class="hljs-number" data-v-df35502f>7</span>, <span class="hljs-number" data-v-df35502f>6</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>10</span>, <span class="hljs-number" data-v-df35502f>9</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>12</span>), nrow = <span class="hljs-number" data-v-df35502f>4</span>, ncol = <span class="hljs-number" data-v-df35502f>4</span>, byrow =
# deklrarasi matriks identitas I
I &lt;- matrix(c(<span class="hljs-number" data-v-df35502f>1</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>1</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>,<span class="hljs-number" data-v-df35502f>1</span> ,<span class="hljs-number" data-v-df35502f>0</span> ,<span class="hljs-number" data-v-df35502f>0</span> ,<span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>1</span>), nrow = <span class="hljs-number" data-v-df35502f>4</span>, ncol = <span class="hljs-number" data-v-df35502f>4</span>, byrow = <span class="hljs-literal" data-v-df35502f>TRUE</span>
# Operasi perkalian matriks ini akan menghasilkan matriks yang sama dengan matriks awal
hasil &lt;- M %*% I
# tampilkan hasil
print(hasil)
</code></pre><p data-v-df35502f>dari matriks </p><pre data-v-df35502f><code data-v-df35502f><span class="hljs-symbol" data-v-df35502f>9 </span><span class="hljs-number" data-v-df35502f>2</span> <span class="hljs-number" data-v-df35502f>8</span> <span class="hljs-number" data-v-df35502f>3</span>
<span class="hljs-symbol" data-v-df35502f>0 </span><span class="hljs-number" data-v-df35502f>10</span> <span class="hljs-number" data-v-df35502f>7</span> <span class="hljs-number" data-v-df35502f>6</span>
<span class="hljs-symbol" data-v-df35502f>0 </span><span class="hljs-number" data-v-df35502f>0</span> <span class="hljs-number" data-v-df35502f>10</span> <span class="hljs-number" data-v-df35502f>9</span>
<span class="hljs-symbol" data-v-df35502f>0 </span><span class="hljs-number" data-v-df35502f>0</span> <span class="hljs-number" data-v-df35502f>0</span> <span class="hljs-number" data-v-df35502f>12</span>
</code></pre><p data-v-df35502f>menjadi </p><p data-v-df35502f><img src="https://github.com/playmakermz/warkop-website/assets/60807663/09b4fe53-cdcd-4404-9f90-87fb9a2a9c9b" alt="image" data-v-df35502f></p><h2 id="matriks-transpose-code" data-v-df35502f>Matriks transpose code</h2><pre data-v-df35502f><code data-v-df35502f># deklarasi matriks M
M &lt;- matrix(c(<span class="hljs-number" data-v-df35502f>9</span>, <span class="hljs-number" data-v-df35502f>2</span>, <span class="hljs-number" data-v-df35502f>8</span>, <span class="hljs-number" data-v-df35502f>3</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>10</span>, <span class="hljs-number" data-v-df35502f>7</span>, <span class="hljs-number" data-v-df35502f>6</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>10</span>, <span class="hljs-number" data-v-df35502f>9</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>12</span>), nrow = <span class="hljs-number" data-v-df35502f>4</span>, ncol = <span class="hljs-number" data-v-df35502f>4</span>, byrow =
# Operasi perkalian matriks ini akan menghasilkan matriks yang sama dengan matriks awal
hasil &lt;- t(M)
# tampilkan hasil
print(hasil)
</code></pre><h2 id="matriks-inverse" data-v-df35502f>Matriks inverse</h2><pre data-v-df35502f><code data-v-df35502f># deklarasi matriks M
M &lt;- matrix(c(<span class="hljs-number" data-v-df35502f>9</span>, <span class="hljs-number" data-v-df35502f>2</span>, <span class="hljs-number" data-v-df35502f>8</span>, <span class="hljs-number" data-v-df35502f>3</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>10</span>, <span class="hljs-number" data-v-df35502f>7</span>, <span class="hljs-number" data-v-df35502f>6</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>10</span>, <span class="hljs-number" data-v-df35502f>9</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>12</span>), nrow = <span class="hljs-number" data-v-df35502f>4</span>, ncol = <span class="hljs-number" data-v-df35502f>4</span>, byrow =
# Operasi perkalian matriks ini akan menghasilkan matriks yang sama dengan matriks awal
hasil &lt;- solve(M)
# tampilkan hasil
print(hasil)
</code></pre><h2 id="penjumlahan-pada-matriks-n" data-v-df35502f>Penjumlahan pada matriks N</h2><pre data-v-df35502f><code data-v-df35502f>## Deklrasi matriks N
N &lt;- matrix(c(<span class="hljs-number" data-v-df35502f>2</span>, <span class="hljs-number" data-v-df35502f>1</span>, <span class="hljs-number" data-v-df35502f>8</span>, <span class="hljs-number" data-v-df35502f>6</span>, <span class="hljs-number" data-v-df35502f>7</span>, <span class="hljs-number" data-v-df35502f>2</span>), nrow = <span class="hljs-number" data-v-df35502f>2</span>, byrow = <span class="hljs-literal" data-v-df35502f>TRUE</span>)
# matriks d
e &lt;- matrix(c(<span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>0</span>, <span class="hljs-number" data-v-df35502f>6</span>, <span class="hljs-number" data-v-df35502f>3</span>), nrow =<span class="hljs-number" data-v-df35502f>2</span>, byrow = <span class="hljs-literal" data-v-df35502f>TRUE</span>)
# Hasil
N4 &lt;- N + e
# print N
N4
</code></pre><h2 id="membuat-box-container-dengan-ukuran-yang-berbeda-beda" data-v-df35502f>Membuat box container dengan ukuran yang berbeda-beda</h2><p data-v-df35502f><img src="https://github.com/playmakermz/warkop-website/assets/60807663/204301a2-b692-432b-9f26-a42fe89889c6" alt="image" data-v-df35502f></p><pre data-v-df35502f><code data-v-df35502f># Disini mengatur tinggi dengan <span class="hljs-string" data-v-df35502f>&quot;nrow&quot;</span> dan mengatur lebar <span class="hljs-string" data-v-df35502f>&quot;ncolumn&quot;</span>
layout(matrix(c(<span class="hljs-number" data-v-df35502f>1</span>, <span class="hljs-number" data-v-df35502f>2</span>,<span class="hljs-number" data-v-df35502f>2</span>, <span class="hljs-number" data-v-df35502f>3</span>,<span class="hljs-number" data-v-df35502f>3</span>, <span class="hljs-number" data-v-df35502f>4</span>), nrow = <span class="hljs-number" data-v-df35502f>3</span>, ncol = <span class="hljs-number" data-v-df35502f>2</span>), heights = c(<span class="hljs-number" data-v-df35502f>1</span>,<span class="hljs-number" data-v-df35502f>2</span>))
layout.show(<span class="hljs-number" data-v-df35502f>4</span>)
</code></pre><h2 id="membuat-graf" data-v-df35502f>Membuat graf</h2><p data-v-df35502f><img src="https://github.com/playmakermz/warkop-website/assets/60807663/05af3724-23b7-4544-82fd-9805a19b1c94" alt="image" data-v-df35502f></p><pre data-v-df35502f><code data-v-df35502f>x &lt;- c(<span class="hljs-number" data-v-df35502f>2</span>,<span class="hljs-number" data-v-df35502f>1</span>,<span class="hljs-number" data-v-df35502f>2</span>,<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>1</span>,<span class="hljs-number" data-v-df35502f>2</span>,<span class="hljs-number" data-v-df35502f>3</span>,<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>2</span>,<span class="hljs-number" data-v-df35502f>3</span>,<span class="hljs-number" data-v-df35502f>1</span>)
y &lt;- c(<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>3</span>,<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>3</span>,<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>5</span>,<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>5</span>,<span class="hljs-number" data-v-df35502f>3</span>)
sunflowerplot(x,
    y,
    main = <span class="hljs-string" data-v-df35502f>&quot;Diskusi 5&quot;</span>,
    xlab = <span class="hljs-string" data-v-df35502f>&quot;X&quot;</span>,
    ylab = <span class="hljs-string" data-v-df35502f>&quot;Y&quot;</span>)
</code></pre><h2 id="mengambil-data-matriks-dari-file-txt" data-v-df35502f>Mengambil data matriks dari file txt</h2><p data-v-df35502f><img src="https://github.com/playmakermz/warkop-website/assets/60807663/cc6f3ff9-3174-4799-94c6-c7c0ef8bafee" alt="image" data-v-df35502f></p><pre data-v-df35502f><code data-v-df35502f><span class="hljs-keyword" data-v-df35502f>scanMatriks </span>&lt;- <span class="hljs-keyword" data-v-df35502f>scan(&quot;data2.txt&quot;) </span><span class="hljs-comment" data-v-df35502f># ambil data dari file</span>
hasil &lt;- matrix(<span class="hljs-keyword" data-v-df35502f>scanMatriks, </span>nrow = <span class="hljs-number" data-v-df35502f>4</span>, ncol = <span class="hljs-number" data-v-df35502f>10</span>, <span class="hljs-keyword" data-v-df35502f>byrow </span>= TRUE) <span class="hljs-comment" data-v-df35502f># masukan variabel ke matriks</span>
print(hasil) <span class="hljs-comment" data-v-df35502f># tampilkan ke terminal</span>
</code></pre><h2 id="membaca-data-csv" data-v-df35502f>Membaca data CSV</h2><pre data-v-df35502f><code data-v-df35502f>Data &lt;- read.csv(<span class="hljs-string" data-v-df35502f>&quot;penjualan.csv&quot;</span>, header=TRUE)
<span class="hljs-function" data-v-df35502f><span class="hljs-title" data-v-df35502f>View</span><span class="hljs-params" data-v-df35502f>(Data)</span></span>
<span class="hljs-function" data-v-df35502f><span class="hljs-title" data-v-df35502f>print</span><span class="hljs-params" data-v-df35502f>(Data)</span></span>
</code></pre><h2 id="membuat-plot-distribusi" data-v-df35502f>Membuat plot distribusi</h2><p data-v-df35502f><img src="https://github.com/playmakermz/warkop-website/assets/60807663/a7bd5df4-c43e-4599-9aed-b4f0c0c1f4b0" alt="image" data-v-df35502f></p><pre data-v-df35502f><code data-v-df35502f>x &lt;- seq(-<span class="hljs-number" data-v-df35502f>1</span>, <span class="hljs-number" data-v-df35502f>1</span>, length.<span class="hljs-attr" data-v-df35502f>out</span> = <span class="hljs-number" data-v-df35502f>100</span>) <span class="hljs-comment" data-v-df35502f># Rentang nilai x dari -1 sampai 1 dengan 100 data</span>

<span class="hljs-comment" data-v-df35502f># Menghitung kepadatan distribusi Normal Standar untuk setiap nilai x</span>
y &lt;- dnorm(x)
mu &lt;- <span class="hljs-number" data-v-df35502f>0</span> <span class="hljs-comment" data-v-df35502f># Nilai mu</span>
sigma &lt;- <span class="hljs-number" data-v-df35502f>1</span> <span class="hljs-comment" data-v-df35502f># Nilai sigma</span>

<span class="hljs-comment" data-v-df35502f># Mengatur Ukuran dari plot tersebut.</span>
par(<span class="hljs-attr" data-v-df35502f>mar</span> = c(<span class="hljs-number" data-v-df35502f>12</span>, <span class="hljs-number" data-v-df35502f>4</span>, <span class="hljs-number" data-v-df35502f>12</span>, <span class="hljs-number" data-v-df35502f>2</span>) ) <span class="hljs-comment" data-v-df35502f># Mengatur margin (bottom, left, top, right)</span>

<span class="hljs-comment" data-v-df35502f># Membuat plot</span>
plot(x, y, <span class="hljs-attr" data-v-df35502f>type</span> = <span class="hljs-string" data-v-df35502f>&quot;l&quot;</span>, <span class="hljs-attr" data-v-df35502f>lwd</span> = <span class="hljs-number" data-v-df35502f>2</span>, <span class="hljs-attr" data-v-df35502f>col</span> = <span class="hljs-string" data-v-df35502f>&quot;gray&quot;</span>,
<span class="hljs-attr" data-v-df35502f>xlab</span> = <span class="hljs-string" data-v-df35502f>&quot;&quot;</span>, <span class="hljs-attr" data-v-df35502f>ylab</span> = <span class="hljs-string" data-v-df35502f>&quot;Kepadatan&quot;</span>,
<span class="hljs-attr" data-v-df35502f>main</span> = bquote(<span class="hljs-string" data-v-df35502f>&quot;Fungsi Kepadatan Distribusi Normal Standar, &quot;</span> ~ <span class="hljs-attr" data-v-df35502f>mu</span> == .(mu) ~ <span class="hljs-string" data-v-df35502f>&quot;, &quot;</span> ~ <span class="hljs-attr" data-v-df35502f>sigma</span> == .(sigma))
)
</code></pre><h2 id="contoh-while-dan-for-loop-pada-r" data-v-df35502f>Contoh while dan for loop pada R</h2><pre data-v-df35502f><code data-v-df35502f><span class="hljs-keyword" data-v-df35502f>sum</span> &lt;- 0
<span class="hljs-keyword" data-v-df35502f>while</span> (TRUE ) {
    <span class="hljs-keyword" data-v-df35502f>for</span> (i <span class="hljs-keyword" data-v-df35502f>in</span> 1:10) {
        <span class="hljs-keyword" data-v-df35502f>sum</span> &lt;- <span class="hljs-keyword" data-v-df35502f>sum</span> + <span class="hljs-built_in" data-v-df35502f>i</span>
    }
    <span class="hljs-keyword" data-v-df35502f>if</span> ( <span class="hljs-keyword" data-v-df35502f>sum</span> &gt;= 110 ) {
        <span class="hljs-keyword" data-v-df35502f>break</span>
    }
}
<span class="hljs-keyword" data-v-df35502f>print</span>(<span class="hljs-keyword" data-v-df35502f>sum</span>)
</code></pre><h2 id="contoh-for-loop-untuk-menghasilkan-nilai-genap" data-v-df35502f>contoh for loop, untuk menghasilkan nilai genap</h2><pre data-v-df35502f><code data-v-df35502f><span class="hljs-type" data-v-df35502f>Nilai_genap</span> &lt;- <span class="hljs-built_in" data-v-df35502f>c</span>()
    <span class="hljs-keyword" data-v-df35502f>for</span> (i <span class="hljs-keyword" data-v-df35502f>in</span> <span class="hljs-number" data-v-df35502f>1</span>:<span class="hljs-number" data-v-df35502f>10</span>) {
        <span class="hljs-keyword" data-v-df35502f>if</span> (i %% <span class="hljs-number" data-v-df35502f>2</span> == <span class="hljs-number" data-v-df35502f>0</span>) {
            <span class="hljs-type" data-v-df35502f>Nilai_genap</span> &lt;- <span class="hljs-built_in" data-v-df35502f>c</span>(<span class="hljs-type" data-v-df35502f>Nilai_genap</span>, i)
        }
}
<span class="hljs-built_in" data-v-df35502f>print</span>(<span class="hljs-type" data-v-df35502f>Nilai_genap</span>)
</code></pre><h2 id="cara-melakukan-perhitungan-mean-rata-rata-" data-v-df35502f>Cara melakukan perhitungan Mean(rata-rata)</h2><pre data-v-df35502f><code class="lang-R" data-v-df35502f>kecepatan &lt;- c(<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>7</span>,<span class="hljs-number" data-v-df35502f>7</span>,<span class="hljs-number" data-v-df35502f>8</span>,<span class="hljs-number" data-v-df35502f>8</span>,<span class="hljs-number" data-v-df35502f>9</span>,<span class="hljs-number" data-v-df35502f>10</span>,<span class="hljs-number" data-v-df35502f>10</span>,<span class="hljs-number" data-v-df35502f>11</span>,<span class="hljs-number" data-v-df35502f>11</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>114</span>,<span class="hljs-number" data-v-df35502f>14</span>,<span class="hljs-number" data-v-df35502f>14</span>,<span class="hljs-number" data-v-df35502f>14</span>,<span class="hljs-number" data-v-df35502f>15</span>,<span class="hljs-number" data-v-df35502f>15</span>,<span class="hljs-number" data-v-df35502f>15</span>,<span class="hljs-number" data-v-df35502f>16</span>,<span class="hljs-number" data-v-df35502f>16</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>19</span>,<span class="hljs-number" data-v-df35502f>19</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>21</span>,<span class="hljs-number" data-v-df35502f>22</span>,<span class="hljs-number" data-v-df35502f>23</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>25</span>,<span class="hljs-number" data-v-df35502f>25</span>)
banyak1 &lt;- length(kecepatan)
print(sum(kecepatan)/banyak1)

# Mean(Rata-rata) Kecepatan =&gt; <span class="hljs-number" data-v-df35502f>17.5</span>
</code></pre><h2 id="cara-melakukan-perhitungan-median-nilai-tengah-" data-v-df35502f>cara melakukan perhitungan Median(nilai tengah)</h2><pre data-v-df35502f><code data-v-df35502f>kecepatan &lt;- c(<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>7</span>,<span class="hljs-number" data-v-df35502f>7</span>,<span class="hljs-number" data-v-df35502f>8</span>,<span class="hljs-number" data-v-df35502f>8</span>,<span class="hljs-number" data-v-df35502f>9</span>,<span class="hljs-number" data-v-df35502f>10</span>,<span class="hljs-number" data-v-df35502f>10</span>,<span class="hljs-number" data-v-df35502f>11</span>,<span class="hljs-number" data-v-df35502f>11</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>114</span>,<span class="hljs-number" data-v-df35502f>14</span>,<span class="hljs-number" data-v-df35502f>14</span>,<span class="hljs-number" data-v-df35502f>14</span>,<span class="hljs-number" data-v-df35502f>15</span>,<span class="hljs-number" data-v-df35502f>15</span>,<span class="hljs-number" data-v-df35502f>15</span>,<span class="hljs-number" data-v-df35502f>16</span>,<span class="hljs-number" data-v-df35502f>16</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>19</span>,<span class="hljs-number" data-v-df35502f>19</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>21</span>,<span class="hljs-number" data-v-df35502f>22</span>,<span class="hljs-number" data-v-df35502f>23</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>25</span>,<span class="hljs-number" data-v-df35502f>25</span>)
medianKecepatan &lt;- median(kecepatan)
print(medianKecepatan)
# Median =&gt; <span class="hljs-number" data-v-df35502f>16</span>
</code></pre><h2 id="cara-melakukan-perhitungan-sd-standart-deviasi-" data-v-df35502f>cara melakukan perhitungan SD(Standart Deviasi)</h2><pre data-v-df35502f><code data-v-df35502f>kecepatan &lt;- c(<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>7</span>,<span class="hljs-number" data-v-df35502f>7</span>,<span class="hljs-number" data-v-df35502f>8</span>,<span class="hljs-number" data-v-df35502f>8</span>,<span class="hljs-number" data-v-df35502f>9</span>,<span class="hljs-number" data-v-df35502f>10</span>,<span class="hljs-number" data-v-df35502f>10</span>,<span class="hljs-number" data-v-df35502f>11</span>,<span class="hljs-number" data-v-df35502f>11</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>114</span>,<span class="hljs-number" data-v-df35502f>14</span>,<span class="hljs-number" data-v-df35502f>14</span>,<span class="hljs-number" data-v-df35502f>14</span>,<span class="hljs-number" data-v-df35502f>15</span>,<span class="hljs-number" data-v-df35502f>15</span>,<span class="hljs-number" data-v-df35502f>15</span>,<span class="hljs-number" data-v-df35502f>16</span>,<span class="hljs-number" data-v-df35502f>16</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>19</span>,<span class="hljs-number" data-v-df35502f>19</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>21</span>,<span class="hljs-number" data-v-df35502f>22</span>,<span class="hljs-number" data-v-df35502f>23</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>25</span>,<span class="hljs-number" data-v-df35502f>25</span>)
sdKecepatan &lt;- sd(kecepatan) 
# SD =&gt; <span class="hljs-number" data-v-df35502f>14.9273752083963</span>
</code></pre><h2 id="cara-membuat-scatter-plot" data-v-df35502f>Cara membuat scatter plot</h2><pre data-v-df35502f><code data-v-df35502f># contoh Data Kecepatan dan jarak pada tabel
jarak &lt;- c(<span class="hljs-number" data-v-df35502f>2</span>,<span class="hljs-number" data-v-df35502f>10</span>,<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>28</span>,<span class="hljs-number" data-v-df35502f>33</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>26</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>22</span>,<span class="hljs-number" data-v-df35502f>28</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>32</span>,<span class="hljs-number" data-v-df35502f>34</span>,<span class="hljs-number" data-v-df35502f>43</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>30</span>,<span class="hljs-number" data-v-df35502f>58</span>,<span class="hljs-number" data-v-df35502f>80</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>55</span>,<span class="hljs-number" data-v-df35502f>35</span>,<span class="hljs-number" data-v-df35502f>40</span>,<span class="hljs-number" data-v-df35502f>30</span>,<span class="hljs-number" data-v-df35502f>44</span>,<span class="hljs-number" data-v-df35502f>50</span>,<span class="hljs-number" data-v-df35502f>46</span>,<span class="hljs-number" data-v-df35502f>53</span>,<span class="hljs-number" data-v-df35502f>70</span>,<span class="hljs-number" data-v-df35502f>80</span>,<span class="hljs-number" data-v-df35502f>36</span>,<span class="hljs-number" data-v-df35502f>46</span>,<span class="hljs-number" data-v-df35502f>68</span>,<span class="hljs-number" data-v-df35502f>34</span>,<span class="hljs-number" data-v-df35502f>48</span>,<span class="hljs-number" data-v-df35502f>50</span>,<span class="hljs-number" data-v-df35502f>56</span>,<span class="hljs-number" data-v-df35502f>60</span>,<span class="hljs-number" data-v-df35502f>64</span>,<span class="hljs-number" data-v-df35502f>56</span>,<span class="hljs-number" data-v-df35502f>72</span>,<span class="hljs-number" data-v-df35502f>90</span>,<span class="hljs-number" data-v-df35502f>92</span>,<span class="hljs-number" data-v-df35502f>110</span>,<span class="hljs-number" data-v-df35502f>85</span>)
banyak2 &lt;- length(jarak)

kecepatan &lt;- c(<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>7</span>,<span class="hljs-number" data-v-df35502f>7</span>,<span class="hljs-number" data-v-df35502f>8</span>,<span class="hljs-number" data-v-df35502f>8</span>,<span class="hljs-number" data-v-df35502f>9</span>,<span class="hljs-number" data-v-df35502f>10</span>,<span class="hljs-number" data-v-df35502f>10</span>,<span class="hljs-number" data-v-df35502f>11</span>,<span class="hljs-number" data-v-df35502f>11</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>114</span>,<span class="hljs-number" data-v-df35502f>14</span>,<span class="hljs-number" data-v-df35502f>14</span>,<span class="hljs-number" data-v-df35502f>14</span>,<span class="hljs-number" data-v-df35502f>15</span>,<span class="hljs-number" data-v-df35502f>15</span>,<span class="hljs-number" data-v-df35502f>15</span>,<span class="hljs-number" data-v-df35502f>16</span>,<span class="hljs-number" data-v-df35502f>16</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>19</span>,<span class="hljs-number" data-v-df35502f>19</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>21</span>,<span class="hljs-number" data-v-df35502f>22</span>,<span class="hljs-number" data-v-df35502f>23</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>25</span>,<span class="hljs-number" data-v-df35502f>25</span>)
banyak1 &lt;- length(kecepatan)

# Membuat scatter plot
plot(jarak, kecepatan, 
     main = <span class="hljs-string" data-v-df35502f>&quot;Scatter Plot : Kecepatan vs Jarak&quot;</span>,  # Judul
     xlab = <span class="hljs-string" data-v-df35502f>&quot;Kecepatan (km/h)&quot;</span>, # sumbu x
     ylab = <span class="hljs-string" data-v-df35502f>&quot;Jarak (meter)&quot;</span>,  # sumbu y
     pch = <span class="hljs-number" data-v-df35502f>19</span>, # Bentuk titik 
     col = <span class="hljs-string" data-v-df35502f>&quot;blue&quot;</span>) # warna titik
</code></pre><h2 id="contoh-menambahkan-regresi-linear" data-v-df35502f>Contoh menambahkan regresi linear</h2><pre data-v-df35502f><code data-v-df35502f># contoh Data Kecepatan dan jarak pada tabel
jarak &lt;- c(<span class="hljs-number" data-v-df35502f>2</span>,<span class="hljs-number" data-v-df35502f>10</span>,<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>28</span>,<span class="hljs-number" data-v-df35502f>33</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>26</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>22</span>,<span class="hljs-number" data-v-df35502f>28</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>32</span>,<span class="hljs-number" data-v-df35502f>34</span>,<span class="hljs-number" data-v-df35502f>43</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>30</span>,<span class="hljs-number" data-v-df35502f>58</span>,<span class="hljs-number" data-v-df35502f>80</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>55</span>,<span class="hljs-number" data-v-df35502f>35</span>,<span class="hljs-number" data-v-df35502f>40</span>,<span class="hljs-number" data-v-df35502f>30</span>,<span class="hljs-number" data-v-df35502f>44</span>,<span class="hljs-number" data-v-df35502f>50</span>,<span class="hljs-number" data-v-df35502f>46</span>,<span class="hljs-number" data-v-df35502f>53</span>,<span class="hljs-number" data-v-df35502f>70</span>,<span class="hljs-number" data-v-df35502f>80</span>,<span class="hljs-number" data-v-df35502f>36</span>,<span class="hljs-number" data-v-df35502f>46</span>,<span class="hljs-number" data-v-df35502f>68</span>,<span class="hljs-number" data-v-df35502f>34</span>,<span class="hljs-number" data-v-df35502f>48</span>,<span class="hljs-number" data-v-df35502f>50</span>,<span class="hljs-number" data-v-df35502f>56</span>,<span class="hljs-number" data-v-df35502f>60</span>,<span class="hljs-number" data-v-df35502f>64</span>,<span class="hljs-number" data-v-df35502f>56</span>,<span class="hljs-number" data-v-df35502f>72</span>,<span class="hljs-number" data-v-df35502f>90</span>,<span class="hljs-number" data-v-df35502f>92</span>,<span class="hljs-number" data-v-df35502f>110</span>,<span class="hljs-number" data-v-df35502f>85</span>)
banyak2 &lt;- length(jarak)

kecepatan &lt;- c(<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>7</span>,<span class="hljs-number" data-v-df35502f>7</span>,<span class="hljs-number" data-v-df35502f>8</span>,<span class="hljs-number" data-v-df35502f>8</span>,<span class="hljs-number" data-v-df35502f>9</span>,<span class="hljs-number" data-v-df35502f>10</span>,<span class="hljs-number" data-v-df35502f>10</span>,<span class="hljs-number" data-v-df35502f>11</span>,<span class="hljs-number" data-v-df35502f>11</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>114</span>,<span class="hljs-number" data-v-df35502f>14</span>,<span class="hljs-number" data-v-df35502f>14</span>,<span class="hljs-number" data-v-df35502f>14</span>,<span class="hljs-number" data-v-df35502f>15</span>,<span class="hljs-number" data-v-df35502f>15</span>,<span class="hljs-number" data-v-df35502f>15</span>,<span class="hljs-number" data-v-df35502f>16</span>,<span class="hljs-number" data-v-df35502f>16</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>19</span>,<span class="hljs-number" data-v-df35502f>19</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>21</span>,<span class="hljs-number" data-v-df35502f>22</span>,<span class="hljs-number" data-v-df35502f>23</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>25</span>,<span class="hljs-number" data-v-df35502f>25</span>)
banyak1 &lt;- length(kecepatan)

# Membuat scatter plot
plot(jarak, kecepatan, 
     main = <span class="hljs-string" data-v-df35502f>&quot;Scatter Plot : Kecepatan vs Jarak&quot;</span>,  # Judul
     xlab = <span class="hljs-string" data-v-df35502f>&quot;Kecepatan (km/h)&quot;</span>, # sumbu x
     ylab = <span class="hljs-string" data-v-df35502f>&quot;Jarak (meter)&quot;</span>,  # sumbu y
     pch = <span class="hljs-number" data-v-df35502f>19</span>, # Bentuk titik 
     col = <span class="hljs-string" data-v-df35502f>&quot;blue&quot;</span>) # warna titik


# ========================== Garis tren merah (regresi linear) ===========================
model &lt;- lm(kecepatan ~ jarak)
abline(model, col = <span class="hljs-string" data-v-df35502f>&quot;red&quot;</span>, lwd = <span class="hljs-number" data-v-df35502f>2</span>)
</code></pre><h2 id="membuat-histogram" data-v-df35502f>Membuat histogram</h2><pre data-v-df35502f><code data-v-df35502f>
# contoh Data Kecepatan dan jarak pada tabel
jarak &lt;- c(<span class="hljs-number" data-v-df35502f>2</span>,<span class="hljs-number" data-v-df35502f>10</span>,<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>28</span>,<span class="hljs-number" data-v-df35502f>33</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>26</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>22</span>,<span class="hljs-number" data-v-df35502f>28</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>32</span>,<span class="hljs-number" data-v-df35502f>34</span>,<span class="hljs-number" data-v-df35502f>43</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>30</span>,<span class="hljs-number" data-v-df35502f>58</span>,<span class="hljs-number" data-v-df35502f>80</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>55</span>,<span class="hljs-number" data-v-df35502f>35</span>,<span class="hljs-number" data-v-df35502f>40</span>,<span class="hljs-number" data-v-df35502f>30</span>,<span class="hljs-number" data-v-df35502f>44</span>,<span class="hljs-number" data-v-df35502f>50</span>,<span class="hljs-number" data-v-df35502f>46</span>,<span class="hljs-number" data-v-df35502f>53</span>,<span class="hljs-number" data-v-df35502f>70</span>,<span class="hljs-number" data-v-df35502f>80</span>,<span class="hljs-number" data-v-df35502f>36</span>,<span class="hljs-number" data-v-df35502f>46</span>,<span class="hljs-number" data-v-df35502f>68</span>,<span class="hljs-number" data-v-df35502f>34</span>,<span class="hljs-number" data-v-df35502f>48</span>,<span class="hljs-number" data-v-df35502f>50</span>,<span class="hljs-number" data-v-df35502f>56</span>,<span class="hljs-number" data-v-df35502f>60</span>,<span class="hljs-number" data-v-df35502f>64</span>,<span class="hljs-number" data-v-df35502f>56</span>,<span class="hljs-number" data-v-df35502f>72</span>,<span class="hljs-number" data-v-df35502f>90</span>,<span class="hljs-number" data-v-df35502f>92</span>,<span class="hljs-number" data-v-df35502f>110</span>,<span class="hljs-number" data-v-df35502f>85</span>)
banyak2 &lt;- length(jarak)

kecepatan &lt;- c(<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>4</span>,<span class="hljs-number" data-v-df35502f>7</span>,<span class="hljs-number" data-v-df35502f>7</span>,<span class="hljs-number" data-v-df35502f>8</span>,<span class="hljs-number" data-v-df35502f>8</span>,<span class="hljs-number" data-v-df35502f>9</span>,<span class="hljs-number" data-v-df35502f>10</span>,<span class="hljs-number" data-v-df35502f>10</span>,<span class="hljs-number" data-v-df35502f>11</span>,<span class="hljs-number" data-v-df35502f>11</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>12</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>13</span>,<span class="hljs-number" data-v-df35502f>114</span>,<span class="hljs-number" data-v-df35502f>14</span>,<span class="hljs-number" data-v-df35502f>14</span>,<span class="hljs-number" data-v-df35502f>14</span>,<span class="hljs-number" data-v-df35502f>15</span>,<span class="hljs-number" data-v-df35502f>15</span>,<span class="hljs-number" data-v-df35502f>15</span>,<span class="hljs-number" data-v-df35502f>16</span>,<span class="hljs-number" data-v-df35502f>16</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>17</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>18</span>,<span class="hljs-number" data-v-df35502f>19</span>,<span class="hljs-number" data-v-df35502f>19</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>20</span>,<span class="hljs-number" data-v-df35502f>21</span>,<span class="hljs-number" data-v-df35502f>22</span>,<span class="hljs-number" data-v-df35502f>23</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>24</span>,<span class="hljs-number" data-v-df35502f>25</span>,<span class="hljs-number" data-v-df35502f>25</span>)
banyak1 &lt;- length(kecepatan)


# Membuat histogram
hist(kecepatan, 
     main = <span class="hljs-string" data-v-df35502f>&quot;Histogram Kecepatan Mobil&quot;</span>,  # Judul
     xlab = <span class="hljs-string" data-v-df35502f>&quot;Kecepatan (km/h)&quot;</span>,  # sumbu xx
     ylab = <span class="hljs-string" data-v-df35502f>&quot;Frekuensi&quot;</span>,  # sumbu y
     col = <span class="hljs-string" data-v-df35502f>&quot;blue&quot;</span>,  # warna sumbu
     border = <span class="hljs-string" data-v-df35502f>&quot;black&quot;</span>, # batas
     breaks = <span class="hljs-number" data-v-df35502f>10</span>) # jumlah kelas
</code></pre><h2 id="melakukan-perhitungan-coefficient-of-variation-cv-koeffisiensi-keragaman" data-v-df35502f>Melakukan perhitungan Coefficient of variation (CV) | Koeffisiensi keragaman</h2><pre data-v-df35502f><code data-v-df35502f><span class="hljs-meta" data-v-df35502f># matematika Fatoni 90</span>
<span class="hljs-meta" data-v-df35502f># rata-rata matematika 65</span>
<span class="hljs-meta" data-v-df35502f># deviasi 10</span>

<span class="hljs-meta" data-v-df35502f># Bahasa inggris Fatoni 45</span>
<span class="hljs-meta" data-v-df35502f># rata-rata bahasa inggris 70</span>
<span class="hljs-meta" data-v-df35502f># deviasi 8</span>

<span class="hljs-meta" data-v-df35502f># Data untuk ujian Matematika</span>
meanMatematika &lt;- <span class="hljs-number" data-v-df35502f>65</span>
sdMatematika &lt;- <span class="hljs-number" data-v-df35502f>10</span>

<span class="hljs-meta" data-v-df35502f># Data untuk ujian Bahasa Inggris</span>
meanInggris &lt;- <span class="hljs-number" data-v-df35502f>70</span>
sdInggris &lt;- <span class="hljs-number" data-v-df35502f>8</span>

<span class="hljs-meta" data-v-df35502f># CV (Coefficient of variaation) </span>
<span class="hljs-meta" data-v-df35502f># Menghitung koefisien keragaman (CV)</span>
<span class="hljs-meta" data-v-df35502f># Rumus dasar CV</span>
<span class="hljs-meta" data-v-df35502f># cv &lt;- sd(data) / mean(data) * 100</span>
<span class="hljs-meta" data-v-df35502f># Referensi: https://www.statology.org/coefficient-of-variation-in-r/ </span>


<span class="hljs-meta" data-v-df35502f># Menghitung koefisien keragaman (CV) untuk Matematika</span>
cvMatematika &lt;- (sdMatematika / meanMatematika) * <span class="hljs-number" data-v-df35502f>100</span>



<span class="hljs-meta" data-v-df35502f># Menghitung koefisien keragaman (CV) untuk Bahasa Inggris</span>
cvInggris &lt;- (sdInggris / meanInggris) * <span class="hljs-number" data-v-df35502f>100</span>

<span class="hljs-meta" data-v-df35502f># Menampilkan hasil</span>
print(paste(<span class="hljs-string" data-v-df35502f>&quot;Koefisien keragaman untuk Matematika:&quot;</span>, cvMatematika, <span class="hljs-string" data-v-df35502f>&quot;%&quot;</span>))
print(paste(<span class="hljs-string" data-v-df35502f>&quot;Koefisien keragaman untuk Bahasa Inggris:&quot;</span>, cvInggris, <span class="hljs-string" data-v-df35502f>&quot;%&quot;</span>))


<span class="hljs-meta" data-v-df35502f># Output:</span>

<span class="hljs-meta" data-v-df35502f># [1] &quot;Koefisien keragaman untuk Matematika: 15.3846153846154 %&quot;</span>
<span class="hljs-meta" data-v-df35502f># [1] &quot;Koefisien keragaman untuk Bahasa Inggris: 11.4285714285714 %&quot;</span>
</code></pre><h2 id="latihan-r" data-v-df35502f>Latihan R</h2>`,92)),c("p",null,[S(n,{to:"/ltR",class:"LFT-Item"},{default:x(()=>s[0]||(s[0]=[w(" Latihan R ")])),_:1})]),s[3]||(s[3]=c("h1",{id:"referensi-"},"Referensi:",-1)),s[4]||(s[4]=c("ul",null,[c("li",null,[c("a",{href:"https://www.geeksforgeeks.org/calculate-square-root-of-a-number-in-r-language-sqrt-function/"},"https://www.geeksforgeeks.org/calculate-square-root-of-a-number-in-r-language-sqrt-function/")])],-1)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[1]||(s[1]=[w("Go to Home")])),_:1})])],64)}}},gf=ca(ff,[["__scopeId","data-v-df35502f"]]),kf={__name:"reactexpo",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[4]||(s[4]=Z(`<h1 id="expo" data-v-db7de358>Expo</h1><h2 id="react-native" data-v-db7de358>React Native</h2><p data-v-db7de358>React Native adalah framework open-source yang dapat membantu kita untuk melakukan pengembangan suatu aplikasi mobile dengan javascriopt. </p><p data-v-db7de358>Kelebihan React Native:</p><ul data-v-db7de358><li data-v-db7de358><strong data-v-db7de358>Pengembangan lintas platfrom</strong>: Satu code, bisa digunakan untuk android atau IOS. </li></ul><h2 id="expo" data-v-db7de358>Expo</h2><p data-v-db7de358>Expo adalah aplikasi yang dibangung diatas React Native. Expo dapat digunakan untuk mempercepat pengembangan aplikasi dengan React Native. </p><p data-v-db7de358>Keuntungan dengan EXPO:</p><ul data-v-db7de358><li data-v-db7de358>Dengan Expo, kita bisa melewati beberapa configurasi yang diperlukan untuk membuat app. </li><li data-v-db7de358>&quot;Expo SDK&quot;, menyediakan Module dan library yang siap pakai seperti &quot;navigasi&quot; dan lain-lain. </li><li data-v-db7de358>&quot;Expo CLI&quot;, Digunakan untuk membangun dan menjalankan app.</li><li data-v-db7de358>&quot;Expo-Go&quot;, digunakan untuk membantu kita menjalankan aplikasi tanpa harus melakukan build dan deployment.</li></ul><hr data-v-db7de358><p data-v-db7de358>adalah tool yang dapat membantu kita untuk membuat App android dan IOS. </p><p data-v-db7de358>Untuk IDX tetap pakai <code data-v-db7de358>yarn</code></p><p data-v-db7de358>cara instalasi dengan yarn:</p><pre data-v-db7de358><code data-v-db7de358>npm <span class="hljs-keyword" data-v-db7de358>install</span> -g yarn

yarn <span class="hljs-keyword" data-v-db7de358>add</span> <span class="hljs-keyword" data-v-db7de358>global</span> expo-cli
yarn <span class="hljs-keyword" data-v-db7de358>add</span> <span class="hljs-keyword" data-v-db7de358>global</span> expo
# =================== atau seperti ini =============
npm <span class="hljs-keyword" data-v-db7de358>install</span> expo-cli
npm <span class="hljs-keyword" data-v-db7de358>install</span> expo

npx expo-cli <span class="hljs-keyword" data-v-db7de358>upgrade</span> // jika mengalami <span class="hljs-keyword" data-v-db7de358>error</span> karena <span class="hljs-keyword" data-v-db7de358>version</span>
</code></pre><p data-v-db7de358>ref: <a href="https://medium.com/@blackpintz/how-to-install-expo-cli-using-yarn-92efe8ed78f5" data-v-db7de358>https://medium.com/@blackpintz/how-to-install-expo-cli-using-yarn-92efe8ed78f5</a></p><pre data-v-db7de358><code data-v-db7de358><span class="hljs-string" data-v-db7de358>npx </span><span class="hljs-built_in" data-v-db7de358>create-expo-app</span> <span class="hljs-string" data-v-db7de358>my-app
</span>

<span class="hljs-comment" data-v-db7de358># =========== Jalankan App pada website ===========</span>
<span class="hljs-string" data-v-db7de358>npm </span><span class="hljs-string" data-v-db7de358>run </span><span class="hljs-string" data-v-db7de358>web</span>
</code></pre><h2 id="tool-tambahan" data-v-db7de358>tool tambahan</h2><p data-v-db7de358>install <code data-v-db7de358>Expo Go</code> untuk melakukan testing didalam android</p><hr data-v-db7de358><h1 id="informasi" data-v-db7de358>Informasi</h1><hr data-v-db7de358><p data-v-db7de358>jika menggunakan github codespace check area ini </p><pre data-v-db7de358><code data-v-db7de358>/app/(<span class="hljs-keyword" data-v-db7de358>tabs</span>)/<span class="hljs-built_in" data-v-db7de358>index</span>.tsx
</code></pre><p data-v-db7de358>contoh code </p><pre data-v-db7de358><code class="lang-Js" data-v-db7de358><span class="hljs-keyword" data-v-db7de358>import</span> { HelloWave } <span class="hljs-keyword" data-v-db7de358>from</span> <span class="hljs-string" data-v-db7de358>&#39;@/components/HelloWave&#39;</span>;
<span class="hljs-keyword" data-v-db7de358>import</span> ParallaxScrollView <span class="hljs-keyword" data-v-db7de358>from</span> <span class="hljs-string" data-v-db7de358>&#39;@/components/ParallaxScrollView&#39;</span>;
<span class="hljs-keyword" data-v-db7de358>import</span> { ThemedText } <span class="hljs-keyword" data-v-db7de358>from</span> <span class="hljs-string" data-v-db7de358>&#39;@/components/ThemedText&#39;</span>;
<span class="hljs-keyword" data-v-db7de358>import</span> { ThemedView } <span class="hljs-keyword" data-v-db7de358>from</span> <span class="hljs-string" data-v-db7de358>&#39;@/components/ThemedView&#39;</span>;

<span class="hljs-keyword" data-v-db7de358>export</span> <span class="hljs-keyword" data-v-db7de358>default</span> <span class="hljs-function" data-v-db7de358><span class="hljs-keyword" data-v-db7de358>function</span> <span class="hljs-title" data-v-db7de358>HomeScreen</span>(<span class="hljs-params" data-v-db7de358></span>) </span>{
  <span class="hljs-keyword" data-v-db7de358>return</span> (
    <span class="xml" data-v-db7de358><span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>View</span>&gt;</span></span>

<span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>View</span> </span><span class="hljs-attr" data-v-db7de358>style</span>=<span class="hljs-string" data-v-db7de358> &lt;span class=&quot;hljs-attr&quot;&gt;alignItems:&lt;/span&gt; &#39;&lt;span class=&quot;hljs-attr&quot;&gt;center&lt;/span&gt;&#39;  </span>
        <span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>Text</span></span> <span class="hljs-attr" data-v-db7de358>style</span>=<span class="hljs-string" data-v-db7de358>&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;fontSize:&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;40&lt;/span&gt; </span>Hello React Native<span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>Text</span>&gt;</span>
      <span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>View</span>&gt;</span>

<span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>View</span></span> <span class="hljs-attr" data-v-db7de358>style</span>=<span class="hljs-string" data-v-db7de358>&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;alignItems:&lt;/span&gt; &#39;&lt;span class=&quot;hljs-attr&quot;&gt;center&lt;/span&gt;&#39; </span>
        <span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>Text</span> <span class="hljs-attr" data-v-db7de358>style</span>=<span class="hljs-string" data-v-db7de358>&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;fontSize:&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;40&lt;/span&gt; </span>Hello React Native<span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>Text</span>&gt;</span>
      <span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>View</span>&gt;</span>

<span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>View</span>&gt;</span></span>
  );
}
</code></pre><hr data-v-db7de358><h1 id="component-inti-react-native" data-v-db7de358>Component Inti React Native</h1><hr data-v-db7de358><p data-v-db7de358>Beberapa Component bawaan dari &quot;Expo&quot;</p><ol data-v-db7de358><li data-v-db7de358>Daftar Component dasar dalam UI </li><li data-v-db7de358>view</li><li data-v-db7de358>Text </li><li data-v-db7de358>StyleSheet</li><li data-v-db7de358>Image</li><li data-v-db7de358><p data-v-db7de358>TextInput</p></li><li data-v-db7de358><p data-v-db7de358>View yang dapat scroll</p></li><li data-v-db7de358>ScrollView</li><li data-v-db7de358><p data-v-db7de358>FlatList</p></li><li data-v-db7de358><p data-v-db7de358>View yang dapat touch </p></li><li data-v-db7de358>Button </li><li data-v-db7de358>TouchableOpacity</li></ol><h1 id="component-dasar" data-v-db7de358>Component dasar</h1><p data-v-db7de358>Berserta penjelasan fungsi </p><h3 id="view" data-v-db7de358>view</h3><pre data-v-db7de358><code class="lang-Js" data-v-db7de358><span class="hljs-keyword" data-v-db7de358>import</span> { View, Text } <span class="hljs-keyword" data-v-db7de358>from</span> <span class="hljs-string" data-v-db7de358>&#39;react-native&#39;</span>
... 

return (
<span class="xml" data-v-db7de358><span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>View</span>&gt;</span></span>

<span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>View</span> <span class="hljs-attr" data-v-db7de358>style</span>=<span class="hljs-string" data-v-db7de358>&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;alignItems:&lt;/span&gt; &#39;&lt;span class=&quot;hljs-attr&quot;&gt;center&lt;/span&gt;&#39; </span></span>
        <span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>Text</span> <span class="hljs-attr" data-v-db7de358>style</span>=<span class="hljs-string" data-v-db7de358>&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;fontSize:&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;40&lt;/span&gt; </span>Hello React Native<span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>Text</span>&gt;</span></span>
      <span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>View</span>&gt;</span>

<span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>View</span> <span class="hljs-attr" data-v-db7de358>style</span>=<span class="hljs-string" data-v-db7de358>&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;alignItems:&lt;/span&gt; &#39;&lt;span class=&quot;hljs-attr&quot;&gt;center&lt;/span&gt;&#39; </span></span>
        <span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>Text</span> <span class="hljs-attr" data-v-db7de358>style</span>=<span class="hljs-string" data-v-db7de358>&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;fontSize:&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;40&lt;/span&gt; </span>Hello React Native<span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>Text</span>&gt;</span>
      <span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>View</span>&gt;</span>

<span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>View</span>&gt;</span></span>
)
</code></pre><p data-v-db7de358>Mereka berfungsi sebagai container pembungkus. sama seperti kita menggunakan <code data-v-db7de358>&lt;div&gt;</code></p><h3 id="text" data-v-db7de358>Text</h3><pre data-v-db7de358><code class="lang-Js" data-v-db7de358><span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>Text</span> <span class="hljs-attr" data-v-db7de358>style</span>=<span class="hljs-string" data-v-db7de358>&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;fontSize:&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;30&lt;/span&gt; </span></span>

<span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>Text</span>&gt;</span>Ini ukuran akan berubah <span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>Text</span>&gt;</span>

<span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>View</span>&gt;</span>
<span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>Text</span>&gt;</span>Ini ukuran tidak akan berubah <span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>Text</span>&gt;</span>
<span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>View</span>&gt;</span>

<span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>Text</span>&gt;</span>
</code></pre><p data-v-db7de358>ini adalah seoperti bentuk string. Kita tidak bisa memasukan string kepada component <code data-v-db7de358>&lt;View&gt;</code>. Cara diatas dapat digunakan untuk mewariskan style kepada <code data-v-db7de358>Text</code> dibawahnya, kecuali terdapat text didalam view atau component lain.</p><h3 id="stylesheet" data-v-db7de358>StyleSheet</h3><pre data-v-db7de358><code class="lang-Js" data-v-db7de358><span class="hljs-keyword" data-v-db7de358>import</span> { StyleSheet, <span class="hljs-built_in" data-v-db7de358>Text</span>, View } <span class="hljs-keyword" data-v-db7de358>from</span> &#39;react-native&#39;

...

&lt;<span class="hljs-built_in" data-v-db7de358>Text</span> style={styles.title}&gt;React Native - Prograte&lt;/<span class="hljs-built_in" data-v-db7de358>Text</span>&gt;


<span class="hljs-keyword" data-v-db7de358>const</span> styles = StyleSheet.create({
  container: {
    flex: <span class="hljs-number" data-v-db7de358>1</span>,
    padding: <span class="hljs-number" data-v-db7de358>24</span>,
    backgroundColor: &#39;<span class="hljs-comment" data-v-db7de358>#eaeaea&#39;,</span>
  },})
</code></pre><p data-v-db7de358>Infile CSS </p><h3 id="image" data-v-db7de358>Image</h3><pre data-v-db7de358><code class="lang-Js" data-v-db7de358>import { View, <span class="hljs-built_in" data-v-db7de358>Image</span>, StyleSheet } <span class="hljs-keyword" data-v-db7de358>from</span> <span class="hljs-string" data-v-db7de358>&#39;react-native&#39;</span>

 &lt;<span class="hljs-built_in" data-v-db7de358>Image</span> style={styles.<span class="hljs-built_in" data-v-db7de358>image</span>} source={require(<span class="hljs-string" data-v-db7de358>&#39;./assets/icon.png&#39;</span>)} /&gt;
</code></pre><p data-v-db7de358>Sama seperti Tag <code data-v-db7de358>image</code></p><p data-v-db7de358>Ref: <a href="https://www.tutorialspoint.com/react_native/react_native_images.htm" data-v-db7de358>https://www.tutorialspoint.com/react_native/react_native_images.htm</a></p><h3 id="textinput" data-v-db7de358>TextInput</h3><pre data-v-db7de358><code class="lang-Js" data-v-db7de358><span class="hljs-keyword" data-v-db7de358>import</span> { View, StyleSheet, TextInput } from <span class="hljs-string" data-v-db7de358>&#39;react-native&#39;</span>

const [name, setName] = useState()

&lt;TextInput
        style={styles.input}
        placeholder=<span class="hljs-string" data-v-db7de358>&quot;Masukan Nama&quot;</span>
        onChangeText={setName}
        <span class="hljs-keyword" data-v-db7de358>value</span>={name}
      /&gt;
</code></pre><p data-v-db7de358>Adalaj bentuk form. Untuk lebih detail mengenai form TextInput: <a href="https://reactnative.dev/docs/textinput#props" data-v-db7de358>https://reactnative.dev/docs/textinput#props</a></p><hr data-v-db7de358><h1 id="bagian-view-dan-scroll" data-v-db7de358>Bagian View dan Scroll</h1><hr data-v-db7de358><p data-v-db7de358><strong data-v-db7de358>Attribute</strong> special untuk component container: </p><pre data-v-db7de358><code class="lang-Js" data-v-db7de358><span class="hljs-attr" data-v-db7de358>contentContainerStyle</span>={styles.wrapper}
</code></pre><p data-v-db7de358>Berfungsi sebagai penerima css bagi container. </p><p data-v-db7de358>ref: <a href="https://stackoverflow.com/questions/46032604/scrollview-child-layout-must-be-applied-through-the-contentcontainerstyle-prop" data-v-db7de358>https://stackoverflow.com/questions/46032604/scrollview-child-layout-must-be-applied-through-the-contentcontainerstyle-prop</a></p><h3 id="scrollview" data-v-db7de358>ScrollView</h3><p data-v-db7de358>adalah suatu component yang dapat membantu kita untuk membungkus content yang melewati batas dari size screen.</p><pre data-v-db7de358><code class="lang-Js" data-v-db7de358><span class="xml" data-v-db7de358>import </span><span class="hljs-template-variable" data-v-db7de358>{ StyleSheet, View, ScrollView, Text }</span><span class="xml" data-v-db7de358> from &#39;react-native&#39;

<span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>View</span> <span class="hljs-attr" data-v-db7de358>style</span>=</span></span><span class="hljs-template-variable" data-v-db7de358>{styles.container}</span><span class="xml" data-v-db7de358><span class="hljs-tag" data-v-db7de358>&gt;</span>
      <span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>ScrollView</span> <span class="hljs-attr" data-v-db7de358>style</span>=</span></span><span class="hljs-template-variable" data-v-db7de358>{styles.scrollView}</span><span class="xml" data-v-db7de358><span class="hljs-tag" data-v-db7de358>&gt;</span>
        <span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>Text</span> <span class="hljs-attr" data-v-db7de358>style</span>=</span></span><span class="hljs-template-variable" data-v-db7de358>{styles.text}</span><span class="xml" data-v-db7de358><span class="hljs-tag" data-v-db7de358>&gt;</span>
          </span><span class="hljs-template-tag" data-v-db7de358>{/* <span class="hljs-name" data-v-db7de358>Tuliskan</span> teks panjang di sini */}</span><span class="xml" data-v-db7de358>
        <span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>Text</span>&gt;</span>
      <span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>ScrollView</span>&gt;</span>
    <span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>View</span>&gt;</span></span>
</code></pre><p data-v-db7de358>Reference: <a href="https://reactnative.dev/docs/using-a-scrollview" data-v-db7de358>https://reactnative.dev/docs/using-a-scrollview</a></p><h3 id="flatlist" data-v-db7de358>FlatList</h3><p data-v-db7de358>menyerupai dengan ScrollView, tetapi memiliki perbedaan kapan harus digunakan. Dimana <code data-v-db7de358>FlatList</code> digunakan saat kita memangil banyak item dari array. </p><pre data-v-db7de358><code class="lang-Js" data-v-db7de358><span class="hljs-keyword" data-v-db7de358>const</span> App = <span class="hljs-function" data-v-db7de358><span class="hljs-params" data-v-db7de358>()</span> =&gt;</span> {
  <span class="hljs-keyword" data-v-db7de358>const</span> renderItem = <span class="hljs-function" data-v-db7de358>(<span class="hljs-params" data-v-db7de358>{ item }</span>) =&gt;</span> &lt;Item title={item.title} /&gt;

  <span class="hljs-keyword" data-v-db7de358>return</span> (
    <span class="xml" data-v-db7de358><span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>View</span> <span class="hljs-attr" data-v-db7de358>style</span>=<span class="hljs-string" data-v-db7de358>{styles.container}</span>&gt;</span>
      <span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>FlatList</span>
        <span class="hljs-attr" data-v-db7de358>data</span>=<span class="hljs-string" data-v-db7de358>{items}</span>
        <span class="hljs-attr" data-v-db7de358>renderItem</span>=<span class="hljs-string" data-v-db7de358>{renderItem}</span>
        <span class="hljs-attr" data-v-db7de358>keyExtractor</span>=<span class="hljs-string" data-v-db7de358>{(item)</span> =&gt;</span> item.id}
      /&gt;
    <span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>View</span>&gt;</span>
  )
}</span>
</code></pre><p data-v-db7de358>Break: dimana pada fungsi <code data-v-db7de358>App()</code> kita memangil item satu demi satu. </p><ul data-v-db7de358><li data-v-db7de358><code data-v-db7de358>data</code> - adalah item spesifik </li><li data-v-db7de358><code data-v-db7de358>renderItem</code> - adalah list item </li><li data-v-db7de358><code data-v-db7de358>keyExtractor</code> - adalah <code data-v-db7de358>key.id</code> pada react biasa. konsep untuk penanda item list</li></ul><p data-v-db7de358>Ref: <a href="https://reactnative.dev/docs/flatlist" data-v-db7de358>https://reactnative.dev/docs/flatlist</a></p><h3 id="perbedaan-scrollview-dan-flatlist" data-v-db7de358>perbedaan scrollView dan FlatList</h3><ul data-v-db7de358><li data-v-db7de358>ScrollView digunakan jika data yang kita render sedikit, meningkatkan performa app </li><li data-v-db7de358>FlatList digunakan disaat kita merender data yang super besar dan banyak.</li></ul><hr data-v-db7de358><h1 id="button-and-touchableopacity" data-v-db7de358>Button and TouchableOpacity</h1><hr data-v-db7de358><h3 id="button" data-v-db7de358>Button</h3><pre data-v-db7de358><code class="lang-Js" data-v-db7de358>import { View, <span class="hljs-keyword" data-v-db7de358>Button</span>, Alert, StyleSheet } from <span class="hljs-string" data-v-db7de358>&#39;react-native&#39;</span>

&lt;<span class="hljs-keyword" data-v-db7de358>Button</span>
          <span class="hljs-keyword" data-v-db7de358>title</span>=<span class="hljs-string" data-v-db7de358>&quot;Color Button&quot;</span>
          <span class="hljs-keyword" data-v-db7de358>color</span>=<span class="hljs-string" data-v-db7de358>&quot;#f194ff&quot;</span>
          onPress={() =&gt; Alert.alert(<span class="hljs-string" data-v-db7de358>&#39;Color Button&#39;</span>)}
        /&gt;
</code></pre><p data-v-db7de358>disini button bisa kita gunakan seperti biasa, pemangilan fungsi dan lain-lain.</p><h3 id="touchableopacity" data-v-db7de358>TouchableOpacity</h3><pre data-v-db7de358><code class="lang-Js" data-v-db7de358><span class="xml" data-v-db7de358>import </span><span class="hljs-template-variable" data-v-db7de358>{ View, StyleSheet, TouchableOpacity, Text }</span><span class="xml" data-v-db7de358>

<span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>TouchableOpacity</span> <span class="hljs-attr" data-v-db7de358>style</span>=</span></span><span class="hljs-template-variable" data-v-db7de358>{styles.button}</span><span class="xml" data-v-db7de358><span class="hljs-tag" data-v-db7de358> <span class="hljs-attr" data-v-db7de358>onPress</span>=</span></span><span class="hljs-template-variable" data-v-db7de358>{onPress}</span><span class="xml" data-v-db7de358><span class="hljs-tag" data-v-db7de358>&gt;</span>
        <span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>Text</span> <span class="hljs-attr" data-v-db7de358>style</span>=</span></span><span class="hljs-template-variable" data-v-db7de358>{styles.buttonText}</span><span class="xml" data-v-db7de358><span class="hljs-tag" data-v-db7de358>&gt;</span>Press Here<span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>Text</span>&gt;</span>
      <span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>TouchableOpacity</span>&gt;</span></span>
</code></pre><p data-v-db7de358>adalah sebuah wrapper seperti <code data-v-db7de358>div</code> dimana kita bisa membuatnya sebagai pengganti button. seperti pada HTML biasa kita bisa menggunakan <code data-v-db7de358>div</code> sebagai alternative tag <code data-v-db7de358>button</code></p><hr data-v-db7de358><h1 id="expo-linear-gradient" data-v-db7de358>expo-linear-gradient</h1><hr data-v-db7de358><p data-v-db7de358>Instalasi </p><pre data-v-db7de358><code class="lang-js" data-v-db7de358><span class="hljs-comment" data-v-db7de358>// npm install expo-linear-gradient</span>
<span class="hljs-comment" data-v-db7de358>// Instalasi </span>

<span class="hljs-keyword" data-v-db7de358>import</span> LinearGradient <span class="hljs-keyword" data-v-db7de358>from</span> <span class="hljs-string" data-v-db7de358>&#39;expo-linear-gradient&#39;</span>;

<span class="xml" data-v-db7de358><span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>LinearGradient</span>
  <span class="hljs-attr" data-v-db7de358>colors</span>=<span class="hljs-string" data-v-db7de358>{[</span>&#39;#<span class="hljs-attr" data-v-db7de358>FF0000</span>&#39;, &#39;#<span class="hljs-attr" data-v-db7de358>FFFF00</span>&#39;, &#39;#<span class="hljs-attr" data-v-db7de358>00FF00</span>&#39;]}
  <span class="hljs-attr" data-v-db7de358>start</span>=<span class="hljs-string" data-v-db7de358>{[0,</span> <span class="hljs-attr" data-v-db7de358>0</span>]}
  <span class="hljs-attr" data-v-db7de358>end</span>=<span class="hljs-string" data-v-db7de358>{[1,</span> <span class="hljs-attr" data-v-db7de358>1</span>]}
&gt;</span>
  <span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>View</span>&gt;</span>
    {/* Content to display within the gradient */}
  <span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>View</span>&gt;</span>
<span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>LinearGradient</span>&gt;</span></span>
</code></pre><p data-v-db7de358>Pada contoh diatas, akan dibuat suatu transisi dari kiri ke kanan. dimana component semua item pada component &quot;view&quot;. </p><p data-v-db7de358>Manfaat: </p><ul data-v-db7de358><li data-v-db7de358>Meningkatkan kualitas visual </li><li data-v-db7de358>dapat kita gunakan untuk memberikan Highlight pada area spesifik. </li></ul><p data-v-db7de358>Ref: </p><ul data-v-db7de358><li data-v-db7de358><a href="https://github.com/react-native-linear-gradient/react-native-linear-gradient" data-v-db7de358>https://github.com/react-native-linear-gradient/react-native-linear-gradient</a> | </li><li data-v-db7de358><a href="https://codesandbox.io/s/react-hv1g9e" data-v-db7de358>https://codesandbox.io/s/react-hv1g9e</a> | contoh hasil</li><li data-v-db7de358><a href="https://docs.expo.dev/versions/latest/sdk/linear-gradient/" data-v-db7de358>https://docs.expo.dev/versions/latest/sdk/linear-gradient/</a> | Contoh Official</li></ul><hr data-v-db7de358><h1 id="imagebackground" data-v-db7de358>ImageBackground</h1><hr data-v-db7de358><pre data-v-db7de358><code class="lang-Js" data-v-db7de358><span class="hljs-keyword" data-v-db7de358>import</span> {ImageBackground, StyleSheet, Text, View} <span class="hljs-keyword" data-v-db7de358>from</span> <span class="hljs-string" data-v-db7de358>&#39;react-native&#39;</span>;

<span class="hljs-keyword" data-v-db7de358>const</span> image = {<span class="hljs-attr" data-v-db7de358>uri</span>: <span class="hljs-string" data-v-db7de358>&#39;https://legacy.reactjs.org/logo-og.png&#39;</span>};

<span class="hljs-keyword" data-v-db7de358>const</span> App = <span class="hljs-function" data-v-db7de358><span class="hljs-params" data-v-db7de358>()</span> =&gt;</span> (
  <span class="xml" data-v-db7de358><span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>View</span> <span class="hljs-attr" data-v-db7de358>style</span>=<span class="hljs-string" data-v-db7de358>{styles.container}</span>&gt;</span>
    <span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>ImageBackground</span> <span class="hljs-attr" data-v-db7de358>source</span>=<span class="hljs-string" data-v-db7de358>{image}</span> <span class="hljs-attr" data-v-db7de358>resizeMode</span>=<span class="hljs-string" data-v-db7de358>&quot;cover&quot;</span> <span class="hljs-attr" data-v-db7de358>style</span>=<span class="hljs-string" data-v-db7de358>{styles.image}</span>&gt;</span>
      <span class="hljs-tag" data-v-db7de358>&lt;<span class="hljs-name" data-v-db7de358>Text</span> <span class="hljs-attr" data-v-db7de358>style</span>=<span class="hljs-string" data-v-db7de358>{styles.text}</span>&gt;</span>Inside<span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>Text</span>&gt;</span>
    <span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>ImageBackground</span>&gt;</span>
  <span class="hljs-tag" data-v-db7de358>&lt;/<span class="hljs-name" data-v-db7de358>View</span>&gt;</span></span>
);
</code></pre><p data-v-db7de358>berfungsi untuk menambahkan item didalam gambar. </p><p data-v-db7de358>ref: <a href="https://reactnative.dev/docs/imagebackground" data-v-db7de358>https://reactnative.dev/docs/imagebackground</a></p><hr data-v-db7de358><h1 id="fontawesome-logo-" data-v-db7de358>FontAwesome (Logo)</h1><hr data-v-db7de358><pre data-v-db7de358><code class="lang-Js" data-v-db7de358>
<span class="hljs-keyword" data-v-db7de358>import</span> { FontAwesome } <span class="hljs-keyword" data-v-db7de358>from</span> <span class="hljs-string" data-v-db7de358>&#39;@expo/vector-icons&#39;</span>

&lt;FontAwesome name=<span class="hljs-string" data-v-db7de358>&quot;star&quot;</span> <span class="hljs-keyword" data-v-db7de358>size</span>={<span class="hljs-number" data-v-db7de358>16</span>} color=<span class="hljs-string" data-v-db7de358>&quot;yellow&quot;</span> <span class="hljs-regexp" data-v-db7de358>/&gt;</span>
</code></pre><p data-v-db7de358>Ref: <a href="https://icons.expo.fyi/Index" data-v-db7de358>https://icons.expo.fyi/Index</a></p><hr data-v-db7de358><h1 id="catatan-tambahan" data-v-db7de358>catatan tambahan</h1><hr data-v-db7de358><h3 id="deklarasi-state" data-v-db7de358>deklarasi state</h3><p data-v-db7de358>state harus kita deklarasi didalam function, tidak boleh diluar function.</p><hr data-v-db7de358><hr data-v-db7de358><h1 id="note" data-v-db7de358>Note</h1>`,105)),c("ul",null,[c("li",null,[S(n,{to:"/expo-note1",class:"LFT-Item"},{default:x(()=>s[0]||(s[0]=[w(" Simple todo App ")])),_:1})]),c("li",null,[S(n,{to:"/expo-note2",class:"LFT-Item"},{default:x(()=>s[1]||(s[1]=[w(" Api Test ")])),_:1})]),c("li",null,[S(n,{to:"/expo-note3",class:"LFT-Item"},{default:x(()=>s[2]||(s[2]=[w(" Expo Navigator ")])),_:1})])]),s[5]||(s[5]=c("h1",{id:"reference-"},"Reference:",-1)),s[6]||(s[6]=c("ul",null,[c("li",null,[c("p",null,[c("a",{href:"https://www.freecodecamp.org/news/responsive-layout-react-native/"},"https://www.freecodecamp.org/news/responsive-layout-react-native/"),w(" | App sangat sederhana")])]),c("li",null,[c("p",null,[c("a",{href:"https://shift.infinite.red/start-using-reactotron-in-your-expo-project-today-in-3-easy-steps-a03d11032a7a"},"React Expo Debugging")])])],-1)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[3]||(s[3]=[w("Go to Home")])),_:1})])],64)}}},jf=ca(kf,[["__scopeId","data-v-db7de358"]]),yf={__name:"ruby",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[2]||(s[2]=Z(`<p data-v-8b78004f><img src="https://user-images.githubusercontent.com/60807663/153804659-c633bf08-733e-4463-afc0-6f87fe477d7f.png" alt="finale" data-v-8b78004f></p><h2 id="table-of-content" data-v-8b78004f>Table of content</h2><ol data-v-8b78004f><li data-v-8b78004f><a href="#ruby" data-v-8b78004f>Ruby</a></li></ol><h1 id="ruby" data-v-8b78004f>Ruby</h1><p data-v-8b78004f>Ruby adalah salah satu bahasa computer yang bisa digunakan secara cross-platfrom Oleh karena itu teman-teman tidak perlu khawatir dengan code yang dibuat. karena akan bisa dijalankan disemua platfrom. </p><h2 id="untuk-apa-sih-memakai-ruby-language-" data-v-8b78004f>Untuk apa sih memakai Ruby Language?</h2><p data-v-8b78004f>Ruby adalah salah satu bahasa programm yang bisa digunakan untuk berbagai macam kebutuhan, Dengan kata lain ini bisa digunakan sebagai: </p><ul data-v-8b78004f><li data-v-8b78004f>Web development</li></ul><p data-v-8b78004f>Ruby memiliki Web development framework bernama Ruby on Rails. Rilis sejak tahun 2005.</p><p data-v-8b78004f>Ruby on Rails membuat web development cepat dan mudah. Seorang developer bisa langsung membuat web application tanpa harus menyesuaikan setting ( sebagai contoh setting LocalHost, dan lain-lain) karena sudah dipersiapkan dari sana. Dan juga disediakan pre-built code libraries yang dapat membantu mempercepat pengembangan code. </p><ul data-v-8b78004f><li data-v-8b78004f>DevOps </li></ul><p data-v-8b78004f>Ruby juga digunakan pada DevOps ( Singkatan dari Software development(Dev) dan IT operations(Ops).) Bertujuan untuk memperpendek system development life cycle dan menyediakan software yang dapat diandalkan setiap saat. </p><ul data-v-8b78004f><li data-v-8b78004f>Automation</li></ul><p data-v-8b78004f>Ruby adalah salah satu bahasa program yang dapat diandalkan. Developer bisa membuat script untuk melakukan sesuatu secara otomatis. Karena Ruby mudah untuk ditulis, script yang simple dan bisa dikerjakan dengan cepat.</p><ul data-v-8b78004f><li data-v-8b78004f>Web Scraping and crawling</li></ul><p data-v-8b78004f>Ruby juga bisa digunakan untuk melakukan crawling pada halaman website. Mengambil data dari element tertentu dan mendownload halaman website secara cepat. Sebagai contoh, kau bisa menggunakan Nokogiri untuk extract structured data dari HTML pada halaman website.</p><ul data-v-8b78004f><li data-v-8b78004f>Data processing </li></ul><p data-v-8b78004f>Ruby language sangat cocok untuk melakukan prosessing data, cleaing, dan fileterin. Ada beberapa fitur yang sudah tersedia dalam ruby, seperti map, reduce, and select. Fungsi ini sangat membantu untuk melakukan pemrosesan data</p><h2 id="ruby-cheat-sheet" data-v-8b78004f>Ruby Cheat sheet</h2><p data-v-8b78004f>Anda bisa membayangkan ruby sebagai laci yang digunakan untuk menyimpan sesuatu.</p><p data-v-8b78004f><code data-v-8b78004f>myvariabel = 1</code></p><p data-v-8b78004f>Terdapat banyak sekali tipe data didalam Ruby. </p><ul data-v-8b78004f><li data-v-8b78004f>Boolean </li><li data-v-8b78004f>Integer</li><li data-v-8b78004f>float</li><li data-v-8b78004f>string</li></ul><h2 id="ruby-install-rails" data-v-8b78004f>Ruby install Rails</h2><pre data-v-8b78004f><code data-v-8b78004f>sudo apt <span class="hljs-keyword" data-v-8b78004f>install</span> ruby-<span class="hljs-keyword" data-v-8b78004f>full</span>
sudo apt-<span class="hljs-keyword" data-v-8b78004f>get</span> <span class="hljs-keyword" data-v-8b78004f>install</span> libsqlite3-dev
sudo gem <span class="hljs-keyword" data-v-8b78004f>install</span> sqlite3-ruby
gem <span class="hljs-keyword" data-v-8b78004f>list</span> # <span class="hljs-keyword" data-v-8b78004f>Check</span> sqlite3 <span class="hljs-keyword" data-v-8b78004f>and</span> sqlite3-ruby <span class="hljs-keyword" data-v-8b78004f>if</span> <span class="hljs-keyword" data-v-8b78004f>is</span> installed

gem <span class="hljs-keyword" data-v-8b78004f>install</span> rails
sudo rails <span class="hljs-keyword" data-v-8b78004f>new</span> myapp 
cd myapp
<span class="hljs-keyword" data-v-8b78004f>bin</span>/rails <span class="hljs-keyword" data-v-8b78004f>server</span> # <span class="hljs-keyword" data-v-8b78004f>http</span>://localhost:<span class="hljs-number" data-v-8b78004f>3000</span>
</code></pre><p data-v-8b78004f>Ruby Basic Syntax</p><h2 id="print-something" data-v-8b78004f>Print something</h2><p data-v-8b78004f><code data-v-8b78004f>puts &#39;Hello World!&#39;</code></p><h1 id="variabel" data-v-8b78004f>Variabel</h1><p data-v-8b78004f>Didalam Ruby untuk melakukan deklarasi variabel tidak perlu membuat type secara spesifik ( variabel constant yang tidak bisa dirubah atau variabel normal yang bisa dirubah sewaktu waktu ). Variabel ruby bisa menyimpan semua tipe data (Boolean, float, integer, string dan lain-lain). </p><p data-v-8b78004f>Sebagai contoh:</p><ul data-v-8b78004f><li data-v-8b78004f><code data-v-8b78004f>nama_variabel = &#39;Hello world&#39;</code> atau </li><li data-v-8b78004f><code data-v-8b78004f>namaVariabel =&#39;Hello world&#39;</code></li></ul><p data-v-8b78004f>Hampir semua fitur didalam ruby adalah object ~Atau memang object semua~ object variabel bisa diubah kapan saja.</p><p data-v-8b78004f>sebagai contoh:</p><pre data-v-8b78004f><code data-v-8b78004f>umur_ku = <span class="hljs-number" data-v-8b78004f>89</span> 
<span class="hljs-meta" data-v-8b78004f># dua tahun kemudian</span>
umur_ku = <span class="hljs-number" data-v-8b78004f>91</span>
<span class="hljs-meta" data-v-8b78004f># Hasil yang akan dikeluarkan adalah 91</span>
<span class="hljs-meta" data-v-8b78004f># atau bisa menggunakan cara seperti ini</span>
umurt_ku += <span class="hljs-number" data-v-8b78004f>2</span>
<span class="hljs-meta" data-v-8b78004f># ini disebut sebagai Operators, hasil yang akan dikeluarkan adalah 89 + 2 </span>
<span class="hljs-meta" data-v-8b78004f># cara ini juga bisa digunakan pada string object</span>
</code></pre><p data-v-8b78004f>Didalam Variabel kita tidak perlu mengatakan tipe data apa yang sedang dipakai, cukup tulis data tersebut dan biarkan system yang akan mencari tau.</p><p data-v-8b78004f>Contoh tipe data: </p><ul data-v-8b78004f><li data-v-8b78004f><code data-v-8b78004f>&#39;ini adalah string&#39;</code> = tipe data string</li><li data-v-8b78004f><code data-v-8b78004f>383123</code> = ini adalah tipe data integer </li><li data-v-8b78004f><code data-v-8b78004f>23.42</code> = ini adalah tipe data float </li><li data-v-8b78004f><code data-v-8b78004f>true</code> = ini adalah tipe data boolean</li></ul><pre data-v-8b78004f><code data-v-8b78004f><span class="hljs-built_in" data-v-8b78004f>title</span> = &#39;teks&#39;
<span class="hljs-built_in" data-v-8b78004f>title</span>.upcase <span class="hljs-meta" data-v-8b78004f># hasikan TEKS secara sementara </span>
<span class="hljs-built_in" data-v-8b78004f>title</span>.upcase! <span class="hljs-meta" data-v-8b78004f># hasilkan TEKS secara permanent, tersimpan didalam memory</span>
<span class="hljs-built_in" data-v-8b78004f>title</span>.downcase!
</code></pre><h2 id="cara-melakukan-manipulasi-string" data-v-8b78004f>Cara melakukan manipulasi string</h2><p data-v-8b78004f>Metode ini dapat mempermudah pengabungan antara dua atau lebih variabel menjadi satu. ( String interpolation )</p><pre data-v-8b78004f><code data-v-8b78004f><span class="hljs-attr" data-v-8b78004f>nama_makanan</span> = <span class="hljs-string" data-v-8b78004f>&#39;nasi goreng&#39;</span>
<span class="hljs-attr" data-v-8b78004f>jumlah_makanan</span> = <span class="hljs-string" data-v-8b78004f>&#39;3&#39;</span>
<span class="hljs-attr" data-v-8b78004f>hasil</span> = <span class="hljs-string" data-v-8b78004f>&quot;#{nama_makanan} beli #{jumlah_makanan}&quot;</span>
<span class="hljs-comment" data-v-8b78004f># output: &#39;nasi goreng beli 3&#39;</span>
<span class="hljs-comment" data-v-8b78004f># Perlu diingat gunakan &quot; bukan &#39;</span>
</code></pre><h2 id="menulis-variabel-constants" data-v-8b78004f>Menulis variabel Constants</h2><p data-v-8b78004f>Metode ini hanya menyerupai constant tidak sama persis. Didalam constant variabel nilai tidak dapat diubah setelah sudah ditulis. </p><p data-v-8b78004f>didalam RUBY anda bisa menulis sebuah variabel yang akan memberikan notifikasi jika ada perubahan pada variabel yang dituju. Contoh penulisan :</p><pre data-v-8b78004f><code data-v-8b78004f><span class="hljs-attr" data-v-8b78004f>TEST_CONST</span> = <span class="hljs-number" data-v-8b78004f>12</span>
<span class="hljs-comment" data-v-8b78004f># jika ada perubahan di variabel diatas maka akan ada notifikasi pada terminal</span>
<span class="hljs-attr" data-v-8b78004f>TEST_CONST</span> = <span class="hljs-number" data-v-8b78004f>14</span> 
<span class="hljs-comment" data-v-8b78004f># Akan ada notifikasi jika kita mengubah nilai didalam variabel tersebut</span>
</code></pre><p data-v-8b78004f>Penulisan variabel harus penuh huruf besar</p><h2 id="control-flow" data-v-8b78004f>Control-Flow</h2><p data-v-8b78004f>Pada penulisan sebuah instruksi terkadang diperlukan untuk menambahkan fungsi atau tindakan untuk mengontrol gimana sebuah instruksi tersebut dilakukan. </p><p data-v-8b78004f>sebagai contoh, mari kita buat sebuah perumpamaan: </p><p data-v-8b78004f>Jika kita ingin pergi ke sekolah, disana terdapat 2 cara untuk menuju ke sekolah </p><ol data-v-8b78004f><li data-v-8b78004f>Kita bisa menggunakan jalur paling dekat ke sekolah akan tetapi jalan raya tersebut banyak lubang</li><li data-v-8b78004f>Kita bisa menggunakan jalur paling jauh ke sekolah akan tetapi jalan raya tersebut lebih lancar</li></ol><p data-v-8b78004f>Tentu ini adalah sebuah opsi, kedua jalan tersebut dapat menghasilkan sebuah hasil yang sama akan tetapi proses dilakukannya itu berbeda.</p><p data-v-8b78004f><strong data-v-8b78004f> Cara melakukan control flow </strong></p><p data-v-8b78004f>cara melakukannnya adalah dengan menggunakan If statement, sebagai contoh:</p><pre data-v-8b78004f><code data-v-8b78004f>umur_udin = <span class="hljs-number" data-v-8b78004f>17</span>

<span class="hljs-keyword" data-v-8b78004f>if</span> umur_udin &lt; <span class="hljs-number" data-v-8b78004f>19</span> 
    <span class="hljs-built_in" data-v-8b78004f>puts</span> <span class="hljs-string" data-v-8b78004f>&quot; udin adalah anak sma&quot;</span>

elseif umur_udin &gt; <span class="hljs-number" data-v-8b78004f>30</span> 
    <span class="hljs-built_in" data-v-8b78004f>puts</span> <span class="hljs-string" data-v-8b78004f>&quot; udin adalah seorang salah satu karyawan dari F.A.N.G&quot;</span>

<span class="hljs-keyword" data-v-8b78004f>else</span> 
    <span class="hljs-built_in" data-v-8b78004f>puts</span> <span class="hljs-string" data-v-8b78004f>&quot; Udin adalah seorang mahasiswa&quot;</span>
end
</code></pre><p data-v-8b78004f>Hasil yang akan dikeluarkan adalah &quot;udin adalah anak sma&quot;, karena disitu umur udin dibawah 19 </p><p data-v-8b78004f>didalam If statement akan dilakukan checking Data tersebut benar atau salah, Seperti contoh diatas, karena umur udin kurang dari 19 maka hasil dari <strong data-v-8b78004f>if</strong> itu benar dan akan dilakukan instruksi selanjutnnya.</p><p data-v-8b78004f>Bisa dikatakan jika sebuah persyaratan sudah terpenuhi maka instruksi selanjutnya akan dilakukan. </p><p data-v-8b78004f>dengan menggunakan If statement kita bisa membuat program memiliki sebuah opsi persyaratan khusus sebelum menjalankan instruksi. </p><p data-v-8b78004f>Beberapa symbol untuk melakukan perbandingan nilai </p><pre data-v-8b78004f><code data-v-8b78004f>&gt; # Lebih besar dari 
&lt; # Kurang dari 
<span class="hljs-section" data-v-8b78004f>== # sama besar dengan </span>
&gt;= # lebih besar atau sama besar dengan 
&lt;= # lebih kecil atau sama besar dengan
</code></pre><p data-v-8b78004f>Didalam If statement anda bisa menambahkan banyak sekali opsi, <strong data-v-8b78004f>elsif</strong> untuk memberikan program opsi instruksi apa yang akan dilakukan selanjutnnya.</p><p data-v-8b78004f>Cara menulisa if statement dalam satu baris</p><pre data-v-8b78004f><code data-v-8b78004f><span class="hljs-type" data-v-8b78004f>IPK</span> = <span class="hljs-number" data-v-8b78004f>4</span>
<span class="hljs-keyword" data-v-8b78004f>if</span> <span class="hljs-type" data-v-8b78004f>IPK</span> == <span class="hljs-number" data-v-8b78004f>4</span> <span class="hljs-keyword" data-v-8b78004f>then</span> puts <span class="hljs-symbol" data-v-8b78004f>&#39;Nilai</span> yang memuaskan&#39; <span class="hljs-keyword" data-v-8b78004f>else</span> puts <span class="hljs-symbol" data-v-8b78004f>&#39;ayo</span> belajar lebih giat&#39; <span class="hljs-keyword" data-v-8b78004f>end</span>
</code></pre><p data-v-8b78004f>Atau menggunakan cara ini</p><pre data-v-8b78004f><code data-v-8b78004f><span class="hljs-attribute" data-v-8b78004f>IPK</span> = <span class="hljs-number" data-v-8b78004f>4</span> 
puts IPK == <span class="hljs-number" data-v-8b78004f>4</span> ? <span class="hljs-string" data-v-8b78004f>&#39;Nilai bagus&#39;</span> : <span class="hljs-string" data-v-8b78004f>&#39;coba lagi&#39;</span>
<span class="hljs-comment" data-v-8b78004f># ini adalah Ternary Expression</span>
</code></pre><p data-v-8b78004f>untuk format penulisannya seperti ini <code data-v-8b78004f>Kondisi_persyaratan ? true : false</code></p><ol data-v-8b78004f><li data-v-8b78004f>kondisi persyaratan adalah nilai yang akan di seleksi ( di contoh pertama tadi adalah <code data-v-8b78004f>IPK == 4</code> )</li><li data-v-8b78004f>symbol <code data-v-8b78004f>?</code> adalah syntax untuk mengenali bahwa ini adalah Ternary Expression</li><li data-v-8b78004f>kolom <code data-v-8b78004f>true</code> akan dijalankan jika persyaratan telah terpenuhi</li><li data-v-8b78004f>kolom <code data-v-8b78004f>:</code> adalh bagian dari syntax jangan dirubah</li><li data-v-8b78004f>kolom <code data-v-8b78004f>false</code> akan dijalankan jika persyaratan tidak terpenuhi</li></ol><p data-v-8b78004f>Contohnya seperti ini </p><pre data-v-8b78004f><code data-v-8b78004f><span class="hljs-attr" data-v-8b78004f>nilai</span> = <span class="hljs-number" data-v-8b78004f>2</span> + <span class="hljs-number" data-v-8b78004f>3</span>
<span class="hljs-attr" data-v-8b78004f>hasil</span> = a == <span class="hljs-number" data-v-8b78004f>5</span> ? <span class="hljs-string" data-v-8b78004f>&#39;jawaban benar&#39;</span> : <span class="hljs-string" data-v-8b78004f>&#39;jawaban salah&#39;</span>
</code></pre><h2 id="unless" data-v-8b78004f>unless</h2><p data-v-8b78004f>adalah cara lain untuk melakukan If statement. Didalam unless yang dipakai adalah nilai yang berisi &#39;false&#39; atau bisa dikatakan nilai yang tidak memenuhi persyaratan. </p><p data-v-8b78004f>jika didalam if statement maka yang akan dipakai adalah nilai True (nilai yang sudah memenuhi persyaratan), sedangakan &#39;unless&#39; adalah nilai false ( nilai yang tidak memenuhi persyaratan )</p><pre data-v-8b78004f><code data-v-8b78004f>a = <span class="hljs-number" data-v-8b78004f>10</span>
<span class="hljs-keyword" data-v-8b78004f>unless</span> a &gt; <span class="hljs-number" data-v-8b78004f>30</span>
  puts <span class="hljs-string" data-v-8b78004f>&quot;<span class="hljs-subst" data-v-8b78004f>#{a}</span> hasil dari false, karena 10 tidak lebih dari 30&quot;</span>
<span class="hljs-keyword" data-v-8b78004f>end</span>
</code></pre><h2 id="case" data-v-8b78004f>Case</h2><pre data-v-8b78004f><code data-v-8b78004f>nilai = <span class="hljs-number" data-v-8b78004f>10</span>
case nilai # ini adalah <span class="hljs-keyword" data-v-8b78004f>parameter</span>
when <span class="hljs-comment" data-v-8b78004f>1..9</span>
  puts <span class="hljs-comment" data-v-8b78004f>&#39;nilai berada di jarak antara 1 - 9&#39;</span>
when <span class="hljs-comment" data-v-8b78004f>10</span> 
    puts <span class="hljs-comment" data-v-8b78004f>&#39;nilai sama dengan 10&#39;</span>
else 
    puts <span class="hljs-comment" data-v-8b78004f>&#39;nilai tidak di ketahui&#39;</span>
end
</code></pre><p data-v-8b78004f><strong data-v-8b78004f> Breakdown code</strong></p><ol data-v-8b78004f><li data-v-8b78004f><code data-v-8b78004f>nilai = 10</code> ini adalah variabel </li><li data-v-8b78004f><code data-v-8b78004f>case nilai</code> &quot;case&quot; adalah syntax untuk menunjukan bahwa ini adalah sitch case, sedangkan nilai adalah variabel </li><li data-v-8b78004f><code data-v-8b78004f>when 1..9</code> disini adalah sebuah persyaratan apakah variabel &#39;nilai&#39; berada diantara 1-9, jika benar maka instruksi selanjutnya akan dijalankan </li><li data-v-8b78004f><code data-v-8b78004f>when 10</code> disini adalah sebuah persyaratan apakah variabel &#39;nilai&#39; sama dengan 10, jika benar maka instruksi akan dilanjutkan.</li><li data-v-8b78004f><code data-v-8b78004f>else</code> jika tidak ada opsi yang cocok maka akan dijalankan perintah dibawah ini </li><li data-v-8b78004f><code data-v-8b78004f>end</code> ini adalah syntax yang wajib ditulis untuk mengakhiri sitch case </li></ol><p data-v-8b78004f>Sebagai perumpamaan Ruby melakukan analisa perbandingan dengan mengunakan cara:</p><ol data-v-8b78004f><li data-v-8b78004f>apakah nilai tersebut berada di dalam list? ( contoh: 1, apakah dia berada di 1-9? ) [1..9]</li><li data-v-8b78004f>apakah nilai tersebut sama persis (contoh: &#39;budi&#39;, apakah nilai sama dengan &#39;budi&#39;?) [&quot;budi&quot;]</li><li data-v-8b78004f>apakah nilai tersebut berbentuk integer atau string (contoh: &#39;budi&#39;, apakah ini string?) [String / Fixnum]</li></ol><p data-v-8b78004f>atau bisa menjalankan ruby case tapa mengisi paramter</p><pre data-v-8b78004f><code data-v-8b78004f>nilai = <span class="hljs-number" data-v-8b78004f>10</span>
<span class="hljs-keyword" data-v-8b78004f>case</span> 
<span class="hljs-keyword" data-v-8b78004f>when</span> nilai &lt; <span class="hljs-number" data-v-8b78004f>10</span> 
    puts <span class="hljs-symbol" data-v-8b78004f>&#39;nilai</span> kurang dari <span class="hljs-number" data-v-8b78004f>10</span>&#39;
<span class="hljs-keyword" data-v-8b78004f>when</span> nilai == <span class="hljs-number" data-v-8b78004f>10</span> 
    puts <span class="hljs-symbol" data-v-8b78004f>&#39;nilai</span> sama dengan <span class="hljs-number" data-v-8b78004f>10</span>&#39;
<span class="hljs-keyword" data-v-8b78004f>end</span>
</code></pre><p data-v-8b78004f>Dengan menggunakan instruksi diatas maka akan dilakukan flow control yang cukup mirip dengan if statement, jika persyarataan terpenuhi maka akan dijalankan. </p><p data-v-8b78004f>pada switch case diatas, tidak perlu mengisi nilai dari <code data-v-8b78004f>case</code>. dengan begitu cara pemakaainnya akan sama dengan if statement</p><p data-v-8b78004f>src : </p><ul data-v-8b78004f><li data-v-8b78004f><a href="https://stackoverflow.com/questions/948135/how-to-write-a-switch-statement-in-ruby?rq=1" data-v-8b78004f>https://stackoverflow.com/questions/948135/how-to-write-a-switch-statement-in-ruby?rq=1</a></li><li data-v-8b78004f><a href="https://www.geeksforgeeks.org/ruby-case-statement/" data-v-8b78004f>https://www.geeksforgeeks.org/ruby-case-statement/</a></li></ul><p data-v-8b78004f>src: <a href="https://www.rubyguides.com/2019/10/ruby-ternary-operator/#:~:text=What%20is%20a%20ternary%20operator,just%20one%20line%20of%20code" data-v-8b78004f>https://www.rubyguides.com/2019/10/ruby-ternary-operator/#:~:text=What%20is%20a%20ternary%20operator,just%20one%20line%20of%20code</a>.</p><h2 id="loops" data-v-8b78004f>Loops</h2><pre data-v-8b78004f><code data-v-8b78004f><span class="hljs-keyword" data-v-8b78004f>for</span> i <span class="hljs-keyword" data-v-8b78004f>in</span> <span class="hljs-number" data-v-8b78004f>2</span>..<span class="hljs-number" data-v-8b78004f>100</span>
    puts <span class="hljs-string" data-v-8b78004f>&quot;ini adalah nomor <span class="hljs-subst" data-v-8b78004f>#{i}</span>&quot;</span>
<span class="hljs-keyword" data-v-8b78004f>end</span>
</code></pre><p data-v-8b78004f><strong data-v-8b78004f> Breakdown code </strong></p><ol data-v-8b78004f><li data-v-8b78004f><code data-v-8b78004f>for i in 2..100</code> untuk setiap angka diantara 2-100 </li><li data-v-8b78004f>print &#39;ini adalah nomor #{variabel i}&#39;</li><li data-v-8b78004f>akhiri loop</li></ol><p data-v-8b78004f>disini perintah akan diulang sebanyak 99 kali</p><h2 id="while" data-v-8b78004f>While</h2><pre data-v-8b78004f><code data-v-8b78004f>var_A = <span class="hljs-number" data-v-8b78004f>0</span>
<span class="hljs-keyword" data-v-8b78004f>while</span> var_A &lt; <span class="hljs-number" data-v-8b78004f>100</span>
    puts <span class="hljs-string" data-v-8b78004f>&quot;ini adalah loop ke <span class="hljs-subst" data-v-8b78004f>#{var_A}</span>&quot;</span>
    var_A += <span class="hljs-number" data-v-8b78004f>1</span> 

<span class="hljs-keyword" data-v-8b78004f>end</span>
</code></pre><p data-v-8b78004f><strong data-v-8b78004f> Breakdown </strong></p><ol data-v-8b78004f><li data-v-8b78004f><code data-v-8b78004f>var_A = 0</code> ini adalah variabel </li><li data-v-8b78004f><code data-v-8b78004f>while var_A &lt; 100</code> selama nilai variabel berada dibawah 100 lakukan </li><li data-v-8b78004f><code data-v-8b78004f>puts &quot;ini adalah loop ke #{var_A}&quot;</code> print string dengan nilai variabel 4. <code data-v-8b78004f>var_A += 1</code> tambah 1 kedalam variabel </li><li data-v-8b78004f><code data-v-8b78004f>end</code> ini adalah syntax, sebagai penutup while loop </li></ol><p data-v-8b78004f>didalam code diatas loop akan terus dilakukan hingga 100 kali. setiap kali loop dilakukan program akan melakukan dua instruksi yang sudah disiapkan </p><h2 id="until" data-v-8b78004f>Until</h2><pre data-v-8b78004f><code data-v-8b78004f>obj = <span class="hljs-number" data-v-8b78004f>100</span>

<span class="hljs-keyword" data-v-8b78004f>until</span> obj &lt; <span class="hljs-number" data-v-8b78004f>1</span> 
    puts <span class="hljs-string" data-v-8b78004f>&quot;ini adalah nomor ke <span class="hljs-subst" data-v-8b78004f>#{obj}</span>&quot;</span>
    obj -= <span class="hljs-number" data-v-8b78004f>1</span> 
<span class="hljs-keyword" data-v-8b78004f>end</span>
</code></pre><p data-v-8b78004f>metode ini kurang lebih sama seperti unless statement, jika persyaratan tidak terpenuhi maka jalankan instruksi tersebut.</p><p data-v-8b78004f><strong data-v-8b78004f>Breakdown code</strong></p><ol data-v-8b78004f><li data-v-8b78004f><code data-v-8b78004f>obj = 100</code> adalah variabel </li><li data-v-8b78004f><code data-v-8b78004f>until obj &lt; 1</code> bisa kita ibaratkan sebagai &quot;unless&quot; jika persyaratan tidak terpenuhi maka jalankan instruksi selanjutnya</li><li data-v-8b78004f><code data-v-8b78004f>puts</code> digunakan untuk menampilkan nilai kedalam terminal / konsole </li><li data-v-8b78004f><code data-v-8b78004f>end</code> adalah syntax untuk mengakhiri loop</li></ol><h2 id="loop" data-v-8b78004f>Loop</h2><pre data-v-8b78004f><code data-v-8b78004f>obj = <span class="hljs-number" data-v-8b78004f>0</span>

<span class="hljs-built_in" data-v-8b78004f>loop</span> <span class="hljs-built_in" data-v-8b78004f>do</span> 
    obj += <span class="hljs-number" data-v-8b78004f>1</span> 
    puts <span class="hljs-string" data-v-8b78004f>&quot;obj nilai ke #{obj}&quot;</span>

    <span class="hljs-built_in" data-v-8b78004f>if</span> obj == <span class="hljs-number" data-v-8b78004f>100</span> 
        <span class="hljs-built_in" data-v-8b78004f>break</span> 
    <span class="hljs-built_in" data-v-8b78004f>end</span> 
<span class="hljs-built_in" data-v-8b78004f>end</span> 

puts <span class="hljs-string" data-v-8b78004f>&quot;loop berakhir&quot;</span>
</code></pre><p data-v-8b78004f><strong data-v-8b78004f>code breakdown</strong></p><ol data-v-8b78004f><li data-v-8b78004f><code data-v-8b78004f>obj</code> adalah variabel </li><li data-v-8b78004f><code data-v-8b78004f>loop do</code> selama loop masih berjalan maka lakukan instruksi selanjutnya 3. <code data-v-8b78004f>obj += 1</code> tambah 1 setiap kali loop </li><li data-v-8b78004f><code data-v-8b78004f>if obj == 100</code> jika nilai obj sama dengan 100 </li><li data-v-8b78004f><code data-v-8b78004f>break</code> syntax ini hanya bisa digunakan didalam loop statement, untuk mengakhiri loop yang berjalan</li></ol><h2 id="next-pada-loop" data-v-8b78004f>next pada loop</h2><pre data-v-8b78004f><code data-v-8b78004f>abc = <span class="hljs-number" data-v-8b78004f>10</span>

<span class="hljs-keyword" data-v-8b78004f>for</span> i <span class="hljs-keyword" data-v-8b78004f>in</span> <span class="hljs-number" data-v-8b78004f>1</span>..<span class="hljs-number" data-v-8b78004f>10</span>
  puts <span class="hljs-string" data-v-8b78004f>&quot;ini adalah nomor ke <span class="hljs-subst" data-v-8b78004f>#{i}</span>&quot;</span>
  <span class="hljs-keyword" data-v-8b78004f>if</span> i == <span class="hljs-number" data-v-8b78004f>5</span>
    puts <span class="hljs-string" data-v-8b78004f>&quot; ========= ini adalah angka 5&quot;</span>
    puts <span class="hljs-string" data-v-8b78004f>&quot; instruksi selanjutnnya akan terlewati&quot;</span>
    <span class="hljs-comment" data-v-8b78004f># next digunakan untuk membuat loop kembali ke instruksi pertama loop</span>
    <span class="hljs-keyword" data-v-8b78004f>next</span>
  <span class="hljs-keyword" data-v-8b78004f>end</span>

  puts <span class="hljs-string" data-v-8b78004f>&quot;ini adalah bagian yang akan terlewati <span class="hljs-subst" data-v-8b78004f>#{i}</span>&quot;</span>
<span class="hljs-keyword" data-v-8b78004f>end</span>
</code></pre><h2 id="arrays" data-v-8b78004f>arrays</h2><pre data-v-8b78004f><code data-v-8b78004f>nama_kelas = [&#39;kelas <span class="hljs-number" data-v-8b78004f>1</span>&#39;, &#39;kelas <span class="hljs-number" data-v-8b78004f>2</span>&#39;, &#39;kelas <span class="hljs-number" data-v-8b78004f>3</span>&#39;]

puts nama_kelas[<span class="hljs-number" data-v-8b78004f>0</span>] # kelas <span class="hljs-number" data-v-8b78004f>1</span>
puts nama_kelas[<span class="hljs-number" data-v-8b78004f>1</span>] # kelas <span class="hljs-number" data-v-8b78004f>2</span>
puts nama_kelas[<span class="hljs-number" data-v-8b78004f>2</span>] # kelas <span class="hljs-number" data-v-8b78004f>3</span> 
puts nama_kelas[<span class="hljs-number" data-v-8b78004f>-1</span>] # kelas <span class="hljs-number" data-v-8b78004f>3</span> 
puts nama_kelas[<span class="hljs-number" data-v-8b78004f>-3</span>] # kelas <span class="hljs-number" data-v-8b78004f>1</span> 
puts nama_kelas.length # <span class="hljs-number" data-v-8b78004f>3</span>
</code></pre><p data-v-8b78004f>opsi untuk membuat array </p><pre data-v-8b78004f><code data-v-8b78004f>makanan = <span class="hljs-type" data-v-8b78004f>Array</span>.new(<span class="hljs-number" data-v-8b78004f>4</span>, <span class="hljs-symbol" data-v-8b78004f>&#39;nasi</span> goreng&#39;) # akan ada <span class="hljs-number" data-v-8b78004f>4</span> nasi goreng di <span class="hljs-built_in" data-v-8b78004f>list</span> [<span class="hljs-string" data-v-8b78004f>&quot;nasi goreng&quot;</span>, <span class="hljs-string" data-v-8b78004f>&quot;nasi goreng&quot;</span>, <span class="hljs-string" data-v-8b78004f>&quot;nasi goreng&quot;</span>, <span class="hljs-string" data-v-8b78004f>&quot;nasi goreng&quot;</span>]

minuman = [<span class="hljs-symbol" data-v-8b78004f>&#39;jeruk</span> panas&#39;, <span class="hljs-symbol" data-v-8b78004f>&#39;Es</span> chocklat&#39;]
minuman.push(<span class="hljs-symbol" data-v-8b78004f>&#39;Es</span> coffe&#39;) # ini akan menambahkan item kedalam <span class="hljs-built_in" data-v-8b78004f>list</span> pada bagian akhir 
minuman &lt;&lt; <span class="hljs-string" data-v-8b78004f>&quot;es gratis&quot;</span> # ini akan menambahkan item kedalam <span class="hljs-built_in" data-v-8b78004f>list</span> pada bagian akhir
</code></pre><h2 id="functions" data-v-8b78004f>Functions</h2><p data-v-8b78004f>function adalah sebuah block code yang bisa dipanggil kapan saja. istilahnnya adalah DRY ( Don&#39;t Repeat yourself )</p><pre data-v-8b78004f><code data-v-8b78004f><span class="hljs-function" data-v-8b78004f><span class="hljs-keyword" data-v-8b78004f>def</span> <span class="hljs-title" data-v-8b78004f>fungsi</span><span class="hljs-params" data-v-8b78004f>(argument)</span></span>
    puts <span class="hljs-string" data-v-8b78004f>&quot;hallo, <span class="hljs-subst" data-v-8b78004f>#{argument}</span>&quot;</span>
<span class="hljs-keyword" data-v-8b78004f>end</span>

fungsi(<span class="hljs-string" data-v-8b78004f>&#39;budi&#39;</span>)
</code></pre><h2 id="latihan-ruby" data-v-8b78004f>Latihan Ruby</h2><hr data-v-8b78004f>`,118)),c("p",null,[S(n,{to:"/ltRuby",class:"LFT-Item"},{default:x(()=>s[0]||(s[0]=[w(" Latihan Ruby ")])),_:1})]),s[3]||(s[3]=Z('<h2 id="task" data-v-8b78004f>Task</h2><h3 id="devops-tool-chain" data-v-8b78004f>Devops tool chain</h3><ul data-v-8b78004f><li data-v-8b78004f><a href="https://en.wikipedia.org/wiki/DevOps_toolchain" data-v-8b78004f>https://en.wikipedia.org/wiki/DevOps_toolchain</a></li><li data-v-8b78004f><a href="https://en.wikipedia.org/wiki/DevOps" data-v-8b78004f>https://en.wikipedia.org/wiki/DevOps</a></li></ul><hr data-v-8b78004f><h3 id="source" data-v-8b78004f>Source</h3><ul data-v-8b78004f><li data-v-8b78004f><a href="https://stackoverflow.com/questions/948135/how-to-write-a-switch-statement-in-ruby?rq=1" data-v-8b78004f>https://stackoverflow.com/questions/948135/how-to-write-a-switch-statement-in-ruby?rq=1</a></li><li data-v-8b78004f><a href="https://www.rubyguides.com/2015/10/ruby-case/" data-v-8b78004f>https://www.rubyguides.com/2015/10/ruby-case/</a></li><li data-v-8b78004f><a href="https://github.com/training-mode/ruby" data-v-8b78004f>https://github.com/training-mode/ruby</a></li><li data-v-8b78004f><a href="https://github.com/rails/rails" data-v-8b78004f>https://github.com/rails/rails</a></li><li data-v-8b78004f><a href="https://stackoverflow.com/questions/17350837/ruby-on-rails-add-gem-sqlite3-to-your-gemfile" data-v-8b78004f>https://stackoverflow.com/questions/17350837/ruby-on-rails-add-gem-sqlite3-to-your-gemfile</a></li><li data-v-8b78004f><a href="https://www.codecademy.com/resources/blog/should-i-learn-ruby/#:~:text=Ruby%20is%20a%20popular%20language,framework%20called%20Ruby%20on%20Rails.&amp;text=Ruby%20on%20Rails%20makes%20web,of%20time%20setting%20things%20up" data-v-8b78004f>https://www.codecademy.com/resources/blog/should-i-learn-ruby/#:~:text=Ruby%20is%20a%20popular%20language,framework%20called%20Ruby%20on%20Rails.&amp;text=Ruby%20on%20Rails%20makes%20web,of%20time%20setting%20things%20up</a>. </li><li data-v-8b78004f><a href="https://en.wikipedia.org/wiki/DevOps" data-v-8b78004f>https://en.wikipedia.org/wiki/DevOps</a></li></ul>',6)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[1]||(s[1]=[w("Go to Home")])),_:1})])],64)}}},wf=ca(yf,[["__scopeId","data-v-8b78004f"]]),_f={__name:"sql",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[3]||(s[3]=Z(`<h1 id="pengenalan-database" data-v-ac5396c8>Pengenalan Database</h1><p data-v-ac5396c8>dengan adannya miliaran pengguna internet saat ini, sebuah sistem atau perangkat penggelo yang bisa mengatur , mendata, mengelompokan data pengguna itu sangat dibutuhkan.</p><p data-v-ac5396c8>Peningkatan pembuatan dan penggunan data meningkat sangat tajam. Untuk membuat suatu decision/pilihan, banyak organisasi membutuhkan orang yang bisa mengelola data ( business analsysts, data enginer, dan lain-lain )</p><p data-v-ac5396c8>SQL adalah bahasa program dan suatu aplikasi penggelola data yang telah diandalkan oleh para developer dalam waktu yang lama, meskipun SQL adalah teknologi lama akan tetapi para developer secara terus menerus mengembangkannya.</p><h2 id="table-of-content" data-v-ac5396c8>Table of content</h2><ol data-v-ac5396c8><li data-v-ac5396c8><a href="#penejelasan-database" data-v-ac5396c8>Penjelasan database</a></li><li data-v-ac5396c8><a href="#dataset" data-v-ac5396c8>Dataset</a></li><li data-v-ac5396c8><a href="#databaes-management-system-dbms" data-v-ac5396c8>Database Management System</a></li><li data-v-ac5396c8><a href="crud" data-v-ac5396c8>CRUD</a></li><li data-v-ac5396c8><a href="#two-type-of-database" data-v-ac5396c8>Two type of database</a></li><li data-v-ac5396c8><a href="#relational-database" data-v-ac5396c8>Relational Database</a></li><li data-v-ac5396c8><a href="#non-relational-databases-nosql" data-v-ac5396c8>Non-Relational Databases</a></li><li data-v-ac5396c8><a href="#apa-itu-sql?" data-v-ac5396c8>Apa itu SQL?</a></li><li data-v-ac5396c8><a href="#sql-process-flow" data-v-ac5396c8>SQL process flow</a></li><li data-v-ac5396c8><a href="#contoh-perintah-pada-sql" data-v-ac5396c8>contoh perintah pada sql</a></li><li data-v-ac5396c8><a href="#database-queries" data-v-ac5396c8>Database queris</a></li><li data-v-ac5396c8><a href="#type-primary-key" data-v-ac5396c8>Type primary key</a></li><li data-v-ac5396c8><a href="#natural-key-number" data-v-ac5396c8>Natural Key number</a></li><li data-v-ac5396c8><a href="#surrogate-key" data-v-ac5396c8>Surrogate key</a></li><li data-v-ac5396c8><a href="#candidate-key" data-v-ac5396c8>candidate key</a></li><li data-v-ac5396c8><a href="#alternate-key" data-v-ac5396c8>alternate key</a></li><li data-v-ac5396c8><a href="#foregein-key" data-v-ac5396c8>Foregein key</a></li><li data-v-ac5396c8><a href="#composite-key" data-v-ac5396c8>composite key</a><ol data-v-ac5396c8><li data-v-ac5396c8><a href="#wrap-up" data-v-ac5396c8>Wrap up</a></li></ol></li><li data-v-ac5396c8><a href="#ddl-data-definition-language" data-v-ac5396c8>Data definition language</a></li><li data-v-ac5396c8><a href="#dml-data-manipulation-language" data-v-ac5396c8>DML data manipulation language</a></li><li data-v-ac5396c8><a href="#dcl-data-control-language" data-v-ac5396c8>DCL data control language</a></li><li data-v-ac5396c8><a href="#field-or-column-kolom" data-v-ac5396c8>Field or column</a></li><li data-v-ac5396c8><a href="#record-or-row-baris" data-v-ac5396c8>Record or Row</a></li><li data-v-ac5396c8><a href="#sql-constraint" data-v-ac5396c8>SQL constraint</a></li><li data-v-ac5396c8><a href="#generate-backup-database" data-v-ac5396c8>Backup database</a></li><li data-v-ac5396c8><a href="#restore-database" data-v-ac5396c8>Restore database</a></li><li data-v-ac5396c8><a href="#operator-perbandingan" data-v-ac5396c8>Operator perbandingan</a></li><li data-v-ac5396c8><a href="#like" data-v-ac5396c8>LIKE mengambil data yang mirip</a></li><li data-v-ac5396c8><a href="#kolom-null" data-v-ac5396c8>Baris NULL</a></li><li data-v-ac5396c8><a href="#order-by" data-v-ac5396c8>ORDER BY</a></li><li data-v-ac5396c8><a href="#limit" data-v-ac5396c8>LIMIT</a></li><li data-v-ac5396c8><a href="#wrap-up-rangkuman" data-v-ac5396c8>Wrap up rangkuman 2</a></li><li data-v-ac5396c8><a href="#Latihan-SQL" data-v-ac5396c8>Latihan</a><h2 id="penjelasan-database" data-v-ac5396c8>Penjelasan Database</h2></li></ol><p data-v-ac5396c8>secara umum database, adalah koleksi dari informasi yang terkait. sebagai contoh( buku nomor telphon, list belanja/shopping list, Todo list, Absensi kelas), Database bisa disimpan dimana saja sebagai contoh: </p><ul data-v-ac5396c8><li data-v-ac5396c8>Di atas kertas</li><li data-v-ac5396c8>didalam kepala</li><li data-v-ac5396c8>didalam komputer</li><li data-v-ac5396c8>PowerPoint ini </li><li data-v-ac5396c8>bagian komen</li></ul><p data-v-ac5396c8>Ada banyak sekali cara untuk mengatur database dan banyak sekali tipe database yang didesain untuk tujuan tertentu. Contohnnya:</p><p data-v-ac5396c8>Jika anda menggunakan Excel, anda harus sudah terbiasa dengan table, mirip seperti spreadsheet. table memiliki row dan columns. Database tables, harus diatur dengan column, dan setiap column harus memiliki nama unik(Primary key).</p><p data-v-ac5396c8>Kesimpulan: database adalah sebuah koleksi dari informasi terkait dan bisa disimpan dimana saja. </p><p data-v-ac5396c8><strong data-v-ac5396c8>Beberapa istilah pada table:</strong></p><ul data-v-ac5396c8><li data-v-ac5396c8>Field - adalah nama kolom pada table, yang berbentuk horizontal </li><li data-v-ac5396c8>Record - adalah kelompok data pada satu baris, yang memiliki hubungan.</li></ul><p data-v-ac5396c8>Contoh table, Field, dan records : nama murid | jurusan --- | --- | Budi | IPA ucup | IPA ranti | IPS rangga | Bahasa </p><p data-v-ac5396c8><strong data-v-ac5396c8>Field</strong> adalah &quot;nama murid&quot;, dan &quot;jurusan&quot;</p><p data-v-ac5396c8><strong data-v-ac5396c8>Record</strong> adalah &quot;Budi&quot;, dan &quot;IPA&quot;. Satu kelompook data yang berhubungan.</p><h2 id="instalasi-mysql-in-windows-subsystem-for-linux-wsl-" data-v-ac5396c8>Instalasi Mysql in windows subsystem for linux (WSL)</h2><p data-v-ac5396c8>Source: <a href="https://docs.microsoft.com/en-us/windows/wsl/tutorials/wsl-database" data-v-ac5396c8>https://docs.microsoft.com/en-us/windows/wsl/tutorials/wsl-database</a></p><ol data-v-ac5396c8><li data-v-ac5396c8>Buka terminal WSL ( pada instruksi ini memakai ubuntu )</li><li data-v-ac5396c8>Usahakan membiasakan <code data-v-ac5396c8>sudo apt update</code></li><li data-v-ac5396c8>Setelah berhasil updatem install MySQL dengan <code data-v-ac5396c8>sudo apt install mysql-server</code></li><li data-v-ac5396c8>Untuk memastikan versi dari sql, <code data-v-ac5396c8>mysql --version</code></li></ol><p data-v-ac5396c8>Jika ingin membuat sql server untuk produksi lakukan secure installation. <code data-v-ac5396c8>sudo mysql_secure_installation</code></p><p data-v-ac5396c8>Biasannya disaat kita menghidupkan komputer mysql akan berada di status belum berjalan, untuk membuat my sql server bisa berjalan gunakan <code data-v-ac5396c8>sudo /etc/init.d/mysql start</code>.</p><p data-v-ac5396c8>Cara untuk membuka mysql melalui terminal <code data-v-ac5396c8>sudo mysql</code>.</p><p data-v-ac5396c8><strong data-v-ac5396c8>Penting jika anda bertemu hal yang sperti ini saat secure installation</strong><code data-v-ac5396c8>... Failed! Error: SET PASSWORD has no significance for user &#39;root&#39;@&#39;localhost&#39; as the authentication method used doesn&#39;t store authentication data in the MySQL server. Please consider using ALTER USER instead if you want to change authentication parameters.</code></p><p data-v-ac5396c8>Ini adalah instruksi penanganan dari <a href="https://askubuntu.com/questions/1406395/mysql-root-password-setup-error" data-v-ac5396c8>https://askubuntu.com/questions/1406395/mysql-root-password-setup-error</a> :</p><ol data-v-ac5396c8><li data-v-ac5396c8>Keluar dari pesan error tersebut. </li><li data-v-ac5396c8><code data-v-ac5396c8>sudo mysql</code> masuk ke mysql </li><li data-v-ac5396c8><code data-v-ac5396c8>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password by &#39;my-secret-password&#39;;</code> lakukan alter user, untuk merubah password</li><li data-v-ac5396c8><code data-v-ac5396c8>exit;</code> keluar mysql </li><li data-v-ac5396c8><code data-v-ac5396c8>sudo mysql_secure_installation</code> masuk kembali ke secure installation</li><li data-v-ac5396c8><code data-v-ac5396c8>mysql -u &lt;your username&gt; -p</code></li></ol><h2 id="cara-untuk-mengetahui-user-dan-host-yang-sudah-terdaftar-pada-mysql" data-v-ac5396c8>Cara Untuk mengetahui USER dan host yang sudah terdaftar pada mysql</h2><p data-v-ac5396c8>Sumber: <a href="http://mysql.phi-integration.com/administrasi-mysql/melihat-daftar-user" data-v-ac5396c8>http://mysql.phi-integration.com/administrasi-mysql/melihat-daftar-user</a></p><ol data-v-ac5396c8><li data-v-ac5396c8>Masuk kedalam mysql terlebih dahulu </li><li data-v-ac5396c8>ketik <code data-v-ac5396c8>SELECT User, Host from mysql.user;</code></li></ol><h2 id="cara-untuk-input-data-kedalam-database" data-v-ac5396c8>Cara untuk input data kedalam DATABASE</h2><p data-v-ac5396c8>Langkah pertaman untuk melakukan inputing data disini adalah dengan masukan kedalam applikasi mysql terlebih dahulu. Setelah masuk kedalam mysql dengan terminal akan muncul pesan seperti ini</p><pre data-v-ac5396c8><code data-v-ac5396c8>Welcome to the MySQ<span class="hljs-class" data-v-ac5396c8>L monitor.  Commands end with ;</span><span class="hljs-built_in" data-v-ac5396c8> or </span>\\g.
Your MySQL connection id is 13
Server version: 8.0.30-0ubuntu0.20.04.2 (Ubuntu)

Copyright (c) 2000, 2022, Oracle<span class="hljs-built_in" data-v-ac5396c8> and/or </span>its affiliates.

Oracle is a registered trademark of Oracle Corporation<span class="hljs-built_in" data-v-ac5396c8> and/or </span>its
affiliates. Other names may be trademarks of their respective
owners.

Type &#39;help;&#39;<span class="hljs-built_in" data-v-ac5396c8> or </span>&#39;\\h&#39; for help. Type &#39;\\c&#39; to clear the current input statement.

mysql&gt; ^C
</code></pre><p data-v-ac5396c8>Dalam penggunaan command pada sql, biasannya tidak &#39;case-senssitive&#39;, jadi teman-teman bisa menggunakan huruf besar maupun kecil. Tetapi Sangat dianjurkan menggunakan huruf besar untuk menandai bahwa itu adalah command pada sql. Pada Variabel seperti nama database, tabel dan lain-lain SQL akan melakukan case-senssitive. Jangan lupa untuk mengakhiri setiap perintah sql dengan titik koma <code data-v-ac5396c8>;</code></p><p data-v-ac5396c8><strong data-v-ac5396c8>Contoh Beberapa tahapan yang dilakukan</strong></p><ul data-v-ac5396c8><li data-v-ac5396c8>untuk mengetahui list database yang ada didalam mysql, ketik <code data-v-ac5396c8>SHOW DATABASES;</code></li><li data-v-ac5396c8>Untuk membuat database baru, ketik <code data-v-ac5396c8>CREATE DATABASE school;</code></li><li data-v-ac5396c8>untuk memilih database, ketik <code data-v-ac5396c8>USE school;</code></li><li data-v-ac5396c8>Untuk membuat table baru didalam database, ketik <pre data-v-ac5396c8><code data-v-ac5396c8>  <span class="hljs-keyword" data-v-ac5396c8>CREATE</span> <span class="hljs-keyword" data-v-ac5396c8>TABLE</span> student (
  <span class="hljs-keyword" data-v-ac5396c8>id</span> <span class="hljs-built_in" data-v-ac5396c8>INT</span> <span class="hljs-keyword" data-v-ac5396c8>unsigned</span> <span class="hljs-keyword" data-v-ac5396c8>NOT</span> <span class="hljs-literal" data-v-ac5396c8>NULL</span> AUTO_INCREMENT,
  <span class="hljs-keyword" data-v-ac5396c8>name</span> <span class="hljs-built_in" data-v-ac5396c8>VARCHAR</span>(<span class="hljs-number" data-v-ac5396c8>200</span>)  <span class="hljs-keyword" data-v-ac5396c8>NOT</span> <span class="hljs-literal" data-v-ac5396c8>NULL</span>, 
  major <span class="hljs-built_in" data-v-ac5396c8>VARCHAR</span>(<span class="hljs-number" data-v-ac5396c8>150</span>) <span class="hljs-keyword" data-v-ac5396c8>NOT</span> <span class="hljs-literal" data-v-ac5396c8>NULL</span>,
  PRIMARY <span class="hljs-keyword" data-v-ac5396c8>KEY</span> (<span class="hljs-keyword" data-v-ac5396c8>id</span>)
  );
</code></pre> Untuk lebih lengkapnya menggenai &quot;Data Types&quot;, dan &quot;primaryKey&quot; bisa dilihat pada bagian bawah. </li><li data-v-ac5396c8>Untuk melihat list table yang ada, ketik <code data-v-ac5396c8>SHOW TABLES;</code></li><li data-v-ac5396c8>Untuk melihat informasi column didalam table, ketik <code data-v-ac5396c8>DESCRIBE student;</code></li><li data-v-ac5396c8>Untuk menambahkan records atau data kedalam table, ketik <pre data-v-ac5396c8><code data-v-ac5396c8>  <span class="hljs-selector-tag" data-v-ac5396c8>INSERT</span> <span class="hljs-selector-tag" data-v-ac5396c8>INTO</span> <span class="hljs-selector-tag" data-v-ac5396c8>student</span> ( name, major ) <span class="hljs-selector-tag" data-v-ac5396c8>VALUES</span> 
  ( <span class="hljs-string" data-v-ac5396c8>&#39;budi&#39;</span>, <span class="hljs-string" data-v-ac5396c8>&#39;IPA&#39;</span> ),
  ( <span class="hljs-string" data-v-ac5396c8>&#39;ucup&#39;</span>, <span class="hljs-string" data-v-ac5396c8>&#39;IPS&#39;</span> ),
  ( <span class="hljs-string" data-v-ac5396c8>&#39;ranti&#39;</span>, <span class="hljs-string" data-v-ac5396c8>&#39;IPS&#39;</span> ),
  ( <span class="hljs-string" data-v-ac5396c8>&#39;rangga&#39;</span>, <span class="hljs-string" data-v-ac5396c8>&#39;Bahasa&#39;</span> );
</code></pre></li><li data-v-ac5396c8>Mengambil records dari dalam table, ketik <code data-v-ac5396c8>SELECT * FROM student;</code></li></ul><p data-v-ac5396c8>SRC: <a href="https://dev.mysql.com/doc/mysql-getting-started/en/" data-v-ac5396c8>https://dev.mysql.com/doc/mysql-getting-started/en/</a></p><h2 id="dataset" data-v-ac5396c8>Dataset</h2><p data-v-ac5396c8>Cara mudah untuk menganalisa data? adalah dengan menjalankan side by side pada dataset!</p><p data-v-ac5396c8>Dataset adalah sekumpulan data yang tersruktur, yang data mempermudahkan manusia untuk membaca dan menanalisa data dengan jumlah yang banyak. Dataset biasannyaberbentuk dalam tabel, yang terdiri dari baris dan kolom. </p><p data-v-ac5396c8>Dengan cara penggunaan baris dan kolomyang tepat, dataset akan mempermudah kita dalam melihat hubungan dari setiap data.</p><p data-v-ac5396c8>Misalkan dataset harga barang dibawah ini </p><table data-v-ac5396c8><thead data-v-ac5396c8><tr data-v-ac5396c8><th data-v-ac5396c8>Nama Barang</th><th data-v-ac5396c8>Harga Barang</th><th data-v-ac5396c8>Barang Yang Terjual</th></tr></thead><tbody data-v-ac5396c8><tr data-v-ac5396c8><td data-v-ac5396c8>Kaos kaki</td><td data-v-ac5396c8>5000</td><td data-v-ac5396c8>20</td></tr><tr data-v-ac5396c8><td data-v-ac5396c8>Spatu</td><td data-v-ac5396c8>35000</td><td data-v-ac5396c8>25 </td></tr><tr data-v-ac5396c8><td data-v-ac5396c8>sandal</td><td data-v-ac5396c8>10000</td><td data-v-ac5396c8>10 </td></tr><tr data-v-ac5396c8><td data-v-ac5396c8>Tali spatu</td><td data-v-ac5396c8>10000</td><td data-v-ac5396c8>5</td></tr></tbody></table><p data-v-ac5396c8>Sekarang akan saya coba jelaskan perbedaan data, dataset, dan database </p><p data-v-ac5396c8>Mari kitabuat perumpamaan, data adalah lembar kertas pada buku. Dataset adalah kumpulan lembaran kertas yaitu buku. Sedangkan Database adalah Lemari/rak buku.</p><ul data-v-ac5396c8><li data-v-ac5396c8>Data adalah serpihan informasi</li><li data-v-ac5396c8>Dataset adalah Tempat dimana data dikumpulkan </li><li data-v-ac5396c8>Database adalah Wadah yang akan menyimpan kumpulan dataset</li></ul><h2 id="sql-where" data-v-ac5396c8>SQL where</h2><pre data-v-ac5396c8><code data-v-ac5396c8><span class="hljs-keyword" data-v-ac5396c8>SELECT</span> column1, column2 
<span class="hljs-keyword" data-v-ac5396c8>FROM</span> nama_table 
<span class="hljs-keyword" data-v-ac5396c8>WHERE</span> column1 = <span class="hljs-string" data-v-ac5396c8>&#39;requirement&#39;</span>;
</code></pre><p data-v-ac5396c8>clausa &quot;where&quot; digunakan untuk melakukan filtering, hanya yang sesuai persyratan yang akan diambil. </p><h2 id="sql-update-statement" data-v-ac5396c8>SQL UPDATE statement</h2><pre data-v-ac5396c8><code data-v-ac5396c8>UPDATE nama_table
<span class="hljs-keyword" data-v-ac5396c8>SET</span> column1 <span class="hljs-comment" data-v-ac5396c8>= value1, column2 = value2</span>
WHERE <span class="hljs-comment" data-v-ac5396c8>condition</span>;
</code></pre><p data-v-ac5396c8>Statement &quot;update&quot; adauntuk melakukan perubahan pada records yang telah ada</p><h2 id="sql-delete-statement" data-v-ac5396c8>SQL DELETE statement</h2><pre data-v-ac5396c8><code data-v-ac5396c8><span class="hljs-keyword" data-v-ac5396c8>DELETE</span> <span class="hljs-keyword" data-v-ac5396c8>FROM</span> nama_table <span class="hljs-keyword" data-v-ac5396c8>WHERE</span> conditon;
</code></pre><p data-v-ac5396c8>statement &quot;delete&quot; ada untuk menghapus record yang telah ada </p><h2 id="alter-table" data-v-ac5396c8>ALTER table</h2><pre data-v-ac5396c8><code data-v-ac5396c8><span class="hljs-keyword" data-v-ac5396c8>ALTER</span> <span class="hljs-keyword" data-v-ac5396c8>TABLE</span> nama_table 
    <span class="hljs-keyword" data-v-ac5396c8>ADD</span> <span class="hljs-keyword" data-v-ac5396c8>COLUMN</span> nama_column <span class="hljs-built_in" data-v-ac5396c8>TEXT</span>,
    <span class="hljs-keyword" data-v-ac5396c8>DROP</span> <span class="hljs-keyword" data-v-ac5396c8>COLUMN</span> nama,
    <span class="hljs-keyword" data-v-ac5396c8>RENAME</span> <span class="hljs-keyword" data-v-ac5396c8>COLUMN</span> nama <span class="hljs-keyword" data-v-ac5396c8>to</span> nama_baru, 
    <span class="hljs-keyword" data-v-ac5396c8>MODIFY</span> nama <span class="hljs-built_in" data-v-ac5396c8>VARCHAR</span>(<span class="hljs-number" data-v-ac5396c8>100</span>) <span class="hljs-keyword" data-v-ac5396c8>AFTER</span> nama_column,
    <span class="hljs-keyword" data-v-ac5396c8>MODIFY</span> nama <span class="hljs-built_in" data-v-ac5396c8>VARCHAR</span>(<span class="hljs-number" data-v-ac5396c8>100</span>) <span class="hljs-keyword" data-v-ac5396c8>FIRST</span>;
</code></pre><p data-v-ac5396c8>Beberapa contoh statement untuk altering table</p><h2 id="menambahkan-menghapus-unique-constraint" data-v-ac5396c8>Menambahkan / menghapus unique constraint</h2><pre data-v-ac5396c8><code data-v-ac5396c8><span class="hljs-keyword" data-v-ac5396c8>ALTER</span> <span class="hljs-keyword" data-v-ac5396c8>TABLE</span> nama_table 
    <span class="hljs-keyword" data-v-ac5396c8>ADD</span> <span class="hljs-keyword" data-v-ac5396c8>CONSTRAINT</span> column_unique <span class="hljs-keyword" data-v-ac5396c8>UNIQUE</span> (nama_column);
</code></pre><p data-v-ac5396c8>&quot;ADD CONSTRAIN&quot; ini adalah untuk menambahkan kata kunci, agar kita bisa dengan mudah jika ingin menghapusnya nanti. &quot;UNIQUE&quot; Akan memastikan bahwa semua value yang masuk berbeda denganyang lain. </p><pre data-v-ac5396c8><code data-v-ac5396c8><span class="hljs-keyword" data-v-ac5396c8>ALTER</span> <span class="hljs-keyword" data-v-ac5396c8>TABLE</span> nama_table 
    <span class="hljs-keyword" data-v-ac5396c8>DROP</span> <span class="hljs-keyword" data-v-ac5396c8>CONSTRAINT</span> column_unique;
</code></pre><p data-v-ac5396c8>Perintah diatas untuk menghapus constraint unique </p><h2 id="menambhkan-foreign-key" data-v-ac5396c8>Menambhkan FOREIGN KEY</h2><pre data-v-ac5396c8><code data-v-ac5396c8><span class="hljs-keyword" data-v-ac5396c8>ALTER</span> <span class="hljs-keyword" data-v-ac5396c8>TABLE</span> nama_column
    <span class="hljs-keyword" data-v-ac5396c8>ADD</span> <span class="hljs-keyword" data-v-ac5396c8>CONSTRAINT</span> fk_nama_column 
    FOREIGN <span class="hljs-keyword" data-v-ac5396c8>KEY</span> (nama_column) <span class="hljs-keyword" data-v-ac5396c8>REFERENCES</span> nama_column(<span class="hljs-keyword" data-v-ac5396c8>id</span>);
</code></pre><h2 id="databaes-management-system-dbms-" data-v-ac5396c8>Databaes Management System (DBMS)</h2><p data-v-ac5396c8>Special software yang akan membantu pengguna mengelola database. Membantu menambahkan, menghapus, mengubah data yang berada di database</p><h2 id="crud" data-v-ac5396c8>CRUD</h2><p data-v-ac5396c8>Change, Read, Update, dan delete.</p><h2 id="two-type-of-database" data-v-ac5396c8>Two type of database</h2><ul data-v-ac5396c8><li data-v-ac5396c8><p data-v-ac5396c8>Relational Database (SQL) mengatur data menjadi satu atau lebih table. setiap table memiliki columns dan rows. kata kunci khusus mengidentifikasi setiap baris. Relational database adalah database yang berdasarkan data yang terhubung atau sudah ditentukan sebelumnnya. Berbagai item disusun menjadi satu set tabel dengan kolom dan baris. Tabel digunakan untuk menyimpan informasi tentang object yang akan dipresentasikan dalam database.</p></li><li data-v-ac5396c8><p data-v-ac5396c8>Non-Relational ( noSQL/ tidak hanya SQL )</p><ul data-v-ac5396c8><li data-v-ac5396c8>menyimpan kata kunci</li><li data-v-ac5396c8>Document (JSON, XML)</li><li data-v-ac5396c8>Graphs</li><li data-v-ac5396c8>flexibel Tables</li></ul></li></ul><h2 id="relational-database" data-v-ac5396c8>Relational Database</h2><ul data-v-ac5396c8><li data-v-ac5396c8>Student Table</li></ul><table data-v-ac5396c8><thead data-v-ac5396c8><tr data-v-ac5396c8><th data-v-ac5396c8>ID</th><th data-v-ac5396c8>Name</th><th data-v-ac5396c8>Major</th></tr></thead><tbody data-v-ac5396c8><tr data-v-ac5396c8><td data-v-ac5396c8>1</td><td data-v-ac5396c8>Jack</td><td data-v-ac5396c8>Biology</td></tr><tr data-v-ac5396c8><td data-v-ac5396c8>2</td><td data-v-ac5396c8>Kate</td><td data-v-ac5396c8>Sociology</td></tr><tr data-v-ac5396c8><td data-v-ac5396c8>3</td><td data-v-ac5396c8>Claire</td><td data-v-ac5396c8>English</td></tr><tr data-v-ac5396c8><td data-v-ac5396c8>4</td><td data-v-ac5396c8>Jhon</td><td data-v-ac5396c8>Chemistry</td></tr></tbody></table><ul data-v-ac5396c8><li data-v-ac5396c8>User Table </li></ul><table data-v-ac5396c8><thead data-v-ac5396c8><tr data-v-ac5396c8><th data-v-ac5396c8>Username</th><th data-v-ac5396c8>Password</th><th data-v-ac5396c8>Email</th></tr></thead><tbody data-v-ac5396c8><tr data-v-ac5396c8><td data-v-ac5396c8>1.jsmith22</td><td data-v-ac5396c8>wordpass</td><td data-v-ac5396c8>...</td></tr><tr data-v-ac5396c8><td data-v-ac5396c8>2.catlover45</td><td data-v-ac5396c8>apple223</td><td data-v-ac5396c8>...</td></tr><tr data-v-ac5396c8><td data-v-ac5396c8>3.gamerkid</td><td data-v-ac5396c8>...</td><td data-v-ac5396c8>...</td></tr><tr data-v-ac5396c8><td data-v-ac5396c8>4.giraffe</td><td data-v-ac5396c8>...</td><td data-v-ac5396c8>...</td></tr></tbody></table><p data-v-ac5396c8>Relational Database Management System (RDBMS) membantu pengguna membuat dan mengelola relasi database contoh: mysql, oracle, postgresql, mariaDB</p><h2 id="non-relational-databases-nosql-" data-v-ac5396c8>Non-Relational Databases (noSQL)</h2><ul data-v-ac5396c8><li data-v-ac5396c8><p data-v-ac5396c8>Non-relational database management system (NRDBMS) membantu pengguna membuat dan mengatur non-relational database contoh; mongoDB, dynamoDB, apache cassandra</p></li><li data-v-ac5396c8><p data-v-ac5396c8>Implementation specific</p><ul data-v-ac5396c8><li data-v-ac5396c8><p data-v-ac5396c8>setiap non-relational database masuk kategori ini, tidak ada bahasa standart.</p></li><li data-v-ac5396c8><p data-v-ac5396c8>kebanyakan NRDBMS akan mengunakan bahasa program mereka untuk menjalankan CRUD dan administrative operations pada database.</p></li></ul></li></ul><h2 id="apa-itu-sql-" data-v-ac5396c8>Apa itu SQL?</h2><p data-v-ac5396c8>SQL(Structures Query Language) adalah salah satu bahasa untuk Membuat desain aturan di dalam relational database. Ini sudah ada sejakl 1970s dan cara umum untuk mengakses data didalam database. fitur yang sering dipakai dalam SQL adalah baca, manipulasi, mengubah data. Beberapa alsan SQL bisa menjadi popular: </p><ul data-v-ac5396c8><li data-v-ac5396c8>semantik dan mudah dipahami</li><li data-v-ac5396c8>Bisa mengakses data yang besar secara langsung dari tempat penyimpanan</li><li data-v-ac5396c8>Jika dibandigkan dengan spreadsheet tools, analisa data lebih mudah dilakukan dalam SQL karena mudah melakukan audit dan replika data</li><li data-v-ac5396c8>SQL itu bagus dalam database language untuk menyimpan data kedalam database </li><li data-v-ac5396c8>SQL adalah alat yang bagus untuk website seperti PHP, Phython, Java, ASP dan lain-lain untuk membuat dynamis website</li></ul><p data-v-ac5396c8>Peringkat SQL dalam penggunaan di dunia data science tools berada di pringkat kedua dilansir dari <a href="https://research.aimultiple.com/data-science-competition/" data-v-ac5396c8>https://research.aimultiple.com/data-science-competition/</a> (community data science competitions) dalam surveynya berjudul &#39;2020 Data Science and Machine Learning Survey&#39;(<a href="https://www.kaggle.com/paultimothymooney/2020-kaggle-data-science-machine-learning-survey" data-v-ac5396c8>https://www.kaggle.com/paultimothymooney/2020-kaggle-data-science-machine-learning-survey</a>)</p><h2 id="sql-process-flow" data-v-ac5396c8>SQL process flow</h2><p data-v-ac5396c8>disaat kau menjalankan SQL query pergi ke dalam SQL server. SQL server bekerja untuk mengelola database, dan lain-lain. SQL server memangil database table dan return hasilnya. (<a href="https://way2tutorial.com/sql/sql-introduction.php" data-v-ac5396c8>https://way2tutorial.com/sql/sql-introduction.php</a>)</p><h2 id="contoh-perintah-pada-sql" data-v-ac5396c8>contoh perintah pada sql</h2><p data-v-ac5396c8>dalam penulisan SQL, pengguna tidak perlu memperhatikan besar atau kecilnya suatu huruf karena SQL tidak mengunakan &#39;case sensitiv&#39;. Contoh Perintah penting dalam SQL:</p><ul data-v-ac5396c8><li data-v-ac5396c8>&#39;SELECT&#39; - ekstrak data dari database</li><li data-v-ac5396c8>&#39;UPDATE&#39; - Perbarui data dari database</li><li data-v-ac5396c8>&#39;DELETE&#39; - hapus data dari database</li><li data-v-ac5396c8>&#39;INSERT INTO&#39; - masukan data baru ke database</li><li data-v-ac5396c8>&#39;CREATE DATABASE&#39; - Buat database baru</li><li data-v-ac5396c8>&#39;ALTER DATABASE&#39; - ubah databse</li><li data-v-ac5396c8>&#39;CREATE TABLE&#39; - buat table baru</li><li data-v-ac5396c8>&#39;ALTER TABLE&#39; - ubah table</li><li data-v-ac5396c8>&#39;DROP TABLE&#39; - delete table</li><li data-v-ac5396c8>&#39;CREATE INDEX&#39; - buat index (kata kunci)</li><li data-v-ac5396c8>&#39;DROP INDEX&#39; - hapus index</li></ul><h2 id="database-queries" data-v-ac5396c8>Database queries</h2><p data-v-ac5396c8>queris adalah permintaan yang dibuat oleh database management system untuk informasi spesifik.</p><p data-v-ac5396c8>dengan semakin complex database tersebut, akan lebih sulit untuk mendapatkan sebuah informasi.</p><p data-v-ac5396c8>Secara mudahnnya, queries adalah set instruksi pada database</p><h2 id="type-primary-key" data-v-ac5396c8>Type primary key</h2><table data-v-ac5396c8><thead data-v-ac5396c8><tr data-v-ac5396c8><th data-v-ac5396c8>Student id</th><th data-v-ac5396c8>name</th><th data-v-ac5396c8>manjor</th></tr></thead><tbody data-v-ac5396c8><tr data-v-ac5396c8><td data-v-ac5396c8>1</td><td data-v-ac5396c8>Jack</td><td data-v-ac5396c8>Biology</td></tr><tr data-v-ac5396c8><td data-v-ac5396c8>2</td><td data-v-ac5396c8>Kate</td><td data-v-ac5396c8>Sociology</td></tr><tr data-v-ac5396c8><td data-v-ac5396c8>3</td><td data-v-ac5396c8>claire</td><td data-v-ac5396c8>English</td></tr><tr data-v-ac5396c8><td data-v-ac5396c8>4</td><td data-v-ac5396c8>Jack</td><td data-v-ac5396c8>biology</td></tr><tr data-v-ac5396c8><td data-v-ac5396c8>5</td><td data-v-ac5396c8>Mike</td><td data-v-ac5396c8>comp. sci</td></tr></tbody></table><p data-v-ac5396c8>Primary key is important in database table. pastikan primary key adalah informasi yang pasti berbeda untuk setiap row. jika dengan contoh diatas maka primary key adalah &#39;student id&#39;.</p><h2 id="natural-key-number" data-v-ac5396c8>Natural key number</h2><p data-v-ac5396c8>Natural key number adalah kata kunci yang telah ada sebelumnnya di dunia nyata. Sebagai contoh Nomor KTP adalah kata kunci yang telah ada didunia nyata dan bisa digunakan sebagai natural key.</p><h2 id="surrogate-key" data-v-ac5396c8>Surrogate key</h2><p data-v-ac5396c8>adalah kata kunci yang tidak memiliki bentuk didunia nyata.</p><h2 id="candidate-key" data-v-ac5396c8>candidate key</h2><p data-v-ac5396c8>adalah kandidat kata kunci, kita bisa sebut sebagai identitas yang bisa membedakan object satu dengan yang lain. Sebagai contoh: jika kita ingin membedakan orang dengan menggunakan data pribadi, kita bisa menggunakan nomor KTP, atau menggunakan nomor handphone mereka, atau bisa menggunakan alamat email mereka. Setiap data tersebut bisa membedakan satu dengan yang lainnya. ketiga primary key diatas bisa disebut sebagai candidate key yang akan dipakai sebagai primary key, atau alternate key. </p><h2 id="alternate-key" data-v-ac5396c8>Alternate key</h2><p data-v-ac5396c8>bisa dikenal sebagai secondary key, ini adalah identitas pembeda didalam row/baris dalam table</p><h2 id="foregein-key" data-v-ac5396c8>Foregein Key</h2><p data-v-ac5396c8>adalah attribute yang bisa kita simpan pada database table. Yang akan menghubungkan dengan database table lain.</p><p data-v-ac5396c8>Ini digunakan untuk menyimpan primary key kedalam row database table lain.</p><ul data-v-ac5396c8><li data-v-ac5396c8><p data-v-ac5396c8>employee emp-id | name | branch-id | super-id --- | ---- | --- | --- 103 | budi | 1 | 102 101 | alva | 2 | 103 102 | rangga | 3 | 101</p></li><li data-v-ac5396c8><p data-v-ac5396c8>Branch branch-id | branch-name | mgr-id --- | --- | --- 3 | Bambang | 102 2 | nasi-gorengeng | 101 1 | soto | 103</p></li></ul><p data-v-ac5396c8>Foregein key penting untuk menghubungkan atau mendefinisikan hubungan antara tables. dengan contoh diatas; column &#39;branch-id&#39; adalah Foregein key yang akan menghubungkan dengan database table bernama &#39;Branch&#39;.</p><p data-v-ac5396c8>Didalam contoh diatas. ini juga mendefinisikan siapa supervisor untuk setiap orang, 102,103,101. budi employee id &#39;103&#39; supervisor id is 102 &#39;rangga&#39;.</p><h2 id="composite-key" data-v-ac5396c8>composite key</h2><p data-v-ac5396c8>jika ada primary key yang terdiri dari 2 atau lebih column, biasa disebut sebagai composite key. ini digunakan untuk membuat primary key tetap unik, diantara banyak data yang memiliki kesamaan.</p><p data-v-ac5396c8>sebagai contoh; untuk memngidentifikasi setiap murid dibutuhkan nama depan dan nama belakang. akan sulit atau tidak mungkin bisa untuk membedakan murid jika hanya dari nama depan atau nama belakangnya saja.</p><p data-v-ac5396c8>Jika ada murid yang memiliki nama depan yang sama dengan murid lain akan sulit untuk membedakaanya. Dengan digunakannya composite Key kita bisa mengurangi kemungkinan salah mebedakan orang.</p><p data-v-ac5396c8>Teknik tersebut sangat berguna untuk membedakan setiap data dengan data yang lain. didalam suatu sistem database tidak boleh ada kesamaan dari primary key, setiap primary key itu harus unik dan berbeda dengan yang lain.</p><p data-v-ac5396c8>tidak harus primary key saja yang bisa mengunakan composite key. gabungan dari 2 atau lebih column bisa menjadi composite key juga</p><h2 id="wrap-up" data-v-ac5396c8>wrap Up</h2><ul data-v-ac5396c8><li data-v-ac5396c8>database adalah koleksi informasi</li><li data-v-ac5396c8>computer bagus dalam menyimpan database</li><li data-v-ac5396c8>DBMS membuat database lebih mudah diatur dan lebih aman</li><li data-v-ac5396c8>DBMS memperbolehkan CRUD operasi</li><li data-v-ac5396c8>rational database dan non-rational database</li><li data-v-ac5396c8>RDBMS (Relational Databse Management System)</li><li data-v-ac5396c8>Data Integrity ( Menyimpan data sekali dan menjauhi duplikasi)</li><li data-v-ac5396c8>SQL Constraints ( Constraints adalah aturan yang dipasangkan kepada table column untuk menyimpan data dan menghindari pengguna untuk menyimpan data yang tidak valid kedalam column)</li><li data-v-ac5396c8>Better Security (Menetapkan memberikan atau hak kepada pengguna individu. Mengunakan ini pengguna bisa menyimpan data penting kedalam table menggunakan username dan password)</li><li data-v-ac5396c8>Database Normalization (Adalah proses untuk menyimpan database dengan efisien. Tidak perlu menyimpan data yang sama lebih dari satu)</li><li data-v-ac5396c8>Beberapa type relationships( one to one, one to many, many to many)<ul data-v-ac5396c8><li data-v-ac5396c8>One to one relationship: Mengabungkan dua table -</li><li data-v-ac5396c8>One to many relationship: membuat foreign key dari parent table ke child table</li><li data-v-ac5396c8>Many to many relathionship: membuat relation table baru </li></ul></li><li data-v-ac5396c8>Structured query language (SQL)<ul data-v-ac5396c8><li data-v-ac5396c8>bahasa standart untuk berinteraksi dengan RDBMS</li><li data-v-ac5396c8>digunakan untuk menjalankan C.R.U.D operasi.</li><li data-v-ac5396c8>digunakan untuk menjelasakan table dan struktur</li><li data-v-ac5396c8>SQL code biasannya digunakan dengan satu RDBMS tidak bisa untuk yang lain.</li></ul></li><li data-v-ac5396c8><p data-v-ac5396c8>Row adalah baris yang melintang horisontal Kanan ke kiri</p></li><li data-v-ac5396c8><p data-v-ac5396c8>Column adalah baris melintang vertikal, dimulai dari atas ke bawah.</p></li></ul><h2 id="ddl-data-definition-language-" data-v-ac5396c8>DDL (Data Definition Language)</h2><p data-v-ac5396c8>beberapa contoh</p><ul data-v-ac5396c8><li data-v-ac5396c8>CREATE Membuat Table atau object baru</li><li data-v-ac5396c8>ALTER Memodifikasi database object seperti table </li><li data-v-ac5396c8>DROP hapus seluruh table atau objek lain </li><li data-v-ac5396c8>USE Digunakan untuk memilih dan mengunakan object </li></ul><h2 id="dml-data-manipulation-language-" data-v-ac5396c8>DML (Data manipulation Language)</h2><ul data-v-ac5396c8><li data-v-ac5396c8>SELECT Mengambil Satu atau lebih kolom. sebagai contoh mengambil kolom dari table </li><li data-v-ac5396c8>INSERT Membuat / memasukan data Record(baris) baru</li><li data-v-ac5396c8>UPDATE Mengubah object pada database. Sebagai contoh digunakan untuk update table </li><li data-v-ac5396c8>DELETE Menghapus object pada datbase </li></ul><h2 id="dcl-data-control-language-" data-v-ac5396c8>DCL (Data control Language)</h2><ul data-v-ac5396c8><li data-v-ac5396c8>GRANT Memberikan hak istimewa kepada pengguna </li><li data-v-ac5396c8>REVOKE mengambil kembali hak istimewan dari pengguna </li></ul><h2 id="field-or-column-kolom-" data-v-ac5396c8>Field or column (kolom)</h2><p data-v-ac5396c8>Field adalah kolom table yang didesain untuk mengelola informasi spesifik untuk record table (ID, name)</p><h2 id="record-or-row-baris-" data-v-ac5396c8>RECORD or ROW (Baris)</h2><p data-v-ac5396c8>RECORD adalah garis horizontal(lurus) pada table.</p><h2 id="sql-constraint" data-v-ac5396c8>SQL constraint</h2><p data-v-ac5396c8>Digunakan untuk memberikan aturan secara spesifik data dalam table ini untuk memastikan akurasi dan reliability data dalam table.</p><h3 id="contoh-beberapa-constraint-" data-v-ac5396c8>contoh beberapa constraint:</h3><ul data-v-ac5396c8><li data-v-ac5396c8>NOT NULL </li><li data-v-ac5396c8>UNIQUE</li><li data-v-ac5396c8>PRIMARY KEY </li><li data-v-ac5396c8>FOREIGN KEY </li></ul><p data-v-ac5396c8>contoh format: <code data-v-ac5396c8>CREATE TABLE nama_table(field_name {tipe_data} {constraint});</code></p><h2 id="generate-backup-database" data-v-ac5396c8>Generate backup database</h2><p data-v-ac5396c8>tulis code ini pada terminal, untuk menjalankan aplikasi mysqldump <code data-v-ac5396c8>mysqldump -U root -P nama_database &gt; nama_file_backup.sql</code></p><h2 id="restore-database" data-v-ac5396c8>Restore database</h2><ol data-v-ac5396c8><li data-v-ac5396c8>sebelum restore database, siapkan database kosong</li><li data-v-ac5396c8><code data-v-ac5396c8>CREATE DATABASE nama_database</code></li><li data-v-ac5396c8>pada terminal, jalankan perintah beriku ini <code data-v-ac5396c8>mysql -U root -P nama_database &lt; nama_file_backup.sql</code></li></ol><p data-v-ac5396c8>cara diatas digunakan untuk backup database source: <a href="https://phoenixnap.com/kb/how-to-backup-restore-a-mysql-database" data-v-ac5396c8>https://phoenixnap.com/kb/how-to-backup-restore-a-mysql-database</a></p><h2 id="untuk-melihat-isi-table" data-v-ac5396c8>Untuk melihat isi table</h2><p data-v-ac5396c8><code data-v-ac5396c8>SELECT * FROM nama_table;</code></p><p data-v-ac5396c8>untuk melihat seluruh List dalam melihat data dalam table, nilai ROW dan COLUMN </p><table data-v-ac5396c8><thead data-v-ac5396c8><tr data-v-ac5396c8><th data-v-ac5396c8>nama</th><th data-v-ac5396c8>harga </th></tr></thead><tbody data-v-ac5396c8><tr data-v-ac5396c8><td data-v-ac5396c8>soto</td><td data-v-ac5396c8>5000 </td></tr><tr data-v-ac5396c8><td data-v-ac5396c8>rawon</td><td data-v-ac5396c8>5000</td></tr></tbody></table><h2 id="sql-date-types" data-v-ac5396c8>SQL Date Types</h2><p data-v-ac5396c8><code data-v-ac5396c8>DATE</code> - Format YYYY-MM-DD</p><h2 id="data-integrity" data-v-ac5396c8>Data integrity</h2><p data-v-ac5396c8>contoh data integrity pada database </p><ul data-v-ac5396c8><li data-v-ac5396c8>entity integrity </li><li data-v-ac5396c8>Domain integrity </li></ul><h2 id="contoh-pengambilan-data" data-v-ac5396c8>contoh pengambilan data</h2><p data-v-ac5396c8><code data-v-ac5396c8>SELECT nama_kolom FROM nama_table;</code> Di gunakan untuk mengambil data dalam nama kolom yang dituju </p><h2 id="operator-perbandingan" data-v-ac5396c8>Operator perbandingan</h2><p data-v-ac5396c8><code data-v-ac5396c8>SELECT * FROM purchases WHERE price &gt;= 10;</code></p><ul data-v-ac5396c8><li data-v-ac5396c8>a &lt; b - Mencari a lebih kecil dari b </li><li data-v-ac5396c8>a &lt;= b - Mencari lebih kecil atau sama dengan b </li><li data-v-ac5396c8>a &gt; b - Mencari a lebih besar dari b </li><li data-v-ac5396c8>a &gt;= b - Lebih besar atau sama dengan b </li></ul><p data-v-ac5396c8>Contoh <code data-v-ac5396c8>SELECT * FROM nama_database WHERE nama_kolom &lt;= &#39;1000&#39;; /* 1000 adalah data INT */</code> Ini digunakan untuk mengambil data INT dibawah 1000 </p><h2 id="like" data-v-ac5396c8>LIKE</h2><p data-v-ac5396c8>digunakan untuk mengambil data yang mirip </p><p data-v-ac5396c8><code data-v-ac5396c8>SELECT * FROM nama_database WHERE nama_kolom LIKE %kunci%;</code> Data yang akan diambil akan memiliki kemiripan atau kata kunci &#39;kunci&#39;. Sama seperti <code data-v-ac5396c8>*</code> adalah whildcard digunakan untuk bypass melewati kata kunci sebelumnya atau selanjutnnya sesuai dengan penempatan whildcard. </p><p data-v-ac5396c8>Contoh </p><ul data-v-ac5396c8><li data-v-ac5396c8><code data-v-ac5396c8>name%</code> kata kunci yang dilewati atau bypass adalah setelah dari &#39;name&#39;</li><li data-v-ac5396c8><code data-v-ac5396c8>%name</code> kata kunci yang dilewati atau bypass adalah sebelum dari &#39;name&#39;</li><li data-v-ac5396c8><code data-v-ac5396c8>%name%</code> kata kunci yang dilewati atau bypass adalah sebelum dan sesudah dari &#39;name&#39;</li></ul><h2 id="kolom-null" data-v-ac5396c8>Kolom NULL</h2><p data-v-ac5396c8>record atau row yang tidak menyimpan data, bisa disebut &#39;NULL&#39;</p><p data-v-ac5396c8>kolom atau baris tidak menyimpan nilai apapun. maka kolom atau baris adalah NULL. </p><h2 id="menampilkan-baris-yang-berisi-null" data-v-ac5396c8>Menampilkan baris yang berisi NULL</h2><p data-v-ac5396c8><code data-v-ac5396c8>SELECT * FROM nama_database WHERE nama_kolom IS NULL;</code> untuk memilih baris yang berisi &#39;NULL&#39; atau kosong</p><p data-v-ac5396c8><code data-v-ac5396c8>SELECT * FROM nama_database WHERE nama_kolom IS NOT NULL;</code> untuk mengambil baris yang tidak &#39;NULL&#39; atau kosong</p><h2 id="and" data-v-ac5396c8>AND</h2><p data-v-ac5396c8><code data-v-ac5396c8>SELECT * FROM nama_database WHERE nama_kolom = &#39;kata kunci&#39; AND nama_kolom = &#39;kata kunci ke 2&#39;;</code> digunakan untuk menambah opsi, pengunaanya seperti &#39;&amp;&amp;&#39; pada javascript language (if statement). Saat mengunakan &#39;AND&#39; tidak perlu menulis &#39;WHERE&#39; dibelakangnnya </p><h2 id="order-by" data-v-ac5396c8>ORDER BY</h2><p data-v-ac5396c8><code data-v-ac5396c8>SELECT * FROM nama_database WHERE nama_kolom = &#39;kata kunci&#39; ORDER BY nama_kolom DESC;</code> Jika tanpa &#39;WHERE&#39; <code data-v-ac5396c8>SELECT * FROM nama_database ORDER BY nama_kolom DESC;</code> Digunakan Untuk mengurutkan data pada kolom yang dipilih sesasu degan METHOD yang dipilih. </p><ul data-v-ac5396c8><li data-v-ac5396c8>ASC ( menaik, dari bawah ke atas) [1,2,3,4,5,6,7,8]</li><li data-v-ac5396c8>DESC (Menurun, dari atas ke bawah) [8,7,6,5,4,3,2,]</li></ul><h2 id="limit" data-v-ac5396c8>LIMIT</h2><p data-v-ac5396c8>menentukan jumlah baris yang akan dikeluarkan sebgai output. Dengan menggunakan &#39;LIMIT&#39; </p><p data-v-ac5396c8><code data-v-ac5396c8>SELECT * FROM nama_database WHERE nama_kolom =&#39;kata kunci&#39; LIMIT 5;</code></p><h2 id="sql-query" data-v-ac5396c8>SQL query</h2><p data-v-ac5396c8>pada akhir sql statement atau sql query, tulis semicolon (;) pada akhir statement. </p><p data-v-ac5396c8>queris adalah set instruksi yang diberikan pada RDBMS mengenai informasi apa yang mau diambil. </p><h2 id="wrap-up-rangkuman" data-v-ac5396c8>Wrap up Rangkuman</h2><ul data-v-ac5396c8><li data-v-ac5396c8><code data-v-ac5396c8>WHERE</code> digunakan untuk mencari kata kunci yang dituju </li><li data-v-ac5396c8><code data-v-ac5396c8>ORDER BY</code> digunakan untuk membuat atau mengurutkan data </li><li data-v-ac5396c8><code data-v-ac5396c8>SELECT</code> digunakan untuk memilih atau mengambil kolom </li><li data-v-ac5396c8><code data-v-ac5396c8>FROM</code> digunakan untuk mengambil atau memilih table </li><li data-v-ac5396c8><code data-v-ac5396c8>USE</code> digunakan untuk mengambil atau memilih object seperti database</li><li data-v-ac5396c8><code data-v-ac5396c8>CREATE</code> digunakan untuk membuat object, seperti database </li><li data-v-ac5396c8><code data-v-ac5396c8>LIKE</code> digunakan untuk mengambil data yang mirip<ul data-v-ac5396c8><li data-v-ac5396c8>Format <code data-v-ac5396c8>WHERE nama_kolom LIKE &#39;%nama%&#39;</code></li></ul></li><li data-v-ac5396c8><code data-v-ac5396c8>IS NULL</code> digunakan untuk mengambil data kolom yang memiliki nilai Null atau kosong <ul data-v-ac5396c8><li data-v-ac5396c8>Format <code data-v-ac5396c8>WHERE nama_kolom IS NULL</code></li></ul></li><li data-v-ac5396c8><code data-v-ac5396c8>AND</code> digunakan untuk menambahkan opsi pada queri sama seperti di &#39;if statement&#39; pada programming language<ul data-v-ac5396c8><li data-v-ac5396c8>Format <code data-v-ac5396c8>WHERE nama_kolom = &#39;str&#39; AND nama_kolom = &#39;STR&#39;</code></li></ul></li><li data-v-ac5396c8><code data-v-ac5396c8>LIMIT</code> digunakan untuk membatasi data yang keluar (output)<ul data-v-ac5396c8><li data-v-ac5396c8>format <code data-v-ac5396c8>WHERE nama_kolom = &#39;str&#39; LIMIT 5</code></li></ul></li></ul><h2 id="drop-table" data-v-ac5396c8>DROP Table</h2><p data-v-ac5396c8><code data-v-ac5396c8>DROP TABLE table_name;</code></p><p data-v-ac5396c8>digunakan untuk object table yang dituju. Harus hati-hati dengan mengunakan statement tersebut sekalinnya terhapus maka akan hilang selamannya. </p><h2 id="insert-into-table" data-v-ac5396c8>Insert Into Table</h2><p data-v-ac5396c8><code data-v-ac5396c8>ISERT INTO nama_table(nama_kolom, nama_kolom) VALUES (&#39;value&#39;, &#39;value&#39;);</code> Pastikan urutan &#39;value&#39; sudah sesuai dengan urutan kolom yang kita inginkan. </p><p data-v-ac5396c8>Jika tidak ditulis urutannnya, maka akan diambil urutan yang sudah ada sebelumnnya didalam table</p><h2 id="update-query" data-v-ac5396c8>Update query</h2><p data-v-ac5396c8><code data-v-ac5396c8>UPDATE nama_table SET nama_kolom = &#39;value baru&#39; WHERE nama_kolom = &#39;value lama&#39;;</code> atau <code data-v-ac5396c8>UPDATE nama_table SET nama_kolom = &#39;value baru&#39;;</code> Jika menggunakan cara diatas maka semua data dalam &#39;nama_kolom&#39; yang dipilih akan berubah semua. </p><p data-v-ac5396c8>&#39;UPDATE&#39; dan &#39;SET&#39; dengan mengunakan statement ini, bisa digunakan untuk mengubah record atau baris yang lama. </p><h2 id="delete-query" data-v-ac5396c8>DELETE query</h2><p data-v-ac5396c8><code data-v-ac5396c8>DELETE FROM nama_table WHERE nama_kolom = &#39;value&#39;;</code> Statement diatas bisa digunakan untuk menghapus record atau baris yang dipilih. </p><h2 id="group-by" data-v-ac5396c8>GROUP BY</h2><p data-v-ac5396c8><code data-v-ac5396c8>SELECT nama_kolom SUM(nilai_kolom) FROM nama_table GROUP BY nama_kolom_number;</code></p><p data-v-ac5396c8><code data-v-ac5396c8>GROUP BY</code> adalah statement untuk mengatur data yang identik menjadi grup. </p><p data-v-ac5396c8><code data-v-ac5396c8>SUM</code> adalah statement untuk menghitung hasil kolom numeric yang kita pilih. </p><p data-v-ac5396c8>Contoh: nama | pengeluaran --- | --- budi | 5000 budi | 10000</p><p data-v-ac5396c8>akan menjadi nama | SUM(pengeluaran) --- | --- budi | 15000</p><ul data-v-ac5396c8><li data-v-ac5396c8><code data-v-ac5396c8>SUM()</code> adalah statement yang digunakan untuk menghitung data dalam kolom yang dipilih. </li><li data-v-ac5396c8><code data-v-ac5396c8>AVG()</code> adalah statement yang digunakan untuk mencari nilai rata-rata pada kolom</li><li data-v-ac5396c8><code data-v-ac5396c8>COUNT()</code> adalah statement yang digunakan untuk mendapatkan berapa banyak baris, yang sesuai dengan kriteria </li></ul><p data-v-ac5396c8>Contoh <code data-v-ac5396c8>COUNT()</code>: <code data-v-ac5396c8>SELECT nama, COUNT(harga) FROM nama_table WHERE harga &lt;= 10000;</code></p><p data-v-ac5396c8>total baris yang akan saya cari adalah harus dibawah dan sama dengan 10000</p><h2 id="distinct" data-v-ac5396c8>DISTINCT</h2><p data-v-ac5396c8><code data-v-ac5396c8>DISTINC</code> kata kunci ini digunakan untuk mengilimansi records atau baris yang memiliki value duplikat. </p><p data-v-ac5396c8><code data-v-ac5396c8>SELECT DISTINCT nama_kolom FROM nama_table ORDER BY nama_kolom;</code></p><p data-v-ac5396c8>Perintah diatas digunakan untuk mengeliminasi records atau baris yang memiliki value duplikat. dan diurutakan, <code data-v-ac5396c8>ORDER BY</code> Jika tidak kolom method diisi maka akan mengunakan <code data-v-ac5396c8>ASC</code> secara default. </p><h2 id="tipe-data" data-v-ac5396c8>Tipe data</h2><p data-v-ac5396c8>sebagai contoh dalam execl atau aplikasi penyimpananan data spreadsheet lainnya. Kita bisa menentukan pada kolom tertentu harus kita isi dengan data berbentuk angka atau huruf. Akan tetapi penggunaan kolom tersebut bisa saja berubah-ubah. </p><p data-v-ac5396c8>Dalam SQL jika kolom tersebut dibuat untuk tipe data number, maka seterusnnya akan begitu. Kita bisa memilih tipe data apa untuk kolom yang kita buat sesuai dengan kebutuhan. </p><p data-v-ac5396c8>Contoh tipe data pada SQL: </p><ul data-v-ac5396c8><li data-v-ac5396c8><p data-v-ac5396c8>Data Integer </p><ul data-v-ac5396c8><li data-v-ac5396c8><code data-v-ac5396c8>TINYINT</code> tipe data ini akan mengambil nilai dari (-128, 127)</li><li data-v-ac5396c8><code data-v-ac5396c8>SMALLINT</code> tipe data ini akan mengambil nilai dari (-32768, 32767)</li><li data-v-ac5396c8><code data-v-ac5396c8>MEDIUMINT</code> tipe data ini akan mengambil nilai dari (-8388608, 8388607)</li><li data-v-ac5396c8><code data-v-ac5396c8>INT</code> tipe data ini akan mengambil nilai dari (-2147483648, 2147483647)</li><li data-v-ac5396c8><code data-v-ac5396c8>BIGINT</code> tipe data ini akan mengambil nilai dari (-9223372036854775808, 9223372036854775807)</li></ul></li><li data-v-ac5396c8><p data-v-ac5396c8>data float </p><ul data-v-ac5396c8><li data-v-ac5396c8><code data-v-ac5396c8>FLOAT</code> adalah tipe data angka yang memiliki bagian desimal di akhir angka ,atau memiliki bagian desimal di akhir angka, atau memiliki tanda &#39;titik&#39; yang menandakan bilangan desimal. Contoh: 0,9 atau 3,14 </li></ul><p data-v-ac5396c8>tipe data float cocok digunakan untuk variabel yang berisi angka pecahan, seperti hasil pembagian dan lain-lain. </p></li></ul><h2 id="decimal" data-v-ac5396c8>DECIMAL</h2><p data-v-ac5396c8>tipe data number khusus yang ditentukan jumlah precission dan scalennya.</p><p data-v-ac5396c8>Sebagai contoh: </p><ul data-v-ac5396c8><li data-v-ac5396c8><code data-v-ac5396c8>DECIMAL(5,2)</code> bisa menghasilkan output seperti ini &#39;999.99&#39;</li><li data-v-ac5396c8><code data-v-ac5396c8>DECIMAL(3,1)</code> output &#39;99.9&#39;</li><li data-v-ac5396c8><code data-v-ac5396c8>DECIMAL(3)</code> output &#39;999&#39;</li></ul><h2 id="char-and-varchar" data-v-ac5396c8>CHAR and VARCHAR</h2><p data-v-ac5396c8>Adalah tipe data untuk menyimpan bentuk &#39;string&#39;, Seperti kata, angka, dan bentuk special. </p><ul data-v-ac5396c8><li data-v-ac5396c8><p data-v-ac5396c8><code data-v-ac5396c8>CHAR(size)</code> ini adalah fixed panjang string.<br data-v-ac5396c8>Jika disimpan disini 10 maka akan ada 10 baris yang tersimpan. Input: <code data-v-ac5396c8>CHAR(7)</code> Output: &#39;namaku &#39;</p></li><li data-v-ac5396c8><p data-v-ac5396c8><code data-v-ac5396c8>VARCHAR(size)</code> ini adalah variabel yang lebih bisa otomatis menyesuaikan data yang disimpan. Input: <code data-v-ac5396c8>VARCHAR(7)</code> Output: &#39;namaku&#39;</p></li></ul><h2 id="date-and-time-data-type" data-v-ac5396c8>Date and Time Data Type</h2><p data-v-ac5396c8>tipe data ini digunakan untuk menyipan data berformat waktu. Tanggal, bulan, tahun, dan jam. </p><ul data-v-ac5396c8><li data-v-ac5396c8><code data-v-ac5396c8>DATE</code> data yang disimpan berformat &#39;YYYY-MM-DD&#39;</li><li data-v-ac5396c8><code data-v-ac5396c8>DATETIME</code> data yang disimpan berformat &#39;YYYY-MM-DD hh:mm:ss&#39;</li><li data-v-ac5396c8><code data-v-ac5396c8>YEAR</code> data yang disimpan mulai dari 1901 ke 2155 dan 0000 </li></ul><h2 id="enum" data-v-ac5396c8>ENUM</h2><p data-v-ac5396c8>Adalah tipe data string yang bisa kite tentukan pilihannya atau opsi. </p><p data-v-ac5396c8><code data-v-ac5396c8>ENUM(&#39;opsi1&#39;,&#39;opsi2&#39;)</code> Contoh: <code data-v-ac5396c8>ENUM(&#39;pria&#39;,&#39;wanita&#39;)</code> dalam statement diatas, data yang diperbolehkan masuk adalah data &#39;pria&#39; atau &#39;wanita&#39; selain itu akan ditolak oleh sql </p><h2 id="mengubah-table" data-v-ac5396c8>Mengubah table</h2><p data-v-ac5396c8><code data-v-ac5396c8>ALTER TABLE nama_table ADD COLUMN nama_kolom TEXT, DROP COLUMN nama_kolom, RENAME COLUMN kolom_lama TO nama_baru MODIFY nama_kolom VARCHAR(100) AFTER nama_kolom MODIFY nama_kolom TEXT FIRST;</code> Break down kata kunci</p><ul data-v-ac5396c8><li data-v-ac5396c8><code data-v-ac5396c8>ALTER TABLE</code> digunakan untuk memilih table mana yang akan di ubah </li><li data-v-ac5396c8><code data-v-ac5396c8>ADD COLUMN</code> digunakan untuk menambahkan kolom pada table </li><li data-v-ac5396c8><code data-v-ac5396c8>DROP COLUMN</code> digunakan untuk menghapus kolom </li><li data-v-ac5396c8><code data-v-ac5396c8>RENAME COLUMN</code> digunakan untuk mengubah nama kolom </li><li data-v-ac5396c8><code data-v-ac5396c8>MODIFY, AFTER, FIRST</code> digunakan untuk memindahkan urutan kolom </li></ul><h2 id="update-table" data-v-ac5396c8>Update table</h2><p data-v-ac5396c8><code data-v-ac5396c8>UPDATE nama_table SET nama_kolom = &#39;nilai_baru&#39;, nama_kolom = &#39;nilai_baru2&#39; WHERE nama_kolom = &#39;string&#39;;</code> Query diatas digunakan untuk mengubah data dalam kolom secara spesifik. Jika tidak menggunakan &#39;WHERE&#39; maka kesuluruhan data akan diubah. </p><h2 id="rename-table" data-v-ac5396c8>Rename table</h2><p data-v-ac5396c8><code data-v-ac5396c8>ALTER TABLE nama_table RENAME TO nama_table_baru;</code></p><h2 id="join" data-v-ac5396c8>Join</h2><p data-v-ac5396c8><code data-v-ac5396c8>SELECT * FROM nama_table1 JOIN nama_table2 ON nama_table1.kolom_value = nama_table2.kolom_value</code> Dengan query diatas kita bisa menghubungkan dua table, dan menempatkannya bersandingan atau bersebelahan dengan statement &#39;ON&#39; dan &#39;=&#39;. Table akan bersebelahan jika value mereka sama. </p><h2 id="show-create-table-nama_table" data-v-ac5396c8>SHOW CREATE TABLE nama_table</h2><p data-v-ac5396c8><code data-v-ac5396c8>SHOW CREATE TABLE nama_table</code> Perintah ini akan menunjukan secara penuh detail menggenai query sql yang masuk dalam pembuatan table.</p><h2 id="describe-nama_table" data-v-ac5396c8>DESCRIBE nama_table</h2><p data-v-ac5396c8><code data-v-ac5396c8>DESCRIBE nama_table</code> akan menujukan field,type dan lain-lain yaitu informasi dasar pada table tersebut</p><h2 id="note-kecil" data-v-ac5396c8>Note kecil</h2><p data-v-ac5396c8>Contoh data modeling adalah relational databases</p><h2 id="latihan-sql" data-v-ac5396c8>Latihan SQL</h2>`,233)),c("p",null,[s[1]||(s[1]=w("Panduan latihan : ")),S(n,{to:"/ltSql",class:"LFT-Item"},{default:x(()=>s[0]||(s[0]=[w(" Latihan SQL ")])),_:1})]),s[4]||(s[4]=Z('<h2 id="pranala-menarik" data-v-ac5396c8>Pranala menarik</h2><ul data-v-ac5396c8><li data-v-ac5396c8><a href="https://dev.mysql.com/doc/refman/8.0/en/alter-table.html" data-v-ac5396c8>https://dev.mysql.com/doc/refman/8.0/en/alter-table.html</a></li><li data-v-ac5396c8><a href="https://stevenpcurtis.medium.com/what-is-a-floating-point-number-6991f2f85a28" data-v-ac5396c8>https://stevenpcurtis.medium.com/what-is-a-floating-point-number-6991f2f85a28</a></li><li data-v-ac5396c8><a href="https://www.duniailkom.com/mengenal-tipe-data-float-dan-cara-penulisan-float-dalam-php/" data-v-ac5396c8>https://www.duniailkom.com/mengenal-tipe-data-float-dan-cara-penulisan-float-dalam-php/</a></li><li data-v-ac5396c8><a href="https://www.youtube.com/watch?v=xYBclb-sYQ4" data-v-ac5396c8>https://www.youtube.com/watch?v=xYBclb-sYQ4</a></li><li data-v-ac5396c8><a href="https://en.wikipedia.org/wiki/Composite\\_key" data-v-ac5396c8>https://en.wikipedia.org/wiki/Composite\\_key</a></li><li data-v-ac5396c8><a href="https://www.kelasexcel.id/2014/09/pengertian-row-column-cell-dan-range-excel.html" data-v-ac5396c8>https://www.kelasexcel.id/2014/09/pengertian-row-column-cell-dan-range-excel.html</a></li><li data-v-ac5396c8><a href="https://www.youtube.com/watch?v=HXV3zeQKqGY\\&amp;t=1504s" data-v-ac5396c8>https://www.youtube.com/watch?v=HXV3zeQKqGY\\&amp;t=1504s</a></li><li data-v-ac5396c8><a href="https://www.w3schools.com/sql/sql_syntax.asp" data-v-ac5396c8>https://www.w3schools.com/sql/sql_syntax.asp</a></li><li data-v-ac5396c8><a href="https://mode.com/sql-tutorial/introduction-to-sql/" data-v-ac5396c8>https://mode.com/sql-tutorial/introduction-to-sql/</a></li><li data-v-ac5396c8><a href="https://www.analyticsvidhya.com/blog/2020/07/8-sql-techniques-data-analysis-analytics-data-science/" data-v-ac5396c8>https://www.analyticsvidhya.com/blog/2020/07/8-sql-techniques-data-analysis-analytics-data-science/</a></li><li data-v-ac5396c8><a href="https://www.studytonight.com/dbms/introduction-to-sql.php" data-v-ac5396c8>https://www.studytonight.com/dbms/introduction-to-sql.php</a></li><li data-v-ac5396c8><a href="https://www.sqlshack.com/introduction-to-sql/" data-v-ac5396c8>https://www.sqlshack.com/introduction-to-sql/</a></li><li data-v-ac5396c8><a href="https://way2tutorial.com/sql/sql-introduction.php" data-v-ac5396c8>https://way2tutorial.com/sql/sql-introduction.php</a></li><li data-v-ac5396c8><a href="https://aws.amazon.com/id/relational-database/" data-v-ac5396c8>https://aws.amazon.com/id/relational-database/</a></li><li data-v-ac5396c8><a href="http://www.agiledata.org/essays/keys.html" data-v-ac5396c8>http://www.agiledata.org/essays/keys.html</a></li><li data-v-ac5396c8><a href="https://www.w3schools.com/sql/sql_examples.asp" data-v-ac5396c8>https://www.w3schools.com/sql/sql_examples.asp</a></li><li data-v-ac5396c8><a href="https://www.codepolitan.com/membuat-database-dan-tabel-di-mysql-5884222be38fa" data-v-ac5396c8>https://www.codepolitan.com/membuat-database-dan-tabel-di-mysql-5884222be38fa</a></li><li data-v-ac5396c8><a href="https://www.tutorialspoint.com/sql/sql-rdbms-concepts.htm" data-v-ac5396c8>https://www.tutorialspoint.com/sql/sql-rdbms-concepts.htm</a></li><li data-v-ac5396c8><a href="https://www.tutorialspoint.com/sqlite/sqlite_python.htm" data-v-ac5396c8>https://www.tutorialspoint.com/sqlite/sqlite_python.htm</a></li></ul>',2)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[2]||(s[2]=[w("Go to Home")])),_:1})])],64)}}},Sf=ca(_f,[["__scopeId","data-v-ac5396c8"]]),qf={__name:"typescript",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="typescript" data-v-9d56d2f0>Typescript</h1><h2 id="instalasi" data-v-9d56d2f0>Instalasi</h2><pre data-v-9d56d2f0><code class="lang-Sh" data-v-9d56d2f0>npm install -g ts-<span class="hljs-keyword" data-v-9d56d2f0>node</span>

<span class="hljs-title" data-v-9d56d2f0>ts-node</span> <span class="hljs-tag" data-v-9d56d2f0>&lt;file-name&gt;</span>

// Setelah itu, pastikan pada file <span class="hljs-string" data-v-9d56d2f0>&quot;package.json&quot;</span> kita tidak menggunakan <span class="hljs-string" data-v-9d56d2f0>&quot;module&quot;</span> import.
</code></pre><p data-v-9d56d2f0>Ref: </p><ul data-v-9d56d2f0><li data-v-9d56d2f0><a href="https://www.geeksforgeeks.org/how-to-execute-typescript-file-using-command-line/" data-v-9d56d2f0>https://www.geeksforgeeks.org/how-to-execute-typescript-file-using-command-line/</a> | Instalasi </li><li data-v-9d56d2f0><a href="https://www.digitalocean.com/community/tutorials/typescript-running-typescript-ts-node" data-v-9d56d2f0>https://www.digitalocean.com/community/tutorials/typescript-running-typescript-ts-node</a> | Instalasi dan contoh </li><li data-v-9d56d2f0><a href="https://stackoverflow.com/questions/62096269/cant-run-my-node-js-typescript-project-typeerror-err-unknown-file-extension" data-v-9d56d2f0>https://stackoverflow.com/questions/62096269/cant-run-my-node-js-typescript-project-typeerror-err-unknown-file-extension</a> | informasi jika error. </li></ul><h2 id="typescript-memperkuat-javascript-dengan-tipe-data" data-v-9d56d2f0>TypeScript: Memperkuat JavaScript dengan Tipe Data</h2><p data-v-9d56d2f0>Di era modern, pengembangan web telah menjadi semakin kompleks. Aplikasi web modern membutuhkan fungsionalitas yang lebih canggih dan basis kode yang lebih besar. Hal ini dapat menyebabkan berbagai masalah, seperti bug dan inkonsistensi kode.</p><p data-v-9d56d2f0>TypeScript hadir sebagai solusi untuk mengatasi masalah tersebut. TypeScript adalah superset dari JavaScript yang menambahkan sistem tipe data statis. Sistem tipe data ini memungkinkan pengembang untuk mendefinisikan tipe data untuk variabel, fungsi, dan parameter. Hal ini membantu meningkatkan keandalan dan kemudahan pemeliharaan kode JavaScript.</p><p data-v-9d56d2f0><strong data-v-9d56d2f0>Keuntungan Menggunakan TypeScript:</strong></p><ul data-v-9d56d2f0><li data-v-9d56d2f0><strong data-v-9d56d2f0>Meningkatkan Keamanan Kode:</strong> TypeScript membantu mencegah bug dengan mendeteksi kesalahan tipe data pada saat kompilasi. Hal ini membantu pengembang untuk menemukan dan memperbaiki bug lebih awal dalam proses pengembangan, sehingga menghemat waktu dan tenaga.</li><li data-v-9d56d2f0><strong data-v-9d56d2f0>Mempermudah Pemahaman Kode:</strong> Sistem tipe data TypeScript membuat kode JavaScript lebih mudah dipahami dan dibaca. Hal ini membantu pengembang lain untuk memahami maksud dari kode dan meningkatkan kolaborasi dalam proyek pengembangan.</li><li data-v-9d56d2f0><strong data-v-9d56d2f0>Meningkatkan Refactoring Kode:</strong> TypeScript membantu pengembang untuk melakukan refactoring kode dengan lebih aman. Sistem tipe data memastikan bahwa perubahan yang dilakukan pada kode tidak menyebabkan bug yang tidak terduga.</li><li data-v-9d56d2f0><strong data-v-9d56d2f0>Mempercepat Pengembangan:</strong> TypeScript dapat membantu mempercepat pengembangan dengan menyediakan fitur autocompletion dan IntelliSense. Fitur-fitur ini membantu pengembang untuk menulis kode dengan lebih cepat dan efisien.</li></ul><p data-v-9d56d2f0><strong data-v-9d56d2f0>Contoh Penggunaan TypeScript:</strong></p><p data-v-9d56d2f0>Berikut adalah contoh bagaimana TypeScript dapat digunakan untuk mendefinisikan tipe data untuk variabel, fungsi, dan parameter:</p><pre data-v-9d56d2f0><code class="lang-typescript" data-v-9d56d2f0>// Mendefinisikan variabel dengan tipe string
let <span class="hljs-keyword" data-v-9d56d2f0>name</span>: string = <span class="hljs-string" data-v-9d56d2f0>&quot;John Doe&quot;</span>;

// Mendefinisikan fungsi dengan <span class="hljs-keyword" data-v-9d56d2f0>parameter</span> bertipe <span class="hljs-keyword" data-v-9d56d2f0>number</span> dan mengembalikan nilai bertipe <span class="hljs-keyword" data-v-9d56d2f0>number</span>
<span class="hljs-function" data-v-9d56d2f0><span class="hljs-keyword" data-v-9d56d2f0>function</span></span> add(a: <span class="hljs-keyword" data-v-9d56d2f0>number</span>, b: <span class="hljs-keyword" data-v-9d56d2f0>number</span>): <span class="hljs-keyword" data-v-9d56d2f0>number</span> {
  <span class="hljs-keyword" data-v-9d56d2f0>return</span> a + b;
}

// Memanggil fungsi dengan argumen bertipe <span class="hljs-keyword" data-v-9d56d2f0>number</span>
let <span class="hljs-built_in" data-v-9d56d2f0>sum</span> = add(<span class="hljs-number" data-v-9d56d2f0>10</span>, <span class="hljs-number" data-v-9d56d2f0>20</span>);
console.<span class="hljs-built_in" data-v-9d56d2f0>log</span>(<span class="hljs-built_in" data-v-9d56d2f0>sum</span>); // Output: <span class="hljs-number" data-v-9d56d2f0>30</span>
</code></pre><p data-v-9d56d2f0><strong data-v-9d56d2f0>Belajar TypeScript:</strong></p><p data-v-9d56d2f0>TypeScript adalah bahasa pemrograman yang mudah dipelajari bagi para pengembang JavaScript. Banyak sumber daya yang tersedia untuk membantu pengembang mempelajari TypeScript, termasuk:</p><ul data-v-9d56d2f0><li data-v-9d56d2f0><a href="https://www.typescriptlang.org/docs/handbook/intro.html" data-v-9d56d2f0>Dokumentasi Resmi TypeScript</a></li><li data-v-9d56d2f0><a href="https://www.typescriptlang.org/play" data-v-9d56d2f0>Tutorial Interaktif TypeScript</a></li><li data-v-9d56d2f0>Kursus Online TypeScript [URL yang tidak valid dihapus]</li></ul><p data-v-9d56d2f0><strong data-v-9d56d2f0>Kesimpulan:</strong></p><p data-v-9d56d2f0>TypeScript adalah alat yang berharga bagi para pengembang JavaScript yang ingin meningkatkan kualitas dan keandalan kode mereka. Dengan sistem tipe data statisnya, TypeScript membantu mencegah bug, meningkatkan pemahaman kode, mempermudah refactoring kode, dan mempercepat pengembangan. Jika Anda ingin meningkatkan skill pengembangan web Anda, mempelajari TypeScript adalah langkah yang tepat.</p><hr data-v-9d56d2f0><h1 id="typescript-fundamental" data-v-9d56d2f0>TypeScript Fundamental</h1><hr data-v-9d56d2f0><pre data-v-9d56d2f0><code class="lang-JavaScript" data-v-9d56d2f0>
<span class="hljs-keyword" data-v-9d56d2f0>let</span> name: <span class="hljs-built_in" data-v-9d56d2f0>string</span> = <span class="hljs-string" data-v-9d56d2f0>&quot;udin&quot;</span>
<span class="hljs-keyword" data-v-9d56d2f0>let</span> age: <span class="hljs-built_in" data-v-9d56d2f0>number</span> = <span class="hljs-number" data-v-9d56d2f0>10</span> 
<span class="hljs-keyword" data-v-9d56d2f0>let</span> isReady: <span class="hljs-built_in" data-v-9d56d2f0>boolean</span> = <span class="hljs-literal" data-v-9d56d2f0>true</span> 
<span class="hljs-keyword" data-v-9d56d2f0>let</span> x: <span class="hljs-literal" data-v-9d56d2f0>null</span> = <span class="hljs-literal" data-v-9d56d2f0>null</span> 
<span class="hljs-keyword" data-v-9d56d2f0>let</span> array1: <span class="hljs-built_in" data-v-9d56d2f0>number</span>[] = [<span class="hljs-number" data-v-9d56d2f0>1</span>,<span class="hljs-number" data-v-9d56d2f0>2</span>]
<span class="hljs-keyword" data-v-9d56d2f0>let</span> array2: <span class="hljs-built_in" data-v-9d56d2f0>string</span>[] = [<span class="hljs-string" data-v-9d56d2f0>&quot;udin&quot;</span>]
<span class="hljs-keyword" data-v-9d56d2f0>let</span> array3: <span class="hljs-built_in" data-v-9d56d2f0>boolean</span>[] = [<span class="hljs-literal" data-v-9d56d2f0>true</span>, <span class="hljs-literal" data-v-9d56d2f0>false</span>]
<span class="hljs-keyword" data-v-9d56d2f0>let</span> namaku: <span class="hljs-literal" data-v-9d56d2f0>undefined</span> | <span class="hljs-built_in" data-v-9d56d2f0>string</span> = <span class="hljs-string" data-v-9d56d2f0>&quot;udin&quot;</span> <span class="hljs-comment" data-v-9d56d2f0>// Bisa dua tipe data yang masuk</span>

<span class="hljs-keyword" data-v-9d56d2f0>let</span> abc: object = {name:<span class="hljs-string" data-v-9d56d2f0>&#39;udin&#39;</span>,age:<span class="hljs-number" data-v-9d56d2f0>22</span>}
<span class="hljs-keyword" data-v-9d56d2f0>let</span> acc: {name: <span class="hljs-built_in" data-v-9d56d2f0>string</span>, age: <span class="hljs-built_in" data-v-9d56d2f0>number</span>} = {name: <span class="hljs-string" data-v-9d56d2f0>&#39;fatoni&#39;</span>, age: <span class="hljs-number" data-v-9d56d2f0>22</span>}

<span class="hljs-comment" data-v-9d56d2f0>// =============== TS </span>

<span class="hljs-keyword" data-v-9d56d2f0>const</span> hello = (name: <span class="hljs-built_in" data-v-9d56d2f0>string</span>): <span class="hljs-built_in" data-v-9d56d2f0>string</span> =&gt; {
  <span class="hljs-keyword" data-v-9d56d2f0>return</span> <span class="hljs-string" data-v-9d56d2f0>\`Hello <span class="hljs-subst" data-v-9d56d2f0>\${name}</span>\`</span>
}


<span class="hljs-function" data-v-9d56d2f0><span class="hljs-keyword" data-v-9d56d2f0>function</span> <span class="hljs-title" data-v-9d56d2f0>mat</span>(<span class="hljs-params" data-v-9d56d2f0>item: <span class="hljs-built_in" data-v-9d56d2f0>number</span></span>): <span class="hljs-title" data-v-9d56d2f0>number</span> </span>{
  <span class="hljs-keyword" data-v-9d56d2f0>return</span> item + <span class="hljs-number" data-v-9d56d2f0>1</span>;
}

<span class="hljs-comment" data-v-9d56d2f0>// ====================== Eliminate parameter</span>

<span class="hljs-keyword" data-v-9d56d2f0>const</span> findLocationInJakarta = (
  location: <span class="hljs-string" data-v-9d56d2f0>&#39;Utara&#39;</span> | <span class="hljs-string" data-v-9d56d2f0>&#39;Timur&#39;</span> | <span class="hljs-string" data-v-9d56d2f0>&#39;Selatan&#39;</span> | <span class="hljs-string" data-v-9d56d2f0>&#39;Barat&#39;</span>,
): <span class="hljs-built_in" data-v-9d56d2f0>string</span> =&gt; {
  <span class="hljs-keyword" data-v-9d56d2f0>return</span> <span class="hljs-string" data-v-9d56d2f0>\`Jakarta <span class="hljs-subst" data-v-9d56d2f0>\${location}</span>\`</span>
}

findLocationInJakarta(<span class="hljs-string" data-v-9d56d2f0>&#39;Utara&#39;</span>)

findLocationInJakarta(<span class="hljs-string" data-v-9d56d2f0>&#39;Selatan&#39;</span>)

findLocationInJakarta(<span class="hljs-string" data-v-9d56d2f0>&#39;udin&#39;</span>) <span class="hljs-comment" data-v-9d56d2f0>// Error</span>
</code></pre><h2 id="if-statement" data-v-9d56d2f0>if statement</h2><p data-v-9d56d2f0>Percabangan </p><pre data-v-9d56d2f0><code class="lang-Js" data-v-9d56d2f0>
<span class="hljs-comment" data-v-9d56d2f0>// Contoh If statement </span>
<span class="hljs-keyword" data-v-9d56d2f0>let</span> <span class="hljs-built_in" data-v-9d56d2f0>data</span>: <span class="hljs-built_in" data-v-9d56d2f0>string</span> | number = <span class="hljs-string" data-v-9d56d2f0>&quot;Hello&quot;</span>;
<span class="hljs-keyword" data-v-9d56d2f0>if</span> (typeof <span class="hljs-built_in" data-v-9d56d2f0>data</span> === <span class="hljs-string" data-v-9d56d2f0>&quot;string&quot;</span>) {
  console.<span class="hljs-keyword" data-v-9d56d2f0>log</span>(<span class="hljs-built_in" data-v-9d56d2f0>data</span>.toUpperCase()); <span class="hljs-comment" data-v-9d56d2f0>// Mengubah huruf kecil ke besar</span>
}
</code></pre><h2 id="array" data-v-9d56d2f0>Array</h2><pre data-v-9d56d2f0><code class="lang-js" data-v-9d56d2f0>// Array number
let angka: number[] = [1, 2, 3];
let names: Array&lt;string&gt; = [<span class="hljs-string" data-v-9d56d2f0>&quot;Alice&quot;</span>, <span class="hljs-string" data-v-9d56d2f0>&quot;Bob&quot;</span>];

//<span class="hljs-built_in" data-v-9d56d2f0> array </span>dibawah ini, tipe datanya tetap
let tuple: [string, number] = [<span class="hljs-string" data-v-9d56d2f0>&quot;Age&quot;</span>, 25];

// Readonly<span class="hljs-built_in" data-v-9d56d2f0> array
</span>const readOnlyArr: readonly number[] = [1, 2, 3];
</code></pre><h2 id="loop" data-v-9d56d2f0>Loop</h2><p data-v-9d56d2f0>Untuk loop sederhana seperti dibawah, tidak ada configurasi tambahan dari typescript.</p><pre data-v-9d56d2f0><code class="lang-js" data-v-9d56d2f0>// Default <span class="hljs-keyword" data-v-9d56d2f0>for</span> loop
<span class="hljs-keyword" data-v-9d56d2f0>for</span> (<span class="hljs-keyword" data-v-9d56d2f0>let</span> i = <span class="hljs-number" data-v-9d56d2f0>0</span>; i &lt; <span class="hljs-number" data-v-9d56d2f0>5</span>; i++) {
  console.log(i);
}

// For loop yang akan mengambil <span class="hljs-keyword" data-v-9d56d2f0>value</span> <span class="hljs-literal" data-v-9d56d2f0>item</span> pada <span class="hljs-keyword" data-v-9d56d2f0>array</span> <span class="hljs-string" data-v-9d56d2f0>&#39;angka&#39;</span>
<span class="hljs-keyword" data-v-9d56d2f0>for</span> (const num <span class="hljs-keyword" data-v-9d56d2f0>of</span> angka) {
  console.log(num * <span class="hljs-number" data-v-9d56d2f0>2</span>); // num otomatis number
}

// <span class="hljs-keyword" data-v-9d56d2f0>for</span> loop yang akan mengambil nomor index sebagai <span class="hljs-keyword" data-v-9d56d2f0>value</span> mereka.
<span class="hljs-keyword" data-v-9d56d2f0>for</span> (const index <span class="hljs-keyword" data-v-9d56d2f0>in</span> angka) {
  console.log(index); // string: <span class="hljs-string" data-v-9d56d2f0>&quot;0&quot;</span>, <span class="hljs-string" data-v-9d56d2f0>&quot;1&quot;</span>, <span class="hljs-string" data-v-9d56d2f0>&quot;2&quot;</span>
}
</code></pre><h2 id="function" data-v-9d56d2f0>Function</h2><pre data-v-9d56d2f0><code class="lang-js" data-v-9d56d2f0><span class="hljs-comment" data-v-9d56d2f0>// Fungsi dasar</span>
<span class="hljs-function" data-v-9d56d2f0><span class="hljs-keyword" data-v-9d56d2f0>function</span> <span class="hljs-title" data-v-9d56d2f0>add</span>(<span class="hljs-params" data-v-9d56d2f0>a: number, b: number</span>): <span class="hljs-title" data-v-9d56d2f0>number</span> </span>{
  <span class="hljs-keyword" data-v-9d56d2f0>return</span> a + b;
}

<span class="hljs-comment" data-v-9d56d2f0>// Arrow function</span>
<span class="hljs-keyword" data-v-9d56d2f0>const</span> multiply = (x: number, <span class="hljs-attr" data-v-9d56d2f0>y</span>: number): <span class="hljs-function" data-v-9d56d2f0><span class="hljs-params" data-v-9d56d2f0>number</span> =&gt;</span> x * y;

<span class="hljs-comment" data-v-9d56d2f0>// Parameter opsional</span>
<span class="hljs-function" data-v-9d56d2f0><span class="hljs-keyword" data-v-9d56d2f0>function</span> <span class="hljs-title" data-v-9d56d2f0>greet</span>(<span class="hljs-params" data-v-9d56d2f0>name: string, age?: number</span>): <span class="hljs-title" data-v-9d56d2f0>void</span> </span>{
  <span class="hljs-built_in" data-v-9d56d2f0>console</span>.log(<span class="hljs-string" data-v-9d56d2f0>\`Hello <span class="hljs-subst" data-v-9d56d2f0>\${name}</span><span class="hljs-subst" data-v-9d56d2f0>\${age ? <span class="hljs-string" data-v-9d56d2f0>\` (<span class="hljs-subst" data-v-9d56d2f0>\${age}</span>)\`</span> : <span class="hljs-string" data-v-9d56d2f0>&#39;&#39;</span>}</span>\`</span>);
}

<span class="hljs-comment" data-v-9d56d2f0>// Function overloading</span>
<span class="hljs-function" data-v-9d56d2f0><span class="hljs-keyword" data-v-9d56d2f0>function</span> <span class="hljs-title" data-v-9d56d2f0>padLeft</span>(<span class="hljs-params" data-v-9d56d2f0>value: string, padding: number | string</span>): <span class="hljs-title" data-v-9d56d2f0>string</span> </span>{
  <span class="hljs-comment" data-v-9d56d2f0>// Implementasi</span>
}
</code></pre><h2 id="class" data-v-9d56d2f0>Class</h2><pre data-v-9d56d2f0><code class="lang-js" data-v-9d56d2f0><span class="hljs-class" data-v-9d56d2f0><span class="hljs-keyword" data-v-9d56d2f0>class</span> <span class="hljs-title" data-v-9d56d2f0>Animal</span> </span>{
  <span class="hljs-comment" data-v-9d56d2f0>// Menjabarkan tipe data untuk setiap parameter yang ada</span>
  <span class="hljs-keyword" data-v-9d56d2f0>constructor</span>(public name: string, private age: number) {}

  <span class="hljs-comment" data-v-9d56d2f0>// Method</span>
  speak(): <span class="hljs-keyword" data-v-9d56d2f0>void</span> {
    <span class="hljs-built_in" data-v-9d56d2f0>console</span>.log(<span class="hljs-string" data-v-9d56d2f0>\`<span class="hljs-subst" data-v-9d56d2f0>\${<span class="hljs-keyword" data-v-9d56d2f0>this</span>.name}</span> makes a noise\`</span>);
  }
}

<span class="hljs-class" data-v-9d56d2f0><span class="hljs-keyword" data-v-9d56d2f0>class</span> <span class="hljs-title" data-v-9d56d2f0>Dog</span> <span class="hljs-keyword" data-v-9d56d2f0>extends</span> <span class="hljs-title" data-v-9d56d2f0>Animal</span> </span>{
  <span class="hljs-keyword" data-v-9d56d2f0>constructor</span>(name: string, age: number, public breed: string) {
    <span class="hljs-keyword" data-v-9d56d2f0>super</span>(name, age);
  }

  <span class="hljs-comment" data-v-9d56d2f0>// Override method</span>
  speak(): <span class="hljs-keyword" data-v-9d56d2f0>void</span> {
    <span class="hljs-built_in" data-v-9d56d2f0>console</span>.log(<span class="hljs-string" data-v-9d56d2f0>&quot;Woof!&quot;</span>);
  }
}

<span class="hljs-comment" data-v-9d56d2f0>// Penggunaan</span>
<span class="hljs-keyword" data-v-9d56d2f0>const</span> myDog = <span class="hljs-keyword" data-v-9d56d2f0>new</span> Dog(<span class="hljs-string" data-v-9d56d2f0>&quot;Rex&quot;</span>, <span class="hljs-number" data-v-9d56d2f0>3</span>, <span class="hljs-string" data-v-9d56d2f0>&quot;Husky&quot;</span>);
myDog.speak(); <span class="hljs-comment" data-v-9d56d2f0>// &quot;Woof!&quot;</span>
</code></pre><p data-v-9d56d2f0>Note:</p><ul data-v-9d56d2f0><li data-v-9d56d2f0>Mengenai parameter private, sederhananya parameter terssebut hanya bisa diakses dialam code class saja, oject instance yang tercipta tidak termasuk.</li></ul><p data-v-9d56d2f0>contohnya begini:</p><pre data-v-9d56d2f0><code class="lang-js" data-v-9d56d2f0>console.<span class="hljs-built_in" data-v-9d56d2f0>log</span>(myDog.<span class="hljs-built_in" data-v-9d56d2f0>name</span>) <span class="hljs-comment" data-v-9d56d2f0>// Rex</span>
console.<span class="hljs-built_in" data-v-9d56d2f0>log</span>(myDog.age) <span class="hljs-comment" data-v-9d56d2f0>// Error javascript!</span>
</code></pre><h2 id="reference" data-v-9d56d2f0>Reference</h2><ul data-v-9d56d2f0><li data-v-9d56d2f0><a href="https://www.typescriptlang.org/" data-v-9d56d2f0>https://www.typescriptlang.org/</a></li><li data-v-9d56d2f0><a href="https://js2ts.com/" data-v-9d56d2f0>https://js2ts.com/</a> | Convert Js to Ts</li></ul>`,40)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},xf=ca(qf,[["__scopeId","data-v-9d56d2f0"]]),Tf={__name:"vuejs",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[22]||(s[22]=Z('<h1 id="vue-js-guide" data-v-86d43cc7>Vue Js Guide</h1><p data-v-86d43cc7>Memiliki konsep yang tidak beda jauh dari React. </p><h2 id="table-of-content" data-v-86d43cc7>Table of Content</h2><ul data-v-86d43cc7><li data-v-86d43cc7><a href="#halaman-utama-website-disini" data-v-86d43cc7>Halaman Utama web</a></li><li data-v-86d43cc7><a href="#tahapan-menerima-komponent" data-v-86d43cc7>menerima komponent</a></li><li data-v-86d43cc7><a href="#tahapan-untuk-menempelkan-komponent-ke-html-halaman" data-v-86d43cc7>menerapkan komponent</a></li><li data-v-86d43cc7><a href="#package-yang-di-export" data-v-86d43cc7>export package</a></li><li data-v-86d43cc7><a href="#menjalankan-vue" data-v-86d43cc7>menjalankan-vue</a></li><li data-v-86d43cc7><a href="#declarative-rendering" data-v-86d43cc7>declarative-rendering</a></li><li data-v-86d43cc7><a href="#attribute-binding" data-v-86d43cc7>attribute-binding</a></li><li data-v-86d43cc7><a href="#event-listener" data-v-86d43cc7>event-listener</a></li><li data-v-86d43cc7><a href="#form-binding" data-v-86d43cc7>form-binding</a></li><li data-v-86d43cc7><a href="#contoh-form-binding" data-v-86d43cc7>contoh-form-binding</a></li><li data-v-86d43cc7><a href="#conditional-rendering" data-v-86d43cc7>conditional-rendering</a></li><li data-v-86d43cc7><a href="#list-rendering" data-v-86d43cc7>List Rendering</a></li><li data-v-86d43cc7><a href="#computed-property" data-v-86d43cc7>computed property</a></li><li data-v-86d43cc7><a href="#Lifecyle" data-v-86d43cc7>Lifecyle</a></li><li data-v-86d43cc7><a href="#Components" data-v-86d43cc7>Components</a></li><li data-v-86d43cc7><a href="#Props" data-v-86d43cc7>Props</a></li><li data-v-86d43cc7><a href="#Emits" data-v-86d43cc7>Emits</a></li><li data-v-86d43cc7><a href="#Slots" data-v-86d43cc7>Slots</a></li><li data-v-86d43cc7><a href="#Router" data-v-86d43cc7>Router</a></li></ul><h2 id="bentuk-fundamental-dari-vue-options-api" data-v-86d43cc7>Bentuk Fundamental dari vue | Options API</h2>',5)),c("pre",null,[s[0]||(s[0]=w("  ")),c("code",null,`
    
<script>

export default {

  // Properties returned from data() become reactive state

  // and will be exposed on \`this\`.

  data() {

    return {

      count: 0

    }

  },



  // Methods are functions that mutate state and trigger updates.

  // They can be bound as event handlers in templates.

  methods: {

    increment() {

      this.count++

    }

  },



  // Lifecycle hooks are called at different stages

  // of a component's lifecycle.

  // This function will be called when the component is mounted.

  mounted() {

    console.log(\`The initial count is \${this.count}.\`)

  }

}

<\/script>



<template>

  <button @click="increment">Count is: `+Ba(t.count)+`</button>

</template>

  `,1),s[1]||(s[1]=w(`
`))]),s[23]||(s[23]=Z(`<p data-v-86d43cc7><strong data-v-86d43cc7>BreakDown code:</strong></p><ul data-v-86d43cc7><li data-v-86d43cc7>&#39;data()&#39; : adalah bagian dimana kita menyampan State </li><li data-v-86d43cc7>&#39;methods&#39; : adalah bagian dimana kita menuliskan event</li><li data-v-86d43cc7>&#39;mounted()&#39; : adalah dimana code akan dijalankan setiap ada perubahan state, dan awal halaman dimuat.</li><li data-v-86d43cc7>&#39;@click&#39; : adalah attribute fungsi yang akan menjalankan component jika user melakukan interaksi ( life cycle ).</li></ul><hr data-v-86d43cc7><h1 id="abstract-note" data-v-86d43cc7>Abstract Note</h1><hr data-v-86d43cc7><h2 id="halaman-utama-website-disini" data-v-86d43cc7>Halaman utama website disini</h2><p data-v-86d43cc7>Tempat pengerjaan halaman awal pada vue adalah &#39;src/App.vue&#39;</p><h2 id="tahapan-menerima-komponent" data-v-86d43cc7>Tahapan menerima komponent</h2><p data-v-86d43cc7>&#39;src/components&#39;</p><p data-v-86d43cc7>Setelah membuat component, jangan lupa untuk export dan import ke halaman yang dituju!</p><p data-v-86d43cc7>contoh:</p><pre data-v-86d43cc7>  <code data-v-86d43cc7>
    &lt;script setup&gt;

import HelloWorld from &#39;./components/HelloWorld.vue&#39;
import Hello01 from &#39;.&#39;component/Hello01.vue

&lt;/script&gt;
  </code>
</pre><h2 id="tahapan-untuk-menempelkan-komponent-ke-html-halaman" data-v-86d43cc7>Tahapan untuk menempelkan komponent ke HTML halaman</h2><pre data-v-86d43cc7>  <code data-v-86d43cc7>
    &lt;template&gt;

&lt;Hello01/&gt;

&lt;template/&gt;
  </code>
</pre><h2 id="package-yang-di-export" data-v-86d43cc7>Package yang di export</h2>`,15)),c("pre",null,[s[2]||(s[2]=w("  ")),c("code",null,`
    <script setup>

const count = 'Saya komponen baru'

<\/script>





<template>

<h1>`+Ba(t.count)+`</h1>

</template>





<style scoped>

.read-the-docs {

  color: #888;

}

</style>
  `,1),s[3]||(s[3]=w(`
`))]),s[24]||(s[24]=Z(`<h2 id="menjalankan-vue" data-v-86d43cc7>Menjalankan vue</h2><pre data-v-86d43cc7>  <code data-v-86d43cc7>
    # Instalasi vue js
npm install -g @vue/cli

# Atau upgrade dengan ini
# npm update -g @vue/cli

# Buat Vue App
vue create hello-world 

# Atau gunakan versi GUI untuk build
# vue ui

cd &lt;your-project-name&gt;

npm run serve

# Atau ini
# npm run dev
  </code>
</pre><p data-v-86d43cc7>Ref: <a href="https://vuejs.org/guide/quick-start" data-v-86d43cc7>https://vuejs.org/guide/quick-start</a></p><p data-v-86d43cc7>Panduan instalasi: <a href="https://cli.vuejs.org/guide/installation.html" data-v-86d43cc7>https://cli.vuejs.org/guide/installation.html</a></p><ul data-v-86d43cc7><li data-v-86d43cc7><a href="https://cli.vuejs.org/guide/creating-a-project.html#vue-cli-service-build" data-v-86d43cc7>https://cli.vuejs.org/guide/creating-a-project.html#vue-cli-service-build</a></li></ul><h2 id="declarative-rendering" data-v-86d43cc7>Declarative Rendering</h2><p data-v-86d43cc7>Adalah tindakan untuk membuat state dan melakukan perubahan kepada state tersebut. Terdapat dua cara untuk melakukannya:</p><ul data-v-86d43cc7><li data-v-86d43cc7>Reactive() </li><li data-v-86d43cc7>ref()</li></ul><p data-v-86d43cc7><strong data-v-86d43cc7>Reactive()</strong></p><pre data-v-86d43cc7>  <code data-v-86d43cc7>
    import { reactive } from &#39;vue&#39;

const counter = reactive({
  count: 0
})

console.log(counter.count) // 0
counter.count++
  </code>
</pre><p data-v-86d43cc7>Breakdowcode:</p><ul data-v-86d43cc7><li data-v-86d43cc7>Memangil fungsi reactive</li><li data-v-86d43cc7>Membuat sebuah array of object (tempat menyimpan state)</li><li data-v-86d43cc7>&#39;count&#39; adalah state</li><li data-v-86d43cc7>&#39;counter.count&#39; adalah cara menampilkan value didalam state</li><li data-v-86d43cc7>&#39;counter.count++&#39; adalah melakukan perubahan data</li></ul><p data-v-86d43cc7>Reactive bekerja seperti halnya perintah &#39;map&#39; dan &#39;set&#39; didalam array.</p><p data-v-86d43cc7><strong data-v-86d43cc7>ref()</strong></p><pre data-v-86d43cc7>  <code data-v-86d43cc7>
    import { ref } from &#39;vue&#39;

const message = ref(&#39;Hello World!&#39;)

console.log(message.value) // &quot;Hello World!&quot;
message.value = &#39;Changed&#39;

    </code>
</pre><p data-v-86d43cc7>Breakdowncode:</p><ul data-v-86d43cc7><li data-v-86d43cc7>Panggil &#39;ref&#39;</li><li data-v-86d43cc7>buat sebuah variabel yang akan menjadi state</li><li data-v-86d43cc7>&#39;message.value&#39; adalah cara menampilkan state</li><li data-v-86d43cc7><code data-v-86d43cc7>message.value = &#39;Changed&#39;</code> adalah cara melakukan perubahan state</li></ul><h2 id="attribute-binding" data-v-86d43cc7>Attribute binding</h2><p data-v-86d43cc7>Adalah metode mengunakan state ditempat lain.</p>`,19)),c("pre",null,[s[4]||(s[4]=w("  ")),c("code",null,`
    <script setup>
import { ref } from 'vue'

const titleClass = ref('title')
<\/script>

<template>
  <h1 :class="titleClass">Make me red (`+Ba(t.titleClass)+`)</h1> <!-- add dynamic class binding here -->
</template>

<style>
.title {
  color: red;
}
</style>
  `,1),s[5]||(s[5]=w(`
`))]),s[25]||(s[25]=Z(`<p data-v-86d43cc7>Breakdown:</p><ul data-v-86d43cc7><li data-v-86d43cc7>Gunakan &#39;ref&#39;</li><li data-v-86d43cc7>Dan buat state (titleClass)</li><li data-v-86d43cc7>State bisa digunakan sebagai txt value atau sebagai judul yang merujuk ke class css</li><li data-v-86d43cc7>state dengan value &#39;title&#39; merujuk kepada class css.</li></ul><p data-v-86d43cc7>Contoh penggunaan lainnya adalah </p><pre data-v-86d43cc7>  <code data-v-86d43cc7>
    &lt;div v-bind:id=&quot;dynamicId&quot;&gt;&lt;/div&gt;
  </code>
</pre><pre data-v-86d43cc7>  <code data-v-86d43cc7>
    &lt;div :id=&quot;dynamicId&quot;&gt;&lt;/div&gt;
  </code>
</pre><h2 id="event-listener" data-v-86d43cc7>Event listener</h2><p data-v-86d43cc7>Adalah fungsi vue yang dimana dia akan memperhatikan interaksi yang diberikan oleh user. Sebagai contoh dibawah ini adalah, vue memperhatikan aksi &#39;click&#39; yang dilakukan oleh user.</p>`,7)),c("pre",null,[s[6]||(s[6]=w("  ")),c("code",null,`
    <script setup>
import { ref } from 'vue'

const count = ref(0) // State 

function increment() { // blok fungsi 
  count.value++ 
}
<\/script>

<template>
  <!-- Fungsi Event Listener -->
  <button @click="increment">Tambah : `+Ba(t.count)+`</button>
</template>
  `,1),s[7]||(s[7]=w(`
`))]),s[26]||(s[26]=c("p",null,"Breakdown code:",-1)),s[27]||(s[27]=c("ul",null,[c("li",null,"Panggil ref "),c("li",null,"tentukan state awal"),c("li",null,"buat blok fungsi, yang dimana dia akan dijalankan setiap kali ada interaksi (Event Listener)"),c("li",null,"Buat pembuka event listener (@click)")],-1)),s[28]||(s[28]=c("p",null,"Pembuka event listener memiliki dua macam:",-1)),c("p",null,[c("code",null,'<button v-on:click="increment">'+Ba(t.count)+"</button>",1)]),s[29]||(s[29]=c("p",null,"atau bentuk shorthand",-1)),c("p",null,[c("code",null,'<button @click="increment">'+Ba(t.count)+"</button>",1)]),s[30]||(s[30]=Z(`<h2 id="form-binding" data-v-86d43cc7>Form Binding</h2><p data-v-86d43cc7>adalah fungsi dimana vue akan menjadi perantara form dan code fungsi javascript kita. terdapat dua cara untuk melakukan Form Binding:</p><h3 id="cara-lama-manual-" data-v-86d43cc7>Cara lama ( Manual )</h3><p data-v-86d43cc7><code data-v-86d43cc7>&lt;input :value=&quot;text&quot; @input=&quot;onInput&quot;&gt;</code></p><p data-v-86d43cc7>Disini:</p><ul data-v-86d43cc7><li data-v-86d43cc7>&#39;:value=text&#39; -- adalah sebagai output (menampilkan value ke form)</li><li data-v-86d43cc7>&#39;@input&#39; -- adalah sebagai input (mengirim value ke state onInput)</li></ul><pre data-v-86d43cc7><code class="lang-html" data-v-86d43cc7><span class="hljs-function" data-v-86d43cc7><span class="hljs-keyword" data-v-86d43cc7>function</span> <span class="hljs-title" data-v-86d43cc7>onInput</span>(<span class="hljs-title" data-v-86d43cc7>e</span>) {</span>
 <span class="hljs-comment" data-v-86d43cc7> // a v-on handler receives the native DOM event</span>
 <span class="hljs-comment" data-v-86d43cc7> // as the argument.</span>
  <span class="hljs-keyword" data-v-86d43cc7>text</span>.<span class="hljs-built_in" data-v-86d43cc7>value</span> = e.target.<span class="hljs-built_in" data-v-86d43cc7>value</span>
}
</code></pre><p data-v-86d43cc7>Disini:</p><ul data-v-86d43cc7><li data-v-86d43cc7>&#39;text.value&#39; adalah state yang akan ditampikan oleh form</li><li data-v-86d43cc7>&#39;e.target.value&#39; adalah nilai yang didapatkan form</li><li data-v-86d43cc7>&#39;text&#39; akan berubah setiap kali ada data baru dari fungsi onInput()</li></ul><h3 id="cara-baru-automatis-" data-v-86d43cc7>Cara baru (Automatis)</h3><pre data-v-86d43cc7><code class="lang-html" data-v-86d43cc7>&lt;<span class="hljs-selector-tag" data-v-86d43cc7>input</span> v-model=<span class="hljs-string" data-v-86d43cc7>&quot;text&quot;</span>&gt;
</code></pre><p data-v-86d43cc7>adalah bentuk penyederhanaan dari proses diatas. Kita tidak perlu lagi membuat function yang harus menerima setiap interaksi didalam form.</p><p data-v-86d43cc7>&#39;v-model&#39; juga bisa digunakan untuk checkbox.</p><h3 id="contoh-form-binding" data-v-86d43cc7>Contoh Form binding</h3>`,14)),c("pre",null,[s[8]||(s[8]=w("  ")),c("code",null,`
    <script setup>
import { ref } from 'vue'

const text = ref('') // adalah state

<\/script>

<template>
  <!-- v-model -->
  <input v-model="text" placeholder="Type here">
  <!-- menampilkan hasil state -->
  <p>`+Ba(t.text)+`</p>
</template>
  `,1),s[9]||(s[9]=w(`
`))]),s[31]||(s[31]=Z(`<p data-v-86d43cc7>Ref: <a href="https://vuejs.org/tutorial/#step-5" data-v-86d43cc7>https://vuejs.org/tutorial/#step-5</a></p><h2 id="conditional-rendering" data-v-86d43cc7>Conditional Rendering</h2><p data-v-86d43cc7>Disini element HTMl hanya akan dilakukan rendering oleh vue jika condition ( boolean ) adalah True. </p><pre data-v-86d43cc7>  <code data-v-86d43cc7>
    &lt;script setup&gt;
import { ref } from &#39;vue&#39;

const awesome = ref(true) // boolean state 

function toggle() {
  awesome.value = !awesome.value // timpa value bollean lama ke baru &#39;!state&#39;
}
&lt;/script&gt;

&lt;template&gt;
  &lt;button @click=&quot;toggle&quot;&gt;Toggle&lt;/button&gt; &lt;!-- Event listener ke blok &#39;toggle&#39;  --&gt;
  &lt;h1 v-if=&quot;awesome&quot;&gt;Vue is awesome!&lt;/h1&gt; &lt;!-- Mengacu ke boolean state  --&gt;
  &lt;h1 v-else&gt;Oh no 😢&lt;/h1&gt; &lt;!-- akan menjadi ini jika state adalah FALSE --&gt;
&lt;/template&gt;
  </code>
</pre><p data-v-86d43cc7>Ref: <a href="https://vuejs.org/guide/essentials/conditional.html" data-v-86d43cc7>https://vuejs.org/guide/essentials/conditional.html</a></p><h2 id="list-rendering" data-v-86d43cc7>List Rendering</h2><p data-v-86d43cc7>adalah cara untuk menampilkan data array kedalam halaman HTML.</p><p data-v-86d43cc7>Berikut adalah contoh Todo list sederhana:</p><pre data-v-86d43cc7>  <code data-v-86d43cc7>
    &lt;script setup&gt;
import { ref } from &#39;vue&#39;

// give each todo a unique id
let id = 0 

const newTodo = ref(&#39;&#39;) // ini sebagai form state
const todos = ref([
  { id: id++, text: &#39;Learn HTML&#39; },
  { id: id++, text: &#39;Learn JavaScript&#39; },
  { id: id++, text: &#39;Learn Vue&#39; }
])

function addTodo() { // ini adalah item yang terprint
  todos.value.push({ id: id++, text: newTodo.value }) // tambahkan value kedalam todos array
  newTodo.value = &#39;&#39; // bersihkan form state
}

function removeTodo(todo) { // ini adalah aksesoris delete tambahan
  todos.value = todos.value.filter((t) =&gt; t !== todo) // hapus item yang dipilih
  // filter, simpan semua item kecuali yang memiliki id sama dengan &#39;t&#39; atau &#39;todo&#39;
}
&lt;/script&gt;

&lt;template&gt;
  &lt;!-- Form Start --&gt;
  &lt;form @submit.prevent=&quot;addTodo&quot;&gt;
    &lt;input v-model=&quot;newTodo&quot; required placeholder=&quot;new todo&quot;&gt;
    &lt;button&gt;Add Todo&lt;/button&gt;
  &lt;/form&gt;
  &lt;!-- Form End --&gt;

   &lt;!-- Pack --&gt;
  &lt;ul&gt;
    &lt;!-- 1 pcs --&gt;
    &lt;li v-for=&quot;todo in todos&quot; :key=&quot;todo.id&quot;&gt;
      &lt;p&gt;
        \\\\{\\\\{ todo.text \\\\}\\\\}
      &lt;/p&gt;
      &lt;button @click=&quot;removeTodo(todo)&quot;&gt;X&lt;/button&gt;
    &lt;/li&gt;
    &lt;!-- 1 pcs --&gt;
  &lt;/ul&gt;
  &lt;!-- Pack --&gt;
&lt;/template&gt;
  </code>
</pre><h2 id="computed-property" data-v-86d43cc7>computed property</h2><p data-v-86d43cc7>disini kita akan membuat fungsi &#39;done&#39; dimana pada todo list yang kita buat dapat menyembunyikan item yang &#39;done&#39;</p><p data-v-86d43cc7>contoh code seperti ini:</p>`,12)),c("pre",null,[s[10]||(s[10]=w("  ")),c("code",null,`
    <script setup>
import { ref, computed } from 'vue'

let id = 0

const newTodo = ref('') // form state
const hideCompleted = ref(false) // indikator hide and show dari element tersebut
const todos = ref([
  { id: id++, text: 'Learn HTML', done: true },
  { id: id++, text: 'Learn JavaScript', done: true },
  { id: id++, text: 'Learn Vue', done: false }
])

const filteredTodos = computed(() => { 
  return hideCompleted.value ? todos.value.filter((t) => !t.done) : todos.value // True : False
  // Jika True, maka
  // tampilkan hasil filter dari 'todos.value.filter((t) => !t.done)'
  // nilai default adalah false 'todos.value'
})

function addTodo() {
  todos.value.push({ id: id++, text: newTodo.value, done: false }) // tambahkan item kedalamn state
  newTodo.value = '' // refresh form
}

function removeTodo(todo) {
  todos.value = todos.value.filter((t) => t !== todo) // hapus item sesuai dengan id yang dipilih
}
<\/script>

<template>
  <form @submit.prevent="addTodo">
    <input v-model="newTodo" required placeholder="new todo">
    <button>Add Todo</button>
  </form>
  <ul>
    <!-- 'li' akan diduplikasi sebanyak item di filteredTodos -->
    <li v-for="todo in filteredTodos" :key="todo.id">
      <input type="checkbox" v-model="todo.done">
      <span :class="{ done: todo.done }">\\\\{\\\\{ todo.text \\\\}\\\\}</span>
      <button @click="removeTodo(todo)">X</button>
    </li>
  </ul>
  <button @click="hideCompleted = !hideCompleted">
    `+Ba(t.hideCompleted?"Show all":"Hide completed")+`
  </button>
</template>

<style>
.done {
  text-decoration: line-through;
}
</style>
  `,1),s[11]||(s[11]=w(`
`))]),s[32]||(s[32]=Z(`<h2 id="lifecyle" data-v-86d43cc7>Lifecyle</h2><h3 id="lifecyle-and-template-refs" data-v-86d43cc7>LifeCyle and template Refs</h3><p data-v-86d43cc7>Adalah panduan untuk melakukan configurasi DOM secara manual tidak lagi otomatis seperti sebelumnya. </p><pre data-v-86d43cc7>  <code data-v-86d43cc7>
    &lt;script setup&gt;
import { ref, onMounted } from &#39;vue&#39; 

// Ambil alamat dengan &#39;Template Ref&#39;
const pElementRef = ref(null)

onMounted(() =&gt; {
  // onMounted adalah kondisi status saat component Mounted didalam LifeCyle
  // ini adalah blok code yang akan di eksekusi jika statusnya adalah mounted
  pElementRef.value.textContent = &#39;mounted!&#39; // timpa text
})

&lt;/script&gt;

&lt;template&gt;
  &lt;!-- Gunakan alamat tersebut di element HTML yang dituju --&gt;
  &lt;p ref=&quot;pElementRef&quot;&gt;Hello&lt;/p&gt;
&lt;/template&gt;
  </code>
</pre><p data-v-86d43cc7>Kondisi component ( hooks ):</p><ul data-v-86d43cc7><li data-v-86d43cc7>onMounted</li><li data-v-86d43cc7>onUpdate </li><li data-v-86d43cc7><p data-v-86d43cc7>onUnmounted</p><h2 id="components" data-v-86d43cc7>Components</h2><p data-v-86d43cc7>salah satu hal yang akan menjadi media terbaik dari vue adalah components. Yaitu dimana kita akan membuat component dan akan dilekatkan kepada component lain.</p><p data-v-86d43cc7>Contoh:</p></li></ul><pre data-v-86d43cc7>  <code data-v-86d43cc7>
    &lt;script setup&gt;
// Panggil component lain
import ChildComp from &#39;./ChildComp.vue&#39;
&lt;/script&gt;

&lt;template&gt;
  &lt;!-- render child component --&gt;
   &lt;!-- Tempel mereka disini --&gt;
  &lt;ChildComp /&gt;
&lt;/template&gt;
  </code>
</pre><h2 id="props" data-v-86d43cc7>Props</h2><p data-v-86d43cc7> adalah metode mengirim data kepada component lain dari penerima. bentuknya seperti ini:</p><ul data-v-86d43cc7><li data-v-86d43cc7>Komponen A (Import / penerima / Parent component) adalah sebagai penerima komponen lain</li><li data-v-86d43cc7>Komponen B (Export / pengirim / child component) adalah komponen lain yang akan melengkapi</li></ul><p data-v-86d43cc7>Code Komponen A (Parent component)</p><pre data-v-86d43cc7>  <code data-v-86d43cc7>
    &lt;script setup&gt;
import { ref } from &#39;vue&#39;
import ChildComp from &#39;./ChildComp.vue&#39; // panggil komponen B

const greeting = ref(&#39;Hello from parent&#39;) // buat state
&lt;/script&gt;

&lt;template&gt;
  &lt;ChildComp :msg=&quot;greeting&quot; /&gt; &lt;!-- Kirim data State ke komponen B --&gt;
&lt;/template&gt;
  </code>
</pre><p data-v-86d43cc7>code komponen B (child component)</p>`,13)),c("pre",null,[s[12]||(s[12]=w("  ")),c("code",null,`
    <script setup>
const props = defineProps({ // Buat metode menerima data
  msg: String // 'msg' adalah alamat variabel yang digunakan untuk menerima
})
<\/script>

<template>
  <h2>`+Ba(t.msg||"No props passed yet")+`</h2> <!-- pasang variabel -->
</template>

  `,1),s[13]||(s[13]=w(`
`))]),s[33]||(s[33]=c("p",null,"Note:",-1)),s[34]||(s[34]=c("ul",null,[c("li",null,"'defineProps()' sudah built-in, oleh karena itu komponen B tidak perlu melakukan import")],-1)),s[35]||(s[35]=c("h2",{id:"emits"},"Emits",-1)),s[36]||(s[36]=c("p",null,"adalah aksi parent (Komponent A) mengirim state ke komponent child (Komponent B)",-1)),c("pre",null,[s[14]||(s[14]=w("  ")),c("code",null,`
    <script setup>
  // ========= Ini adalah komponent parent (Komponent A) =======
import { ref } from 'vue'
import ChildComp from './ChildComp.vue' // panggil komponent child

const childMsg = ref('No child msg yet') // Buat state
<\/script>

<template>
  <!-- panggil 'ChildComp' untuk menggambil state component child-->
   <!-- ChildComp hanya akan menampilkkan 'template' saja-->
  <ChildComp @response="(msg) => childMsg = msg" />
  <!-- 'hello from child' akan ditampikan dibawah sini (state awal di timpa)-->
  <p>`+Ba(t.childMsg)+`</p>
</template>
  `,1),s[15]||(s[15]=w(`
`))]),s[37]||(s[37]=Z(`<pre data-v-86d43cc7><code data-v-86d43cc7>
  &lt;script setup&gt;
   // ========= Ini adalah komponent child (Komponent B) =======
const emit = defineEmits([&#39;response&#39;])

emit(&#39;response&#39;, &#39;hello from child&#39;)
&lt;/script&gt;

&lt;template&gt;
  &lt;h2&gt;Child component&lt;/h2&gt;
&lt;/template&gt;
</code>
</pre><h2 id="slots" data-v-86d43cc7>Slots</h2><p data-v-86d43cc7>adalah metode parent component untuk mengirimkan dara ke child component.</p><p data-v-86d43cc7>Data dari parent akan dikirim ke element &quot;slot&quot;, dan tidak akan mengangu element lainnya.</p><p data-v-86d43cc7>content didalam element &quot;slot&quot; akan ditimpa oleh data dari parent</p><pre data-v-86d43cc7><code data-v-86d43cc7>
  &lt;template&gt;
  &lt;!-- Ini adalah child components --&gt;
  &lt;slot&gt;Fallback content&lt;/slot&gt;
  &lt;p&gt;
    hanya elemnt &quot;slot&quot; yang diubah
  &lt;/p&gt;
&lt;/template&gt;
</code>
</pre><p data-v-86d43cc7>dibawah ini adalah parent components</p>`,7)),c("pre",null,[s[16]||(s[16]=w("")),c("code",null,`
  <script setup>
  // Ini adalah parent component
import { ref } from 'vue'
import ChildComp from './ChildComp.vue'

const msg = ref('from parent')
<\/script>

<template>
  <ChildComp>Message: `+Ba(t.msg)+`</ChildComp>
</template>
`,1),s[17]||(s[17]=w(`
`))]),s[38]||(s[38]=Z('<h2 id="router" data-v-86d43cc7>Router</h2><p data-v-86d43cc7>Adalah Fungsi Untuk berpindah komponent, penjelasan lebih detail ada disini</p><p data-v-86d43cc7><a href="./vue/router.md" data-v-86d43cc7>Route Vue Js</a></p><hr data-v-86d43cc7><h1 id="glosarium-kata-kunci" data-v-86d43cc7>Glosarium | Kata kunci</h1><hr data-v-86d43cc7><h3 id="declarative-rendering-dr" data-v-86d43cc7>Declarative Rendering | DR</h3><p data-v-86d43cc7>adalah perpanjangan dari vue yang membantu kita untuk menulis HTML didalam file berebntuk JavaScript</p><h3 id="reactivity" data-v-86d43cc7>Reactivity</h3><p data-v-86d43cc7>Vue akan secara otomatis melakukan tracking terhadap perubaha JavaScript &#39;state&#39; dan melakukan perubahan kepada DOM dengan seksama.</p><h3 id="single-file-components-sfl" data-v-86d43cc7>Single-File Components | SFL</h3><p data-v-86d43cc7>adalah sebuah format file yang mengabungkan antara: HTML, JavaScript, CSS dengan nama format adalah &#39;*.vue&#39;</p>',12)),c("pre",null,[s[18]||(s[18]=w("")),c("code",null,`
  <script setup>

import { ref } from 'vue'

const count = ref(0)

<\/script>



<template>

  <button @click="count++">Count is: `+Ba(t.count)+`</button>

</template>



<style scoped>

button {

  font-weight: bold;

}

</style>
`,1),s[19]||(s[19]=w(`
`))]),s[39]||(s[39]=c("p",null,"Format ini adalah bentuk rekomendasi dari Author ( official Vue )",-1)),s[40]||(s[40]=c("h2",{id:"latihan-vue"},"Latihan Vue",-1)),c("p",null,[S(n,{to:"/ltVue",class:"LFT-Item"},{default:x(()=>s[20]||(s[20]=[w(" Latihan Vue ")])),_:1})]),s[41]||(s[41]=c("hr",null,null,-1)),s[42]||(s[42]=c("h1",{id:"reference"},"Reference",-1)),s[43]||(s[43]=c("hr",null,null,-1)),s[44]||(s[44]=c("ul",null,[c("li",null,[c("a",{href:"https://vuejs.org/guide/introduction.html"},"https://vuejs.org/guide/introduction.html")])],-1)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[21]||(s[21]=[w("Go to Home")])),_:1})])],64)}}},Ef=ca(Tf,[["__scopeId","data-v-86d43cc7"]]),Cf={class:"quiz-container"},Af={class:"quiz-header"},Lf={class:"progress-bar"},Mf={key:0,class:"explanation-section"},Rf=["innerHTML"],Df=["innerHTML"],Pf=["innerHTML"],If=["innerHTML"],Nf={class:"quiz-navigation"},Of={__name:"css",setup(a){const t=sa(!1),s=sa(!1),n=sa(!1),e=sa(!1),l=sa(null),i=sa(!1);function o(){t.value=!t.value,s.value=!1,n.value=!1,e.value=!1,i.value=!0}function r(){s.value=!s.value,t.value=!1,n.value=!1,e.value=!1,i.value=!0}function h(){n.value=!n.value,t.value=!1,s.value=!1,e.value=!1,i.value=!0}function u(){e.value=!e.value,t.value=!1,s.value=!1,n.value=!1,i.value=!0}function v(){t.value=!1,s.value=!1,n.value=!1,e.value=!1,l.value=null,i.value=!1}let j=sa(`
<div class="answer-content 

wrong-answer  <!--Ubah bagian kiri ini, yaitu "wrong-answer" ini menjadi "correct-answer" jika pilihan ganda A adalah benar -->


  <div class="answer-header">

    <!-- ================== Edit Diantara ini ============= -->
    <span class="icon">❌</span>
    <h3>Jawaban Salah</h3>
  </div>
  <p>Media query tidak digunakan untuk menentukan jenis media, tetapi untuk menyesuaikan tampilan berdasarkan kondisi perangkat.</p>
  <div class="correct-info">
    <p>Media query dalam CSS digunakan untuk mengatur tampilan halaman web berdasarkan kondisi perangkat pengguna, seperti lebar layar.</p>
    <!-- ================== Edit Diantara ini ============= -->
  
    </div>
</div>
`);const k=sa(`
<div class="answer-content 

correct-answer  <!--Ubah bagian kiri ini, yaitu "correct-answer" ini menjadi "wrong-answer" jika pilihan ganda B adalah salah -->

  <div class="answer-header">

    <span class="icon">✅</span>
    <h3>Jawaban Benar!</h3>
  </div>
  <p>Media query dalam CSS digunakan untuk mengatur tampilan halaman web berdasarkan kondisi perangkat pengguna, seperti lebar layar.</p>
  <div class="extra-info">
    <p>Media query adalah fitur penting dalam CSS yang memungkinkan desain responsif (responsive design). Ini berarti halaman web dapat menyesuaikan tampilannya secara otomatis berdasarkan karakteristik perangkat pengguna, seperti:</p>
  
    </div>
</div>
`);let M=sa(`
<div class="answer-content 

wrong-answer  <!--Ubah bagian kiri ini, yaitu "wrong-answer" ini menjadi "correct-answer" jika pilihan ganda C adalah benar -->


  <div class="answer-header">

    <!-- ================== Edit Diantara ini ============= -->
    <span class="icon">❌</span>
    <h3>Jawaban Salah</h3>
  </div>
  <p>Menghubungkan file CSS eksternal dilakukan dengan tag <link>, bukan media query.</p>
  <div class="correct-info">
    <p>Media query dalam CSS digunakan untuk mengatur tampilan halaman web berdasarkan kondisi perangkat pengguna, seperti lebar layar.</p>
    <!-- ================== Edit Diantara ini ============= -->

  </div>
</div>
`);const C=sa(`
<div class="answer-content 

wrong-answer  <!--Ubah bagian kiri ini, yaitu "wrong-answer" ini menjadi "correct-answer" jika pilihan ganda D adalah benar -->


  <div class="answer-header">

     <!-- ================== Edit Diantara ini ============= -->
    <span class="icon">❌</span>
    <h3>Jawaban Salah</h3>
  </div>
  <p>Menambahkan interaktivitas biasanya dilakukan dengan JavaScript, bukan media query.</p>
  <div class="correct-info">
    <p> Media query dalam CSS digunakan untuk mengatur tampilan halaman web berdasarkan kondisi perangkat pengguna, seperti lebar layar.</p>
    <!-- ================== Edit Diantara ini ============= -->

  </div>
</div>
`);return(O,y)=>{const I=la("RouterLink");return $(),J("div",Cf,[c("div",Af,[y[0]||(y[0]=c("div",{class:"quiz-badge"},[c("span",{class:"badge-icon"},"🧠"),c("span",null,"Programming Quiz")],-1)),y[1]||(y[1]=c("h1",{class:"quiz-title"}," CSS Challenge ",-1)),c("div",Lf,[c("div",{class:"progress-fill",style:$s({width:i.value?"100%":"0%"})},null,4)])]),y[8]||(y[8]=c("div",{class:"question-card"},[c("div",{class:"question-number"},"Question"),c("h2",{class:"question-text"},[c("strong",null,"Apa tujuan dari media query dalam CSS?")])],-1)),c("div",{class:"answers-section"},[c("div",{class:"answers-grid"},[c("button",{class:"answer-btn",onClick:o},y[2]||(y[2]=[c("span",{class:"answer-letter"},"A",-1),c("span",{class:"answer-text"}," Menentukan jenis media yang digunakan untuk menampilkan halaman web ",-1)])),c("button",{class:"answer-btn",onClick:r},y[3]||(y[3]=[c("span",{class:"answer-letter"},"B",-1),c("span",{class:"answer-text"}," Mengatur tampilan halaman web berdasarkan kondisi perangkat pengguna ",-1)])),c("button",{class:"answer-btn",onClick:h},y[4]||(y[4]=[c("span",{class:"answer-letter"},"C",-1),c("span",{class:"answer-text"}," Menghubungkan file CSS eksternal dengan dokumen HTML ",-1)])),c("button",{class:"answer-btn",onClick:u},y[5]||(y[5]=[c("span",{class:"answer-letter"},"D",-1),c("span",{class:"answer-text"}," Menambahkan interaktivitas pada elemen halaman web ",-1)]))])]),S(Gt,{name:"slide-down"},{default:x(()=>[t.value||s.value||n.value||e.value?($(),J("div",Mf,[t.value?($(),J("div",{key:0,innerHTML:Na(j),class:"explanation-card"},null,8,Rf)):qa("",!0),s.value?($(),J("div",{key:1,innerHTML:k.value,class:"explanation-card"},null,8,Df)):qa("",!0),n.value?($(),J("div",{key:2,innerHTML:Na(M),class:"explanation-card"},null,8,Pf)):qa("",!0),e.value?($(),J("div",{key:3,innerHTML:C.value,class:"explanation-card"},null,8,If)):qa("",!0),c("div",{class:"quiz-actions"},[c("button",{onClick:v,class:"reset-btn"},y[6]||(y[6]=[c("span",{class:"btn-icon"},"🔄",-1),w(" Try Again ")]))])])):qa("",!0)]),_:1}),c("nav",Nf,[S(I,{to:"/",class:"nav-link"},{default:x(()=>y[7]||(y[7]=[c("span",{class:"nav-icon"},"🏠",-1),w(" Go to Home ")])),_:1})])])}}},Hf=ca(Of,[["__scopeId","data-v-245910e7"]]),Bf={class:"quiz-container"},$f={class:"quiz-header"},Ff={class:"progress-bar"},Jf={key:0,class:"explanation-section"},Uf=["innerHTML"],Vf=["innerHTML"],Kf=["innerHTML"],zf=["innerHTML"],Wf={class:"quiz-navigation"},Gf={__name:"git",setup(a){const t=sa(!1),s=sa(!1),n=sa(!1),e=sa(!1),l=sa(null),i=sa(!1);function o(){t.value=!t.value,s.value=!1,n.value=!1,e.value=!1,i.value=!0}function r(){s.value=!s.value,t.value=!1,n.value=!1,e.value=!1,i.value=!0}function h(){n.value=!n.value,t.value=!1,s.value=!1,e.value=!1,i.value=!0}function u(){e.value=!e.value,t.value=!1,s.value=!1,n.value=!1,i.value=!0}function v(){t.value=!1,s.value=!1,n.value=!1,e.value=!1,l.value=null,i.value=!1}let j=sa(`
<div class="answer-content 

wrong-answer  <!--Ubah bagian kiri ini, yaitu "wrong-answer" ini menjadi "correct-answer" jika pilihan ganda A adalah benar -->

  <div class="answer-header">

    <!-- ================== Edit Diantara ini ============= -->
    <span class="icon">❌</span>
    <h3>Jawaban Salah</h3>
  </div>
  <p>Salah. Ini adalah kebalikan dari fungsi sebenarnya.</p>
  <div class="correct-info">
    <p>git pull mengambil perubahan dari repository remote dan langsung menggabungkannya dengan branch saat ini, sedangkan git fetch hanya mengambil perubahan dan menyimpannya di repository lokal tanpa menggabungkannya.</p>
    <!-- ================== Edit Diantara ini ============= -->
  
    </div>
</div>
`);const k=sa(`
<div class="answer-content 

correct-answer  <!--Ubah bagian kiri ini, yaitu "correct-answer" ini menjadi "wrong-answer" jika pilihan ganda B adalah salah -->

  <div class="answer-header">

    <span class="icon">✅</span>
    <h3>Jawaban Salah</h3>
  </div>
  <p>git pull mengambil perubahan dari repository remote dan langsung menggabungkannya dengan branch saat ini, sedangkan git fetch hanya mengambil perubahan dan menyimpannya di repository lokal tanpa menggabungkannya.</p>
  <div class="extra-info">
    <p>Menggunakan git fetch memberikan kontrol lebih besar karena Anda dapat meninjau perubahan sebelum menggabungkannya, sedangkan git pull lebih cepat karena langsung menggabungkan perubahan.</p>
  
    </div>
</div>
`);let M=sa(`
<div class="answer-content 

wrong-answer  <!--Ubah bagian kiri ini, yaitu "wrong-answer" ini menjadi "correct-answer" jika pilihan ganda C adalah benar -->

  <div class="answer-header">

    <!-- ================== Edit Diantara ini ============= -->
    <span class="icon">❌</span>
    <h3>Jawaban Salah</h3>
  </div>
  <p>git pull dan git fetch tidak digunakan untuk menghapus atau membuat branch.</p>
  <div class="correct-info">
    <p>git pull mengambil perubahan dari repository remote dan langsung menggabungkannya dengan branch saat ini, sedangkan git fetch hanya mengambil perubahan dan menyimpannya di repository lokal tanpa menggabungkannya.</p>
    <!-- ================== Edit Diantara ini ============= -->

  </div>
</div>
`);const C=sa(`
<div class="answer-content 

wrong-answer  <!--Ubah bagian kiri ini, yaitu "wrong-answer" ini menjadi "correct-answer" jika pilihan ganda D adalah benar -->

  <div class="answer-header">

     <!-- ================== Edit Diantara ini ============= -->
    <span class="icon">❌</span>
    <h3>Jawaban Salah</h3>
  </div>
  <p>Protokol ini digunakan untuk komunikasi di web, memungkinkan transfer data antara browser web dan server web</p>
  <div class="correct-info">
    <p><strong>Jawaban yang benar adalah HTTPS</strong> - protokol yang digunakan untuk website seperti FPC.</p>
    <!-- ================== Edit Diantara ini ============= -->

  </div>
</div>
`);return(O,y)=>{const I=la("RouterLink");return $(),J("div",Bf,[c("div",$f,[y[0]||(y[0]=c("div",{class:"quiz-badge"},[c("span",{class:"badge-icon"},"🧠"),c("span",null,"Programming Quiz")],-1)),y[1]||(y[1]=c("h1",{class:"quiz-title"}," Git Challenge ",-1)),c("div",Ff,[c("div",{class:"progress-fill",style:$s({width:i.value?"100%":"0%"})},null,4)])]),y[8]||(y[8]=c("div",{class:"question-card"},[c("div",{class:"question-number"},"Question"),c("h2",{class:"question-text"}," Apa perbedaan utama antara perintah git pull dan git fetch? ")],-1)),c("div",{class:"answers-section"},[c("div",{class:"answers-grid"},[c("button",{class:"answer-btn",onClick:o},y[2]||(y[2]=[c("span",{class:"answer-letter"},"A",-1),c("span",{class:"answer-text"}," git pull hanya mengambil perubahan tanpa menggabungkannya, sedangkan git fetch mengambil dan langsung menggabungkan perubahan ",-1)])),c("button",{class:"answer-btn",onClick:r},y[3]||(y[3]=[c("span",{class:"answer-letter"},"B",-1),c("span",{class:"answer-text"}," git pull mengambil dan langsung menggabungkan perubahan, sedangkan git fetch hanya mengambil perubahan tanpa menggabungkannya ",-1)])),c("button",{class:"answer-btn",onClick:h},y[4]||(y[4]=[c("span",{class:"answer-letter"},"C",-1),c("span",{class:"answer-text"}," git pull digunakan untuk menghapus branch, sedangkan git fetch digunakan untuk membuat branch baru ",-1)])),c("button",{class:"answer-btn",onClick:u},y[5]||(y[5]=[c("span",{class:"answer-letter"},"D",-1),c("span",{class:"answer-text"}," Tidak ada perbedaan; keduanya melakukan fungsi yang sama ",-1)]))])]),S(Gt,{name:"slide-down"},{default:x(()=>[t.value||s.value||n.value||e.value?($(),J("div",Jf,[t.value?($(),J("div",{key:0,innerHTML:Na(j),class:"explanation-card"},null,8,Uf)):qa("",!0),s.value?($(),J("div",{key:1,innerHTML:k.value,class:"explanation-card"},null,8,Vf)):qa("",!0),n.value?($(),J("div",{key:2,innerHTML:Na(M),class:"explanation-card"},null,8,Kf)):qa("",!0),e.value?($(),J("div",{key:3,innerHTML:C.value,class:"explanation-card"},null,8,zf)):qa("",!0),c("div",{class:"quiz-actions"},[c("button",{onClick:v,class:"reset-btn"},y[6]||(y[6]=[c("span",{class:"btn-icon"},"🔄",-1),w(" Try Again ")]))])])):qa("",!0)]),_:1}),c("nav",Wf,[S(I,{to:"/",class:"nav-link"},{default:x(()=>y[7]||(y[7]=[c("span",{class:"nav-icon"},"🏠",-1),w(" Go to Home ")])),_:1})])])}}},Yf=ca(Gf,[["__scopeId","data-v-237245ab"]]),Qf={class:"quiz-container"},Xf={class:"quiz-header"},Zf={class:"progress-bar"},a0={key:0,class:"explanation-section"},s0=["innerHTML"],t0=["innerHTML"],n0=["innerHTML"],e0=["innerHTML"],d0={class:"quiz-navigation"},l0={__name:"ruby",setup(a){const t=sa(!1),s=sa(!1),n=sa(!1),e=sa(!1),l=sa(null),i=sa(!1);function o(){t.value=!t.value,s.value=!1,n.value=!1,e.value=!1,i.value=!0}function r(){s.value=!s.value,t.value=!1,n.value=!1,e.value=!1,i.value=!0}function h(){n.value=!n.value,t.value=!1,s.value=!1,e.value=!1,i.value=!0}function u(){e.value=!e.value,t.value=!1,s.value=!1,n.value=!1,i.value=!0}function v(){t.value=!1,s.value=!1,n.value=!1,e.value=!1,l.value=null,i.value=!1}let j=sa(`
<div class="answer-content 

correct-answer  <!--Ubah bagian kiri ini, yaitu "wrong-answer" ini menjadi "correct-answer" jika pilihan ganda A adalah benar -->

  <div class="answer-header">

    <!-- ================== Edit Diantara ini ============= -->
    <span class="icon">✅</span>
    <h3>Jawaban Benar</h3>
  </div>
  <p>gets membaca input dari pengguna, dan chomp menghapus karakter newline (
) di akhir input.</p>
  <div class="extra-info">
    <p>Saat membaca input dari pengguna menggunakan <strong>gets</strong>, hasilnya akan menyertakan karakter newline di akhir. Menggunakan <strong>chomp</strong> akan menghapus karakter tersebut, sehingga memudahkan dalam pemrosesan data.</p>
    <!-- ================== Edit Diantara ini ============= -->
  
    </div>
</div>
`);const k=sa(`
<div class="answer-content 

wrong-answer  <!--Ubah bagian kiri ini, yaitu "correct-answer" ini menjadi "wrong-answer" jika pilihan ganda B adalah salah -->

  <div class="answer-header">

    <span class="icon">❌</span>
    <h3>Jawaban Salah</h3>
  </div>
  <p>Menampilkan output ke layar dilakukan dengan puts atau print.</p>
  <div class="correct-info">
    <p>gets membaca input dari pengguna, dan chomp menghapus karakter newline (
) di akhir input.</p>
  
    </div>
</div>
`);let M=sa(`
<div class="answer-content 

wrong-answer  <!--Ubah bagian kiri ini, yaitu "wrong-answer" ini menjadi "correct-answer" jika pilihan ganda C adalah benar -->

  <div class="answer-header">

    <!-- ================== Edit Diantara ini ============= -->
    <span class="icon">❌</span>
    <h3>Jawaban Salah</h3>
  </div>
  <p>chomp hanya menghapus karakter newline, bukan semua spasi.</p>
  <div class="correct-info">
    <p>gets membaca input dari pengguna, dan chomp menghapus karakter newline (
) di akhir input.</p>
    <!-- ================== Edit Diantara ini ============= -->

  </div>
</div>
`);const C=sa(`
<div class="answer-content 

wrong-answer  <!--Ubah bagian kiri ini, yaitu "wrong-answer" ini menjadi "correct-answer" jika pilihan ganda D adalah benar -->

  <div class="answer-header">

     <!-- ================== Edit Diantara ini ============= -->
    <span class="icon">❌</span>
    <h3>Jawaban Salah</h3>
  </div>
  <p>Penggabungan string dilakukan dengan operator + atau metode concat.</p>
  <div class="correct-info">
    <p>gets membaca input dari pengguna, dan chomp menghapus karakter newline (
) di akhir input.</p>
    <!-- ================== Edit Diantara ini ============= -->

  </div>
</div>
`);return(O,y)=>{const I=la("RouterLink");return $(),J("div",Qf,[c("div",Xf,[y[0]||(y[0]=c("div",{class:"quiz-badge"},[c("span",{class:"badge-icon"},"🧠"),c("span",null,"Programming Quiz")],-1)),y[1]||(y[1]=c("h1",{class:"quiz-title"}," Ruby Challenge ",-1)),c("div",Zf,[c("div",{class:"progress-fill",style:$s({width:i.value?"100%":"0%"})},null,4)])]),y[8]||(y[8]=c("div",{class:"question-card"},[c("div",{class:"question-number"},"Question"),c("h2",{class:"question-text"},[w(" Apa yang dilakukan oleh perintah "),c("strong",null,"gets.chomp"),w(" dalam Ruby? ")])],-1)),c("div",{class:"answers-section"},[c("div",{class:"answers-grid"},[c("button",{class:"answer-btn",onClick:o},y[2]||(y[2]=[c("span",{class:"answer-letter"},"A",-1),c("span",{class:"answer-text"}," Membaca input dari pengguna dan menghapus karakter newline di akhir ",-1)])),c("button",{class:"answer-btn",onClick:r},y[3]||(y[3]=[c("span",{class:"answer-letter"},"B",-1),c("span",{class:"answer-text"}," Menampilkan output ke layar ",-1)])),c("button",{class:"answer-btn",onClick:h},y[4]||(y[4]=[c("span",{class:"answer-letter"},"C",-1),c("span",{class:"answer-text"}," Menghapus semua spasi dari input pengguna ",-1)])),c("button",{class:"answer-btn",onClick:u},y[5]||(y[5]=[c("span",{class:"answer-letter"},"D",-1),c("span",{class:"answer-text"}," Menggabungkan dua string ",-1)]))])]),S(Gt,{name:"slide-down"},{default:x(()=>[t.value||s.value||n.value||e.value?($(),J("div",a0,[t.value?($(),J("div",{key:0,innerHTML:Na(j),class:"explanation-card"},null,8,s0)):qa("",!0),s.value?($(),J("div",{key:1,innerHTML:k.value,class:"explanation-card"},null,8,t0)):qa("",!0),n.value?($(),J("div",{key:2,innerHTML:Na(M),class:"explanation-card"},null,8,n0)):qa("",!0),e.value?($(),J("div",{key:3,innerHTML:C.value,class:"explanation-card"},null,8,e0)):qa("",!0),c("div",{class:"quiz-actions"},[c("button",{onClick:v,class:"reset-btn"},y[6]||(y[6]=[c("span",{class:"btn-icon"},"🔄",-1),w(" Try Again ")]))])])):qa("",!0)]),_:1}),c("nav",d0,[S(I,{to:"/",class:"nav-link"},{default:x(()=>y[7]||(y[7]=[c("span",{class:"nav-icon"},"🏠",-1),w(" Go to Home ")])),_:1})])])}}},i0=ca(l0,[["__scopeId","data-v-e27c01fd"]]),c0={class:"quiz-container"},p0={class:"quiz-header"},r0={class:"progress-bar"},o0={key:0,class:"explanation-section"},u0=["innerHTML"],h0=["innerHTML"],v0=["innerHTML"],m0=["innerHTML"],b0={class:"quiz-navigation"},f0={__name:"vim",setup(a){const t=sa(!1),s=sa(!1),n=sa(!1),e=sa(!1),l=sa(null),i=sa(!1);function o(){t.value=!t.value,s.value=!1,n.value=!1,e.value=!1,i.value=!0}function r(){s.value=!s.value,t.value=!1,n.value=!1,e.value=!1,i.value=!0}function h(){n.value=!n.value,t.value=!1,s.value=!1,e.value=!1,i.value=!0}function u(){e.value=!e.value,t.value=!1,s.value=!1,n.value=!1,i.value=!0}function v(){t.value=!1,s.value=!1,n.value=!1,e.value=!1,l.value=null,i.value=!1}let j=sa(`
<div class="answer-content 

correct-answer  <!--Ubah bagian kiri ini, yaitu "wrong-answer" ini menjadi "correct-answer" jika pilihan ganda A adalah benar -->

  <div class="answer-header">

    <!-- ================== Edit Diantara ini ============= -->
    <span class="icon">✅</span>
    <h3>Jawaban Benar</h3>
  </div>
  <p>:wq digunakan untuk menyimpan perubahan dan keluar dari Vim.</p>
  <div class="extra-info">
    <p>Perintah :wq menggabungkan dua perintah: :w (write/save) dan :q (quit). Ini adalah cara efisien untuk menyimpan perubahan dan keluar dari editor.</p>
    <!-- ================== Edit Diantara ini ============= -->
  
    </div>
</div>
`);const k=sa(`
<div class="answer-content 

wrong-answer  <!--Ubah bagian kiri ini, yaitu "correct-answer" ini menjadi "wrong-answer" jika pilihan ganda B adalah salah -->

  <div class="answer-header">

    <span class="icon">❌</span>
    <h3>Jawaban Salah</h3>
  </div>
  <p>:q! digunakan untuk keluar tanpa menyimpan perubahan./p>
  <div class="correct-info">
    <p>:wq digunakan untuk menyimpan perubahan dan keluar dari Vim.</p>
  
    </div>
</div>
`);let M=sa(`
<div class="answer-content 

wrong-answer  <!--Ubah bagian kiri ini, yaitu "wrong-answer" ini menjadi "correct-answer" jika pilihan ganda C adalah benar -->

  <div class="answer-header">

    <!-- ================== Edit Diantara ini ============= -->
    <span class="icon">❌</span>
    <h3>Jawaban Salah</h3>
  </div>
  <p>:w digunakan untuk menyimpan file tanpa keluar./p>
  <div class="correct-info">
    <p>:wq digunakan untuk menyimpan perubahan dan keluar dari Vim.</p>
    <!-- ================== Edit Diantara ini ============= -->

  </div>
</div>
`);const C=sa(`
<div class="answer-content 

wrong-answer  <!--Ubah bagian kiri ini, yaitu "wrong-answer" ini menjadi "correct-answer" jika pilihan ganda D adalah benar -->

  <div class="answer-header">

     <!-- ================== Edit Diantara ini ============= -->
    <span class="icon">❌</span>
    <h3>Jawaban Salah</h3>
  </div>
  <p>Tidak ada perintah khusus untuk keluar tanpa menyimpan file baru; biasanya menggunakan :q!.</p>
  <div class="correct-info">
    <p>:wq digunakan untuk menyimpan perubahan dan keluar dari Vim.</p>
    <!-- ================== Edit Diantara ini ============= -->

  </div>
</div>
`);return(O,y)=>{const I=la("RouterLink");return $(),J("div",c0,[c("div",p0,[y[0]||(y[0]=c("div",{class:"quiz-badge"},[c("span",{class:"badge-icon"},"🧠"),c("span",null,"Programming Quiz")],-1)),y[1]||(y[1]=c("h1",{class:"quiz-title"}," Vim Challenge ",-1)),c("div",r0,[c("div",{class:"progress-fill",style:$s({width:i.value?"100%":"0%"})},null,4)])]),y[8]||(y[8]=c("div",{class:"question-card"},[c("div",{class:"question-number"},"Question"),c("h2",{class:"question-text"}," Apa fungsi dari perintah :wq di Vim ? ")],-1)),c("div",{class:"answers-section"},[c("div",{class:"answers-grid"},[c("button",{class:"answer-btn",onClick:o},y[2]||(y[2]=[c("span",{class:"answer-letter"},"A",-1),c("span",{class:"answer-text"}," Menyimpan file dan keluar dari Vim ",-1)])),c("button",{class:"answer-btn",onClick:r},y[3]||(y[3]=[c("span",{class:"answer-letter"},"B",-1),c("span",{class:"answer-text"}," Keluar tanpa menyimpan perubahan ",-1)])),c("button",{class:"answer-btn",onClick:h},y[4]||(y[4]=[c("span",{class:"answer-letter"},"C",-1),c("span",{class:"answer-text"}," Menyimpan file tanpa keluar ",-1)])),c("button",{class:"answer-btn",onClick:u},y[5]||(y[5]=[c("span",{class:"answer-letter"},"D",-1),c("span",{class:"answer-text"}," Keluar dari Vim tanpa menyimpan file baru ",-1)]))])]),S(Gt,{name:"slide-down"},{default:x(()=>[t.value||s.value||n.value||e.value?($(),J("div",o0,[t.value?($(),J("div",{key:0,innerHTML:Na(j),class:"explanation-card"},null,8,u0)):qa("",!0),s.value?($(),J("div",{key:1,innerHTML:k.value,class:"explanation-card"},null,8,h0)):qa("",!0),n.value?($(),J("div",{key:2,innerHTML:Na(M),class:"explanation-card"},null,8,v0)):qa("",!0),e.value?($(),J("div",{key:3,innerHTML:C.value,class:"explanation-card"},null,8,m0)):qa("",!0),c("div",{class:"quiz-actions"},[c("button",{onClick:v,class:"reset-btn"},y[6]||(y[6]=[c("span",{class:"btn-icon"},"🔄",-1),w(" Try Again ")]))])])):qa("",!0)]),_:1}),c("nav",b0,[S(I,{to:"/",class:"nav-link"},{default:x(()=>y[7]||(y[7]=[c("span",{class:"nav-icon"},"🏠",-1),w(" Go to Home ")])),_:1})])])}}},g0=ca(f0,[["__scopeId","data-v-94a6f99d"]]),k0={__name:"js-note1",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="javascript-class" data-v-7cd6f26b>javascript class</h1><h3 id="class" data-v-7cd6f26b>Class</h3><p data-v-7cd6f26b>Secara simple &quot;class&quot; pada javascript adalah sebuah blueprint untuk membuat object yang memiliki kemiripan pada properties dan kebiasaan. Dengan &quot;class&quot; kita bisa membuat properties dan method yang dapat dibagikan dengan instance &quot;class&quot; lainnya. </p><p data-v-7cd6f26b>Teman-teman bisa bayangkan class adalah sebuah cetakan kue ataupun cetakan es krim yang bisa kita gunakan untuk membuat banyak kue dengan rasa yang berbeda-beda tetapi memiliki bentuk kue yang sama.</p><p data-v-7cd6f26b>Dengan class kita bisa mengatur sebuah project code yang besar dengan lebih effisient. </p><h3 id="method" data-v-7cd6f26b>Method</h3><p data-v-7cd6f26b>Method pada javascript adalah sebuah function yang berada didalam object. Method memiliki kemampuan untuk mengakses method lain atau properties yang ada didalam object. Method dan function itu sama, yang membedakan adalah cara pemanggilan. Function bisa dipanggil secara langsung, sedangkan method harus dipanggil melalui object </p><pre data-v-7cd6f26b><code data-v-7cd6f26b><span class="hljs-keyword" data-v-7cd6f26b>const</span> person = {
  <span class="hljs-attr" data-v-7cd6f26b>name</span>: <span class="hljs-string" data-v-7cd6f26b>&quot;John&quot;</span>,
  <span class="hljs-attr" data-v-7cd6f26b>age</span>: <span class="hljs-number" data-v-7cd6f26b>30</span>,
  <span class="hljs-attr" data-v-7cd6f26b>greet</span>: <span class="hljs-function" data-v-7cd6f26b><span class="hljs-keyword" data-v-7cd6f26b>function</span>(<span class="hljs-params" data-v-7cd6f26b></span>) </span>{
    <span class="hljs-built_in" data-v-7cd6f26b>console</span>.log(<span class="hljs-string" data-v-7cd6f26b>\`Hello, my name is <span class="hljs-subst" data-v-7cd6f26b>\${<span class="hljs-keyword" data-v-7cd6f26b>this</span>.name}</span> and I am <span class="hljs-subst" data-v-7cd6f26b>\${<span class="hljs-keyword" data-v-7cd6f26b>this</span>.age}</span> years old.\`</span>);
<span class="hljs-built_in" data-v-7cd6f26b>console</span>.log(<span class="hljs-string" data-v-7cd6f26b>\`-----------------------------------------------------------------------\`</span>)
  }
};

person.greet(); <span class="hljs-comment" data-v-7cd6f26b>// Output: Hello, my name is John and I am 30 years old.</span>
</code></pre><h2 id="function" data-v-7cd6f26b>Function</h2><p data-v-7cd6f26b>Function dan parameter itu sama. Yang membedakan mereka adalah dimana mereka diletakan. Function yang berada didalam class itu disebut sebagai method. </p><p data-v-7cd6f26b>Ada beberapa cara untuk menulis function pada javascript: </p><ul data-v-7cd6f26b><li data-v-7cd6f26b>Function Declaration: </li></ul><pre data-v-7cd6f26b><code data-v-7cd6f26b><span class="hljs-keyword" data-v-7cd6f26b>function</span> <span class="hljs-title" data-v-7cd6f26b>tambah</span> (x, y) {
    <span class="hljs-keyword" data-v-7cd6f26b>return</span> <span class="hljs-type" data-v-7cd6f26b>x</span> + y
}
</code></pre><ul data-v-7cd6f26b><li data-v-7cd6f26b><p data-v-7cd6f26b>Function Expression: </p><pre data-v-7cd6f26b><code data-v-7cd6f26b><span class="hljs-keyword" data-v-7cd6f26b>const</span> tambah = <span class="hljs-function" data-v-7cd6f26b><span class="hljs-keyword" data-v-7cd6f26b>function</span><span class="hljs-params" data-v-7cd6f26b>(x,y)</span> </span>{
  <span class="hljs-keyword" data-v-7cd6f26b>return</span> x + y
}
</code></pre></li><li data-v-7cd6f26b><p data-v-7cd6f26b>Arrow function: </p><pre data-v-7cd6f26b><code data-v-7cd6f26b>const tambah = <span class="hljs-function" data-v-7cd6f26b><span class="hljs-params" data-v-7cd6f26b>(x, y)</span> =&gt;</span> x + y
</code></pre></li><li data-v-7cd6f26b><p data-v-7cd6f26b>Constructor function: \`\`\` const tambah = function(x, y) { this.x = x this.y = y }</p></li></ul><p data-v-7cd6f26b>const penambahan = new tambah(10, 20) // 30</p><pre data-v-7cd6f26b><code data-v-7cd6f26b><span class="hljs-function" data-v-7cd6f26b><span class="hljs-keyword" data-v-7cd6f26b>constructor</span> <span class="hljs-title" data-v-7cd6f26b>function</span> <span class="hljs-title" data-v-7cd6f26b>akan</span> <span class="hljs-title" data-v-7cd6f26b>membuat</span> <span class="hljs-title" data-v-7cd6f26b>object</span> <span class="hljs-title" data-v-7cd6f26b>baru</span> <span class="hljs-title" data-v-7cd6f26b>setiap</span> <span class="hljs-title" data-v-7cd6f26b>kali</span> <span class="hljs-title" data-v-7cd6f26b>kita</span> <span class="hljs-title" data-v-7cd6f26b>menggunakan</span> &quot;<span class="hljs-title" data-v-7cd6f26b>new</span>&quot;

## <span class="hljs-title" data-v-7cd6f26b>Return</span></span>
</code></pre><p data-v-7cd6f26b>function addNumbers(a, b) { return a + b; }</p><p data-v-7cd6f26b>const result = addNumbers(5, 3); // result will be 8</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>
Secara sederhana perintah <span class="hljs-string" data-v-7cd6f26b>&quot;return&quot;</span> akan menghasilkan suatu nilai <span class="hljs-keyword" data-v-7cd6f26b>jika </span>function tersebut kita panggil.


<span class="hljs-comment" data-v-7cd6f26b>### Paramether and argument </span>

Pada <span class="hljs-keyword" data-v-7cd6f26b>javscript </span>paramter adalah <span class="hljs-keyword" data-v-7cd6f26b>sebuah </span>nilai yang <span class="hljs-keyword" data-v-7cd6f26b>digunakan </span>oleh function <span class="hljs-keyword" data-v-7cd6f26b>sebagai </span>pintu masuk (input data). <span class="hljs-keyword" data-v-7cd6f26b>Disaat </span>kita membuat function parameter adalah variabel yang kita tulis <span class="hljs-keyword" data-v-7cd6f26b>diantara </span>kurung <span class="hljs-keyword" data-v-7cd6f26b>buka </span>dan kurung tutup. 

Sedangkan Argument adalah nilai asli yang akan <span class="hljs-keyword" data-v-7cd6f26b>dimasukan </span>dan <span class="hljs-keyword" data-v-7cd6f26b>diproses </span>oleh function. 
<span class="hljs-symbol" data-v-7cd6f26b>

example:</span>
</code></pre><p data-v-7cd6f26b>function greet(name) { console.log(<code data-v-7cd6f26b>Hello, \${name}!</code>); }</p><p data-v-7cd6f26b>greet(&quot;John&quot;); // Output: Hello, John!</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>
- <span class="hljs-string" data-v-7cd6f26b>&#39;name&#39;</span> pada function adalah parameter 
- <span class="hljs-string" data-v-7cd6f26b>&quot;John&quot;</span> nilai asli ini adalah argument


<span class="hljs-comment" data-v-7cd6f26b>### Private and public Properties</span>

pada dasarnnya semua properties dari object adalah <span class="hljs-keyword" data-v-7cd6f26b>berbentuk </span>public, yang <span class="hljs-keyword" data-v-7cd6f26b>berarti </span>mereka <span class="hljs-keyword" data-v-7cd6f26b>bisa </span><span class="hljs-keyword" data-v-7cd6f26b>dimodifikasi </span>dan <span class="hljs-keyword" data-v-7cd6f26b>digunakan </span>dari luar object tersebut. Tetapi kita <span class="hljs-keyword" data-v-7cd6f26b>juga </span><span class="hljs-keyword" data-v-7cd6f26b>bisa </span>membuat <span class="hljs-keyword" data-v-7cd6f26b>sebuah </span>properties menjadi private pada <span class="hljs-keyword" data-v-7cd6f26b>javascript </span>menggunakan method. 

Membuat private properties dengan method. 
<span class="hljs-number" data-v-7cd6f26b>1</span>. Declarasi <span class="hljs-keyword" data-v-7cd6f26b>sebuah </span>variabel <span class="hljs-keyword" data-v-7cd6f26b>didalam </span>method
<span class="hljs-number" data-v-7cd6f26b>2</span>. Variabel tersebut hanya akan <span class="hljs-keyword" data-v-7cd6f26b>bisa </span><span class="hljs-keyword" data-v-7cd6f26b>diakses </span>dari method itu saja
<span class="hljs-symbol" data-v-7cd6f26b>
Contoh:</span>
</code></pre><p data-v-7cd6f26b>function Person(age) { let myName = &#39;budi&#39;; // private property</p><p data-v-7cd6f26b> this.getAge = function() { return age; // public method };</p><p data-v-7cd6f26b> this.getName = function() { return myName; // private method }; }</p><p data-v-7cd6f26b>console.log(myName); // error in this line</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>
Seperti pada kode <span class="hljs-keyword" data-v-7cd6f26b>diatas, </span><span class="hljs-keyword" data-v-7cd6f26b>jika </span>kita mencoba mengakses private variabel seperti itu maka akan terjadi error.


<span class="hljs-comment" data-v-7cd6f26b>### instance (blue print)</span>

Dalam konsep Object <span class="hljs-keyword" data-v-7cd6f26b>Oriented </span>Programming ada <span class="hljs-keyword" data-v-7cd6f26b>sebuah </span>konsep yang <span class="hljs-keyword" data-v-7cd6f26b>bernama </span><span class="hljs-keyword" data-v-7cd6f26b>Blue </span>print, yang <span class="hljs-keyword" data-v-7cd6f26b>dimana </span><span class="hljs-keyword" data-v-7cd6f26b>disaat </span>kita membuat class pada <span class="hljs-keyword" data-v-7cd6f26b>javascript, </span>class code tersebut adalah <span class="hljs-keyword" data-v-7cd6f26b>blue </span>print. 

<span class="hljs-keyword" data-v-7cd6f26b>Buat </span>apa <span class="hljs-keyword" data-v-7cd6f26b>Blue </span>print?

<span class="hljs-keyword" data-v-7cd6f26b>Blue </span>print <span class="hljs-keyword" data-v-7cd6f26b>digunakan </span>untuk membuat object yang serupa dengan cepat. 
Kita <span class="hljs-keyword" data-v-7cd6f26b>bisa </span><span class="hljs-keyword" data-v-7cd6f26b>bayangkan </span><span class="hljs-keyword" data-v-7cd6f26b>bahwasannya </span><span class="hljs-keyword" data-v-7cd6f26b>blue </span>print adalah <span class="hljs-keyword" data-v-7cd6f26b>sebuah </span>cetakan kue, dengan cetakan kue kita <span class="hljs-keyword" data-v-7cd6f26b>bisa </span>membuat <span class="hljs-keyword" data-v-7cd6f26b>banyak </span>kue yang memiliki <span class="hljs-keyword" data-v-7cd6f26b>bentuk </span>serupa tetapi memiliki <span class="hljs-keyword" data-v-7cd6f26b>banyak </span>pilihan rasa dengan cepat. Itu adalah perumpamaan dari <span class="hljs-keyword" data-v-7cd6f26b>blueprint.
</span>
Class yang kita <span class="hljs-keyword" data-v-7cd6f26b>buat </span>pada object <span class="hljs-keyword" data-v-7cd6f26b>Oriented </span>Programming <span class="hljs-keyword" data-v-7cd6f26b>disebut </span><span class="hljs-keyword" data-v-7cd6f26b>sebagai </span><span class="hljs-keyword" data-v-7cd6f26b>blueprint, </span>sedangkan variabel yang memiliki class <span class="hljs-keyword" data-v-7cd6f26b>didalamannya </span><span class="hljs-keyword" data-v-7cd6f26b>disebut </span><span class="hljs-keyword" data-v-7cd6f26b>sebagai </span><span class="hljs-string" data-v-7cd6f26b>&quot;instance&quot;</span> dan class itu sendiri adalah object 


- **<span class="hljs-keyword" data-v-7cd6f26b>Instance** </span>adalah hasil 
- **object** adalah awal 
<span class="hljs-symbol" data-v-7cd6f26b>
Perumpamaan:</span> <span class="hljs-keyword" data-v-7cd6f26b>Di </span>atas meja terdapat <span class="hljs-number" data-v-7cd6f26b>5</span> apel ( <span class="hljs-keyword" data-v-7cd6f26b>instance </span>), setiap apel memiliki ukuran dan <span class="hljs-keyword" data-v-7cd6f26b>bentuk </span>yang <span class="hljs-keyword" data-v-7cd6f26b>berbeda-beda.</span>
</code></pre><p data-v-7cd6f26b>// Define a class / blueprint class Person { constructor(name, age) { this.name = name; this.age = age; } }</p><p data-v-7cd6f26b>// Create an instance of the class const person1 = new Person(&#39;John&#39;, 30);</p><p data-v-7cd6f26b>// Access the properties of the instance console.log(person1.name); // Output: John console.log(person1.age); // Output: 30</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>
### Object

<span class="hljs-symbol" data-v-7cd6f26b>Konsep</span> Object pada javascript <span class="hljs-keyword" data-v-7cd6f26b>itu </span>sangat penting (dikutip dari: https://towardsdatascience.com/everything-about-javascript-object-part-<span class="hljs-number" data-v-7cd6f26b>1</span>-<span class="hljs-number" data-v-7cd6f26b>854025</span>d71fea ). Hampir <span class="hljs-keyword" data-v-7cd6f26b>seluruh </span><span class="hljs-meta" data-v-7cd6f26b>code</span> yang kita pakai pada javscript adalah <span class="hljs-keyword" data-v-7cd6f26b>berbentuk </span>object, dan setidaknya ada <span class="hljs-number" data-v-7cd6f26b>6</span> <span class="hljs-meta" data-v-7cd6f26b>code</span> yang <span class="hljs-keyword" data-v-7cd6f26b>bukan </span>object yaitu: null, undefined, <span class="hljs-keyword" data-v-7cd6f26b>strings, </span>numbers, <span class="hljs-keyword" data-v-7cd6f26b>boolean, </span>dan symbols. <span class="hljs-meta" data-v-7cd6f26b>Code</span> pada javscript yang <span class="hljs-keyword" data-v-7cd6f26b>bukan </span>object disebut sebagai tipe primitif ( primitive types ). 



<span class="hljs-symbol" data-v-7cd6f26b>Pada</span> javasscript, object adalah sebuah koleksi dari <span class="hljs-meta" data-v-7cd6f26b>data</span> dan fungsi yang <span class="hljs-keyword" data-v-7cd6f26b>berhubungan, </span>yang <span class="hljs-keyword" data-v-7cd6f26b>biasannya </span><span class="hljs-keyword" data-v-7cd6f26b>berbentuk </span>seperti pasangan attribute-nilai ( ini seperti property dan value pada css ). <span class="hljs-meta" data-v-7cd6f26b>Data</span> <span class="hljs-keyword" data-v-7cd6f26b>bisa </span><span class="hljs-keyword" data-v-7cd6f26b>berbentuk </span><span class="hljs-keyword" data-v-7cd6f26b>string, </span>numbers, arrays, atau <span class="hljs-keyword" data-v-7cd6f26b>bahkan </span>object lain. Object adalah <span class="hljs-keyword" data-v-7cd6f26b>bagian </span>penting pada javscript, yang akan dapat membantu teman-teman membuat representasi dari <span class="hljs-keyword" data-v-7cd6f26b>bagian </span><span class="hljs-meta" data-v-7cd6f26b>code</span> yang complex. Object tersebut memiliki kelibahan encapsulation dan inheritance. 


<span class="hljs-symbol" data-v-7cd6f26b>pada</span> javascript terdapat setidaknnya <span class="hljs-number" data-v-7cd6f26b>5</span> cara untuk membuat sebuah object:

- Object Literal syntax ( object ) 

<span class="hljs-symbol" data-v-7cd6f26b>contoh</span> object literal syntax
</code></pre><p data-v-7cd6f26b>// creating an object using object literal syntax const person = { name: &quot;John&quot;, age: 30, address: { street: &quot;123 Main St&quot;, city: &quot;New York&quot;, state: &quot;NY&quot; }, sayHello: function() { console.log(<code data-v-7cd6f26b>Hello, my name is \${this.name}!</code>); } };</p><p data-v-7cd6f26b>// accessing object properties and calling methods console.log(person.name); // output: &quot;John&quot; console.log(person.address.city); // output: &quot;New York&quot; person.sayHello(); // output: &quot;Hello, my name is John!&quot;</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>
- <span class="hljs-function" data-v-7cd6f26b><span class="hljs-keyword" data-v-7cd6f26b>Constructor</span> <span class="hljs-title" data-v-7cd6f26b>function</span> <span class="hljs-title" data-v-7cd6f26b>syntax</span> <span class="hljs-params" data-v-7cd6f26b>( <span class="hljs-keyword" data-v-7cd6f26b>object</span> )</span></span>
</code></pre><p data-v-7cd6f26b>// Define a constructor function for creating person objects function Person(firstName, lastName, age) { this.firstName = firstName; this.lastName = lastName; this.age = age;</p><p data-v-7cd6f26b> // A method of the Person object this.greet = function() { console.log(<code data-v-7cd6f26b>Hello, my name is \${this.firstName} \${this.lastName} and I am \${this.age} years old.</code>); }; }</p><p data-v-7cd6f26b>// Use the constructor function to create a new person object let john = new Person(&quot;John&quot;, &quot;Doe&quot;, 30);</p><p data-v-7cd6f26b>// Call the greet method of the person object john.greet(); // Output: &quot;Hello, my name is John Doe and I am 30 years old.&quot;</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>
- ES6 Class syntax (<span class="hljs-built_in" data-v-7cd6f26b> instance </span>)
</code></pre><p data-v-7cd6f26b>class Person { constructor(name, age) { this.name = name; this.age = age; }</p><p data-v-7cd6f26b> greet() { console.log(<code data-v-7cd6f26b>Hello, my name is \${this.name} and I am \${this.age} years old.</code>); } }</p><p data-v-7cd6f26b>const john = new Person(&#39;John&#39;, 30); john.greet(); // output: &quot;Hello, my name is John and I am 30 years old.&quot;</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>
- Object.create() <span class="hljs-function" data-v-7cd6f26b><span class="hljs-keyword" data-v-7cd6f26b>method</span> <span class="hljs-params" data-v-7cd6f26b>(instance )</span></span>
</code></pre><p data-v-7cd6f26b>// Define a person object const person = { greeting: &#39;Hello!&#39;, sayHello() { console.log(this.greeting); } };</p><p data-v-7cd6f26b>// Create a new object using the person object as its prototype const john = Object.create(person);</p><p data-v-7cd6f26b>// Add a new property to the john object john.name = &#39;John&#39;;</p><p data-v-7cd6f26b>// Call the sayHello method on the john object john.sayHello(); // Output: Hello!</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>
- Factory <span class="hljs-keyword" data-v-7cd6f26b>function</span> <span class="hljs-title" data-v-7cd6f26b>pattern.</span>
</code></pre><p data-v-7cd6f26b>function createPerson(name, age) { return { name: name, age: age, greet: function() { console.log(&#39;Hello, my name is &#39; + this.name + &#39; and I am &#39; + this.age + &#39; years old.&#39;); } }; }</p><p data-v-7cd6f26b>// create new person objects using the factory function let person1 = createPerson(&#39;John&#39;, 30); let person2 = createPerson(&#39;Jane&#39;, 25);</p><p data-v-7cd6f26b>// call the greet method on each person object person1.greet(); // output: Hello, my name is John and I am 30 years old. person2.greet(); // output: Hello, my name is Jane and I am 25 years old.</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>
<span class="hljs-comment" data-v-7cd6f26b>### Constructor</span>

Pada Javascript <span class="hljs-string" data-v-7cd6f26b>&quot;constructor&quot;</span> adalah sebuah function yang digunakan untuk membuat object yang akan dibuat oleh kata kunci &#39;new&#39;. Ini adalah sebuah function special, karena mereka adalah sama dengan nama class itu sendiri, dan akan dipanggil secara otomatis saat<span class="hljs-built_in" data-v-7cd6f26b> instance </span>dibuat.

Constructor biasaannya digunakan untuk membuat nilai awal dari properti object. Dengan kata lain <span class="hljs-string" data-v-7cd6f26b>&quot;constructor&quot;</span> adalah cara kita untuk membuat<span class="hljs-built_in" data-v-7cd6f26b> instance </span>berdasarkan blueprint atau class yang ada, dan memastikan setiap<span class="hljs-built_in" data-v-7cd6f26b> instance </span>yang dibuat memiliki bentuk awal properti dan method yang sama dengan blue print. 

- Contoh Constructor Dengan ES6 class
</code></pre><p data-v-7cd6f26b>class Person { constructor(name, age) { this.name = name; this.age = age; }</p><p data-v-7cd6f26b> sayHello() { console.log(<code data-v-7cd6f26b>Hello, my name is \${this.name} and I am \${this.age} years old.</code>); } }</p><p data-v-7cd6f26b>const john = new Person(&#39;John&#39;, 30); john.sayHello(); // Output: Hello, my name is John and I am 30 years old.</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>
- Contoh <span class="hljs-function" data-v-7cd6f26b><span class="hljs-keyword" data-v-7cd6f26b>constructor</span> <span class="hljs-title" data-v-7cd6f26b>dengan</span> <span class="hljs-title" data-v-7cd6f26b>function</span></span>
</code></pre><p data-v-7cd6f26b>function Person(name, age) { this.name = name; this.age = age; this.sayHello = function() { console.log(&#39;Hello, my name is &#39; + this.name + &#39; and I am &#39; + this.age + &#39; years old.&#39;); }; }</p><p data-v-7cd6f26b>// Create a new Person object using the constructor function const john = new Person(&#39;John&#39;, 30);</p><p data-v-7cd6f26b>// Call the sayHello method on the john object john.sayHello(); // Output: Hello, my name is John and I am 30 years old.</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>
<span class="hljs-comment" data-v-7cd6f26b>### this </span>

Pada Javascript class, &#39;this&#39; akan merujuk pada bagian<span class="hljs-built_in" data-v-7cd6f26b> instance </span>properti dari class. Dengan begitu kita bisa memanggil properti tersebut dari mana saja selama berada didalam class.
</code></pre><p data-v-7cd6f26b>class Person { constructor(name) { this.name = name; }</p><p data-v-7cd6f26b> sayHello() { console.log(<code data-v-7cd6f26b>Hello, my name is \${this.name}.</code>); } }</p><p data-v-7cd6f26b>const person = new Person(&#39;John&#39;); person.sayHello(); // Output: Hello, my name is John.</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>
<span class="hljs-symbol" data-v-7cd6f26b>contoh:</span>
</code></pre><p data-v-7cd6f26b>this.namaku = nama</p><p data-v-7cd6f26b>// bisa dilakukan </p><pre data-v-7cd6f26b><code data-v-7cd6f26b>

<span class="smali" data-v-7cd6f26b><span class="hljs-comment" data-v-7cd6f26b>## new</span>

kata kunci<span class="hljs-built_in" data-v-7cd6f26b> new </span>yang digunakan pada javascript digunakan untuk membuat<span class="hljs-built_in" data-v-7cd6f26b> instance </span>dari object. Disaat kita menggunakan<span class="hljs-built_in" data-v-7cd6f26b> new </span>maka properti dari object tersebut juga akan di replika. 

contoh code:</span>
</code></pre><p data-v-7cd6f26b>function Person(name, age) { this.name = name; this.age = age; }</p><p data-v-7cd6f26b>const john = new Person(&#39;John&#39;, 30); console.log(john.name); // Output: John console.log(john.age); // Output: 30</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>
atau contoh <span class="hljs-selector-tag" data-v-7cd6f26b>code</span> dengan ES6
</code></pre><p data-v-7cd6f26b>class Car { constructor(make, model, year) { this.make = make; this.model = model; this.year = year; }</p><p data-v-7cd6f26b> getDetails() { return <code data-v-7cd6f26b>\${this.make} \${this.model} (\${this.year})</code>; } }</p><p data-v-7cd6f26b>const myCar = new Car(&#39;Honda&#39;, &#39;Civic&#39;, 2021); console.log(myCar.getDetails()); // Output: Honda Civic (2021)</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>
fungsi <span class="hljs-keyword" data-v-7cd6f26b>new</span> <span class="hljs-type" data-v-7cd6f26b>dibekerja</span> dengan <span class="hljs-string" data-v-7cd6f26b>&quot;this&quot;</span>. Tanpa kata kunci <span class="hljs-string" data-v-7cd6f26b>&quot;this&quot;</span> untuk properti maka kita tidak bisa menggunakan <span class="hljs-keyword" data-v-7cd6f26b>new</span><span class="hljs-type" data-v-7cd6f26b></span>. 

Dengan <span class="hljs-keyword" data-v-7cd6f26b>new</span> <span class="hljs-type" data-v-7cd6f26b>kita</span> dapat membuat banyak object yang memiliki ciri-ciri yang serupa. 



<span class="hljs-meta" data-v-7cd6f26b>### Super </span>

Pada Javascript <span class="hljs-string" data-v-7cd6f26b>&#39;super&#39;</span> digunakan untuk memmangil method dari parent <span class="hljs-class" data-v-7cd6f26b><span class="hljs-keyword" data-v-7cd6f26b>class</span> <span class="hljs-title" data-v-7cd6f26b>ke</span> <span class="hljs-title" data-v-7cd6f26b>subclass</span> <span class="hljs-title" data-v-7cd6f26b>yang</span> <span class="hljs-title" data-v-7cd6f26b>ingin</span> <span class="hljs-title" data-v-7cd6f26b>melakukan</span> <span class="hljs-title" data-v-7cd6f26b>perubahan</span> <span class="hljs-title" data-v-7cd6f26b>pada</span> <span class="hljs-title" data-v-7cd6f26b>method</span> <span class="hljs-title" data-v-7cd6f26b>yang</span> <span class="hljs-title" data-v-7cd6f26b>sebelumnnya</span>.  <span class="hljs-title" data-v-7cd6f26b>Dengan</span> <span class="hljs-title" data-v-7cd6f26b>super</span> <span class="hljs-title" data-v-7cd6f26b>subclass</span> <span class="hljs-title" data-v-7cd6f26b>dapat</span> <span class="hljs-title" data-v-7cd6f26b>memiliki</span> <span class="hljs-title" data-v-7cd6f26b>aksess</span> <span class="hljs-title" data-v-7cd6f26b>dan</span> <span class="hljs-title" data-v-7cd6f26b>memanggil</span> <span class="hljs-title" data-v-7cd6f26b>method</span> <span class="hljs-title" data-v-7cd6f26b>dari</span> <span class="hljs-title" data-v-7cd6f26b>parent</span>.</span>
</code></pre><p data-v-7cd6f26b>class Animal { constructor(name) { this.name = name; }</p><p data-v-7cd6f26b> speak() { console.log(<code data-v-7cd6f26b>\${this.name} makes a noise.</code>); } }</p><p data-v-7cd6f26b>class Dog extends Animal { constructor(name) { super(name); // calls the parent class constructor and passes in the name argument }</p><p data-v-7cd6f26b> speak() { super.speak(); // calls the parent class&#39;s speak method console.log(<code data-v-7cd6f26b>\${this.name} barks.</code>); } }</p><p data-v-7cd6f26b>const dog = new Dog(&#39;Rufus&#39;); dog.speak(); // Output: Rufus makes a noise. Rufus barks.</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>
Contoh <span class="hljs-selector-tag" data-v-7cd6f26b>code</span> lainnya:
</code></pre><p data-v-7cd6f26b>class Animal { constructor(name) { this.name = name; }</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>speak() {
    <span class="hljs-built_in" data-v-7cd6f26b>console</span>.log(<span class="hljs-string" data-v-7cd6f26b>\`<span class="hljs-subst" data-v-7cd6f26b>\${<span class="hljs-keyword" data-v-7cd6f26b>this</span>.name}</span> bersuara\`</span>)
}
</code></pre><p data-v-7cd6f26b>}</p><p data-v-7cd6f26b>class Dog extends Animal { constructor(name, makanan){ super(name) // jika ini dihapus maka akan terjadi error this.makanan = makanan</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>}

speak() {
    <span class="hljs-built_in" data-v-7cd6f26b>console</span>.log(<span class="hljs-string" data-v-7cd6f26b>\`<span class="hljs-subst" data-v-7cd6f26b>\${<span class="hljs-keyword" data-v-7cd6f26b>this</span>.name}</span> barks\`</span>)
}
</code></pre><p data-v-7cd6f26b>}</p><p data-v-7cd6f26b>const dog = new Dog(&#39;bagus&#39;, &#39;whiskase&#39;); dog.speak();</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>
perintah <span class="hljs-string" data-v-7cd6f26b>&quot;super&quot;</span> akan membantu <span class="hljs-keyword" data-v-7cd6f26b>jika </span>kita melakukan perubahan data pada class parent. Tanpa <span class="hljs-string" data-v-7cd6f26b>&quot;super&quot;</span> kita tidak dapat melakukan perubahan pada method dari class parent. 



<span class="hljs-comment" data-v-7cd6f26b>## OOP memiliki empat konsep utama </span>

<span class="hljs-number" data-v-7cd6f26b>1</span>. <span class="hljs-string" data-v-7cd6f26b>&quot;encapsulation&quot;</span>: <span class="hljs-keyword" data-v-7cd6f26b>digunakan </span>agar code kita lebih private, memberikan informasi kepada developer lain <span class="hljs-keyword" data-v-7cd6f26b>bahwa </span>kode ini tidak <span class="hljs-keyword" data-v-7cd6f26b>boleh </span><span class="hljs-keyword" data-v-7cd6f26b>dirubah. </span><span class="hljs-keyword" data-v-7cd6f26b>Bisa </span><span class="hljs-keyword" data-v-7cd6f26b>berwujud </span>local variabel ( kebalikan dari global variabel )

<span class="hljs-number" data-v-7cd6f26b>2</span>. <span class="hljs-string" data-v-7cd6f26b>&quot;inheritance&quot;</span>: adalah proses untuk membuat kelas <span class="hljs-keyword" data-v-7cd6f26b>baru </span>tetapi memiliki karaktersitik dari class yang menjadi parent. 

<span class="hljs-number" data-v-7cd6f26b>3</span>. <span class="hljs-string" data-v-7cd6f26b>&quot;Polymorphism&quot;</span>: adalah <span class="hljs-keyword" data-v-7cd6f26b>bentuk </span>dari inheritance, tetapi class childer telah melakukan perubahan pada method dari class parent.
<span class="hljs-symbol" data-v-7cd6f26b>
contoh:</span>
</code></pre><p data-v-7cd6f26b>class Animal { sound() { console.log(&#39;This animal makes a sound&#39;); } } class Dog extends Animal { sound() { console.log(&#39;Bark! Bark!&#39;); } } class Cat extends Animal { sound() { console.log(&#39;Meow!&#39;); } } const animal1 = new Animal(); const dog1 = new Dog(); const cat1 = new Cat(); animal1.sound(); // Output: This animal makes a sound dog1.sound(); // Output: Bark! Bark! cat1.sound(); // Output: Meow!</p><pre data-v-7cd6f26b><code data-v-7cd6f26b>
- <span class="hljs-string" data-v-7cd6f26b>&quot;abstration&quot;</span>: Dengan abstration kita <span class="hljs-keyword" data-v-7cd6f26b>bisa </span>lebih fokus ke prosesnya daripada menggenai menulis detail <span class="hljs-meta" data-v-7cd6f26b>data</span> secara manual. Dengan abstraction kita <span class="hljs-keyword" data-v-7cd6f26b>bisa </span>memasukan parameter ke object secara langsung. Dengan <span class="hljs-keyword" data-v-7cd6f26b>begitu </span>object akan lebih <span class="hljs-keyword" data-v-7cd6f26b>berfariasi </span>daripada tipe diatas
</code></pre><p data-v-7cd6f26b>class Animal { constructor(name, sound) { this.name = name; this.sound = sound; } makeSound() { throw new Error(&quot;makeSound method must be implemented&quot;); } } class Dog extends Animal { makeSound() { console.log(<code data-v-7cd6f26b>\${this.name} barks: \${this.sound}</code>); } } const dog = new Dog(&quot;Buddy&quot;, &quot;Woof woof!&quot;); // insert paramter ^ dog.makeSound(); \`\`\`</p><h3 id="konsep-oop-dengan-garbage-collection" data-v-7cd6f26b>Konsep OOP dengan garbage collection</h3><p data-v-7cd6f26b>OOP dan garbage collection itu berbeda. Garbage collection digunakan untuk membersihkan penggunaan memory dari aplikasi yang tidak berjalan.</p><h2 id="reference-" data-v-7cd6f26b>Reference:</h2><ul data-v-7cd6f26b><li data-v-7cd6f26b>ChatGPT</li><li data-v-7cd6f26b>Freecodecamp </li><li data-v-7cd6f26b><a href="https://en.wikipedia.org/wiki/Name%E2%80%93value_pair" data-v-7cd6f26b>https://en.wikipedia.org/wiki/Name%E2%80%93value_pair</a></li><li data-v-7cd6f26b><a href="https://javascript.info/class" data-v-7cd6f26b>https://javascript.info/class</a></li><li data-v-7cd6f26b><a href="https://eloquentjavascript.net/06_object.html" data-v-7cd6f26b>https://eloquentjavascript.net/06_object.html</a></li><li data-v-7cd6f26b><p data-v-7cd6f26b><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Classes_in_JavaScript" data-v-7cd6f26b>https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Classes_in_JavaScript</a></p></li><li data-v-7cd6f26b><p data-v-7cd6f26b><a href="https://stackoverflow.com/questions/2885385/what-is-the-difference-between-an-instance-and-an-object" data-v-7cd6f26b>https://stackoverflow.com/questions/2885385/what-is-the-difference-between-an-instance-and-an-object</a> ( difference between instance and object talk )</p></li></ul>`,95)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},j0=ca(k0,[["__scopeId","data-v-7cd6f26b"]]),y0={__name:"js-note2",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="array" data-v-35ae25e4>Array</h1><p data-v-35ae25e4>Pada Javascript, array adalah sebuah object special yang dapat menyimpan nilai / value. Value tersebut bisa berbentuk berbagai macam, Termasuk adalah array itu sendiri, object, function dan lain-lain.</p><ul data-v-35ae25e4><li data-v-35ae25e4><p data-v-35ae25e4>contoh array:</p><pre data-v-35ae25e4><code data-v-35ae25e4>const myArray = [<span class="hljs-number" data-v-35ae25e4>1</span>, <span class="hljs-number" data-v-35ae25e4>2</span>, <span class="hljs-number" data-v-35ae25e4>3</span>, <span class="hljs-number" data-v-35ae25e4>4</span>, <span class="hljs-number" data-v-35ae25e4>5</span>];
</code></pre></li><li data-v-35ae25e4><p data-v-35ae25e4>untuk menampilkan data di dalam array sesuai dengan index</p><pre data-v-35ae25e4><code data-v-35ae25e4><span class="hljs-attribute" data-v-35ae25e4>const firstElement</span> = myArray[0];
</code></pre></li><li data-v-35ae25e4><p data-v-35ae25e4>atau menimpa data didalam Array \`\`\` myArray[2] = 10;</p></li></ul><pre data-v-35ae25e4><code data-v-35ae25e4>
- menambahkan <span class="hljs-meta" data-v-35ae25e4>data</span> ke <span class="hljs-keyword" data-v-35ae25e4>bagian </span>akhir dari array
</code></pre><p data-v-35ae25e4>myArray.push(6);</p><pre data-v-35ae25e4><code data-v-35ae25e4>
## Tipe <span class="hljs-function" data-v-35ae25e4><span class="hljs-keyword" data-v-35ae25e4>method</span> <span class="hljs-title" data-v-35ae25e4>didalam</span> <span class="hljs-title" data-v-35ae25e4>array</span></span>
</code></pre><p data-v-35ae25e4>push(), pop(), shift(), unshift(), splice(), concat(), slice(), join(), reverse(), sort(),</p><pre data-v-35ae25e4><code data-v-35ae25e4>
<span class="hljs-comment" data-v-35ae25e4>## array of objects</span>
<span class="hljs-built_in" data-v-35ae25e4>
array </span>of object termasuk dalam salah satu bentuk cara penyimpanan data ( relation data ) pada variabel. Yang dimana setiap element didalam<span class="hljs-built_in" data-v-35ae25e4> array </span>tersebut adalah object yang berisi propertie dan value. 

contoh code:
</code></pre><p data-v-35ae25e4>let students = [ { name: &#39;Alice&#39;, age: 20, major: &#39;Computer Science&#39; }, { name: &#39;Bob&#39;, age: 22, major: &#39;Mathematics&#39; }, { name: &#39;Charlie&#39;, age: 21, major: &#39;Chemistry&#39; } ];</p><pre data-v-35ae25e4><code data-v-35ae25e4>
-<span class="ruby" data-v-35ae25e4> object adalah ini {}
</span>-<span class="ruby" data-v-35ae25e4> contoh properti, <span class="hljs-string" data-v-35ae25e4>&quot;name&quot;</span>
</span>-<span class="ruby" data-v-35ae25e4> contoh value, <span class="hljs-string" data-v-35ae25e4>&quot;alice&quot;</span>
</span>
Kita bisa akses setiap properti dari individu pada object dengan cara:

-<span class="ruby" data-v-35ae25e4> <span class="hljs-string" data-v-35ae25e4>\`students[0].name\`</span>
</span>-<span class="ruby" data-v-35ae25e4> <span class="hljs-string" data-v-35ae25e4>\`students[0][&#39;name&#39;]\`</span>
</span>
Kita juga bisa mengakses semua properti pada array dengan loop:
</code></pre><p data-v-35ae25e4>students.forEach(function(student) { console.log(student.name + &#39; is &#39; + student.age + &#39; years old.&#39;); });</p><pre data-v-35ae25e4><code data-v-35ae25e4>
Nilai didalam<span class="hljs-built_in" data-v-35ae25e4> array </span>of object bisa kita rubah dengan cara:
</code></pre><p data-v-35ae25e4>students[0].name = &#39;Budi&#39;</p><pre data-v-35ae25e4><code data-v-35ae25e4>

<span class="smali" data-v-35ae25e4>**bentuk simple dari<span class="hljs-built_in" data-v-35ae25e4> array </span>of object**</span>
</code></pre><p data-v-35ae25e4>let dataDiri = {nama: &#39;budi&#39;, hobby: &#39;memasak&#39;}</p><p data-v-35ae25e4>dataDiri.nama // Untuk menampilkan value pada properti &quot;nama&quot;</p><pre data-v-35ae25e4><code data-v-35ae25e4>
<span class="hljs-comment" data-v-35ae25e4>## map()</span>

Pada Javascript <span class="hljs-string" data-v-35ae25e4>&quot;array map()&quot;</span> method dapat digunakan untuk membuat<span class="hljs-built_in" data-v-35ae25e4> array </span>baru dengan menambahkan function didalamnnya. <span class="hljs-string" data-v-35ae25e4>&quot;map()&quot;</span> method adalah suatu function yang dapat menerima callback function sebagai argument. Callback function yang menjadi argument akan dipanggil pada setiap element didalam array, dan itu akan menghasilkan &#39;return&#39; value yang akan menjadi<span class="hljs-built_in" data-v-35ae25e4> array </span>baru saat sudah selesai.

Contoh format dari map:
</code></pre><p data-v-35ae25e4>arr.map(callback(argument)) { return argument; }</p><pre data-v-35ae25e4><code data-v-35ae25e4>
<span class="hljs-string" data-v-35ae25e4>&quot;map()&quot;</span> method akan menghasilkan<span class="hljs-built_in" data-v-35ae25e4> array </span>baru yang berisi hasil dari pemmanggilan <span class="hljs-string" data-v-35ae25e4>&quot;callback&quot;</span> function pada setiap element didalam original array. 

Sebagai contoh dari <span class="hljs-string" data-v-35ae25e4>&quot;map()&quot;</span> kita bisa buat function yang akan meghasilkan semua element didalam<span class="hljs-built_in" data-v-35ae25e4> array </span>di kali dua:
</code></pre><p data-v-35ae25e4>const numbers = [1, 2, 3, 4, 5];</p><p data-v-35ae25e4>const squaredNumbers = numbers.map(function(number) { return number ** 2; });</p><p data-v-35ae25e4>console.log(squaredNumbers); // Output: [1, 4, 9, 16, 25]</p><pre data-v-35ae25e4><code data-v-35ae25e4>
Pada contoh diatas ini, pada <span class="hljs-string" data-v-35ae25e4>&quot;map()&quot;</span> method  variabel <span class="hljs-string" data-v-35ae25e4>&quot;number&quot;</span> akan menggambil setiap element didalam<span class="hljs-built_in" data-v-35ae25e4> array </span>dan juga sebagai representasi mereka. Callback function akan memproses element yang diambil dan dipangkat dua. Sedangkan <span class="hljs-string" data-v-35ae25e4>&quot;map()&quot;</span> method akan menghasilkan<span class="hljs-built_in" data-v-35ae25e4> array </span>baru dengan nilai yang sudah dimodifikasi.

Callback pada <span class="hljs-string" data-v-35ae25e4>&quot;map()&quot;</span> method bisa kita tulis juga seperti ini:
</code></pre><p data-v-35ae25e4>const numbers = [1, 2, 3, 4, 5];</p><p data-v-35ae25e4>const squaredNumbers = numbers.map(number =&gt; number ** 2);</p><p data-v-35ae25e4>console.log(squaredNumbers); // Output: [1, 4, 9, 16, 25]</p><pre data-v-35ae25e4><code data-v-35ae25e4>
Sebagai tambahan <span class="hljs-string" data-v-35ae25e4>&quot;map()&quot;</span> juga bisa digunakan pada<span class="hljs-built_in" data-v-35ae25e4> array </span>of object seperti ini:
</code></pre><p data-v-35ae25e4>const persons = [ { name: &#39;Alice&#39;, age: 23 }, { name: &#39;Bob&#39;, age: 37 }, { name: &#39;Charlie&#39;, age: 19 }, ];</p><p data-v-35ae25e4>const personNames = persons.map(function(person) { return person.name; });</p><p data-v-35ae25e4>console.log(personNames); // Output: [&#39;Alice&#39;, &#39;Bob&#39;, &#39;Charlie&#39;]</p><pre data-v-35ae25e4><code data-v-35ae25e4>
## Fillter
</code></pre><p data-v-35ae25e4>let arrayUmur = [20, 18, 17, 16, 21, 23]</p><p data-v-35ae25e4>let pemilikKTP = arrayUmur.filter(function(param){ return param &gt;= 18 } )</p><p data-v-35ae25e4>console.log(pemilikKTP) \`\`\`</p><h2 id="reference-" data-v-35ae25e4>Reference:</h2><ul data-v-35ae25e4><li data-v-35ae25e4><p data-v-35ae25e4><a href="https://www.freecodecamp.org/news/javascript-array-of-objects-tutorial-how-to-create-update-and-loop-through-objects-using-js-array-methods/" data-v-35ae25e4>https://www.freecodecamp.org/news/javascript-array-of-objects-tutorial-how-to-create-update-and-loop-through-objects-using-js-array-methods/</a></p></li><li data-v-35ae25e4><p data-v-35ae25e4><a href="https://www.w3schools.com/jsref/jsref_filter.asp" data-v-35ae25e4>https://www.w3schools.com/jsref/jsref_filter.asp</a></p></li></ul>`,36)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},w0=ca(y0,[["__scopeId","data-v-35ae25e4"]]),_0={__name:"js-note3",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="fundamental-concept-of-javascript" data-v-87468043>Fundamental concept of Javascript</h1><ul data-v-87468043><li data-v-87468043>Nodejs </li><li data-v-87468043>NPM</li><li data-v-87468043>Data type </li><li data-v-87468043>variabel</li><li data-v-87468043>Expression</li><li data-v-87468043>comment</li><li data-v-87468043>operator</li><li data-v-87468043>if statement</li><li data-v-87468043>array</li><li data-v-87468043>loop</li><li data-v-87468043>function </li><li data-v-87468043>object</li><li data-v-87468043>export import </li></ul><h2 id="node-js" data-v-87468043>Node js</h2><p data-v-87468043>Node.js adalah salah satu open-source, cross-platform, back-end Javascript runtime einvronment yang dapat membantu kita untuk membuat aplikasi bagian server dengan Javascript. Node js Dibangun pada 2009 oleh Ryan Dahl, Node.js Sekarang mendapatkan kepopuleran karena diantara para developer merasa architecture dan aplikasi ini sangat mudah digunakan dan menjadi support dalam pengembangan aplikasi. </p><p data-v-87468043>Salah satu Kelebihan dari Node.js adalah kemampuan untuk mengatur dan menerima perintah. Node Js dapat menerima berbagai macam perintah secara bersamaan tanpa harus menghentikan perintah lainnya. Dengan kelebihan tersebiut node js sangat dapat membantu dalam aplikasi yang bekerja secara real time dengan user yang banyak, seperti aplikasi komunikasi atau online game. </p><p data-v-87468043>Node js memiliki aplikasi untuk melakukan pengaturan dan pengelolahan package module yang bernama NPM, adalah salah satu open source library yang besar di dunia, yang memiliki lebih dari satu juta package yang dapat kita gunakan.</p><p data-v-87468043>Sebagai tambahan Node.js adalah salah satu penyedia bantuan yang paling populer dalam pembangunan API, dikarenakan kemampuannya dalam mengatur permintaan dan respon didalam format JSON. Ini akan sangat membantu dalam melakukan integrasi dengan aplikasi lain dan service, sebagai mana JSON yang sangat diandalkan dalam melakukan pertukaran data. </p><h2 id="api" data-v-87468043>Api</h2><p data-v-87468043>API (Application Programming Interface) adalah sebuah set protokol, dan alat untuk membantu dalam pengembangan software. Dengan API kita dapat Membuat dua software atau lebih bekerja bersamaan dengan mudah dan effisient.</p><p data-v-87468043>Beberapa Bentuk API:</p><ul data-v-87468043><li data-v-87468043><p data-v-87468043>Web APIs: Adalah Bentuk API yang menggunakan web protokol seperti HTTP untuk mendapatkan data. Contoh API google maps, atau twitter.</p></li><li data-v-87468043><p data-v-87468043>Operating System API: Adalah penghubung antara operating system dan software agar mereka bisa menggunakan resource computer system. Contohnya adalah data dari docs dihubungkan dengan printer. </p></li><li data-v-87468043>Library API: Ini adalah API yang berada didalam library software dan dapat memberikan akses untuk menggunakan library function dan feature. Contoh React API, Dengan React library kita bisa membuat user interface dengan mudah. API tersebut menyediakan set komponent dan method dalam membuat dan melakukan management pada Element UI.</li></ul><h2 id="variabel" data-v-87468043>Variabel</h2><p data-v-87468043>Javascript adalah salah satu baha pemrogramman yang dynamic, dengan kata lain variabel bisa menyimpan berbagai macam data type dengan mudah. Oleh karena itu javascript dikatakan sebagai bahasa yang flexibel, namun kita juga harus berhati-hati dalam penggunaan variabel tersebut.</p><p data-v-87468043>Pada awal dari javascript, cara untuk melakukan deklarasi variabel hanya bisa dilakukan dengan &quot;var&quot;, setelah berkembang mucul &quot;let&quot;, dan sekarang pada ES6 ditambahkan &quot;const&quot;. </p><p data-v-87468043>Contoh deklarasi variabel </p><pre data-v-87468043><code data-v-87468043><span class="hljs-keyword" data-v-87468043>var</span> x = <span class="hljs-number" data-v-87468043>10</span>
<span class="hljs-keyword" data-v-87468043>let</span> y = <span class="hljs-string" data-v-87468043>&#39;10&#39;</span>
<span class="hljs-keyword" data-v-87468043>const</span> = <span class="hljs-string" data-v-87468043>&#39;string&#39;</span>
</code></pre><p data-v-87468043>Data didalam var dan let dapat kita ubah sesuai dengan kebutuhan, Sedangkan const data tidak dapat dirubah. </p><p data-v-87468043>Perbedaan dari var dan let:</p><ul data-v-87468043><li data-v-87468043>Var memiliki function scope. </li><li data-v-87468043>let memiliki block scope.</li></ul><p data-v-87468043>Contoh code error untuk var </p><pre data-v-87468043><code data-v-87468043><span class="hljs-function" data-v-87468043><span class="hljs-keyword" data-v-87468043>function</span> <span class="hljs-title" data-v-87468043>loop</span> <span class="hljs-params" data-v-87468043>(par)</span> {</span>
    <span class="hljs-keyword" data-v-87468043>for</span> (var <span class="hljs-built_in" data-v-87468043>i</span> = <span class="hljs-number" data-v-87468043>0</span>; <span class="hljs-built_in" data-v-87468043>i</span> &lt; <span class="hljs-number" data-v-87468043>4</span> ; <span class="hljs-built_in" data-v-87468043>i</span>++) {
        console.log(par[i])
    }

    console.<span class="hljs-built_in" data-v-87468043>log</span>(<span class="hljs-string" data-v-87468043>&#39;ini adalah dari var&#39;</span> + <span class="hljs-built_in" data-v-87468043>i</span>)
}

let ar = [<span class="hljs-number" data-v-87468043>1</span>,<span class="hljs-number" data-v-87468043>2</span>,<span class="hljs-number" data-v-87468043>3</span>]

loop(ar)
</code></pre><h2 id="data-type" data-v-87468043>Data Type</h2><p data-v-87468043>Javascript support banyak tipe data, yang didalamnnya:</p><ul data-v-87468043><li data-v-87468043>String: Digunakan sebagai representasi dari text dan ditandai dengan tanda kutip.</li><li data-v-87468043>Number: Digunakan sebagai representasi dari nilai numeric.</li><li data-v-87468043>Booleans: Digunakan sebagai representasi nilai benar atau salah. </li><li data-v-87468043>Null: Digunakahn sebagai representasi dari bentuk kosong. </li><li data-v-87468043>Undefined: digunakan untuk tipe data yang tidak dikenali.</li><li data-v-87468043>Objects: digunakan sebagai representasi dari collection data yang berhubgan dengan data atau function.</li><li data-v-87468043>Array: Digunakan sebagai representasi dari koleksi data dalam bentuk list.</li><li data-v-87468043>Symbol: Sebagai representasi dari penanda unique </li></ul><pre data-v-87468043><code data-v-87468043><span class="hljs-keyword" data-v-87468043>let</span> myString = <span class="hljs-string" data-v-87468043>&#39;Hello, world!&#39;</span>; <span class="hljs-comment" data-v-87468043>// a string</span>
<span class="hljs-keyword" data-v-87468043>let</span> myNumber = <span class="hljs-number" data-v-87468043>42</span>; <span class="hljs-comment" data-v-87468043>// a number</span>
<span class="hljs-keyword" data-v-87468043>let</span> myBoolean = <span class="hljs-literal" data-v-87468043>true</span>; <span class="hljs-comment" data-v-87468043>// a boolean</span>
<span class="hljs-keyword" data-v-87468043>let</span> myNull = <span class="hljs-literal" data-v-87468043>null</span>; <span class="hljs-comment" data-v-87468043>// null</span>
<span class="hljs-keyword" data-v-87468043>let</span> myUndefined; <span class="hljs-comment" data-v-87468043>// undefined</span>
<span class="hljs-keyword" data-v-87468043>let</span> myObject = { <span class="hljs-attr" data-v-87468043>name</span>: <span class="hljs-string" data-v-87468043>&#39;John&#39;</span>, <span class="hljs-attr" data-v-87468043>age</span>: <span class="hljs-number" data-v-87468043>30</span> }; <span class="hljs-comment" data-v-87468043>// an object</span>
<span class="hljs-keyword" data-v-87468043>let</span> myArray = [<span class="hljs-number" data-v-87468043>1</span>, <span class="hljs-number" data-v-87468043>2</span>, <span class="hljs-number" data-v-87468043>3</span>, <span class="hljs-number" data-v-87468043>4</span>, <span class="hljs-number" data-v-87468043>5</span>]; <span class="hljs-comment" data-v-87468043>// an array</span>
<span class="hljs-keyword" data-v-87468043>let</span> mySymbol = <span class="hljs-built_in" data-v-87468043>Symbol</span>(<span class="hljs-string" data-v-87468043>&#39;foo&#39;</span>); <span class="hljs-comment" data-v-87468043>// a symbol</span>
</code></pre><p data-v-87468043>Mencari tau tipe data gunakan function <code data-v-87468043>typeof</code>.</p><pre data-v-87468043><code data-v-87468043>typeof myNumber<span class="hljs-comment" data-v-87468043>;</span>
</code></pre><p data-v-87468043>Mencari tau apa itu adalah array</p><pre data-v-87468043><code data-v-87468043>let a = [1,2,3];
a instanceof<span class="hljs-built_in" data-v-87468043> array </span>// true
</code></pre><h2 id="operator" data-v-87468043>Operator</h2><p data-v-87468043>Javascript Menyediakan beberapa tipe operator yang dapat membantu kita dalam melakukan berbagai macam operasi data. Operator adalah simbol yang menjadi representasi dari suatu kalkulasi. </p><p data-v-87468043>Bebrapa tipe operator pada Javascript:</p><ul data-v-87468043><li data-v-87468043>Addition (+)</li><li data-v-87468043>Subtraction (-)</li><li data-v-87468043>Multiplication (*)</li><li data-v-87468043>Division (/)</li><li data-v-87468043>Modulus (%)</li></ul><pre data-v-87468043><code data-v-87468043><span class="hljs-keyword" data-v-87468043>let</span> <span class="hljs-attr" data-v-87468043>x</span> = <span class="hljs-number" data-v-87468043>5</span>;
<span class="hljs-keyword" data-v-87468043>let</span> <span class="hljs-attr" data-v-87468043>y</span> = <span class="hljs-number" data-v-87468043>10</span>;
<span class="hljs-keyword" data-v-87468043>let</span> <span class="hljs-attr" data-v-87468043>z</span> = x + y; // z equals <span class="hljs-number" data-v-87468043>15</span>
</code></pre><p data-v-87468043>comparison operator di javascript:</p><ul data-v-87468043><li data-v-87468043>Equal to (==)</li><li data-v-87468043>Not equal to (!=)</li><li data-v-87468043>Strict equal to (===)</li><li data-v-87468043>Strict not equal to (!==)</li><li data-v-87468043>Greater than &#39;&gt;&#39;</li><li data-v-87468043>Less than <code data-v-87468043>&lt;</code></li><li data-v-87468043>Greater than or equal to <code data-v-87468043>&gt;=</code></li><li data-v-87468043>Less than or equal to <code data-v-87468043>&lt;=</code></li></ul><h2 id="expression" data-v-87468043>Expression</h2><pre data-v-87468043><code data-v-87468043><span class="hljs-keyword" data-v-87468043>let</span> <span class="hljs-attr" data-v-87468043>x</span> = <span class="hljs-number" data-v-87468043>5</span>
<span class="hljs-keyword" data-v-87468043>let</span> <span class="hljs-attr" data-v-87468043>y</span> = <span class="hljs-number" data-v-87468043>10</span> 

<span class="hljs-keyword" data-v-87468043>let</span> <span class="hljs-attr" data-v-87468043>z</span> = x + y 
<span class="hljs-keyword" data-v-87468043>let</span> <span class="hljs-attr" data-v-87468043>i</span> = (x * y) - x
</code></pre><p data-v-87468043>Expression adalah kombinasi dari operator dan nilai, yang akan menghasilkan suatu nilai yang baru.</p><h2 id="if-statement" data-v-87468043>if statement</h2><p data-v-87468043>If statement adalah fondasi kontrol struktur dalam pemrogramman yang dapat membantu kita dalam melakukan ekseskusi program. If statement digunakan untuk membuka suatu pilihan didalam algoritma, Jika hasil eksekusi adalah true maka akan diamnil jalan 1, jika hasil eksekusiadalah false maka diambil jalan terakhir. </p><p data-v-87468043>Format dari if statement</p><pre data-v-87468043><code data-v-87468043>if (condition) {
    //<span class="hljs-built_in" data-v-87468043> execute </span>prompt
}
</code></pre><p data-v-87468043>If statement bekerja dengan cara memastikan apakah &quot;condition&quot; tersebut bernilai true atau tidak. Jika &quot;condition&quot; bernilai true maka akan di eksekusi pada blok if, Jika &quot;condition&quot; bernilai false maka akan di eksekusi pada blok lainnya. </p><p data-v-87468043>Contoh format dengan blok lainnya.</p><pre data-v-87468043><code data-v-87468043>if (condition) {
 //<span class="hljs-built_in" data-v-87468043> execute </span>prompt
}

else {
 //<span class="hljs-built_in" data-v-87468043> execute </span>prompt
}
</code></pre><p data-v-87468043>Jika &quot;condition&quot; adalah false maka blok &quot;else&quot; akan di eksekusi.</p><p data-v-87468043>Pada if statement kita bisa menambahkan blok lagi untuk membuat sistem if statement yang lebih complex. </p><p data-v-87468043>Contoh if statement yang lebih complex:</p><pre data-v-87468043><code data-v-87468043>if (condition) {
    //<span class="hljs-built_in" data-v-87468043> execute </span>prompt
}

else<span class="hljs-built_in" data-v-87468043> if </span>(condition02) {
    //<span class="hljs-built_in" data-v-87468043> execute </span>prompt
}

else {

}
</code></pre><p data-v-87468043>Didalam &quot;condition&quot; kita bisa menambahkan comparison agar bisa menjadi persyaratan true and false. </p><p data-v-87468043>comparison operator di javascript:</p><ul data-v-87468043><li data-v-87468043>Equal to (==)</li><li data-v-87468043>Not equal to (!=)</li><li data-v-87468043>Strict equal to (===)</li><li data-v-87468043>Strict not equal to (!==)</li><li data-v-87468043>Greater than &#39;&gt;&#39;</li><li data-v-87468043>Less than <code data-v-87468043>&lt;</code></li><li data-v-87468043>Greater than or equal to <code data-v-87468043>&gt;=</code></li><li data-v-87468043>Less than or equal to <code data-v-87468043>&lt;=</code></li></ul><p data-v-87468043>Setelah condition kita juga bisa mengatur agar ada dua &quot;condition&quot; yang harus dipenuhi agar bisa menjadi true. </p><p data-v-87468043>Contoh logical operator untuk melakukan combinasi:</p><ul data-v-87468043><li data-v-87468043>&amp;&amp; : digunakan untuk menjadikan dua condition harus terpenuhi agar menghasilkan true. </li><li data-v-87468043>|| : akah menghasilkan true jika salah satu dari 2 &quot;condition&quot; terpenuhi. </li><li data-v-87468043>! : akan merubah hasil nilai dari condition menjadi bentuk boolean yang sebaliknnya.</li></ul><p data-v-87468043>Contoh logical operator not (!)</p><pre data-v-87468043><code data-v-87468043>x = <span class="hljs-literal" data-v-87468043>false</span>

<span class="hljs-keyword" data-v-87468043>if</span> (!x) {
    console.log(<span class="hljs-symbol" data-v-87468043>&#39;X</span> adalah &#39; + x + <span class="hljs-symbol" data-v-87468043>&#39;tetapi</span> menjadi <span class="hljs-literal" data-v-87468043>true</span> karena  !&#39;)
}

<span class="hljs-keyword" data-v-87468043>else</span> {
    console.log(<span class="hljs-symbol" data-v-87468043>&#39;Ini</span> adalah laporan dari blok <span class="hljs-keyword" data-v-87468043>else</span>&#39;)
}
</code></pre><p data-v-87468043>Kesimpulan: If statement adalah sebuah fungsi yang dapat digunakan untuk membuat program menggambil suatu pilihan tertentu sesuai dengan hasil boolean yang dihasilkan oleh &quot;condition&quot;.</p><h2 id="loop" data-v-87468043>Loop</h2><p data-v-87468043>Loops adalah komponent penting dalam program, dengan loop kita bisa membuat program itu selalu berjalan hingga akhirnya dimatikan. Ada beberapa tipe loop: for, while, dan do-while. Setiap tipe loop memiliki cara pengerjaannya sendiri-sendiri, tetapi mereka semua memiliki tujuan yang sama yaitu melakukan penggulanggan pada blok code. </p><p data-v-87468043>Tipe loop yang paling sering digunakan adalah bentuk for loop. Yang terdiri dari tiga bagian: Initialization, condition, dan increment. Contoh code:</p><pre data-v-87468043><code data-v-87468043>for (Initialization; condition; increment) {
    //<span class="hljs-built_in" data-v-87468043> execute </span>prompt
}
</code></pre><p data-v-87468043>Initialization adalah bagian dimana kita menentukan nilai awal ( initial value for loop counter ). Condition adalah persyaratan yang harus dipenuhi agar loop bisa bergerak. Bagian increment adalah tempat dimana kita menghitung sudah berapa banyak putaran pada loop. </p><p data-v-87468043>contoh code for loop:</p><pre data-v-87468043><code data-v-87468043><span class="hljs-keyword" data-v-87468043>for</span> (let <span class="hljs-built_in" data-v-87468043>i</span> = <span class="hljs-number" data-v-87468043>1</span>; <span class="hljs-built_in" data-v-87468043>i</span> &lt;=<span class="hljs-number" data-v-87468043>5</span>; <span class="hljs-built_in" data-v-87468043>i</span>++){
    console.log(i)
}
</code></pre><p data-v-87468043>Tipe loop selanjutnnya adalah while loop. While loop memiliki bentuk yang lebih simple yaitu hanya berisi condition yang spesifik saja. Contoh code:</p><pre data-v-87468043><code data-v-87468043>while (condition) {
    //<span class="hljs-built_in" data-v-87468043> execute </span>prompt
}
</code></pre><p data-v-87468043>Kita bisa membuat loop yang serupa dengan formloop diatas dengan cara:</p><pre data-v-87468043><code data-v-87468043>let <span class="hljs-selector-tag" data-v-87468043>i</span> = <span class="hljs-number" data-v-87468043>1</span> 

while (<span class="hljs-selector-tag" data-v-87468043>i</span> &lt;= <span class="hljs-number" data-v-87468043>5</span>){
    console.log(i)
    i++
}
</code></pre><p data-v-87468043>Sedangkan bentuk loop terakhir yaitu do-while, yaitu dimana loop akan berjalan terlebih dahulu lalu akan dilakukan check pada condition, jika sesuai dengan condition maka loop akan dijalankan lagi. Bentuk do-while menyerupai while loop. </p><p data-v-87468043>Format do-while </p><pre data-v-87468043><code data-v-87468043>do {
    //<span class="hljs-built_in" data-v-87468043> execute </span>prompt
}
while (condition)
</code></pre><p data-v-87468043>Contoh code do-while </p><pre data-v-87468043><code data-v-87468043><span class="hljs-keyword" data-v-87468043>let</span> i = <span class="hljs-number" data-v-87468043>1</span>;

<span class="hljs-keyword" data-v-87468043>do</span> {
  console.<span class="hljs-built_in" data-v-87468043>log</span>(i);
  i++;
} <span class="hljs-keyword" data-v-87468043>while</span> (i &lt;= <span class="hljs-number" data-v-87468043>5</span>);
</code></pre><h2 id="insert-variabel-to-string-masukan-variabel-" data-v-87468043>Insert variabel to string ( masukan variabel )</h2><p data-v-87468043>back tick</p><p data-v-87468043><code data-v-87468043>String text \${expression}</code></p><p data-v-87468043><a href="https://stackoverflow.com/questions/3304014/how-to-interpolate-variables-in-strings-in-javascript-without-concatenation" data-v-87468043>https://stackoverflow.com/questions/3304014/how-to-interpolate-variables-in-strings-in-javascript-without-concatenation</a></p><h2 id="reference-" data-v-87468043>Reference:</h2><ul data-v-87468043><li data-v-87468043><a href="https://www.golinuxcloud.com/javascript-if-not/" data-v-87468043>https://www.golinuxcloud.com/javascript-if-not/</a></li><li data-v-87468043><a href="https://www.w3schools.com/js/js_comparisons.asp" data-v-87468043>https://www.w3schools.com/js/js_comparisons.asp</a></li></ul>`,81)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},S0=ca(_0,[["__scopeId","data-v-87468043"]]),q0={__name:"js-note4",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="synchronous-dan-asynchronous" data-v-8ffdd848>Synchronous dan Asynchronous</h1><p data-v-8ffdd848>Synchronous adalah proses dasar yang kita gunakan dalam pembuatan program dengan javascript. Yaitu dimana semua baris perintah akan dijalankan secara bergantian. </p><p data-v-8ffdd848>contoh sederhana adalah seperti ini </p><pre data-v-8ffdd848><code data-v-8ffdd848>console.<span class="hljs-built_in" data-v-8ffdd848>log</span>(<span class="hljs-string" data-v-8ffdd848>&#39;a&#39;</span>)
console.<span class="hljs-built_in" data-v-8ffdd848>log</span>(<span class="hljs-string" data-v-8ffdd848>&#39;b&#39;</span>)
</code></pre><p data-v-8ffdd848>Sedangkan <strong data-v-8ffdd848>Asynchronous</strong> adalah kebalikannya, yaitu dimana kita bisa menjalankan dua proses atau lebih secara bersamaan.</p><p data-v-8ffdd848>sebagai contoh code dengan mengunakan fungsi </p><pre data-v-8ffdd848><code data-v-8ffdd848>setTimeout(<span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>()</span> =&gt;</span> {<span class="hljs-built_in" data-v-8ffdd848>console</span>.log(<span class="hljs-string" data-v-8ffdd848>&#39;hai&#39;</span>)}, <span class="hljs-number" data-v-8ffdd848>300</span>)
<span class="hljs-built_in" data-v-8ffdd848>console</span>.log(<span class="hljs-string" data-v-8ffdd848>&#39;hai juga&#39;</span>)

<span class="hljs-comment" data-v-8ffdd848>// hai juga</span>
<span class="hljs-comment" data-v-8ffdd848>// hai</span>
</code></pre><p data-v-8ffdd848>dimana pada code diatas, perintah baris kedua akan menghasilkan output, lalu dilanjutkan dengan perintah baris pertama.</p><p data-v-8ffdd848>proses tersebut dilakukan pada waktu yang sama.</p><hr data-v-8ffdd848><h2 id="promise" data-v-8ffdd848>Promise</h2><p data-v-8ffdd848>Mari kita membuat perumpamaan sederhana.</p><p data-v-8ffdd848>terdapat suatu band musik yang memiliki banyak pengemar. para pengemar band musik tersebut setiap hari mengirim surat untuk ingin mendengarkan album baru band.</p><p data-v-8ffdd848>untuk meredakan antusiasme dari pengemar, perwakilan band memberikan formulir kepada para pengemar, yang dimana pada pada formulir tersebut pengemar bisa menuliskan alamat email, dan address mereka. Jika terdapat perkembangan kita bisa mendapatkan informasi dari mereka.</p><p data-v-8ffdd848>semisal album baru telah rilis, atau tertunda karena beberapa hal.</p><p data-v-8ffdd848>sekarang kita hubungkan dengan code: </p><ul data-v-8ffdd848><li data-v-8ffdd848>&quot;Producing code&quot; adalah band musik </li><li data-v-8ffdd848>&quot;Consuming code&quot; adalah pengemar </li><li data-v-8ffdd848>&quot;Promise&quot; adalah yang menghubungkan mereka semua</li></ul><p data-v-8ffdd848>selanjutnya terdapat dua fungsi dasar promise.</p><ul data-v-8ffdd848><li data-v-8ffdd848><code data-v-8ffdd848>resolve(value)</code> - jika proses sukses</li><li data-v-8ffdd848><code data-v-8ffdd848>reject(error)</code> - jika proses gagal</li></ul><p data-v-8ffdd848>detail identitas pada promise.</p><ul data-v-8ffdd848><li data-v-8ffdd848><p data-v-8ffdd848><code data-v-8ffdd848>state</code></p><ul data-v-8ffdd848><li data-v-8ffdd848>&quot;pending&quot; adalah default</li><li data-v-8ffdd848>&quot;fullfilled&quot; adalah karena resolve</li><li data-v-8ffdd848>&quot;rejected&quot; adalah karena reject </li></ul></li><li data-v-8ffdd848><p data-v-8ffdd848><code data-v-8ffdd848>result</code></p><ul data-v-8ffdd848><li data-v-8ffdd848>&quot;undefined&quot; adalah default </li><li data-v-8ffdd848>&quot;value&quot; adalah karena resolve </li><li data-v-8ffdd848>&quot;error&quot; adalah karena reject</li></ul></li></ul><h3 id="promise-code" data-v-8ffdd848>Promise code</h3><p data-v-8ffdd848>perhitakian callback function berikut ini.</p><pre data-v-8ffdd848><code data-v-8ffdd848><span class="hljs-function" data-v-8ffdd848><span class="hljs-keyword" data-v-8ffdd848>function</span> <span class="hljs-title" data-v-8ffdd848>tampilkan</span>(<span class="hljs-params" data-v-8ffdd848>item</span>)</span>{
    <span class="hljs-built_in" data-v-8ffdd848>console</span>.log(item)
}

<span class="hljs-function" data-v-8ffdd848><span class="hljs-keyword" data-v-8ffdd848>function</span> <span class="hljs-title" data-v-8ffdd848>math</span>(<span class="hljs-params" data-v-8ffdd848>x,y</span>)</span>{
    setTimeout(<span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>()</span> =&gt;</span> {
        <span class="hljs-keyword" data-v-8ffdd848>return</span> x ** y
}, <span class="hljs-number" data-v-8ffdd848>1000</span>)
}

<span class="hljs-keyword" data-v-8ffdd848>let</span> abc = math(<span class="hljs-number" data-v-8ffdd848>1</span>,<span class="hljs-number" data-v-8ffdd848>2</span>)
tampilkan(abc)
</code></pre><p data-v-8ffdd848>Tidak ada error, tetapi kita tidak juga mendapatkan output yang diharapkan. </p><p data-v-8ffdd848>karena function <code data-v-8ffdd848>tampilkan()</code>telah selesai melakukan proses terlebih dahulu sebelum proses dari <code data-v-8ffdd848>math()</code>. Mereka berjalan secara bersamaan.</p><p data-v-8ffdd848><strong data-v-8ffdd848>dengan mengunakan promise</strong> kita bisa menyelesaikan masalah tersebut. </p><pre data-v-8ffdd848><code data-v-8ffdd848>function tampilkan(data) {
    <span class="hljs-built_in" data-v-8ffdd848>console</span>.log(data)
}

function proses(a,b){
    <span class="hljs-keyword" data-v-8ffdd848>return</span> <span class="hljs-keyword" data-v-8ffdd848>new</span> Promise(<span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>(resolve, reject)</span> =&gt;</span> {
        setTimeout(<span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>()</span> =&gt;</span> {
            resolve(a + b)
        }, <span class="hljs-number" data-v-8ffdd848>1000</span>)
    })
}

proses(<span class="hljs-number" data-v-8ffdd848>1</span>,<span class="hljs-number" data-v-8ffdd848>1</span>)

.<span class="hljs-keyword" data-v-8ffdd848>then</span>(
        <span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>(result)</span> =&gt;</span> {<span class="hljs-built_in" data-v-8ffdd848>console</span>.log(result)},
        <span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>(error)</span> =&gt;</span> {<span class="hljs-built_in" data-v-8ffdd848>console</span>.log(error)}
    )
</code></pre><p data-v-8ffdd848><strong data-v-8ffdd848>atau ditulis seperti ini</strong></p><pre data-v-8ffdd848><code data-v-8ffdd848>function tampilkan(data) {
    <span class="hljs-built_in" data-v-8ffdd848>console</span>.log(data)
}

function proses(a,b){
    <span class="hljs-keyword" data-v-8ffdd848>return</span> <span class="hljs-keyword" data-v-8ffdd848>new</span> Promise(<span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>(resolve, reject)</span> =&gt;</span> {
        setTimeout(<span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>()</span> =&gt;</span> {
            resolve(a + b)
        }, <span class="hljs-number" data-v-8ffdd848>1000</span>)
    })
}


proses(<span class="hljs-number" data-v-8ffdd848>1</span>, <span class="hljs-number" data-v-8ffdd848>2</span>).<span class="hljs-keyword" data-v-8ffdd848>then</span>(
        <span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>(result)</span> =&gt;</span> {tampilkan(result)},
        <span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>(error)</span> =&gt;</span> {<span class="hljs-built_in" data-v-8ffdd848>console</span>.log(error)}
    )
</code></pre><h2 id="promise-code-sukses-" data-v-8ffdd848>promise code (sukses)</h2><pre data-v-8ffdd848><code data-v-8ffdd848>let promise = <span class="hljs-keyword" data-v-8ffdd848>new</span> Promise(<span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>(resolve, reject)</span> =&gt;</span> {
    setTimeout(<span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>()</span> =&gt;</span> resolve(<span class="hljs-string" data-v-8ffdd848>&#39;its done&#39;</span>), <span class="hljs-number" data-v-8ffdd848>1000</span>)
})

promise.<span class="hljs-keyword" data-v-8ffdd848>then</span>(
    <span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>(result)</span> =&gt;</span> {<span class="hljs-built_in" data-v-8ffdd848>console</span>.log(result)}, <span class="hljs-regexp" data-v-8ffdd848>//</span> Akan menghasilkan
    (error) =&gt; {<span class="hljs-built_in" data-v-8ffdd848>console</span>.log(error)} <span class="hljs-regexp" data-v-8ffdd848>//</span> tidak jalan
)
</code></pre><h2 id="promise-code-reject-" data-v-8ffdd848>promise code (reject)</h2><pre data-v-8ffdd848><code data-v-8ffdd848><span class="hljs-keyword" data-v-8ffdd848>let</span> promise = <span class="hljs-keyword" data-v-8ffdd848>new</span> <span class="hljs-built_in" data-v-8ffdd848>Promise</span>(<span class="hljs-function" data-v-8ffdd848>(<span class="hljs-params" data-v-8ffdd848>resolve, reject</span>) =&gt;</span> {
    setTimeout(<span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>()</span> =&gt;</span> reject(<span class="hljs-keyword" data-v-8ffdd848>new</span> <span class="hljs-built_in" data-v-8ffdd848>Error</span>(<span class="hljs-string" data-v-8ffdd848>&#39;upss&#39;</span>)) , <span class="hljs-number" data-v-8ffdd848>1000</span>)
})

promise.then(
    <span class="hljs-function" data-v-8ffdd848>(<span class="hljs-params" data-v-8ffdd848>result</span>) =&gt;</span> {<span class="hljs-built_in" data-v-8ffdd848>console</span>.log(result)}, <span class="hljs-comment" data-v-8ffdd848>// </span>
    (error) =&gt; {<span class="hljs-built_in" data-v-8ffdd848>console</span>.log(error)} <span class="hljs-comment" data-v-8ffdd848>// akan jalan</span>
)
</code></pre><h2 id="finally" data-v-8ffdd848>finally</h2><p data-v-8ffdd848>Finally tidak terpengaruh dengan hasil dari promise.</p><pre data-v-8ffdd848><code data-v-8ffdd848>let promise = <span class="hljs-keyword" data-v-8ffdd848>new</span> Promise(<span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>(resolve, reject)</span> =&gt;</span> {
    setTimeout(<span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>()</span> =&gt;</span> reject(<span class="hljs-keyword" data-v-8ffdd848>new</span> Error(<span class="hljs-string" data-v-8ffdd848>&#39;upss&#39;</span>)) , <span class="hljs-number" data-v-8ffdd848>1000</span>)
})

promise.<span class="hljs-keyword" data-v-8ffdd848>finally</span>(<span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>()</span> =&gt;</span> {<span class="hljs-built_in" data-v-8ffdd848>console</span>.log(<span class="hljs-string" data-v-8ffdd848>&#39;saya hanya pemberitahuan, tidak terpengaruh dengan result atau error&#39;</span>)})

promise.<span class="hljs-keyword" data-v-8ffdd848>then</span>(
    <span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>(result)</span> =&gt;</span> {<span class="hljs-built_in" data-v-8ffdd848>console</span>.log(result)}, <span class="hljs-regexp" data-v-8ffdd848>//</span> Akan menghasilkan
    (error) =&gt; {<span class="hljs-built_in" data-v-8ffdd848>console</span>.log(error)} <span class="hljs-regexp" data-v-8ffdd848>//</span> tidak jalan
)
</code></pre><h2 id="contoh-code-promise" data-v-8ffdd848>Contoh code Promise</h2><pre data-v-8ffdd848><code data-v-8ffdd848><span class="hljs-keyword" data-v-8ffdd848>let</span> promise = loadScript(<span class="hljs-string" data-v-8ffdd848>&quot;https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.11/lodash.js&quot;</span>);

promise.then(
  <span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>script</span> =&gt;</span> alert(<span class="hljs-string" data-v-8ffdd848>\`<span class="hljs-subst" data-v-8ffdd848>\${script.src}</span> is loaded!\`</span>),
  error =&gt; alert(<span class="hljs-string" data-v-8ffdd848>\`Error: <span class="hljs-subst" data-v-8ffdd848>\${error.message}</span>\`</span>)
);

promise.then(<span class="hljs-function" data-v-8ffdd848><span class="hljs-params" data-v-8ffdd848>script</span> =&gt;</span> alert(<span class="hljs-string" data-v-8ffdd848>&#39;Another handler...&#39;</span>));
</code></pre><p data-v-8ffdd848>ref: <a href="https://javascript.info/promise-basics" data-v-8ffdd848>https://javascript.info/promise-basics</a></p><p data-v-8ffdd848><strong data-v-8ffdd848>contoh lainnya:</strong></p><p data-v-8ffdd848><a href="../../code/asyc.js" data-v-8ffdd848>Asyc code</a><a href="../../code/jsPro/classPromise.js" data-v-8ffdd848>class and Promise</a></p><h3 id="reference" data-v-8ffdd848>Reference</h3><ul data-v-8ffdd848><li data-v-8ffdd848><a href="https://javascript.info/promise-basics" data-v-8ffdd848>https://javascript.info/promise-basics</a></li></ul>`,44)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},x0=ca(q0,[["__scopeId","data-v-8ffdd848"]]),T0={__name:"js-note5",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="ajax-asynchronous-javascript-and-xml" data-v-d082b4b7>AJAX Asynchronous JavaScript And XML</h1><p data-v-d082b4b7>AJAX bukanlah sebuah programming language tetapi sebuah fitur teknologi yang membantu kita untuk membangun aplikasi web dengan lebih interaktif.</p><p data-v-d082b4b7>Extensible Markup Language (XML) adalah format untuk menyimpan dan mengirim data dari web server.</p><h2 id="makna-dari-ajax" data-v-d082b4b7>Makna dari AJAX</h2><p data-v-d082b4b7>pada dasarnya Asynchronous adalah konsep dimana aplikasi dapat menjalankan 2 atau lebih proses secara bersamaan.</p><p data-v-d082b4b7>Sedangkan pada AJAX adalah, Aplikasi dapat mengirim dan menerima data dari webserver tanpa harus melakukan refresh pada halaman aplikasi tersebut. Proses dibalik background ini yang akan menjadi fitur utama pada AJAX.</p><h2 id="cara-kerja-ajax" data-v-d082b4b7>Cara Kerja AJAX</h2><p data-v-d082b4b7>AJAX menggunakan tool yang sudah tersedia pada browser untuk melakukan request data kepada web server dan akan menampilkan pada user.</p><ul data-v-d082b4b7><li data-v-d082b4b7><code data-v-d082b4b7>XMLHttpRequest object</code> : adalah Form API berbentuk Object yang akan membantu dalam transfer data antara web browser dan web browser. </li><li data-v-d082b4b7><code data-v-d082b4b7>HTMLDOM</code> : disaat kita melakukan load pada halaman browser, Browser akan secara otomatis document Object Model dari page tersebut.</li></ul><p data-v-d082b4b7><strong data-v-d082b4b7>cara Membuat XMLHttpRequest object:</strong></p><pre data-v-d082b4b7><code data-v-d082b4b7><span class="hljs-keyword" data-v-d082b4b7>var</span> xhttp = <span class="hljs-function" data-v-d082b4b7>bew <span class="hljs-title" data-v-d082b4b7>XMLHttpRequest</span>(<span class="hljs-params" data-v-d082b4b7></span>)</span>;
</code></pre><p data-v-d082b4b7><strong data-v-d082b4b7>cara untuk melakukan request kepada web server, kita gunakan open() dan send() method pada object XMLHttpRequest.</strong></p><pre data-v-d082b4b7><code data-v-d082b4b7>xhttp.open(<span class="hljs-string" data-v-d082b4b7>&quot;<span class="hljs-keyword" data-v-d082b4b7>GET</span>&quot;</span>, <span class="hljs-string" data-v-d082b4b7>&quot;content.txt&quot;</span>, true)
xhttp.send();
</code></pre><p data-v-d082b4b7><strong data-v-d082b4b7>Buat Function changeContent() menggunakan JavaScript:</strong></p><pre data-v-d082b4b7><code data-v-d082b4b7><span class="hljs-function" data-v-d082b4b7><span class="hljs-keyword" data-v-d082b4b7>function</span> <span class="hljs-title" data-v-d082b4b7>changeContent</span>(<span class="hljs-params" data-v-d082b4b7></span>) </span>{

    <span class="hljs-keyword" data-v-d082b4b7>let</span> xhttp = <span class="hljs-keyword" data-v-d082b4b7>new</span> XMLHttpRequest();
    xhttp.onreadystatechange = <span class="hljs-function" data-v-d082b4b7><span class="hljs-keyword" data-v-d082b4b7>function</span>(<span class="hljs-params" data-v-d082b4b7></span>) </span>{

    <span class="hljs-keyword" data-v-d082b4b7>if</span> (<span class="hljs-keyword" data-v-d082b4b7>this</span>.readyState == <span class="hljs-number" data-v-d082b4b7>4</span> &amp;&amp; <span class="hljs-keyword" data-v-d082b4b7>this</span>.status == <span class="hljs-number" data-v-d082b4b7>200</span>){
    <span class="hljs-built_in" data-v-d082b4b7>document</span>.getElementById(<span class="hljs-string" data-v-d082b4b7>&quot;foo&quot;</span>).innerHTML = <span class="hljs-keyword" data-v-d082b4b7>this</span>.responseText;
    }
    }

    xhttp.open(<span class="hljs-string" data-v-d082b4b7>&quot;GET&quot;</span>, <span class="hljs-string" data-v-d082b4b7>&quot;content.txt&quot;</span>, <span class="hljs-literal" data-v-d082b4b7>true</span>)
    xhttp.send()
}
</code></pre><h2 id="stutus-code" data-v-d082b4b7>Stutus code</h2><ul data-v-d082b4b7><li data-v-d082b4b7>200: OK </li><li data-v-d082b4b7>403: Forbidden </li><li data-v-d082b4b7>404: Not Found</li></ul><h3 id="source-code" data-v-d082b4b7>Source code</h3><pre data-v-d082b4b7><code data-v-d082b4b7><span class="hljs-meta" data-v-d082b4b7>&lt;!DOCTYPE html&gt;</span>
<span class="hljs-tag" data-v-d082b4b7>&lt;<span class="hljs-name" data-v-d082b4b7>html</span>&gt;</span>
<span class="hljs-tag" data-v-d082b4b7>&lt;<span class="hljs-name" data-v-d082b4b7>body</span>&gt;</span>

<span class="hljs-tag" data-v-d082b4b7>&lt;<span class="hljs-name" data-v-d082b4b7>div</span> <span class="hljs-attr" data-v-d082b4b7>id</span>=<span class="hljs-string" data-v-d082b4b7>&quot;foo&quot;</span>&gt;</span>
<span class="hljs-tag" data-v-d082b4b7>&lt;<span class="hljs-name" data-v-d082b4b7>h2</span>&gt;</span>The XMLHttpRequest Object<span class="hljs-tag" data-v-d082b4b7>&lt;/<span class="hljs-name" data-v-d082b4b7>h2</span>&gt;</span>
<span class="hljs-tag" data-v-d082b4b7>&lt;<span class="hljs-name" data-v-d082b4b7>button</span> <span class="hljs-attr" data-v-d082b4b7>type</span>=<span class="hljs-string" data-v-d082b4b7>&quot;button&quot;</span> <span class="hljs-attr" data-v-d082b4b7>onclick</span>=<span class="hljs-string" data-v-d082b4b7>&quot;changeContent()&quot;</span>&gt;</span>Change Content<span class="hljs-tag" data-v-d082b4b7>&lt;/<span class="hljs-name" data-v-d082b4b7>button</span>&gt;</span>
<span class="hljs-tag" data-v-d082b4b7>&lt;/<span class="hljs-name" data-v-d082b4b7>div</span>&gt;</span>

<span class="hljs-tag" data-v-d082b4b7>&lt;<span class="hljs-name" data-v-d082b4b7>script</span>&gt;</span><span class="javascript" data-v-d082b4b7>
<span class="hljs-function" data-v-d082b4b7><span class="hljs-keyword" data-v-d082b4b7>function</span> <span class="hljs-title" data-v-d082b4b7>changeContent</span>(<span class="hljs-params" data-v-d082b4b7></span>) </span>{
  <span class="hljs-keyword" data-v-d082b4b7>var</span> xhttp = <span class="hljs-keyword" data-v-d082b4b7>new</span> XMLHttpRequest();
  xhttp.onreadystatechange = <span class="hljs-function" data-v-d082b4b7><span class="hljs-keyword" data-v-d082b4b7>function</span>(<span class="hljs-params" data-v-d082b4b7></span>) </span>{
    <span class="hljs-keyword" data-v-d082b4b7>if</span> (<span class="hljs-keyword" data-v-d082b4b7>this</span>.readyState == <span class="hljs-number" data-v-d082b4b7>4</span> &amp;&amp; <span class="hljs-keyword" data-v-d082b4b7>this</span>.status == <span class="hljs-number" data-v-d082b4b7>200</span>) {
      <span class="hljs-built_in" data-v-d082b4b7>document</span>.getElementById(<span class="hljs-string" data-v-d082b4b7>&quot;foo&quot;</span>).innerHTML =
      <span class="hljs-keyword" data-v-d082b4b7>this</span>.responseText;
    }
  };
  xhttp.open(<span class="hljs-string" data-v-d082b4b7>&quot;GET&quot;</span>, <span class="hljs-string" data-v-d082b4b7>&quot;content.txt&quot;</span>, <span class="hljs-literal" data-v-d082b4b7>true</span>);
  xhttp.send();
}
</span><span class="hljs-tag" data-v-d082b4b7>&lt;/<span class="hljs-name" data-v-d082b4b7>script</span>&gt;</span>

<span class="hljs-tag" data-v-d082b4b7>&lt;/<span class="hljs-name" data-v-d082b4b7>body</span>&gt;</span>
<span class="hljs-tag" data-v-d082b4b7>&lt;/<span class="hljs-name" data-v-d082b4b7>html</span>&gt;</span>
</code></pre><h2 id="reference-" data-v-d082b4b7>Reference:</h2><ul data-v-d082b4b7><li data-v-d082b4b7><a href="https://www.freecodecamp.org/news/ajax-tutorial/" data-v-d082b4b7>https://www.freecodecamp.org/news/ajax-tutorial/</a></li></ul>`,21)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},E0=ca(T0,[["__scopeId","data-v-d082b4b7"]]),C0={__name:"expo-note1",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="catatan-pembuatan-project-note" data-v-02024793>Catatan pembuatan project note</h1><p data-v-02024793>tujuan adalah membuat aplikasi note, seperti TodoApp. dimana kita akan melakukan</p><ul data-v-02024793><li data-v-02024793>Input data </li><li data-v-02024793>Membuat form baru </li><li data-v-02024793>close form </li><li data-v-02024793>submit input </li><li data-v-02024793>tampilkan hasil submit</li></ul><hr data-v-02024793><h1 id="tahap-1" data-v-02024793>Tahap 1</h1><hr data-v-02024793><ul data-v-02024793><li data-v-02024793>Membuat file khusus untuk css</li><li data-v-02024793>aturan css pada file khusus</li><li data-v-02024793>configurasi file </li></ul><p data-v-02024793>Expo App yang digunakan berasal dari React template codespace.</p><pre data-v-02024793><code data-v-02024793>&gt; /(tabs)
&gt; index<span class="hljs-selector-class" data-v-02024793>.tsx</span>
&gt; &gt; /components
&gt; &gt; Style<span class="hljs-selector-class" data-v-02024793>.tsx</span> 
&gt; &gt; Home<span class="hljs-selector-class" data-v-02024793>.tsx</span> 
&gt; &gt; customTextInput<span class="hljs-selector-class" data-v-02024793>.tsx</span> 
&gt; &gt; customButton.tsx
</code></pre><p data-v-02024793>dimana disana kita akan membuat folder baru bernama <code data-v-02024793>/components</code> dan 4 file didalamnya. </p><p data-v-02024793>penjelasan file:</p><ul data-v-02024793><li data-v-02024793><code data-v-02024793>Style.tsx</code> - disini hanya akan fokus untuk css, dan tidak akan menyentuh komponen lain. </li></ul><p data-v-02024793><strong data-v-02024793>Aturan css</strong>:</p><ul data-v-02024793><li data-v-02024793>tidak ada file dengan format css pada native </li><li data-v-02024793>property seperti <code data-v-02024793>backgroundColor</code> bisa digunakan pada container </li><li data-v-02024793>tetapi container tidak bisa modifikasi property <code data-v-02024793>color</code> pada item.</li><li data-v-02024793>oleh karena itu <code data-v-02024793>backgroundColor</code> gunakan untuk container, dan <code data-v-02024793>color</code> gunakan untuk item</li></ul><hr data-v-02024793><h1 id="bagian-2" data-v-02024793>bagian 2</h1><hr data-v-02024793><ul data-v-02024793><li data-v-02024793>Menyiapkan button </li><li data-v-02024793>Menyiaopkan form </li><li data-v-02024793>Menyiapkan home, yang akan menerima button dan mengatur tata letak mereka.</li></ul><h3 id="custombutton" data-v-02024793>customButton</h3><pre data-v-02024793><code class="lang-Js" data-v-02024793><span class="hljs-comment" data-v-02024793>// customButton.js </span>

<span class="hljs-keyword" data-v-02024793>import</span> React <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;react&#39;</span>
<span class="hljs-keyword" data-v-02024793>import</span> { TouchableOpacity, Text } <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;react-native&#39;</span>

<span class="hljs-keyword" data-v-02024793>import</span> { styles } <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;./Style&#39;</span>

<span class="hljs-function" data-v-02024793><span class="hljs-keyword" data-v-02024793>function</span> <span class="hljs-title" data-v-02024793>CustomButton</span>(<span class="hljs-params" data-v-02024793>{text, onPress}</span>)</span>{
    <span class="hljs-keyword" data-v-02024793>return</span> (
        <span class="xml" data-v-02024793><span class="hljs-tag" data-v-02024793>&lt;<span class="hljs-name" data-v-02024793>TouchableOpacity</span> <span class="hljs-attr" data-v-02024793>style</span>=<span class="hljs-string" data-v-02024793>{styles.button}</span> <span class="hljs-attr" data-v-02024793>onPress</span>=<span class="hljs-string" data-v-02024793>{onPress}</span>&gt;</span>
          <span class="hljs-tag" data-v-02024793>&lt;<span class="hljs-name" data-v-02024793>Text</span> <span class="hljs-attr" data-v-02024793>style</span>=<span class="hljs-string" data-v-02024793>{styles.tesxt}</span>&gt;</span>{text}<span class="hljs-tag" data-v-02024793>&lt;/<span class="hljs-name" data-v-02024793>Text</span>&gt;</span>
        <span class="hljs-tag" data-v-02024793>&lt;/<span class="hljs-name" data-v-02024793>TouchableOpacity</span>&gt;</span></span>
      )
}


<span class="hljs-keyword" data-v-02024793>export</span> <span class="hljs-keyword" data-v-02024793>default</span> CustomButton
</code></pre><ul data-v-02024793><li data-v-02024793>fungsi <code data-v-02024793>customButton</code> menerima parameter <code data-v-02024793>text, dan onPress</code></li><li data-v-02024793>diman itu adalah component yang dikirm oleh file lain. </li></ul><h3 id="customtextinput" data-v-02024793>customTextInput</h3><pre data-v-02024793><code class="lang-Js" data-v-02024793><span class="hljs-comment" data-v-02024793>// customTextInput/tsx </span>

<span class="hljs-keyword" data-v-02024793>import</span> React <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;react&#39;</span>
<span class="hljs-keyword" data-v-02024793>import</span> { TextInput, Text, View } <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;react-native&#39;</span>
<span class="hljs-keyword" data-v-02024793>import</span> { styles } <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;./Style&#39;</span>

<span class="hljs-function" data-v-02024793><span class="hljs-keyword" data-v-02024793>function</span> <span class="hljs-title" data-v-02024793>CustomTextInput</span>(<span class="hljs-params" data-v-02024793>{text, onChange, label, multiline, numberOfLines}</span>)</span>{

    <span class="hljs-keyword" data-v-02024793>return</span> (

        <span class="xml" data-v-02024793><span class="hljs-tag" data-v-02024793>&lt;<span class="hljs-name" data-v-02024793>View</span>&gt;</span>

          <span class="hljs-tag" data-v-02024793>&lt;<span class="hljs-name" data-v-02024793>Text</span>&gt;</span>{label}<span class="hljs-tag" data-v-02024793>&lt;/<span class="hljs-name" data-v-02024793>Text</span>&gt;</span>

          <span class="hljs-tag" data-v-02024793>&lt;<span class="hljs-name" data-v-02024793>TextInput</span>
            <span class="hljs-attr" data-v-02024793>multiline</span>=<span class="hljs-string" data-v-02024793>{multiline}</span>
            <span class="hljs-attr" data-v-02024793>numberOfLines</span>=<span class="hljs-string" data-v-02024793>{numberOfLines}</span>
            <span class="hljs-attr" data-v-02024793>placeholder</span>=<span class="hljs-string" data-v-02024793>{label}</span>
            <span class="hljs-attr" data-v-02024793>onChangeText</span>=<span class="hljs-string" data-v-02024793>{onChange}</span>
            <span class="hljs-attr" data-v-02024793>defaultValue</span>=<span class="hljs-string" data-v-02024793>{text}</span>
          /&gt;</span>

        <span class="hljs-tag" data-v-02024793>&lt;/<span class="hljs-name" data-v-02024793>View</span>&gt;</span>
      )
  }

export default CustomTextInput</span>
</code></pre><ul data-v-02024793><li data-v-02024793><code data-v-02024793>{text, onChange, label, multiline, numberOfLines}</code> adalah component yang dikirim oleh file lain. </li><li data-v-02024793><code data-v-02024793>TextInput</code> component tersebut akan ditata rapi didalam form tersebut</li></ul><h3 id="home" data-v-02024793>Home</h3><pre data-v-02024793><code class="lang-Js" data-v-02024793>// Home.tsx
<span class="hljs-keyword" data-v-02024793>import</span> React from <span class="hljs-string" data-v-02024793>&#39;react&#39;</span>
<span class="hljs-keyword" data-v-02024793>import</span> { FlatList, View, Text } from <span class="hljs-string" data-v-02024793>&#39;react-native&#39;</span>
<span class="hljs-keyword" data-v-02024793>import</span> CustomButton from <span class="hljs-string" data-v-02024793>&#39;./customButton&#39;</span>
<span class="hljs-keyword" data-v-02024793>import</span> { styles } from <span class="hljs-string" data-v-02024793>&#39;./Style&#39;</span>

<span class="hljs-keyword" data-v-02024793>function</span> NoteCard({item}) { // pemangilan kedua
    return(
        &lt;View&gt;

    &lt;Text&gt;{item.title}&lt;/Text&gt;
    &lt;Text&gt;{item.desc}&lt;/Text&gt;

    &lt;View style={styles.bcontain}&gt; {/* === Buat container untuk dua button kosong ===*/}
      &lt;CustomButton
        text=<span class="hljs-string" data-v-02024793>&quot;Ubah&quot;</span>
        onPress={() =&gt; {}}
      /&gt;

      &lt;CustomButton
        text=<span class="hljs-string" data-v-02024793>&quot;Hapus&quot;</span>
        onPress={() =&gt; {}}
      /&gt;

    &lt;/View&gt;

  &lt;/View&gt;
    )
}
<span class="hljs-keyword" data-v-02024793>function</span> home({noteList}){ // Pemangilan pertama, <span class="hljs-string" data-v-02024793>&quot;noteList&quot;</span> adalah penerima data dari file lain. yaitu index.tsx
    return (
        &lt;View&gt;
          &lt;CustomButton
        text=<span class="hljs-string" data-v-02024793>&quot;Tambahkan Note&quot;</span>
        onPress={() =&gt; {}}
      /&gt;
          &lt;FlatList // {/* Menampilkan array item dan button disebelah mereka  */}
            showsVerticalScrollIndicator={false}
            data={noteList}
            renderItem={NoteCard}
            keyExtractor={(item) =&gt; item.id}
          /&gt;
        &lt;/View&gt;
      )
}



export <span class="hljs-keyword" data-v-02024793>default</span> home
</code></pre><ul data-v-02024793><li data-v-02024793><code data-v-02024793>Home.tsx</code> digunakan untuk memangil form, dan juga menata tempat bagi array item.</li></ul><h3 id="index" data-v-02024793>index</h3><pre data-v-02024793><code class="lang-Js" data-v-02024793><span class="hljs-comment" data-v-02024793>// index.tsx </span>
<span class="hljs-keyword" data-v-02024793>import</span> React, { useState } <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;react&#39;</span>
<span class="hljs-keyword" data-v-02024793>import</span> { View, Text } <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;react-native&#39;</span>
<span class="hljs-keyword" data-v-02024793>import</span> Home <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;./components/Home&#39;</span>
<span class="hljs-keyword" data-v-02024793>import</span> { styles } <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;./components/Style&#39;</span>


<span class="hljs-function" data-v-02024793><span class="hljs-keyword" data-v-02024793>function</span> <span class="hljs-title" data-v-02024793>App</span>(<span class="hljs-params" data-v-02024793></span>)</span>{

  <span class="hljs-keyword" data-v-02024793>const</span> [noteList, setNoteList] = useState([
    {
      <span class="hljs-attr" data-v-02024793>id</span>: <span class="hljs-number" data-v-02024793>1</span>,
      <span class="hljs-attr" data-v-02024793>title</span>: <span class="hljs-string" data-v-02024793>&#39;Note pertama&#39;</span>,
      <span class="hljs-attr" data-v-02024793>desc</span>:
        <span class="hljs-string" data-v-02024793>&#39;Lorem Ipsum is simply dummy text of the printing and typesetting industry&#39;</span>,
    },
  ])

  <span class="hljs-keyword" data-v-02024793>return</span>(
    <span class="xml" data-v-02024793><span class="hljs-tag" data-v-02024793>&lt;<span class="hljs-name" data-v-02024793>view</span> <span class="hljs-attr" data-v-02024793>style</span>=<span class="hljs-string" data-v-02024793>{styles.zero}</span>&gt;</span>
      <span class="hljs-tag" data-v-02024793>&lt;<span class="hljs-name" data-v-02024793>View</span> <span class="hljs-attr" data-v-02024793>style</span>=<span class="hljs-string" data-v-02024793>{styles.main}</span>&gt;</span>

<span class="hljs-tag" data-v-02024793>&lt;<span class="hljs-name" data-v-02024793>Home</span> <span class="hljs-attr" data-v-02024793>noteList</span>=<span class="hljs-string" data-v-02024793>{noteList}</span> /&gt;</span>
<span class="hljs-tag" data-v-02024793>&lt;/<span class="hljs-name" data-v-02024793>View</span>&gt;</span>

    <span class="hljs-tag" data-v-02024793>&lt;/<span class="hljs-name" data-v-02024793>view</span>&gt;</span>
  )
}



export default App;</span>
</code></pre><ul data-v-02024793><li data-v-02024793><code data-v-02024793>index.tsx</code> - ditujukan untuk membuat state list, dan array.</li><li data-v-02024793>dan akan memangil <code data-v-02024793>Home.tsx</code></li></ul><hr data-v-02024793><h1 id="bagian-2" data-v-02024793>Bagian 2</h1><hr data-v-02024793><ul data-v-02024793><li data-v-02024793>tujuan: membuat halaman lain, untuk input form. </li><li data-v-02024793>menyiapkan folder dan file baru untuk itu </li></ul><pre data-v-02024793><code data-v-02024793><span class="hljs-comment" data-v-02024793>// Pada directory yang sama dengan folder components</span>
&gt; /screen
&gt; addNote<span class="hljs-selector-class" data-v-02024793>.tsx</span> 
&gt; editNote<span class="hljs-selector-class" data-v-02024793>.tsx</span> 
&gt; home.tsx
</code></pre><h3 id="addnote" data-v-02024793>addNote</h3><pre data-v-02024793><code class="lang-JS" data-v-02024793>// addNote.tsx

<span class="hljs-keyword" data-v-02024793>import</span> React <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;react&#39;</span>
<span class="hljs-keyword" data-v-02024793>import</span> { Text } <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;react-native&#39;</span>

const AddNote = <span class="hljs-function" data-v-02024793><span class="hljs-params" data-v-02024793>()</span> =&gt;</span> &lt;Text&gt;Tambahkan Note&lt;/Text&gt;

<span class="hljs-keyword" data-v-02024793>export</span> default AddNote
</code></pre><h3 id="editnote" data-v-02024793>editNote</h3><pre data-v-02024793><code class="lang-Js" data-v-02024793>// editNote.tsx
<span class="hljs-keyword" data-v-02024793>import</span> React <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;react&#39;</span>
<span class="hljs-keyword" data-v-02024793>import</span> { Text } <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;react-native&#39;</span>

const EditNote = <span class="hljs-function" data-v-02024793><span class="hljs-params" data-v-02024793>()</span> =&gt;</span> &lt;Text&gt;Ubah Note&lt;/Text&gt;

<span class="hljs-keyword" data-v-02024793>export</span> default EditNote
</code></pre><h3 id="home" data-v-02024793>Home</h3><pre data-v-02024793><code class="lang-JS" data-v-02024793>// Home.tsx
<span class="hljs-keyword" data-v-02024793>import</span> React from <span class="hljs-string" data-v-02024793>&#39;react&#39;</span>
<span class="hljs-keyword" data-v-02024793>import</span> { FlatList, View, Text } from <span class="hljs-string" data-v-02024793>&#39;react-native&#39;</span>
<span class="hljs-keyword" data-v-02024793>import</span> CustomButton from <span class="hljs-string" data-v-02024793>&#39;./customButton&#39;</span>
<span class="hljs-keyword" data-v-02024793>import</span> { styles } from <span class="hljs-string" data-v-02024793>&#39;./Style&#39;</span>

<span class="hljs-keyword" data-v-02024793>function</span> NoteCard({item, setCurrentPage}) { // pemangilan kedua
    return(
        &lt;View&gt;

    &lt;Text&gt;{item.title}&lt;/Text&gt;
    &lt;Text&gt;{item.desc}&lt;/Text&gt;

    &lt;View style={styles.bcontain}&gt; {/* === Buat container untuk dua button kosong ===*/}

      &lt;CustomButton
        text=<span class="hljs-string" data-v-02024793>&quot;Ubah&quot;</span>
        onPress={() =&gt; {setCurrentPage(<span class="hljs-string" data-v-02024793>&#39;edit&#39;</span>)}}
      /&gt;

      &lt;CustomButton
        text=<span class="hljs-string" data-v-02024793>&quot;Hapus&quot;</span>
        onPress={() =&gt; {}}
      /&gt;

    &lt;/View&gt;

  &lt;/View&gt;
    )
}
<span class="hljs-keyword" data-v-02024793>function</span> home({noteList, setCurrentPage}){ // Pemangilan pertama, <span class="hljs-string" data-v-02024793>&quot;noteList&quot;</span> adalah penerima data dari file lain. yaitu index.tsx
    return (
        &lt;View&gt;
          &lt;CustomButton
        text=<span class="hljs-string" data-v-02024793>&quot;Tambahkan Note&quot;</span>
        onPress={() =&gt; {setCurrentPage(<span class="hljs-string" data-v-02024793>&#39;add&#39;</span>)}}
      /&gt;
          &lt;FlatList // {/* Menampilkan array item dan button disebelah mereka  */}
            showsVerticalScrollIndicator={false}
            data={noteList}

            renderItem={({ item }) =&gt; (
              &lt;NoteCard item={item} setCurrentPage={setCurrentPage} /&gt;
            )}

            keyExtractor={(item) =&gt; item.id}

          /&gt;
        &lt;/View&gt;
      )
}



export <span class="hljs-keyword" data-v-02024793>default</span> home
</code></pre><ul data-v-02024793><li data-v-02024793>pada dua function ditas, tambahkan parameter <code data-v-02024793>setCurrentPage</code></li><li data-v-02024793>dimana render item disini akan diperjelas, dimana mengunakan fitur method <code data-v-02024793>map()</code> kita akan memangil mereka semua satu persatu item.</li><li data-v-02024793><code data-v-02024793>{setCurrentPage(&#39;edit&#39;)}</code> - digunakan untuk memangil component <code data-v-02024793>AddNote</code></li><li data-v-02024793><code data-v-02024793>{setCurrentPage(&#39;add&#39;)}</code> - digunakan untuk meamngil component <code data-v-02024793>EditNote</code> yang bisa kita akses setelah component ini terhubung dengan <code data-v-02024793>index.tsx</code></li></ul><h3 id="index" data-v-02024793>index</h3><pre data-v-02024793><code class="lang-Js" data-v-02024793><span class="hljs-comment" data-v-02024793>// index.tsx</span>

import React, { useState } <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;react&#39;</span>
import { View, Text } <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;react-native&#39;</span>
import Home <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;./components/Home&#39;</span>
import AddNote <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;./screens/addNote&#39;</span>
import EditNote <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;./screens/editNote&#39;</span>
import { styles } <span class="hljs-keyword" data-v-02024793>from</span> <span class="hljs-string" data-v-02024793>&#39;./components/Style&#39;</span>


<span class="hljs-comment" data-v-02024793>// ====================== New function =====================</span>
<span class="hljs-function" data-v-02024793>function <span class="hljs-title" data-v-02024793>CurrentPageWidget</span> (<span class="hljs-params" data-v-02024793>{ currentPage, noteList, setCurrentPage }</span>)</span>{
  <span class="hljs-keyword" data-v-02024793>switch</span> (currentPage) {
    <span class="hljs-keyword" data-v-02024793>case</span> <span class="hljs-string" data-v-02024793>&#39;home&#39;</span>: <span class="hljs-comment" data-v-02024793>// memasukan state &quot;noteList&quot; dan setState &quot;setCurrentPage&quot;</span>
      <span class="hljs-keyword" data-v-02024793>return</span> (
        &lt;Home
          noteList={noteList}
          setCurrentPage={setCurrentPage}
        /&gt;
      )
    <span class="hljs-keyword" data-v-02024793>case</span> <span class="hljs-string" data-v-02024793>&#39;add&#39;</span>: <span class="hljs-comment" data-v-02024793>// ubah component pada halaman</span>
      <span class="hljs-keyword" data-v-02024793>return</span> &lt;AddNote /&gt;
    <span class="hljs-keyword" data-v-02024793>case</span> <span class="hljs-string" data-v-02024793>&#39;edit&#39;</span>: <span class="hljs-comment" data-v-02024793>// ubah component pada halaman</span>
      <span class="hljs-keyword" data-v-02024793>return</span> &lt;EditNote /&gt;
    <span class="hljs-keyword" data-v-02024793>default</span>: <span class="hljs-comment" data-v-02024793>// kembali ke component awal saat &#39;home&#39;</span>
      <span class="hljs-keyword" data-v-02024793>return</span> &lt;Home /&gt;
  }
}


<span class="hljs-function" data-v-02024793>function <span class="hljs-title" data-v-02024793>App</span>(<span class="hljs-params" data-v-02024793></span>)</span>{
  <span class="hljs-keyword" data-v-02024793>const</span> [currentPage, setCurrentPage] = useState(<span class="hljs-string" data-v-02024793>&#39;home&#39;</span>) <span class="hljs-comment" data-v-02024793>// New state</span>

  <span class="hljs-keyword" data-v-02024793>const</span> [noteList, setNoteList] = useState([
    {
      id: <span class="hljs-number" data-v-02024793>1</span>,
      title: <span class="hljs-string" data-v-02024793>&#39;Note pertama&#39;</span>,
      desc:
        <span class="hljs-string" data-v-02024793>&#39;Lorem Ipsum is simply dummy text of the printing and typesetting industry&#39;</span>,
    },
  ])

  <span class="hljs-keyword" data-v-02024793>return</span>(
    &lt;View style={styles.zero}&gt;
      &lt;View style={styles.main}&gt;

      &lt;CurrentPageWidget
      currentPage={currentPage}
      setCurrentPage={setCurrentPage}
      noteList={noteList}
    /&gt;

&lt;/View&gt;

    &lt;/View&gt;
  )
}



export <span class="hljs-keyword" data-v-02024793>default</span> App;
</code></pre><ul data-v-02024793><li data-v-02024793>disini kita menggunakan &quot;switch case&quot;. untuk memangil component apa yang akan ditampilkan pada halaman. sama seperti <code data-v-02024793>{ state ? }</code></li></ul><hr data-v-02024793><p data-v-02024793>Bagian 3</p><hr data-v-02024793><hr data-v-02024793><p data-v-02024793>Bagian Akhir </p><hr data-v-02024793><p data-v-02024793><a href="../../code/jsPro/note-todoApp-expo" data-v-02024793>Source code</a></p><h2 id="referensi" data-v-02024793>Referensi</h2><ul data-v-02024793><li data-v-02024793><p data-v-02024793><a href="https://medium.com/@yildizfatma/handling-user-input-in-react-native-expo-text-input-buttons-6e7931bc227a" data-v-02024793>https://medium.com/@yildizfatma/handling-user-input-in-react-native-expo-text-input-buttons-6e7931bc227a</a></p></li><li data-v-02024793><p data-v-02024793><a href="https://medium.com/nerd-for-tech/make-todo-list-application-using-react-native-expo-for-ios-and-android-device-1de436168f86" data-v-02024793>Todoapp</a></p></li><li data-v-02024793><a href="https://codeflarelimited.com/blog/use-external-style-sheet-in-react-native/" data-v-02024793>React native and css</a></li></ul>`,54)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},A0=ca(C0,[["__scopeId","data-v-02024793"]]),L0={__name:"expo-note2",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="request-api-dengan-axios" data-v-a8acf0a0>Request API dengan Axios</h1><p data-v-a8acf0a0><strong data-v-a8acf0a0>Apa itu Axios?</strong></p><p data-v-a8acf0a0>Axios adalah &quot;promised-based&quot; HTTP client untuk node.js. Bisa kita gunakan untuk browser atau server side. Pada server mereka akan menggunakan &quot;http&quot;, sedangkan pada client browser mereka akan menggunakan XMLHttpRequests.</p><p data-v-a8acf0a0>Ref: <a href="https://axios-http.com/docs/intro" data-v-a8acf0a0>https://axios-http.com/docs/intro</a></p><p data-v-a8acf0a0>Install </p><pre data-v-a8acf0a0><code data-v-a8acf0a0>npm <span class="hljs-keyword" data-v-a8acf0a0>install</span> axios
</code></pre><h2 id="tujuan-penggunaan" data-v-a8acf0a0>Tujuan penggunaan</h2><p data-v-a8acf0a0>&quot;Axios&quot; disini berfungsi untuk menjadi &quot;Promise&quot;, dimana kita akan menggambil sebuah data dengan bantuan API, dimana proses pengambilan data, akan membutuhkan waktu. oleh karena itu kita gunakan &quot;axios&quot; sebagai promise agar proses selanjutnya akan dijalankan setelah &quot;promise axios&quot; selesai dijalankan. </p><h2 id="src" data-v-a8acf0a0>SRC</h2><p data-v-a8acf0a0><a href="../../code/jsPro/Expo-API-AXIOS/index.tsx" data-v-a8acf0a0>source code</a></p>`,10)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},M0=ca(L0,[["__scopeId","data-v-a8acf0a0"]]),R0={__name:"expo-note3",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="expo-navigator" data-v-c0f31d11>Expo Navigator</h1><p data-v-c0f31d11>Tahapan Instalasi:</p><pre data-v-c0f31d11><code class="lang-Js" data-v-c0f31d11><span class="hljs-selector-tag" data-v-c0f31d11>npm</span> <span class="hljs-selector-tag" data-v-c0f31d11>install</span> @<span class="hljs-keyword" data-v-c0f31d11>react</span>-<span class="hljs-keyword" data-v-c0f31d11>navigation</span>/<span class="hljs-keyword" data-v-c0f31d11>native</span>
</code></pre><ul data-v-c0f31d11><li data-v-c0f31d11><p data-v-c0f31d11>2 </p><pre data-v-c0f31d11><code class="lang-Js" data-v-c0f31d11>npx expo <span class="hljs-keyword" data-v-c0f31d11>install</span> react-<span class="hljs-keyword" data-v-c0f31d11>native</span>-screens react-<span class="hljs-keyword" data-v-c0f31d11>native</span>-<span class="hljs-keyword" data-v-c0f31d11>safe</span>-area-<span class="hljs-keyword" data-v-c0f31d11>context</span>
</code></pre></li><li data-v-c0f31d11><p data-v-c0f31d11>2 / Atau </p><pre data-v-c0f31d11><code class="lang-Js" data-v-c0f31d11>npm <span class="hljs-keyword" data-v-c0f31d11>install</span> react-<span class="hljs-keyword" data-v-c0f31d11>native</span>-screens react-<span class="hljs-keyword" data-v-c0f31d11>native</span>-<span class="hljs-keyword" data-v-c0f31d11>safe</span>-area-<span class="hljs-keyword" data-v-c0f31d11>context</span>
</code></pre></li><li data-v-c0f31d11><p data-v-c0f31d11>3 </p></li></ul><pre data-v-c0f31d11><code class="lang-Js" data-v-c0f31d11>npm <span class="hljs-keyword" data-v-c0f31d11>install</span> react-<span class="hljs-keyword" data-v-c0f31d11>native</span>-screens react-<span class="hljs-keyword" data-v-c0f31d11>native</span>-<span class="hljs-keyword" data-v-c0f31d11>safe</span>-area-<span class="hljs-keyword" data-v-c0f31d11>context</span>
</code></pre><ul data-v-c0f31d11><li data-v-c0f31d11><p data-v-c0f31d11>4 </p><pre data-v-c0f31d11><code class="lang-Js" data-v-c0f31d11><span class="hljs-built_in" data-v-c0f31d11>npm</span> install --save react-<span class="hljs-keyword" data-v-c0f31d11>native</span>-navigation
</code></pre></li><li data-v-c0f31d11><p data-v-c0f31d11>5 </p><pre data-v-c0f31d11><code class="lang-Js" data-v-c0f31d11><span class="hljs-selector-tag" data-v-c0f31d11>npm</span> <span class="hljs-selector-tag" data-v-c0f31d11>install</span> @<span class="hljs-keyword" data-v-c0f31d11>react</span>-<span class="hljs-keyword" data-v-c0f31d11>navigation</span>/<span class="hljs-keyword" data-v-c0f31d11>drawer</span>
</code></pre></li><li data-v-c0f31d11><p data-v-c0f31d11>6 </p><pre data-v-c0f31d11><code class="lang-Js" data-v-c0f31d11>npm <span class="hljs-keyword" data-v-c0f31d11>install</span> react-<span class="hljs-keyword" data-v-c0f31d11>native</span>-gesture-<span class="hljs-keyword" data-v-c0f31d11>handler</span> react-<span class="hljs-keyword" data-v-c0f31d11>native</span>-reanimated
</code></pre></li></ul><hr data-v-c0f31d11><h1 id="fundamental-information" data-v-c0f31d11>fundamental information</h1><hr data-v-c0f31d11><p data-v-c0f31d11>Mengenai &quot;React Navigation&quot;. Sebagai contoh pada web browser disaat kita klik <code data-v-c0f31d11>&lt;a&gt;</code> dimana kita akan dilempar ke halaman dimana sebuah link tersebut berada, kita bisa kembali kehalaman utama dengan cara klik tombol &quot;back&quot;. Dimana tombol &quot;back&quot; itu mengambil informasi dari history browser kita. &quot;React Navigation&quot; bekerja seperti itu. </p><p data-v-c0f31d11>Terdapat perbedaan kunci dimana:</p><ul data-v-c0f31d11><li data-v-c0f31d11>&quot;React Navigation&quot;: Pada fungsi ini, mereka menyediakan kita sebuah gesture dan animasi perpindahan seperti apa yang kita exspetasikan pada android.</li></ul><h2 id="createnativestacknavigator" data-v-c0f31d11>createNativeStackNavigator</h2><p data-v-c0f31d11><code data-v-c0f31d11>createNativeStackNavigator</code> adalah suatu fungsi yang akan menghasilkan 2 property: <code data-v-c0f31d11>Screen</code> dan <code data-v-c0f31d11>Navigator</code>. Mereka berdua adalah component react untuk melakukan configurasi navigator. </p><p data-v-c0f31d11>penempatan dari <code data-v-c0f31d11>NavigationContainer</code> adalah didalam bagian aplikasi utama, <code data-v-c0f31d11>index.tsx</code> atau <code data-v-c0f31d11>app</code>. </p><p data-v-c0f31d11>perhatikan code dibawah ini:</p><pre data-v-c0f31d11><code class="lang-Js" data-v-c0f31d11><span class="hljs-keyword" data-v-c0f31d11>import</span> * <span class="hljs-keyword" data-v-c0f31d11>as</span> React <span class="hljs-keyword" data-v-c0f31d11>from</span> <span class="hljs-string" data-v-c0f31d11>&#39;react&#39;</span>;
<span class="hljs-keyword" data-v-c0f31d11>import</span> { View, Text } <span class="hljs-keyword" data-v-c0f31d11>from</span> <span class="hljs-string" data-v-c0f31d11>&#39;react-native&#39;</span>;
<span class="hljs-keyword" data-v-c0f31d11>import</span> { NavigationContainer } <span class="hljs-keyword" data-v-c0f31d11>from</span> <span class="hljs-string" data-v-c0f31d11>&#39;@react-navigation/native&#39;</span>;
<span class="hljs-keyword" data-v-c0f31d11>import</span> { createNativeStackNavigator } <span class="hljs-keyword" data-v-c0f31d11>from</span> <span class="hljs-string" data-v-c0f31d11>&#39;@react-navigation/native-stack&#39;</span>;





<span class="hljs-function" data-v-c0f31d11><span class="hljs-keyword" data-v-c0f31d11>function</span> <span class="hljs-title" data-v-c0f31d11>HomeScreen</span>(<span class="hljs-params" data-v-c0f31d11></span>) </span>{
  <span class="hljs-keyword" data-v-c0f31d11>return</span> (
    <span class="xml" data-v-c0f31d11><span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>View</span> <span class="hljs-attr" data-v-c0f31d11>style</span>=<span class="hljs-string" data-v-c0f31d11>{}</span> <span class="hljs-attr" data-v-c0f31d11>flex:</span> <span class="hljs-attr" data-v-c0f31d11>1</span>, <span class="hljs-attr" data-v-c0f31d11>alignItems:</span> &#39;<span class="hljs-attr" data-v-c0f31d11>center</span>&#39;, <span class="hljs-attr" data-v-c0f31d11>justifyContent:</span> &#39;<span class="hljs-attr" data-v-c0f31d11>center</span>&#39; {}&gt;</span>
      <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Text</span>&gt;</span>Home Screen<span class="hljs-tag" data-v-c0f31d11>&lt;/<span class="hljs-name" data-v-c0f31d11>Text</span>&gt;</span>
    <span class="hljs-tag" data-v-c0f31d11>&lt;/<span class="hljs-name" data-v-c0f31d11>View</span>&gt;</span></span>
  );
}

<span class="hljs-function" data-v-c0f31d11><span class="hljs-keyword" data-v-c0f31d11>function</span> <span class="hljs-title" data-v-c0f31d11>DetailsScreen</span>(<span class="hljs-params" data-v-c0f31d11></span>) </span>{
  <span class="hljs-keyword" data-v-c0f31d11>return</span> (
    <span class="xml" data-v-c0f31d11><span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>View</span> <span class="hljs-attr" data-v-c0f31d11>style</span>=<span class="hljs-string" data-v-c0f31d11>{}</span> <span class="hljs-attr" data-v-c0f31d11>flex:</span> <span class="hljs-attr" data-v-c0f31d11>1</span>, <span class="hljs-attr" data-v-c0f31d11>alignItems:</span> &#39;<span class="hljs-attr" data-v-c0f31d11>center</span>&#39;, <span class="hljs-attr" data-v-c0f31d11>justifyContent:</span> &#39;<span class="hljs-attr" data-v-c0f31d11>center</span>&#39; {}&gt;</span>
      <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Text</span>&gt;</span>Details Screen<span class="hljs-tag" data-v-c0f31d11>&lt;/<span class="hljs-name" data-v-c0f31d11>Text</span>&gt;</span>
    <span class="hljs-tag" data-v-c0f31d11>&lt;/<span class="hljs-name" data-v-c0f31d11>View</span>&gt;</span></span>
  );
}

<span class="hljs-keyword" data-v-c0f31d11>const</span> Stack = createNativeStackNavigator();

<span class="hljs-comment" data-v-c0f31d11>// Pemilihan suatu &quot;route&quot; didasarkan &quot;name&quot;</span>
<span class="hljs-function" data-v-c0f31d11><span class="hljs-keyword" data-v-c0f31d11>function</span> <span class="hljs-title" data-v-c0f31d11>App</span>(<span class="hljs-params" data-v-c0f31d11></span>) </span>{
  <span class="hljs-keyword" data-v-c0f31d11>return</span> (
    &lt;NavigationContainer&gt;
      &lt;Stack.Navigator initialRouteName=&quot;Home&quot;&gt;
        &lt;Stack.Screen name=&quot;Home&quot; component={HomeScreen} /&gt;
        &lt;Stack.Screen name=&quot;Details&quot; component={DetailsScreen} /&gt;
      &lt;/Stack.Navigator&gt;
    &lt;/NavigationContainer&gt;
  );
}

export default App;
</code></pre><ul data-v-c0f31d11><li data-v-c0f31d11>Sekarang kita berhasil membuat dua &quot;routes&quot;</li><li data-v-c0f31d11>yaitu: <code data-v-c0f31d11>Home</code> dan <code data-v-c0f31d11>Details</code> route. </li><li data-v-c0f31d11>Cara membuat &quot;route&quot; adalah dengan bantuan <code data-v-c0f31d11>Screen</code></li><li data-v-c0f31d11><code data-v-c0f31d11>name</code> adalah property yang akan merespon dari &quot;route&quot; yang akan digunakan. </li></ul><h2 id="melakukan-perubahan-tampilan-pada-route" data-v-c0f31d11>Melakukan perubahan tampilan pada route</h2><p data-v-c0f31d11><code data-v-c0f31d11>options</code> atau <code data-v-c0f31d11>screenOptions</code></p><p data-v-c0f31d11>contoh: <a href="https://reactnavigation.org/docs/hello-react-navigation#specifying-options" data-v-c0f31d11>https://reactnavigation.org/docs/hello-react-navigation#specifying-options</a></p><hr data-v-c0f31d11><h1 id="tab-navigation-nesting-navigators" data-v-c0f31d11>Tab Navigation / Nesting navigators</h1><hr data-v-c0f31d11><p data-v-c0f31d11>ref: <a href="https://reactnavigation.org/docs/nesting-navigators" data-v-c0f31d11>https://reactnavigation.org/docs/nesting-navigators</a></p><p data-v-c0f31d11>Tujuan dari &quot;Nesting navigators&quot; adalah untuk melakukan rendering &quot;navigator&quot; didalam screen dari &quot;navigator&quot; lain. </p><pre data-v-c0f31d11><code class="lang-Js" data-v-c0f31d11>function Home() {
  return (
    <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Tab.Navigator</span>&gt;</span>
      <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Tab.Screen</span> <span class="hljs-attr" data-v-c0f31d11>name</span>=<span class="hljs-string" data-v-c0f31d11>&quot;Feed&quot;</span> <span class="hljs-attr" data-v-c0f31d11>component</span>=<span class="hljs-string" data-v-c0f31d11>{Feed}</span> /&gt;</span>
      <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Tab.Screen</span> <span class="hljs-attr" data-v-c0f31d11>name</span>=<span class="hljs-string" data-v-c0f31d11>&quot;Messages&quot;</span> <span class="hljs-attr" data-v-c0f31d11>component</span>=<span class="hljs-string" data-v-c0f31d11>{Messages}</span> /&gt;</span>
    <span class="hljs-tag" data-v-c0f31d11>&lt;/<span class="hljs-name" data-v-c0f31d11>Tab.Navigator</span>&gt;</span>
  );
}

function App() {
  return (
    <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>NavigationContainer</span>&gt;</span>
      <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Stack.Navigator</span>&gt;</span>
        <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Stack.Screen</span>
          <span class="hljs-attr" data-v-c0f31d11>name</span>=<span class="hljs-string" data-v-c0f31d11>&quot;Home&quot;</span>
          <span class="hljs-attr" data-v-c0f31d11>component</span>=<span class="hljs-string" data-v-c0f31d11>{Home}</span>
          <span class="hljs-attr" data-v-c0f31d11>options</span>=<span class="hljs-string" data-v-c0f31d11>{}</span> <span class="hljs-attr" data-v-c0f31d11>headerShown:</span> <span class="hljs-attr" data-v-c0f31d11>false</span> {}
        /&gt;</span>
        <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Stack.Screen</span> <span class="hljs-attr" data-v-c0f31d11>name</span>=<span class="hljs-string" data-v-c0f31d11>&quot;Profile&quot;</span> <span class="hljs-attr" data-v-c0f31d11>component</span>=<span class="hljs-string" data-v-c0f31d11>{Profile}</span> /&gt;</span>
        <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Stack.Screen</span> <span class="hljs-attr" data-v-c0f31d11>name</span>=<span class="hljs-string" data-v-c0f31d11>&quot;Settings&quot;</span> <span class="hljs-attr" data-v-c0f31d11>component</span>=<span class="hljs-string" data-v-c0f31d11>{Settings}</span> /&gt;</span>
      <span class="hljs-tag" data-v-c0f31d11>&lt;/<span class="hljs-name" data-v-c0f31d11>Stack.Navigator</span>&gt;</span>
    <span class="hljs-tag" data-v-c0f31d11>&lt;/<span class="hljs-name" data-v-c0f31d11>NavigationContainer</span>&gt;</span>
  );
}
</code></pre><p data-v-c0f31d11>Untuk percobaan real-time local computer, hilangkan tag <code data-v-c0f31d11>&lt;NavigationContainer&gt;</code></p><p data-v-c0f31d11>dengan urutan seperti ini: </p><ul data-v-c0f31d11><li data-v-c0f31d11>Stack.Navigator<ul data-v-c0f31d11><li data-v-c0f31d11>Home (Tab.Navigator)<ul data-v-c0f31d11><li data-v-c0f31d11>Feed (Screen)</li><li data-v-c0f31d11>Messages (Screen)</li></ul></li><li data-v-c0f31d11>Profile (Screen)</li><li data-v-c0f31d11>Settings (Screen)</li></ul></li></ul><h2 id="terdapat-beberapa-hal-yang-perlu-diperhatikan" data-v-c0f31d11>Terdapat Beberapa hal yang perlu diperhatikan</h2><p data-v-c0f31d11>ref: <a href="https://reactnavigation.org/docs/nesting-navigators#how-nesting-navigators-affects-the-behaviour" data-v-c0f31d11>https://reactnavigation.org/docs/nesting-navigators#how-nesting-navigators-affects-the-behaviour</a></p><h2 id="melakukan-navigasi-terhadap-screen-didalam-navigator-lain" data-v-c0f31d11>Melakukan navigasi terhadap screen didalam navigator lain</h2><p data-v-c0f31d11>ref: <a href="https://reactnavigation.org/docs/nesting-navigators#how-nesting-navigators-affects-the-behaviour" data-v-c0f31d11>https://reactnavigation.org/docs/nesting-navigators#how-nesting-navigators-affects-the-behaviour</a></p><p data-v-c0f31d11>Setiap navigator memiliki &quot;history&quot; mereka sendiri-sendiri. Sebagai contoh jika kamu menjalankan sebuah navigator didalam &quot;screen&quot; maka kamu akan dapat kembali kedalam navigator semula dimana &quot;navigator&quot; parent berada. </p><h3 id="tugas-" data-v-c0f31d11>Tugas:</h3><p data-v-c0f31d11>Membuat sebuah app navigator dimana terdapat: </p><ul data-v-c0f31d11><li data-v-c0f31d11><code data-v-c0f31d11>Profile</code> - screen </li><li data-v-c0f31d11><code data-v-c0f31d11>Home</code> - screen </li><li data-v-c0f31d11><code data-v-c0f31d11>EmptyScreen</code> - <code data-v-c0f31d11>Settings</code> - screen </li><li data-v-c0f31d11><code data-v-c0f31d11>EmptyScreen</code> - <code data-v-c0f31d11>EditPost</code> - screen</li></ul><p data-v-c0f31d11>dan: </p><ul data-v-c0f31d11><li data-v-c0f31d11>pada <code data-v-c0f31d11>Home</code> screen, kita bisa akses <code data-v-c0f31d11>Profile</code> dan <code data-v-c0f31d11>EmptyScreen</code></li><li data-v-c0f31d11>pada component app, kita akan membuat &quot;navigator&quot; utama, dimana mereka bisa diakses dari mana saja didalam component childern.</li></ul><pre data-v-c0f31d11><code class="lang-Js" data-v-c0f31d11><span class="hljs-keyword" data-v-c0f31d11>import</span> * <span class="hljs-keyword" data-v-c0f31d11>as</span> React from <span class="hljs-string" data-v-c0f31d11>&#39;react&#39;</span>;
<span class="hljs-keyword" data-v-c0f31d11>import</span> { Button, View, Text } from <span class="hljs-string" data-v-c0f31d11>&#39;react-native&#39;</span>;
<span class="hljs-keyword" data-v-c0f31d11>import</span> { NavigationContainer } from <span class="hljs-string" data-v-c0f31d11>&#39;@react-navigation/native&#39;</span>;
<span class="hljs-keyword" data-v-c0f31d11>import</span> { createNativeStackNavigator } from <span class="hljs-string" data-v-c0f31d11>&#39;@react-navigation/native-stack&#39;</span>;
<span class="hljs-keyword" data-v-c0f31d11>import</span> { createBottomTabNavigator } from <span class="hljs-string" data-v-c0f31d11>&#39;@react-navigation/bottom-tabs&#39;</span>;

<span class="hljs-keyword" data-v-c0f31d11>let</span> Tab = createBottomTabNavigator()
<span class="hljs-keyword" data-v-c0f31d11>let</span> Stack = createNativeStackNavigator()

<span class="hljs-keyword" data-v-c0f31d11>function</span> Profile({navigation}){
  return (
    &lt;View style={} flex: <span class="hljs-number" data-v-c0f31d11>1</span>, alignItems: <span class="hljs-string" data-v-c0f31d11>&#39;center&#39;</span>, justifyContent: <span class="hljs-string" data-v-c0f31d11>&#39;center&#39;</span> {}&gt;
      &lt;Text&gt;Profile Screen&lt;/Text&gt;
      &lt;Button
        onPress={() =&gt; navigation.navigate(<span class="hljs-string" data-v-c0f31d11>&#39;EditPost&#39;</span>)}
        title=<span class="hljs-string" data-v-c0f31d11>&quot;Go to Edit Post&quot;</span>
      /&gt;
    &lt;/View&gt;
  )
}

<span class="hljs-keyword" data-v-c0f31d11>function</span> EmptyScreen(){
  return (
    &lt;View&gt;
      &lt;Text&gt;Hai, this is Empty and dummy screen&lt;/Text&gt;
    &lt;/View&gt;
  )
}

<span class="hljs-keyword" data-v-c0f31d11>function</span> Home(){
  // tidak boleh ada selain Screen didalam navigator
  return (
    &lt;Tab.Navigator&gt;
      &lt;Tab.Screen name=<span class="hljs-string" data-v-c0f31d11>&quot;Profile&quot;</span> component={Profile} /&gt;
      &lt;Tab.Screen name=<span class="hljs-string" data-v-c0f31d11>&quot;Settings&quot;</span> component={EmptyScreen} /&gt;
    &lt;/Tab.Navigator&gt;
  )
}

<span class="hljs-keyword" data-v-c0f31d11>function</span> App(){
  // Halaman utama akan diambil dari 
  // Stack.Screen pertama,
  // untuk akses Stack Screen kedua <span class="hljs-string" data-v-c0f31d11>&quot;EditPost&quot;</span>
  // kita bisa akses dari component <span class="hljs-string" data-v-c0f31d11>&quot;Profile&quot;</span> <span class="hljs-string" data-v-c0f31d11>&quot;navigation&quot;</span>!!
  return (
    &lt;Stack.Navigator&gt;
      &lt;Stack.Screen name=<span class="hljs-string" data-v-c0f31d11>&#39;Home&#39;</span> component={Home} options={} headerShown: false {}/&gt;
      &lt;Stack.Screen name=<span class="hljs-string" data-v-c0f31d11>&#39;EditPost&#39;</span> component={EmptyScreen} /&gt;
    &lt;/Stack.Navigator&gt;
  )
}

export <span class="hljs-keyword" data-v-c0f31d11>default</span> App
</code></pre><hr data-v-c0f31d11><h1 id="navigation-lifecycle" data-v-c0f31d11>Navigation lifecycle</h1><hr data-v-c0f31d11><p data-v-c0f31d11>Pada topic sebelumnya kita telah mempelajari bagiama mengunakan <code data-v-c0f31d11>navigation.navigate(&#39;RouteName&#39;)</code> untuk melakukan navigasi diantara routes.</p><p data-v-c0f31d11>Pertanyaan: Apa yang terjadi jika kita melakukan navigasi jauh dari <code data-v-c0f31d11>Home</code>, atau bagaimana cara kita kembali? Bagaimana suatu route mencari tau user pergi dan kembali?</p><p data-v-c0f31d11>contoh code: (Src)[../../code/jsPro/React-Navigator-Expo/index-nesting-nagvigator.tsx]</p><p data-v-c0f31d11>Dimana disini, kita akan membuat dua &quot;child container&quot;, yang berfungsi sebagai:</p><p data-v-c0f31d11><strong data-v-c0f31d11>Tujuan</strong></p><ul data-v-c0f31d11><li data-v-c0f31d11>Dimana screen awal adalah &quot;setting&quot;. </li><li data-v-c0f31d11>Terdapat dua screen utama &quot;setting&quot; dan &quot;Home&quot;</li><li data-v-c0f31d11>Kita tidak bisa membuat button pada &quot;setting&quot;, untuk akses creen didalam &quot;Home&quot;, dan sebaliknya.</li></ul><pre data-v-c0f31d11><code class="lang-Js" data-v-c0f31d11><span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Tab.Navigator</span> <span class="hljs-attr" data-v-c0f31d11>screenOptions</span>=<span class="hljs-string" data-v-c0f31d11>{}</span> <span class="hljs-attr" data-v-c0f31d11>headerShown:</span> <span class="hljs-attr" data-v-c0f31d11>false</span> {}&gt;</span>
 <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Tab.Screen</span> <span class="hljs-attr" data-v-c0f31d11>name</span>=<span class="hljs-string" data-v-c0f31d11>&quot;First&quot;</span>&gt;</span>

 {() =&gt; (
            <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>SettingsStack.Navigator</span>&gt;</span>
              <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>SettingsStack.Screen</span> <span class="hljs-attr" data-v-c0f31d11>name</span>=<span class="hljs-string" data-v-c0f31d11>&quot;Settings&quot;</span> <span class="hljs-attr" data-v-c0f31d11>component</span>=<span class="hljs-string" data-v-c0f31d11>{SettingsScreen}/</span>&gt;</span>
              <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>SettingsStack.Screen</span> <span class="hljs-attr" data-v-c0f31d11>name</span>=<span class="hljs-string" data-v-c0f31d11>&quot;Profile&quot;</span> <span class="hljs-attr" data-v-c0f31d11>component</span>=<span class="hljs-string" data-v-c0f31d11>{ProfileScreen}</span> /&gt;</span>
            <span class="hljs-tag" data-v-c0f31d11>&lt;/<span class="hljs-name" data-v-c0f31d11>SettingsStack.Navigator</span>&gt;</span>
          )}

 <span class="hljs-tag" data-v-c0f31d11>&lt;/<span class="hljs-name" data-v-c0f31d11>Tab.Screen</span>&gt;</span>
 <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Tab.Screen</span> <span class="hljs-attr" data-v-c0f31d11>name</span>=<span class="hljs-string" data-v-c0f31d11>&quot;Second&quot;</span>&gt;</span>

 {() =&gt; (
            <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>HomeStack.Navigator</span>&gt;</span>
              <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>HomeStack.Screen</span> <span class="hljs-attr" data-v-c0f31d11>name</span>=<span class="hljs-string" data-v-c0f31d11>&quot;Home&quot;</span> <span class="hljs-attr" data-v-c0f31d11>component</span>=<span class="hljs-string" data-v-c0f31d11>{HomeScreen}</span> /&gt;</span>
              <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>HomeStack.Screen</span> <span class="hljs-attr" data-v-c0f31d11>name</span>=<span class="hljs-string" data-v-c0f31d11>&quot;Details&quot;</span> <span class="hljs-attr" data-v-c0f31d11>component</span>=<span class="hljs-string" data-v-c0f31d11>{DetailsScreen}</span> /&gt;</span>
            <span class="hljs-tag" data-v-c0f31d11>&lt;/<span class="hljs-name" data-v-c0f31d11>HomeStack.Navigator</span>&gt;</span>
          )}

<span class="hljs-tag" data-v-c0f31d11>&lt;/<span class="hljs-name" data-v-c0f31d11>Tab.Screen</span>&gt;</span>
</code></pre><ul data-v-c0f31d11><li data-v-c0f31d11>&quot;Home&quot; hanya bisa akses &quot;Details&quot;</li><li data-v-c0f31d11>&quot;Settings&quot; hanya bisa akses profile</li></ul><hr data-v-c0f31d11><h1 id="contoh-code-sederhana" data-v-c0f31d11>Contoh code sederhana</h1><hr data-v-c0f31d11><pre data-v-c0f31d11><code class="lang-Js" data-v-c0f31d11><span class="hljs-keyword" data-v-c0f31d11>import</span> * <span class="hljs-keyword" data-v-c0f31d11>as</span> React from <span class="hljs-string" data-v-c0f31d11>&#39;react&#39;</span>;
<span class="hljs-keyword" data-v-c0f31d11>import</span> { Button, View, Text } from <span class="hljs-string" data-v-c0f31d11>&#39;react-native&#39;</span>;
<span class="hljs-keyword" data-v-c0f31d11>import</span> { NavigationContainer } from <span class="hljs-string" data-v-c0f31d11>&#39;@react-navigation/native&#39;</span>; 
<span class="hljs-keyword" data-v-c0f31d11>import</span> { createNativeStackNavigator } from <span class="hljs-string" data-v-c0f31d11>&#39;@react-navigation/native-stack&#39;</span>;

<span class="hljs-keyword" data-v-c0f31d11>function</span> HomeScreen({ navigation }) {
  return (
    &lt;View style={} flex: <span class="hljs-number" data-v-c0f31d11>1</span>, alignItems: <span class="hljs-string" data-v-c0f31d11>&#39;center&#39;</span>, justifyContent: <span class="hljs-string" data-v-c0f31d11>&#39;center&#39;</span> {}&gt;
      &lt;Text&gt;Home Screen&lt;/Text&gt;
      &lt;Button
        title=<span class="hljs-string" data-v-c0f31d11>&quot;Go to Details&quot;</span>
        onPress={() =&gt; navigation.navigate(<span class="hljs-string" data-v-c0f31d11>&#39;Details&#39;</span>)}
      /&gt;
    &lt;/View&gt;
  );
}

<span class="hljs-keyword" data-v-c0f31d11>function</span> DetailsScreen() {
  return (
    &lt;View style={} flex: <span class="hljs-number" data-v-c0f31d11>1</span>, alignItems: <span class="hljs-string" data-v-c0f31d11>&#39;center&#39;</span>, justifyContent: <span class="hljs-string" data-v-c0f31d11>&#39;center&#39;</span> {}&gt;
      &lt;Text&gt;Details Screen&lt;/Text&gt;
    &lt;/View&gt;
  );
}

const Stack = createNativeStackNavigator();

<span class="hljs-keyword" data-v-c0f31d11>function</span> App() {
  return (

      &lt;Stack.Navigator initialRouteName=<span class="hljs-string" data-v-c0f31d11>&quot;Home&quot;</span>&gt;
        &lt;Stack.Screen name=<span class="hljs-string" data-v-c0f31d11>&quot;Home&quot;</span> component={HomeScreen} /&gt;
        &lt;Stack.Screen name=<span class="hljs-string" data-v-c0f31d11>&quot;Details&quot;</span> component={DetailsScreen} /&gt;
      &lt;/Stack.Navigator&gt;

  );
}

export <span class="hljs-keyword" data-v-c0f31d11>default</span> App;
</code></pre><p data-v-c0f31d11>Ref: <a href="https://reactnavigation.org/docs/navigating" data-v-c0f31d11>https://reactnavigation.org/docs/navigating</a></p><ul data-v-c0f31d11><li data-v-c0f31d11>Seperti yang saya katakan sebelumnya, sepertinya <code data-v-c0f31d11>NavigationContainer</code> sudah telah menjadi satu dengan <code data-v-c0f31d11>Stack.Navigator</code></li></ul><hr data-v-c0f31d11><h1 id="note-penting" data-v-c0f31d11>Note Penting</h1><hr data-v-c0f31d11><p data-v-c0f31d11>Untuk kemudian kita tidak perlu mengunakan <code data-v-c0f31d11>&lt;NavigationContainer&gt;</code>, <strong data-v-c0f31d11>cukup pakai</strong> <code data-v-c0f31d11>stack</code></p><ul data-v-c0f31d11><li data-v-c0f31d11>&quot;Navigator&quot; - adalah component react yang akan mennentukan melakukan render &quot;screens&quot; mana yang akan dipilih. </li><li data-v-c0f31d11>&quot;Router&quot; - adalah koleksi fungsi yang dapat membantu kita untuk melakukan handle terhadap perubahan action dan state didalam navigator.</li><li data-v-c0f31d11><p data-v-c0f31d11>&quot;Screen component&quot; - adalah sebuah component yang kita gunakan didalam melakukan configurasi route.</p></li><li data-v-c0f31d11><p data-v-c0f31d11><code data-v-c0f31d11>Navigation Prop</code> &quot;navigate&quot; - digunakan untuk melakukan navigasi kita.</p></li></ul><hr data-v-c0f31d11><h1 id="mengetahui-kapan-masuk-dan-keluar-screen-lifecyle-" data-v-c0f31d11>mengetahui kapan masuk dan keluar screen (LifeCyle)</h1><hr data-v-c0f31d11><pre data-v-c0f31d11><code class="lang-Js" data-v-c0f31d11><span class="hljs-keyword" data-v-c0f31d11>import</span> { useState, useCallback } <span class="hljs-keyword" data-v-c0f31d11>from</span> <span class="hljs-string" data-v-c0f31d11>&quot;react&quot;</span>
<span class="hljs-keyword" data-v-c0f31d11>import</span> { useFocusEffect } <span class="hljs-keyword" data-v-c0f31d11>from</span> <span class="hljs-string" data-v-c0f31d11>&#39;@react-navigation/native&#39;</span>;

useFocusEffect(
    useCallback(<span class="hljs-function" data-v-c0f31d11><span class="hljs-params" data-v-c0f31d11>()</span> =&gt;</span> {
      <span class="hljs-built_in" data-v-c0f31d11>console</span>.log(<span class="hljs-string" data-v-c0f31d11>&#39;Screen was focused ( Mount )&#39;</span>);
      <span class="hljs-comment" data-v-c0f31d11>// Do something when the screen is focused</span>
      <span class="hljs-keyword" data-v-c0f31d11>return</span> <span class="hljs-function" data-v-c0f31d11><span class="hljs-params" data-v-c0f31d11>()</span> =&gt;</span> {
        <span class="hljs-built_in" data-v-c0f31d11>console</span>.log(<span class="hljs-string" data-v-c0f31d11>&#39;Screen was unfocused ( Unmount )&#39;</span>);
        setCount(<span class="hljs-number" data-v-c0f31d11>0</span>)
        <span class="hljs-comment" data-v-c0f31d11>// Do something when the screen is unfocused</span>
        <span class="hljs-comment" data-v-c0f31d11>// Useful for cleanup functions</span>
      };
    }, [])
  );
</code></pre><p data-v-c0f31d11><a href="../../code/jsPro/React-Navigator-Expo/index-lifecylce-navigator.tsx" data-v-c0f31d11>source code</a></p><hr data-v-c0f31d11><h1 id="tugas-akhir-membuat-pilihan-keluar-atau-stay-pada-screen" data-v-c0f31d11>Tugas Akhir, membuat pilihan keluar atau stay pada screen</h1><hr data-v-c0f31d11><p data-v-c0f31d11>Ref: <a href="https://reactnavigation.org/docs/preventing-going-back" data-v-c0f31d11>https://reactnavigation.org/docs/preventing-going-back</a></p><hr data-v-c0f31d11><hr data-v-c0f31d11><hr data-v-c0f31d11><h1 id="berpindah-antara-screen-dan-back-" data-v-c0f31d11>Berpindah antara screen dan Back()</h1><hr data-v-c0f31d11><pre data-v-c0f31d11><code class="lang-js" data-v-c0f31d11><span class="hljs-keyword" data-v-c0f31d11>import</span> * <span class="hljs-keyword" data-v-c0f31d11>as</span> React from <span class="hljs-string" data-v-c0f31d11>&#39;react&#39;</span>;
<span class="hljs-keyword" data-v-c0f31d11>import</span> { Button, View, Text } from <span class="hljs-string" data-v-c0f31d11>&#39;react-native&#39;</span>;
<span class="hljs-keyword" data-v-c0f31d11>import</span> { NavigationContainer } from <span class="hljs-string" data-v-c0f31d11>&#39;@react-navigation/native&#39;</span>;
<span class="hljs-keyword" data-v-c0f31d11>import</span> { createNativeStackNavigator } from <span class="hljs-string" data-v-c0f31d11>&#39;@react-navigation/native-stack&#39;</span>;

<span class="hljs-keyword" data-v-c0f31d11>function</span> HomeScreen({ navigation }) {
  return (
    &lt;View style={} flex: <span class="hljs-number" data-v-c0f31d11>1</span>, alignItems: <span class="hljs-string" data-v-c0f31d11>&#39;center&#39;</span>, justifyContent: <span class="hljs-string" data-v-c0f31d11>&#39;center&#39;</span> {}&gt;
      &lt;Text&gt;Home Screen&lt;/Text&gt;
      &lt;Button
        title=<span class="hljs-string" data-v-c0f31d11>&quot;Go to Details&quot;</span>
        onPress={() =&gt; navigation.navigate(<span class="hljs-string" data-v-c0f31d11>&#39;Details&#39;</span>)}
      /&gt;
    &lt;/View&gt;
  );
}

<span class="hljs-keyword" data-v-c0f31d11>function</span> DetailsScreen({ navigation }) {
  return (
    &lt;View style={} flex: <span class="hljs-number" data-v-c0f31d11>1</span>, alignItems: <span class="hljs-string" data-v-c0f31d11>&#39;center&#39;</span>, justifyContent: <span class="hljs-string" data-v-c0f31d11>&#39;center&#39;</span> {}&gt;
      &lt;Text&gt;Details Screen&lt;/Text&gt;
      &lt;Button
        title=<span class="hljs-string" data-v-c0f31d11>&quot;Go to Details... again&quot;</span>
        onPress={() =&gt; navigation.push(<span class="hljs-string" data-v-c0f31d11>&#39;Details&#39;</span>)}
      /&gt;
      &lt;Button title=<span class="hljs-string" data-v-c0f31d11>&quot;Go to Home&quot;</span> onPress={() =&gt; navigation.navigate(<span class="hljs-string" data-v-c0f31d11>&#39;Home&#39;</span>)} /&gt;
      &lt;Button title=<span class="hljs-string" data-v-c0f31d11>&quot;Go back&quot;</span> onPress={() =&gt; navigation.goBack()} /&gt;
    &lt;/View&gt;
  );
}

const Stack = createNativeStackNavigator();

<span class="hljs-keyword" data-v-c0f31d11>function</span> App() {
  return (
    &lt;NavigationContainer&gt;
      &lt;Stack.Navigator initialRouteName=<span class="hljs-string" data-v-c0f31d11>&quot;Home&quot;</span>&gt;
        &lt;Stack.Screen name=<span class="hljs-string" data-v-c0f31d11>&quot;Home&quot;</span> component={HomeScreen} /&gt;
        &lt;Stack.Screen name=<span class="hljs-string" data-v-c0f31d11>&quot;Details&quot;</span> component={DetailsScreen} /&gt;
      &lt;/Stack.Navigator&gt;
    &lt;/NavigationContainer&gt;
  );
}

export <span class="hljs-keyword" data-v-c0f31d11>default</span> App;
</code></pre><p data-v-c0f31d11><strong data-v-c0f31d11>Titik Penting:</strong></p><pre data-v-c0f31d11><code class="lang-Js" data-v-c0f31d11> &lt;<span class="hljs-keyword" data-v-c0f31d11>Button</span>
        <span class="hljs-keyword" data-v-c0f31d11>title</span>=<span class="hljs-string" data-v-c0f31d11>&quot;Go to Details... again&quot;</span>
        onPress={() =&gt; navigation.push(<span class="hljs-string" data-v-c0f31d11>&#39;Details&#39;</span>)}
      /&gt;

      &lt;<span class="hljs-keyword" data-v-c0f31d11>Button</span> <span class="hljs-keyword" data-v-c0f31d11>title</span>=<span class="hljs-string" data-v-c0f31d11>&quot;Go to Home&quot;</span> onPress={() =&gt; navigation.navigate(<span class="hljs-string" data-v-c0f31d11>&#39;Home&#39;</span>)} /&gt;

      &lt;<span class="hljs-keyword" data-v-c0f31d11>Button</span> <span class="hljs-keyword" data-v-c0f31d11>title</span>=<span class="hljs-string" data-v-c0f31d11>&quot;Go back&quot;</span> onPress={() =&gt; navigation.goBack()} /&gt;
</code></pre><p data-v-c0f31d11>ref: <a href="https://stackoverflow.com/questions/51090135/react-navigation-v2-difference-between-navigation-push-and-navigation-navigate" data-v-c0f31d11>https://stackoverflow.com/questions/51090135/react-navigation-v2-difference-between-navigation-push-and-navigation-navigate</a></p><hr data-v-c0f31d11><h1 id="passing-parameter-to-routes" data-v-c0f31d11>Passing Parameter to routes</h1><hr data-v-c0f31d11><pre data-v-c0f31d11><code class="lang-Js" data-v-c0f31d11><span class="xml" data-v-c0f31d11>
// ============== Send Params ===============
function HomeScreen(</span><span class="hljs-template-variable" data-v-c0f31d11>{ navigation }</span><span class="xml" data-v-c0f31d11>) </span><span class="hljs-template-variable" data-v-c0f31d11>{
  return (
    &lt;View style={} flex: 1, alignItems: &#39;center&#39;, justifyContent: &#39;center&#39; }</span><span class="xml" data-v-c0f31d11>}&gt;

      <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Text</span>&gt;</span>Home Screen<span class="hljs-tag" data-v-c0f31d11>&lt;/<span class="hljs-name" data-v-c0f31d11>Text</span>&gt;</span>
      <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Button</span>
        <span class="hljs-attr" data-v-c0f31d11>title</span>=<span class="hljs-string" data-v-c0f31d11>&quot;Go to Details&quot;</span>
        <span class="hljs-attr" data-v-c0f31d11>onPress</span>=</span></span><span class="hljs-template-variable" data-v-c0f31d11>{() =&gt; {
          /* 1. Navigate to the Details route with params */
          navigation.navigate(&#39;Details&#39;, {
            itemId: 86,
            otherParam: &#39;anything you want here&#39;,
          }</span><span class="xml" data-v-c0f31d11><span class="hljs-tag" data-v-c0f31d11>);
        }}
      /&gt;</span>
    <span class="hljs-tag" data-v-c0f31d11>&lt;/<span class="hljs-name" data-v-c0f31d11>View</span>&gt;</span>
  );
}

// ============= get the params =============
function DetailsScreen(</span><span class="hljs-template-variable" data-v-c0f31d11>{ route, navigation }</span><span class="xml" data-v-c0f31d11>) </span><span class="hljs-template-variable" data-v-c0f31d11>{
  /* 2. Get the param */
  const { itemId, otherParam }</span><span class="xml" data-v-c0f31d11> = route.params;
  return (
    <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>View</span> <span class="hljs-attr" data-v-c0f31d11>style</span>=</span></span><span class="hljs-template-variable" data-v-c0f31d11>{ flex: 1, alignItems: &#39;center&#39;, justifyContent: &#39;center&#39; }</span><span class="xml" data-v-c0f31d11><span class="hljs-tag" data-v-c0f31d11>}&gt;</span>
      <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Text</span>&gt;</span>Details Screen<span class="hljs-tag" data-v-c0f31d11>&lt;/<span class="hljs-name" data-v-c0f31d11>Text</span>&gt;</span>
      <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Text</span>&gt;</span>itemId: </span><span class="hljs-template-variable" data-v-c0f31d11>{JSON.stringify(itemId)}</span><span class="xml" data-v-c0f31d11><span class="hljs-tag" data-v-c0f31d11>&lt;/<span class="hljs-name" data-v-c0f31d11>Text</span>&gt;</span>
      <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Text</span>&gt;</span>otherParam: </span><span class="hljs-template-variable" data-v-c0f31d11>{JSON.stringify(otherParam)}</span><span class="xml" data-v-c0f31d11><span class="hljs-tag" data-v-c0f31d11>&lt;/<span class="hljs-name" data-v-c0f31d11>Text</span>&gt;</span>
      <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Button</span>
        <span class="hljs-attr" data-v-c0f31d11>title</span>=<span class="hljs-string" data-v-c0f31d11>&quot;Go to Details... again&quot;</span>
        <span class="hljs-attr" data-v-c0f31d11>onPress</span>=</span></span><span class="hljs-template-variable" data-v-c0f31d11>{() =&gt;
          navigation.push(&#39;Details&#39;, {
            itemId: <span class="hljs-keyword" data-v-c0f31d11>Math</span>.floor(<span class="hljs-keyword" data-v-c0f31d11>Math</span>.random() * 100),
          }</span><span class="xml" data-v-c0f31d11><span class="hljs-tag" data-v-c0f31d11>)
        }
      /&gt;</span>
      <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Button</span> <span class="hljs-attr" data-v-c0f31d11>title</span>=<span class="hljs-string" data-v-c0f31d11>&quot;Go to Home&quot;</span> <span class="hljs-attr" data-v-c0f31d11>onPress</span>=</span></span><span class="hljs-template-variable" data-v-c0f31d11>{() =&gt; navigation.navigate(&#39;Home&#39;)}</span><span class="xml" data-v-c0f31d11><span class="hljs-tag" data-v-c0f31d11> /&gt;</span>
      <span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Button</span> <span class="hljs-attr" data-v-c0f31d11>title</span>=<span class="hljs-string" data-v-c0f31d11>&quot;Go back&quot;</span> <span class="hljs-attr" data-v-c0f31d11>onPress</span>=</span></span><span class="hljs-template-variable" data-v-c0f31d11>{() =&gt; navigation.goBack()}</span><span class="xml" data-v-c0f31d11><span class="hljs-tag" data-v-c0f31d11> /&gt;</span>
    <span class="hljs-tag" data-v-c0f31d11>&lt;/<span class="hljs-name" data-v-c0f31d11>View</span>&gt;</span>
  );
}</span>
</code></pre><p data-v-c0f31d11><strong data-v-c0f31d11>Point penting :*</strong></p><pre data-v-c0f31d11><code class="lang-Js" data-v-c0f31d11><span class="hljs-comment" data-v-c0f31d11>// ====== Params sender ==========</span>

&lt;Button
        title=<span class="hljs-string" data-v-c0f31d11>&quot;Go to Details&quot;</span>
        onPress={() =&gt; {
          <span class="hljs-comment" data-v-c0f31d11>/* 1. Navigate to the Details route with params */</span>
          navigation.navigate(<span class="hljs-string" data-v-c0f31d11>&#39;Details&#39;</span>, {
            itemId: <span class="hljs-number" data-v-c0f31d11>86</span>,
            otherParam: <span class="hljs-string" data-v-c0f31d11>&#39;anything you want here&#39;</span>,
          });
        }}
      /&gt;


<span class="hljs-comment" data-v-c0f31d11>// =============== Params receiver ==========</span>

<span class="hljs-function" data-v-c0f31d11><span class="hljs-keyword" data-v-c0f31d11>function</span> <span class="hljs-title" data-v-c0f31d11>DetailsScreen</span><span class="hljs-params" data-v-c0f31d11>({ route, navigation })</span> </span>{
  <span class="hljs-comment" data-v-c0f31d11>/* 2. Get the param */</span>
  <span class="hljs-keyword" data-v-c0f31d11>const</span> { itemId, otherParam } = route.params;
</code></pre><p data-v-c0f31d11><strong data-v-c0f31d11>Atau dengan :</strong></p><p data-v-c0f31d11>initial params. dimana ini kita tulis didalam screen. </p><pre data-v-c0f31d11><code class="lang-Js" data-v-c0f31d11><span class="hljs-tag" data-v-c0f31d11>&lt;<span class="hljs-name" data-v-c0f31d11>Stack.Screen</span>
  <span class="hljs-attr" data-v-c0f31d11>name</span>=<span class="hljs-string" data-v-c0f31d11>&quot;Details&quot;</span>
  <span class="hljs-attr" data-v-c0f31d11>component</span>=<span class="hljs-string" data-v-c0f31d11>{DetailsScreen}</span>
  <span class="hljs-attr" data-v-c0f31d11>initialParams</span>=<span class="hljs-string" data-v-c0f31d11>{}</span> <span class="hljs-attr" data-v-c0f31d11>itemId:</span> <span class="hljs-attr" data-v-c0f31d11>42</span> {}
/&gt;</span>
</code></pre><hr data-v-c0f31d11><h1 id="usenavigation" data-v-c0f31d11>useNavigation</h1><hr data-v-c0f31d11><p data-v-c0f31d11>Ref: <a href="https://reactnavigation.org/docs/use-navigation/" data-v-c0f31d11>https://reactnavigation.org/docs/use-navigation/</a></p><p data-v-c0f31d11>Sebuah metode untuk berpindah screen jika kita berada didalam component paling bawah. </p><hr data-v-c0f31d11><h1 id="stackaction" data-v-c0f31d11>StackAction</h1><hr data-v-c0f31d11><p data-v-c0f31d11>Ref: <a href="https://reactnavigation.org/docs/stack-actions/" data-v-c0f31d11>https://reactnavigation.org/docs/stack-actions/</a></p><p data-v-c0f31d11>StackAction push adalah sebuah metode untuk kita mengirim data dari screen lain</p><ul data-v-c0f31d11><li data-v-c0f31d11>Gunakan &quot;Push&quot; ketika Anda ingin menambahkan layar baru ke riwayat navigasi dan memungkinkan pengguna untuk kembali ke layar sebelumnya.</li><li data-v-c0f31d11>Gunakan &quot;Replace&quot; ketika Anda ingin mengganti layar yang ada dengan layar baru dan mencegah pengguna kembali ke layar yang diganti.</li></ul><h2 id="referensi" data-v-c0f31d11>Referensi</h2><ul data-v-c0f31d11><li data-v-c0f31d11><a href="https://snack.expo.dev/" data-v-c0f31d11>https://snack.expo.dev/</a></li><li data-v-c0f31d11><a href="https://medium.com/@tbgarza2/nested-navigation-react-navigation-4518c273b71e" data-v-c0f31d11>https://medium.com/@tbgarza2/nested-navigation-react-navigation-4518c273b71e</a></li><li data-v-c0f31d11><a href="https://wix.github.io/react-native-navigation/docs/installing" data-v-c0f31d11>https://wix.github.io/react-native-navigation/docs/installing</a> | react-native-navigation</li></ul>`,103)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},D0=ca(R0,[["__scopeId","data-v-c0f31d11"]]),P0={__name:"react-note1",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="membuat-component-pada-react" data-v-928f0e50>Membuat component pada react</h1><p data-v-928f0e50>terdapat dua cara yaitu pembuatan dengan:</p><ul data-v-928f0e50><li data-v-928f0e50>function </li><li data-v-928f0e50>class </li></ul><p data-v-928f0e50>Perhatikan file App.js dibawah ini</p><pre data-v-928f0e50><code data-v-928f0e50><span class="hljs-keyword" data-v-928f0e50>import</span> logo <span class="hljs-keyword" data-v-928f0e50>from</span> <span class="hljs-string" data-v-928f0e50>&#39;./logo.svg&#39;</span>;
<span class="hljs-keyword" data-v-928f0e50>import</span> <span class="hljs-string" data-v-928f0e50>&#39;./App.css&#39;</span>;
<span class="hljs-keyword" data-v-928f0e50>import</span> Item02 <span class="hljs-keyword" data-v-928f0e50>from</span> <span class="hljs-string" data-v-928f0e50>&#39;./item02&#39;</span>;
<span class="hljs-keyword" data-v-928f0e50>import</span> Item01 <span class="hljs-keyword" data-v-928f0e50>from</span> <span class="hljs-string" data-v-928f0e50>&#39;./item01&#39;</span>;

<span class="hljs-function" data-v-928f0e50><span class="hljs-keyword" data-v-928f0e50>function</span> <span class="hljs-title" data-v-928f0e50>App</span>(<span class="hljs-params" data-v-928f0e50></span>) </span>{
  <span class="hljs-keyword" data-v-928f0e50>return</span> (
    <span class="xml" data-v-928f0e50><span class="hljs-tag" data-v-928f0e50>&lt;<span class="hljs-name" data-v-928f0e50>div</span> <span class="hljs-attr" data-v-928f0e50>className</span>=<span class="hljs-string" data-v-928f0e50>&quot;App&quot;</span>&gt;</span>
      <span class="hljs-tag" data-v-928f0e50>&lt;<span class="hljs-name" data-v-928f0e50>header</span> <span class="hljs-attr" data-v-928f0e50>className</span>=<span class="hljs-string" data-v-928f0e50>&quot;App-header&quot;</span>&gt;</span>
        <span class="hljs-tag" data-v-928f0e50>&lt;<span class="hljs-name" data-v-928f0e50>img</span> <span class="hljs-attr" data-v-928f0e50>src</span>=<span class="hljs-string" data-v-928f0e50>{logo}</span> <span class="hljs-attr" data-v-928f0e50>className</span>=<span class="hljs-string" data-v-928f0e50>&quot;App-logo&quot;</span> <span class="hljs-attr" data-v-928f0e50>alt</span>=<span class="hljs-string" data-v-928f0e50>&quot;logo&quot;</span> /&gt;</span>


        <span class="hljs-tag" data-v-928f0e50>&lt;<span class="hljs-name" data-v-928f0e50>Item01</span> /&gt;</span>
      <span class="hljs-tag" data-v-928f0e50>&lt;/<span class="hljs-name" data-v-928f0e50>header</span>&gt;</span>
    <span class="hljs-tag" data-v-928f0e50>&lt;/<span class="hljs-name" data-v-928f0e50>div</span>&gt;</span>
  );
}

export default App;</span>
</code></pre><p data-v-928f0e50>file tersebut tidak akan berubah meskipun component class/function </p><h2 id="contoh-function" data-v-928f0e50>Contoh function</h2><p data-v-928f0e50>component function </p><pre data-v-928f0e50><code class="lang-Js" data-v-928f0e50><span class="hljs-keyword" data-v-928f0e50>import</span> React, {useState} <span class="hljs-keyword" data-v-928f0e50>from</span> <span class="hljs-string" data-v-928f0e50>&#39;react&#39;</span>;

<span class="hljs-function" data-v-928f0e50><span class="hljs-keyword" data-v-928f0e50>function</span> <span class="hljs-title" data-v-928f0e50>App</span>(<span class="hljs-params" data-v-928f0e50></span>)</span>{
    <span class="hljs-keyword" data-v-928f0e50>let</span> [count, setCount] = useState(<span class="hljs-number" data-v-928f0e50>0</span>)
    <span class="hljs-comment" data-v-928f0e50>// count adalah bentuk dari &#39;state&#39; dengan nilai 0</span>
    <span class="hljs-comment" data-v-928f0e50>// setCount akan menjadi function, untuk memperbarui count</span>

    <span class="hljs-keyword" data-v-928f0e50>let</span> handleClick = <span class="hljs-function" data-v-928f0e50><span class="hljs-params" data-v-928f0e50>()</span> =&gt;</span> {
        setCount(count + <span class="hljs-number" data-v-928f0e50>1</span>)
        <span class="hljs-comment" data-v-928f0e50>// variabel &#39;setCount&#39; menjadi penganti &#39;setState&#39;. Istilahnya React Hooks</span>
        <span class="hljs-comment" data-v-928f0e50>// Jika ingin mengunakan setState</span>
        <span class="hljs-comment" data-v-928f0e50>// this.setState({count: this.state.count+1})</span>
    }

    <span class="hljs-keyword" data-v-928f0e50>return</span> (
        <span class="xml" data-v-928f0e50><span class="hljs-tag" data-v-928f0e50>&lt;<span class="hljs-name" data-v-928f0e50>div</span>&gt;</span>

<span class="hljs-tag" data-v-928f0e50>&lt;<span class="hljs-name" data-v-928f0e50>h1</span>&gt;</span>{count}<span class="hljs-tag" data-v-928f0e50>&lt;/<span class="hljs-name" data-v-928f0e50>h1</span>&gt;</span>
<span class="hljs-tag" data-v-928f0e50>&lt;<span class="hljs-name" data-v-928f0e50>button</span> <span class="hljs-attr" data-v-928f0e50>onClick</span>=<span class="hljs-string" data-v-928f0e50>{()</span> =&gt;</span> {handleClick()}}&gt; + <span class="hljs-tag" data-v-928f0e50>&lt;/<span class="hljs-name" data-v-928f0e50>button</span>&gt;</span>

        <span class="hljs-tag" data-v-928f0e50>&lt;/<span class="hljs-name" data-v-928f0e50>div</span>&gt;</span></span>
    )
}

<span class="hljs-keyword" data-v-928f0e50>export</span> <span class="hljs-keyword" data-v-928f0e50>default</span> App
</code></pre><p data-v-928f0e50>Membuat sebuah counter, </p><h2 id="contoh-class-component" data-v-928f0e50>Contoh class component</h2><pre data-v-928f0e50><code class="lang-Js" data-v-928f0e50>import React <span class="hljs-keyword" data-v-928f0e50>from</span> &#39;react&#39;;

class Item01 extends React.Component{
    constructor(props){
        super(props)
        this.<span class="hljs-keyword" data-v-928f0e50>state</span> = {count: <span class="hljs-number" data-v-928f0e50>0</span>}
    }

    handleClick() {
        this.<span class="hljs-built_in" data-v-928f0e50>set</span>State({count : this.<span class="hljs-keyword" data-v-928f0e50>state</span>.count + <span class="hljs-number" data-v-928f0e50>1</span>})
        // variabel &#39;<span class="hljs-built_in" data-v-928f0e50>set</span>Count&#39; menjadi penganti &#39;<span class="hljs-built_in" data-v-928f0e50>set</span>State&#39;. Istilahnya React Hooks
        // Jika ingin mengunakan <span class="hljs-built_in" data-v-928f0e50>set</span>State
        // this.<span class="hljs-built_in" data-v-928f0e50>set</span>State({count: this.<span class="hljs-keyword" data-v-928f0e50>state</span>.count+<span class="hljs-number" data-v-928f0e50>1</span>})
    }

    render(){
        return (
            <span class="hljs-variable" data-v-928f0e50>&lt;div&gt;</span>

    <span class="hljs-variable" data-v-928f0e50>&lt;h1&gt;</span>{this.<span class="hljs-keyword" data-v-928f0e50>state</span>.count}&lt;/h1&gt;
    <span class="hljs-variable" data-v-928f0e50>&lt;button onClick={() =&gt;</span> {this.handleClick()}}&gt; + &lt;/button&gt;

            &lt;/div&gt;
        )
    }

}

export <span class="hljs-keyword" data-v-928f0e50>default</span> Item01
</code></pre>`,12)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},I0=ca(P0,[["__scopeId","data-v-928f0e50"]]),N0={__name:"react-note2",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="membuat-banyak-component" data-v-a62b0594>membuat banyak component</h1><p data-v-a62b0594>Tujuan adalah membuat banyak component, dan digabungkan menjadi satu pada App.js. </p><h3 id="tahapan" data-v-a62b0594>Tahapan</h3><ul data-v-a62b0594><li data-v-a62b0594>Buat component disekitar <code data-v-a62b0594>App.js</code></li></ul><h3 id="tahapan-00" data-v-a62b0594>Tahapan 00</h3><pre data-v-a62b0594><code class="lang-Js" data-v-a62b0594><span class="hljs-comment" data-v-a62b0594>// App.js</span>
<span class="hljs-keyword" data-v-a62b0594>import</span> logo <span class="hljs-keyword" data-v-a62b0594>from</span> <span class="hljs-string" data-v-a62b0594>&#39;./logo.svg&#39;</span>;
<span class="hljs-keyword" data-v-a62b0594>import</span> <span class="hljs-string" data-v-a62b0594>&#39;./App.css&#39;</span>;
<span class="hljs-keyword" data-v-a62b0594>import</span> Item02 <span class="hljs-keyword" data-v-a62b0594>from</span> <span class="hljs-string" data-v-a62b0594>&#39;./item02&#39;</span>;

<span class="hljs-function" data-v-a62b0594><span class="hljs-keyword" data-v-a62b0594>function</span> <span class="hljs-title" data-v-a62b0594>App</span>(<span class="hljs-params" data-v-a62b0594></span>) </span>{
  <span class="hljs-keyword" data-v-a62b0594>return</span> (
    <span class="xml" data-v-a62b0594><span class="hljs-tag" data-v-a62b0594>&lt;<span class="hljs-name" data-v-a62b0594>div</span> <span class="hljs-attr" data-v-a62b0594>className</span>=<span class="hljs-string" data-v-a62b0594>&quot;App&quot;</span>&gt;</span>
      <span class="hljs-tag" data-v-a62b0594>&lt;<span class="hljs-name" data-v-a62b0594>header</span> <span class="hljs-attr" data-v-a62b0594>className</span>=<span class="hljs-string" data-v-a62b0594>&quot;App-header&quot;</span>&gt;</span>
        <span class="hljs-tag" data-v-a62b0594>&lt;<span class="hljs-name" data-v-a62b0594>img</span> <span class="hljs-attr" data-v-a62b0594>src</span>=<span class="hljs-string" data-v-a62b0594>{logo}</span> <span class="hljs-attr" data-v-a62b0594>className</span>=<span class="hljs-string" data-v-a62b0594>&quot;App-logo&quot;</span> <span class="hljs-attr" data-v-a62b0594>alt</span>=<span class="hljs-string" data-v-a62b0594>&quot;logo&quot;</span> /&gt;</span>


        <span class="hljs-tag" data-v-a62b0594>&lt;<span class="hljs-name" data-v-a62b0594>Item02</span> /&gt;</span>
      <span class="hljs-tag" data-v-a62b0594>&lt;/<span class="hljs-name" data-v-a62b0594>header</span>&gt;</span>
    <span class="hljs-tag" data-v-a62b0594>&lt;/<span class="hljs-name" data-v-a62b0594>div</span>&gt;</span>
  );
}

export default App;</span>
</code></pre><h3 id="tahapan-01" data-v-a62b0594>Tahapan 01</h3><p data-v-a62b0594>Tujuan adalah untuk membuat component yang akan terus dipanggil pada loop <code data-v-a62b0594>map()</code>. maka file <code data-v-a62b0594>item01.js</code> akan terus dipanggil.</p><pre data-v-a62b0594><code class="lang-Javascript" data-v-a62b0594><span class="hljs-comment" data-v-a62b0594>// item01.js</span>
<span class="hljs-keyword" data-v-a62b0594>import</span> <span class="hljs-type" data-v-a62b0594>React</span> from <span class="hljs-symbol" data-v-a62b0594>&#39;reac</span>t&#39;;

<span class="hljs-class" data-v-a62b0594><span class="hljs-keyword" data-v-a62b0594>class</span> <span class="hljs-title" data-v-a62b0594>Item01</span> <span class="hljs-keyword" data-v-a62b0594>extends</span> <span class="hljs-title" data-v-a62b0594>React</span>.<span class="hljs-title" data-v-a62b0594>Component</span> </span>{

    render(){
        <span class="hljs-keyword" data-v-a62b0594>return</span>(

        &lt;div&gt;

        &lt;h1&gt; <span class="hljs-type" data-v-a62b0594>Halo</span> aku adalah item <span class="hljs-number" data-v-a62b0594>01</span> &lt;/h1&gt;
        &lt;p&gt; buah {<span class="hljs-keyword" data-v-a62b0594>this</span>.props.name} rasanya adalah {<span class="hljs-keyword" data-v-a62b0594>this</span>.props.rasa} &lt;/p&gt;
        {<span class="hljs-comment" data-v-a62b0594>/* &lt;===== Paragraph memiliki hubungan dengan item02 === */</span>}

        &lt;/div&gt;

)
}

}


<span class="hljs-comment" data-v-a62b0594>// Eksport component</span>

export <span class="hljs-keyword" data-v-a62b0594>default</span> <span class="hljs-type" data-v-a62b0594>Item01</span>;
</code></pre><p data-v-a62b0594><code data-v-a62b0594>Item01</code> adalah file baru pada folder components. </p><h3 id="tahap-02" data-v-a62b0594>Tahap 02</h3><p data-v-a62b0594>Membuat Component <code data-v-a62b0594>item02</code> yang berfungsi untuk memanggil <code data-v-a62b0594>item01</code> dan menjadi wadah dari loop <code data-v-a62b0594>map()</code></p><pre data-v-a62b0594><code class="lang-Js" data-v-a62b0594><span class="hljs-comment" data-v-a62b0594>// item02.js</span>
<span class="hljs-keyword" data-v-a62b0594>import</span> React <span class="hljs-keyword" data-v-a62b0594>from</span> <span class="hljs-string" data-v-a62b0594>&#39;react&#39;</span>;
<span class="hljs-keyword" data-v-a62b0594>import</span> Item01 <span class="hljs-keyword" data-v-a62b0594>from</span> <span class="hljs-string" data-v-a62b0594>&#39;./item01&#39;</span>

<span class="hljs-class" data-v-a62b0594><span class="hljs-keyword" data-v-a62b0594>class</span> <span class="hljs-title" data-v-a62b0594>Item02</span> <span class="hljs-keyword" data-v-a62b0594>extends</span> <span class="hljs-title" data-v-a62b0594>React</span>.<span class="hljs-title" data-v-a62b0594>Component</span> </span>{

    render(){
        <span class="hljs-keyword" data-v-a62b0594>let</span> buahArr = 
            [
            {<span class="hljs-attr" data-v-a62b0594>name</span>: <span class="hljs-string" data-v-a62b0594>&#39;semangka&#39;</span>, <span class="hljs-attr" data-v-a62b0594>rasa</span>:<span class="hljs-string" data-v-a62b0594>&#39;manis&#39;</span>},
            {<span class="hljs-attr" data-v-a62b0594>name</span>: <span class="hljs-string" data-v-a62b0594>&#39;jeruk&#39;</span>, <span class="hljs-attr" data-v-a62b0594>rasa</span>:<span class="hljs-string" data-v-a62b0594>&#39;asam&#39;</span>}
            ]


        <span class="hljs-keyword" data-v-a62b0594>return</span>(

            <span class="xml" data-v-a62b0594><span class="hljs-tag" data-v-a62b0594>&lt;<span class="hljs-name" data-v-a62b0594>div</span>&gt;</span>
            <span class="hljs-tag" data-v-a62b0594>&lt;<span class="hljs-name" data-v-a62b0594>h3</span>&gt;</span> halo ini list dari component item02 <span class="hljs-tag" data-v-a62b0594>&lt;/<span class="hljs-name" data-v-a62b0594>h3</span>&gt;</span>

            {/* <span class="hljs-tag" data-v-a62b0594>&lt;<span class="hljs-name" data-v-a62b0594>======</span> <span class="hljs-attr" data-v-a62b0594>Ini</span> <span class="hljs-attr" data-v-a62b0594>adalah</span> <span class="hljs-attr" data-v-a62b0594>component</span> <span class="hljs-attr" data-v-a62b0594>item01</span> */}

            {<span class="hljs-attr" data-v-a62b0594>buahArr.map</span>( (<span class="hljs-attr" data-v-a62b0594>buaharr</span>)=&gt;</span>{

                return (

                    <span class="hljs-tag" data-v-a62b0594>&lt;<span class="hljs-name" data-v-a62b0594>Item01</span> 
                     <span class="hljs-attr" data-v-a62b0594>name</span>=<span class="hljs-string" data-v-a62b0594>{buaharr.name}</span> 
                     <span class="hljs-attr" data-v-a62b0594>rasa</span>=<span class="hljs-string" data-v-a62b0594>{buaharr.rasa}</span> 
                    /&gt;</span>

                    )}
            )}


            <span class="hljs-tag" data-v-a62b0594>&lt;/<span class="hljs-name" data-v-a62b0594>div</span>&gt;</span>

)
}
}

export default Item02</span>
</code></pre>`,13)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},O0=ca(N0,[["__scopeId","data-v-a62b0594"]]),H0={__name:"react-note3",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="membuat-button-interactive" data-v-966449f1>Membuat button interactive</h1><p data-v-966449f1>Pada contoh kali ini, kita bisa menyembunyikan dan menampilkan element pada HTML dengan satu kali click. </p><pre data-v-966449f1><code data-v-966449f1><span class="hljs-comment" data-v-966449f1>// itemAdd.js</span>
<span class="hljs-keyword" data-v-966449f1>import</span> <span class="hljs-type" data-v-966449f1>React</span> from <span class="hljs-symbol" data-v-966449f1>&#39;reac</span>t&#39;;

<span class="hljs-class" data-v-966449f1><span class="hljs-keyword" data-v-966449f1>class</span> <span class="hljs-title" data-v-966449f1>ItemAdd</span> <span class="hljs-keyword" data-v-966449f1>extends</span> <span class="hljs-title" data-v-966449f1>React</span>.<span class="hljs-title" data-v-966449f1>Component</span> </span>{
    constructor() {
        <span class="hljs-keyword" data-v-966449f1>super</span>(props)
        <span class="hljs-keyword" data-v-966449f1>this</span>.state = {isItemOpen: <span class="hljs-literal" data-v-966449f1>false</span>}
}

<span class="hljs-comment" data-v-966449f1>// method dibawah adalah untuk proses dari onClick</span>

    handleClick(){
        <span class="hljs-keyword" data-v-966449f1>this</span>.setState({isItemOpen: <span class="hljs-literal" data-v-966449f1>true</span>})
}

<span class="hljs-comment" data-v-966449f1>// Method dibawah adalah untuk menghilangkan element item</span>
    handleClickClose(){
        <span class="hljs-keyword" data-v-966449f1>this</span>.setState({isItemOpen: <span class="hljs-literal" data-v-966449f1>false</span>})
}


    render(){

        let itemParag;

        <span class="hljs-keyword" data-v-966449f1>if</span>(<span class="hljs-keyword" data-v-966449f1>this</span>.state.isItemOpen){ <span class="hljs-comment" data-v-966449f1>// &lt;===== adalah tempat JSX dan condition</span>
            itemParag = ( {<span class="hljs-comment" data-v-966449f1>/* &lt;==== harus ada &#39;()&#39; ini adalah JSX area */</span>}
                &lt;p&gt; <span class="hljs-type" data-v-966449f1>Halo</span> saya adalah paragraph interactive &lt;/p&gt;
        )
        }

        <span class="hljs-keyword" data-v-966449f1>return</span>(
            &lt;div&gt;

            &lt;p&gt; saya adalah static &lt;/p&gt;
            {itemParag}

            &lt;button onClick={() =&gt; {<span class="hljs-keyword" data-v-966449f1>this</span>.handleClick()}} title=<span class="hljs-string" data-v-966449f1>&quot;Open&quot;</span>/&gt;

            {<span class="hljs-comment" data-v-966449f1>/* &lt;=== button ini untuk open */</span>}

            &lt;button onClick={() =&gt; {<span class="hljs-keyword" data-v-966449f1>this</span>.handleClickClose()}} title=<span class="hljs-string" data-v-966449f1>&quot;close&quot;</span> /&gt;

            {<span class="hljs-comment" data-v-966449f1>/* &lt;=== button ini untuk close */</span>}
        )
}

}

export <span class="hljs-keyword" data-v-966449f1>default</span> <span class="hljs-type" data-v-966449f1>ItemAdd</span>;
</code></pre><p data-v-966449f1><strong data-v-966449f1>Break down code</strong></p><ul data-v-966449f1><li data-v-966449f1>Membuat Property untuk element interactive <code data-v-966449f1>this.state = {isItemOpen: false}</code></li><li data-v-966449f1><p data-v-966449f1>membuat method untuk menangkap perintah dari <code data-v-966449f1>onClick</code> dengan method <code data-v-966449f1>handleClick()</code></p></li><li data-v-966449f1><p data-v-966449f1>membuat variabel yang akan menampung JSX <code data-v-966449f1>let itemParag;</code></p></li><li data-v-966449f1><p data-v-966449f1>membuat if statement untuk mengatur kapan JSX akan digunakan dan tidak <code data-v-966449f1>if(this.state.isItemOpen){</code></p></li><li data-v-966449f1><p data-v-966449f1>Tambahkan code JSX pada variabel <code data-v-966449f1>itemParag</code> didalam if statement</p></li><li data-v-966449f1><p data-v-966449f1>pada <code data-v-966449f1>render(){ return(...) }</code> bagian return tambahkan code JSX <code data-v-966449f1>{itemParag}</code></p></li><li data-v-966449f1>buat button onClick untuk memangil <code data-v-966449f1>{this.handleClick()}</code></li><li data-v-966449f1>lakukan export pada baris terakhir untuk class yang sudah dibuat.</li><li data-v-966449f1>BUath method <code data-v-966449f1>handleClickClose</code> untuk menutup element</li></ul><h3 id="tahap-terakhir" data-v-966449f1>Tahap terakhir</h3><p data-v-966449f1>adalah menghubungkan component item dengan file <code data-v-966449f1>App.js</code> sperti panduan sebelumnya.</p><pre data-v-966449f1><code data-v-966449f1><span class="hljs-comment" data-v-966449f1>//App.js </span>
<span class="hljs-keyword" data-v-966449f1>import</span> React <span class="hljs-keyword" data-v-966449f1>from</span> <span class="hljs-string" data-v-966449f1>&#39;react&#39;</span>;
<span class="hljs-keyword" data-v-966449f1>import</span> ItemAdd <span class="hljs-keyword" data-v-966449f1>from</span> <span class="hljs-string" data-v-966449f1>&#39;itemAdd&#39;</span>;

...

&lt;ItemAdd /&gt;
</code></pre>`,8)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},B0=ca(H0,[["__scopeId","data-v-966449f1"]]),$0={__name:"react-note4",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h2 id="cara-instalasi-react-pada-ubuntu-dan-wsl" data-v-265508b4>Cara instalasi react pada Ubuntu dan WSL</h2><pre data-v-265508b4><code data-v-265508b4>sudo apt <span class="hljs-keyword" data-v-265508b4>update</span>
sudo apt <span class="hljs-keyword" data-v-265508b4>install</span> nodejs npm
</code></pre><p data-v-265508b4>Install react globally pada node</p><pre data-v-265508b4><code data-v-265508b4>sudo npm <span class="hljs-keyword" data-v-265508b4>install</span> -g <span class="hljs-keyword" data-v-265508b4>create</span>-react-app
</code></pre><p data-v-265508b4>buat folder khusus untuk app react</p><pre data-v-265508b4><code data-v-265508b4><span class="hljs-keyword" data-v-265508b4>mkdir</span> react-<span class="hljs-keyword" data-v-265508b4>test</span>
<span class="hljs-keyword" data-v-265508b4>cd</span> react-<span class="hljs-keyword" data-v-265508b4>test</span>
</code></pre><p data-v-265508b4>buat project react </p><pre data-v-265508b4><code data-v-265508b4><span class="hljs-string" data-v-265508b4>npx </span><span class="hljs-built_in" data-v-265508b4>create-react-app</span> <span class="hljs-string" data-v-265508b4>my-app
</span><span class="hljs-string" data-v-265508b4>cd </span><span class="hljs-string" data-v-265508b4>my-app
</span><span class="hljs-string" data-v-265508b4>npm </span><span class="hljs-string" data-v-265508b4>start</span>
</code></pre><h2 id="reference" data-v-265508b4>Reference</h2><ul data-v-265508b4><li data-v-265508b4><a href="https://dev.to/vidvatek/step-by-step-guide-installing-reactjs-on-ubuntu-582e" data-v-265508b4>https://dev.to/vidvatek/step-by-step-guide-installing-reactjs-on-ubuntu-582e</a></li></ul>`,10)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},F0=ca($0,[["__scopeId","data-v-265508b4"]]),J0={__name:"react-note5",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<p data-v-fb0a14f6>#Pembuatan formulir interaktive</p><p data-v-fb0a14f6>Tujuan adalah membuat sebuah formulir yang dapat menerima input, dan memberikan feedback setelah input tersebut masuk.</p><p data-v-fb0a14f6>##Tahapan</p><ul data-v-fb0a14f6><li data-v-fb0a14f6>Membuat Form dengan JSX -</li><li data-v-fb0a14f6>Membuat onClick terima -</li><li data-v-fb0a14f6>Membuat feedback</li></ul><pre data-v-fb0a14f6><code class="lang-Js" data-v-fb0a14f6><span class="hljs-comment" data-v-fb0a14f6>// itemForm.js </span>
<span class="hljs-keyword" data-v-fb0a14f6>import</span> React <span class="hljs-keyword" data-v-fb0a14f6>from</span> <span class="hljs-string" data-v-fb0a14f6>&#39;react&#39;</span>;

<span class="hljs-class" data-v-fb0a14f6><span class="hljs-keyword" data-v-fb0a14f6>class</span> <span class="hljs-title" data-v-fb0a14f6>FormComp</span> <span class="hljs-keyword" data-v-fb0a14f6>extends</span> <span class="hljs-title" data-v-fb0a14f6>React</span>.<span class="hljs-title" data-v-fb0a14f6>Component</span> </span>{
    <span class="hljs-keyword" data-v-fb0a14f6>constructor</span>(props){
        <span class="hljs-keyword" data-v-fb0a14f6>this</span>.state ={
    <span class="hljs-comment" data-v-fb0a14f6>/* Dibawah ini adalah kunci dinamis form */</span> 
        isSubmitted: <span class="hljs-literal" data-v-fb0a14f6>false</span>;
    }
}


    handleSubmit(){
        <span class="hljs-keyword" data-v-fb0a14f6>this</span>.setState({<span class="hljs-attr" data-v-fb0a14f6>isSubmitted</span>: <span class="hljs-literal" data-v-fb0a14f6>true</span>})
    }

    render(){
        <span class="hljs-keyword" data-v-fb0a14f6>let</span> contactForm

        <span class="hljs-keyword" data-v-fb0a14f6>if</span> (<span class="hljs-keyword" data-v-fb0a14f6>this</span>.state.isSubmitted){ <span class="hljs-comment" data-v-fb0a14f6>/* &lt;=== adalah jika terkirim */</span>
            contactForm = (
            <span class="xml" data-v-fb0a14f6><span class="hljs-tag" data-v-fb0a14f6>&lt;<span class="hljs-name" data-v-fb0a14f6>div</span> <span class="hljs-attr" data-v-fb0a14f6>className</span>=<span class="hljs-string" data-v-fb0a14f6>&#39;pesan-terkirim&#39;</span>&gt;</span>

            Pesan terkirim 
            <span class="hljs-tag" data-v-fb0a14f6>&lt;/<span class="hljs-name" data-v-fb0a14f6>div</span>&gt;</span></span>
        )
        }; <span class="hljs-comment" data-v-fb0a14f6>/* &lt;=== Semicolom wajib pada course online */</span> 

        <span class="hljs-keyword" data-v-fb0a14f6>else</span> { <span class="hljs-comment" data-v-fb0a14f6>/* &lt;=== adalah jika belum terkirim */</span>
            contactForm = (

            <span class="xml" data-v-fb0a14f6><span class="hljs-tag" data-v-fb0a14f6>&lt;<span class="hljs-name" data-v-fb0a14f6>form</span> <span class="hljs-attr" data-v-fb0a14f6>onSubmit</span>= <span class="hljs-string" data-v-fb0a14f6>{()</span> =&gt;</span> {this.handleSubmit()} 
          <span class="hljs-tag" data-v-fb0a14f6>&lt;<span class="hljs-name" data-v-fb0a14f6>p</span>&gt;</span>Input Alamat Rumah!<span class="hljs-tag" data-v-fb0a14f6>&lt;/<span class="hljs-name" data-v-fb0a14f6>p</span>&gt;</span>
          <span class="hljs-tag" data-v-fb0a14f6>&lt;<span class="hljs-name" data-v-fb0a14f6>input</span> 

          /&gt;</span>

          <span class="hljs-tag" data-v-fb0a14f6>&lt;<span class="hljs-name" data-v-fb0a14f6>p</span>&gt;</span>Detail Pesanan<span class="hljs-tag" data-v-fb0a14f6>&lt;/<span class="hljs-name" data-v-fb0a14f6>p</span>&gt;</span>
          {/* tag textarea */}
          <span class="hljs-tag" data-v-fb0a14f6>&lt;<span class="hljs-name" data-v-fb0a14f6>textarea</span> 

          /&gt;</span>

          {/* tombol kirim */}

          <span class="hljs-tag" data-v-fb0a14f6>&lt;<span class="hljs-name" data-v-fb0a14f6>input</span> 

          /&gt;</span>


            } // Akhir form 

        ) // Akhir contactForm

        return (
            <span class="hljs-tag" data-v-fb0a14f6>&lt;<span class="hljs-name" data-v-fb0a14f6>div</span>&gt;</span>
                {contactForm} {/* <span class="hljs-tag" data-v-fb0a14f6>&lt;<span class="hljs-name" data-v-fb0a14f6>===</span> <span class="hljs-attr" data-v-fb0a14f6>JSX</span> <span class="hljs-attr" data-v-fb0a14f6>disini</span> */}
            &lt;/<span class="hljs-attr" data-v-fb0a14f6>div</span>&gt;</span>
        )
        }
    }
}</span>
</code></pre>`,5)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},U0=ca(J0,[["__scopeId","data-v-fb0a14f6"]]),V0={__name:"react-note6",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h3 id="melakukan-update-pada-state" data-v-7da543d7>Melakukan update pada state</h3><p data-v-7da543d7>state tidak bisa dilakukan perubahan secara langsung, seperti dua contoh dibawah ini. </p><pre data-v-7da543d7><code data-v-7da543d7>this.<span class="hljs-keyword" data-v-7da543d7>state</span> = {name: &#39;udin&#39;} // tidak bisa 

this.<span class="hljs-keyword" data-v-7da543d7>state</span>.name = &#39;udin&#39; // tidak bisa
</code></pre><p data-v-7da543d7><strong data-v-7da543d7>cara mengubah state adalah dengan</strong> <code data-v-7da543d7>setState</code></p><pre data-v-7da543d7><code data-v-7da543d7><span class="hljs-selector-tag" data-v-7da543d7>this</span><span class="hljs-selector-class" data-v-7da543d7>.setState</span>({<span class="hljs-attribute" data-v-7da543d7>name</span>:<span class="hljs-string" data-v-7da543d7>&#39;udin&#39;</span>})
</code></pre><h3 id="cara-memperbarui-state" data-v-7da543d7>Cara memperbarui state</h3><pre data-v-7da543d7><code data-v-7da543d7><span class="hljs-comment" data-v-7da543d7>// Import React from &#39;&#39;</span>
<span class="hljs-keyword" data-v-7da543d7>import</span> <span class="hljs-type" data-v-7da543d7>React</span> from <span class="hljs-symbol" data-v-7da543d7>&#39;reac</span>t&#39;;

<span class="hljs-comment" data-v-7da543d7>// lakukan inheritance dari component</span>
<span class="hljs-class" data-v-7da543d7><span class="hljs-keyword" data-v-7da543d7>class</span> <span class="hljs-title" data-v-7da543d7>App</span> <span class="hljs-keyword" data-v-7da543d7>extends</span> <span class="hljs-title" data-v-7da543d7>React</span>.<span class="hljs-title" data-v-7da543d7>Component</span> </span>{


constructor(props){
    <span class="hljs-keyword" data-v-7da543d7>super</span>(props);
    <span class="hljs-keyword" data-v-7da543d7>this</span>.state = {name:<span class="hljs-symbol" data-v-7da543d7>&#39;Nama</span> <span class="hljs-type" data-v-7da543d7>Ku</span>&#39;}
}

  render () {
    <span class="hljs-keyword" data-v-7da543d7>return</span> (

        &lt;h1&gt;<span class="hljs-type" data-v-7da543d7>Hello</span>, namaku adalah {<span class="hljs-keyword" data-v-7da543d7>this</span>.state.name}!&lt;/h1&gt; {<span class="hljs-comment" data-v-7da543d7>/* &lt;===== ini akan berubah sesuai dengan state saat ini!!!*/</span>}

        &lt;button onClick={() =&gt; {<span class="hljs-keyword" data-v-7da543d7>this</span>.setState({name:<span class="hljs-symbol" data-v-7da543d7>&#39;udi</span>n&#39;})}}&gt; namaku udin!! &lt;/button&gt;
    );
  }
}

export <span class="hljs-keyword" data-v-7da543d7>default</span> <span class="hljs-type" data-v-7da543d7>App</span>;
</code></pre><p data-v-7da543d7>pada method render, terdapat event ( onclick ), dan state. code diatas adalah untuk mengubah nilai state awal menjadi apa yang kita ingin kan.</p><h3 id="cara-lain-untuk-melakukan-perubahan-state" data-v-7da543d7>cara lain untuk melakukan perubahan state</h3><pre data-v-7da543d7><code data-v-7da543d7><span class="hljs-comment" data-v-7da543d7>// Import React from &#39;&#39;</span>
<span class="hljs-keyword" data-v-7da543d7>import</span> <span class="hljs-type" data-v-7da543d7>React</span> from <span class="hljs-symbol" data-v-7da543d7>&#39;reac</span>t&#39;;

<span class="hljs-comment" data-v-7da543d7>// lakukan inheritance dari component</span>
<span class="hljs-class" data-v-7da543d7><span class="hljs-keyword" data-v-7da543d7>class</span> <span class="hljs-title" data-v-7da543d7>App</span> <span class="hljs-keyword" data-v-7da543d7>extends</span> <span class="hljs-title" data-v-7da543d7>React</span>.<span class="hljs-title" data-v-7da543d7>Component</span> </span>{


    constructor(props){
        <span class="hljs-keyword" data-v-7da543d7>super</span>(props);
        <span class="hljs-keyword" data-v-7da543d7>this</span>.state = {name:<span class="hljs-symbol" data-v-7da543d7>&#39;Nama</span> <span class="hljs-type" data-v-7da543d7>Ku</span>&#39;}
    }

    fuctClick(arg) {
        <span class="hljs-keyword" data-v-7da543d7>this</span>.setState({name: arg})
    }

    render () {
        <span class="hljs-keyword" data-v-7da543d7>return</span> (

            &lt;h1&gt;<span class="hljs-type" data-v-7da543d7>Hello</span>, namaku adalah {<span class="hljs-keyword" data-v-7da543d7>this</span>.state.name}!&lt;/h1&gt; {<span class="hljs-comment" data-v-7da543d7>/* &lt;===== ini akan berubah sesuai dengan state saat ini!!!*/</span>}

            &lt;button onClick={() =&gt; {<span class="hljs-keyword" data-v-7da543d7>this</span>.fuctClick(<span class="hljs-symbol" data-v-7da543d7>&#39;udi</span>n&#39;)}}&gt; udin &lt;/button&gt;
    );
  }
}

export <span class="hljs-keyword" data-v-7da543d7>default</span> <span class="hljs-type" data-v-7da543d7>App</span>;
</code></pre><h3 id="wrap-up-01-aturan-state-diatas-" data-v-7da543d7>Wrap up 01 ( aturan state diatas )</h3><pre data-v-7da543d7><code data-v-7da543d7><span class="hljs-keyword" data-v-7da543d7>import</span> <span class="hljs-type" data-v-7da543d7>React</span> from <span class="hljs-symbol" data-v-7da543d7>&#39;reac</span>t&#39;;

<span class="hljs-class" data-v-7da543d7><span class="hljs-keyword" data-v-7da543d7>class</span> <span class="hljs-title" data-v-7da543d7>App</span> <span class="hljs-keyword" data-v-7da543d7>extends</span> <span class="hljs-title" data-v-7da543d7>React</span>.<span class="hljs-title" data-v-7da543d7>Component</span> </span>{

    constructor(props) {
        <span class="hljs-keyword" data-v-7da543d7>super</span>(props){
        <span class="hljs-keyword" data-v-7da543d7>this</span>.state = {nama:<span class="hljs-symbol" data-v-7da543d7>&#39;makana</span>n&#39;} <span class="hljs-comment" data-v-7da543d7>// Tahap 1. deklarasi state </span>

}}

    handleClick(arg) {
        <span class="hljs-keyword" data-v-7da543d7>this</span>.setState({nama: arg}) <span class="hljs-comment" data-v-7da543d7>// Tahap 3. Melakukan perubahan!!</span>
}

    render() {
        <span class="hljs-keyword" data-v-7da543d7>return</span> (
            &lt;div&gt; 
                &lt;h1&gt; <span class="hljs-type" data-v-7da543d7>Makanan</span> yang kusuka adalah {<span class="hljs-keyword" data-v-7da543d7>this</span>.state.nama} &lt;/h1&gt;
                {<span class="hljs-comment" data-v-7da543d7>/*&lt;====== Tahap 2. menampilkan state */</span>}


                &lt;button onClick={() =&gt; {<span class="hljs-keyword" data-v-7da543d7>this</span>.handleClick(<span class="hljs-symbol" data-v-7da543d7>&#39;Soto</span> <span class="hljs-type" data-v-7da543d7>Ayam</span>&#39;)}}&gt; suka soto ayam &lt;/button&gt;
                {<span class="hljs-comment" data-v-7da543d7>/* &lt;========= Tahap 3 Melakukan perubahan */</span>}

            &lt;/div&gt;
)}


}
</code></pre><p data-v-7da543d7>Tahapan:</p><ol data-v-7da543d7><li data-v-7da543d7>Deklarasi state pada constructor. Contoh <code data-v-7da543d7>nama:&#39;value&#39;</code></li><li data-v-7da543d7>Menampilkan set. Contoh <code data-v-7da543d7>{this.state.nama}</code></li><li data-v-7da543d7>Melakukan perubahan dengan onClick dan <code data-v-7da543d7>setState</code></li></ol><h3 id="urutan-alur-menampilkan-react" data-v-7da543d7>Urutan alur menampilkan React</h3><ul data-v-7da543d7><li data-v-7da543d7>App.js (JSX) =&gt; akan diberikan kepada </li><li data-v-7da543d7>index.js =&gt; code JSX akan proses disini ( mengalami perubahan )</li><li data-v-7da543d7>index.html =&gt; tujuan akhir, code JSX akan ditimpa disini. </li></ul><p data-v-7da543d7><strong data-v-7da543d7>Contoh process</strong></p><pre data-v-7da543d7><code data-v-7da543d7><span class="hljs-comment" data-v-7da543d7>// App.js </span>

<span class="hljs-class" data-v-7da543d7><span class="hljs-keyword" data-v-7da543d7>class</span> <span class="hljs-title" data-v-7da543d7>App</span> <span class="hljs-keyword" data-v-7da543d7>extends</span> <span class="hljs-title" data-v-7da543d7>React</span>.<span class="hljs-title" data-v-7da543d7>component</span> </span>{
    render(){
        <span class="hljs-keyword" data-v-7da543d7>return</span> (
            <span class="xml" data-v-7da543d7><span class="hljs-tag" data-v-7da543d7>&lt;<span class="hljs-name" data-v-7da543d7>div</span>&gt;</span>
            <span class="hljs-tag" data-v-7da543d7>&lt;<span class="hljs-name" data-v-7da543d7>h1</span>&gt;</span>Hello World<span class="hljs-tag" data-v-7da543d7>&lt;/<span class="hljs-name" data-v-7da543d7>h1</span>&gt;</span>
            <span class="hljs-tag" data-v-7da543d7>&lt;/<span class="hljs-name" data-v-7da543d7>div</span>&gt;</span></span>


)
}
}

<span class="hljs-comment" data-v-7da543d7>// index.js  ( Tahap kedua )</span>

<span class="hljs-keyword" data-v-7da543d7>import</span> App <span class="hljs-keyword" data-v-7da543d7>from</span> <span class="hljs-string" data-v-7da543d7>&#39;./components/App&#39;</span>
ReactDOM.render(<span class="xml" data-v-7da543d7><span class="hljs-tag" data-v-7da543d7>&lt;<span class="hljs-name" data-v-7da543d7>App</span> /&gt;</span>, document.getElementById(&#39;root&#39;))


// index.html ( tahap terakhir )
<span class="hljs-tag" data-v-7da543d7>&lt;<span class="hljs-name" data-v-7da543d7>body</span>&gt;</span>
    <span class="hljs-tag" data-v-7da543d7>&lt;<span class="hljs-name" data-v-7da543d7>div</span> <span class="hljs-attr" data-v-7da543d7>id</span>=<span class="hljs-string" data-v-7da543d7>&quot;root&quot;</span>&gt;</span><span class="hljs-tag" data-v-7da543d7>&lt;/<span class="hljs-name" data-v-7da543d7>div</span>&gt;</span>
<span class="hljs-tag" data-v-7da543d7>&lt;/<span class="hljs-name" data-v-7da543d7>body</span>&gt;</span></span>
</code></pre><h3 id="memasukan-css-kedalam-jsx" data-v-7da543d7>Memasukan css kedalam JSX</h3><pre data-v-7da543d7><code data-v-7da543d7>render(){
    <span class="hljs-keyword" data-v-7da543d7>return</span> (

        <span class="xml" data-v-7da543d7><span class="hljs-tag" data-v-7da543d7>&lt;<span class="hljs-name" data-v-7da543d7>div</span>&gt;</span>
            <span class="hljs-tag" data-v-7da543d7>&lt;<span class="hljs-name" data-v-7da543d7>h1</span> <span class="hljs-attr" data-v-7da543d7>className</span>=<span class="hljs-string" data-v-7da543d7>&quot;title&quot;</span>&gt;</span>Hello World<span class="hljs-tag" data-v-7da543d7>&lt;/<span class="hljs-name" data-v-7da543d7>h1</span>&gt;</span>
            <span class="hljs-tag" data-v-7da543d7>&lt;<span class="hljs-name" data-v-7da543d7>h2</span> <span class="hljs-attr" data-v-7da543d7>className</span>=<span class="hljs-string" data-v-7da543d7>&quot;sub title&quot;</span>&gt;</span> Hello juga <span class="hljs-tag" data-v-7da543d7>&lt;/<span class="hljs-name" data-v-7da543d7>h2</span>&gt;</span>
        <span class="hljs-tag" data-v-7da543d7>&lt;/<span class="hljs-name" data-v-7da543d7>div</span>&gt;</span></span>

)
}
</code></pre><ul data-v-7da543d7><li data-v-7da543d7>Cara penulisan attribute class berbeda dengan pada HTML biasa.</li></ul><hr data-v-7da543d7><h1 id="membuat-component-baru" data-v-7da543d7>Membuat component baru</h1><p data-v-7da543d7><strong data-v-7da543d7>boleh 2 atau lebih component selain App.js</strong></p><ul data-v-7da543d7><li data-v-7da543d7>Tahap Pertama, Pembuatan component baru. pada folder App.js </li></ul><pre data-v-7da543d7><code data-v-7da543d7><span class="hljs-comment" data-v-7da543d7>//file: ekstra.js </span>
<span class="hljs-keyword" data-v-7da543d7>import</span> <span class="hljs-type" data-v-7da543d7>React</span> from <span class="hljs-symbol" data-v-7da543d7>&#39;reac</span>t&#39;;

<span class="hljs-class" data-v-7da543d7><span class="hljs-keyword" data-v-7da543d7>class</span> <span class="hljs-title" data-v-7da543d7>ekstra</span> <span class="hljs-keyword" data-v-7da543d7>extends</span> <span class="hljs-title" data-v-7da543d7>React</span>.<span class="hljs-title" data-v-7da543d7>Component</span> </span>{
    render() {
        <span class="hljs-keyword" data-v-7da543d7>return</span> (
            &lt;div className=<span class="hljs-symbol" data-v-7da543d7>&#39;exstra</span>-container&#39;&gt;
                &lt;p&gt; ini berasal dari component extra &lt;/p&gt;
            &lt;/div&gt;
)
}
}

<span class="hljs-comment" data-v-7da543d7>// Export component </span>
export <span class="hljs-keyword" data-v-7da543d7>default</span> ekstra;
</code></pre><ul data-v-7da543d7><li data-v-7da543d7>tahap kedua </li></ul><pre data-v-7da543d7><code data-v-7da543d7><span class="hljs-comment" data-v-7da543d7>// File: App.js</span>
<span class="hljs-keyword" data-v-7da543d7>import</span> <span class="hljs-type" data-v-7da543d7>React</span> from <span class="hljs-symbol" data-v-7da543d7>&#39;reac</span>t&#39;
<span class="hljs-keyword" data-v-7da543d7>import</span> ekstra from &#39;./ekstra&#39;

<span class="hljs-class" data-v-7da543d7><span class="hljs-keyword" data-v-7da543d7>class</span> <span class="hljs-title" data-v-7da543d7>App</span> <span class="hljs-keyword" data-v-7da543d7>extends</span> <span class="hljs-title" data-v-7da543d7>React</span>.<span class="hljs-title" data-v-7da543d7>Component</span> </span>{
    render(){
        <span class="hljs-keyword" data-v-7da543d7>return</span>(
            &lt;div&gt;
                &lt;ekstra /&gt; {<span class="hljs-comment" data-v-7da543d7>/* &lt;=== Tag ini berasal dari component baru */</span>}
            &lt;/div&gt;

)
}
}
</code></pre><p data-v-7da543d7>catatan kecil, component dapat digunakan berkali-kali.</p><h3 id="cara-untuk-melakukan-perubahan-pada-component-jsx" data-v-7da543d7>cara untuk melakukan perubahan pada component JSX</h3><pre data-v-7da543d7><code data-v-7da543d7><span class="hljs-comment" data-v-7da543d7>// file App.js</span>
<span class="hljs-keyword" data-v-7da543d7>import</span> <span class="hljs-type" data-v-7da543d7>React</span> from <span class="hljs-symbol" data-v-7da543d7>&#39;reac</span>t&#39;
<span class="hljs-keyword" data-v-7da543d7>import</span> ekstra from &#39;./ekstra&#39;

<span class="hljs-class" data-v-7da543d7><span class="hljs-keyword" data-v-7da543d7>class</span> <span class="hljs-title" data-v-7da543d7>App</span> <span class="hljs-keyword" data-v-7da543d7>extends</span> <span class="hljs-title" data-v-7da543d7>React</span>.<span class="hljs-title" data-v-7da543d7>Component</span> </span>{
    render(){
        <span class="hljs-keyword" data-v-7da543d7>return</span>(
        &lt;div&gt;

            &lt;ekstra 
                nama=<span class="hljs-string" data-v-7da543d7>&quot;udin&quot;</span>

            /&gt; 


            &lt;ekstra
                nama=<span class="hljs-string" data-v-7da543d7>&quot;budi&quot;</span>

            /&gt;


    &lt;/div&gt;

)
}
}
</code></pre><ul data-v-7da543d7><li data-v-7da543d7>pada <code data-v-7da543d7>&lt;ekstra /&gt;</code> kita dapat menambahkan <strong data-v-7da543d7>props</strong> didalamnya yang akan membantu dalam melakukan perubahan secara spesifik.</li></ul><p data-v-7da543d7>Setelah melakukan perubahan pada <code data-v-7da543d7>App.js</code> dilanjutkan pada <code data-v-7da543d7>ekstra.js</code></p><pre data-v-7da543d7><code data-v-7da543d7><span class="hljs-comment" data-v-7da543d7>// ekstra.js </span>

<span class="hljs-keyword" data-v-7da543d7>import</span> <span class="hljs-type" data-v-7da543d7>React</span> from <span class="hljs-symbol" data-v-7da543d7>&#39;reac</span>t&#39;;

<span class="hljs-class" data-v-7da543d7><span class="hljs-keyword" data-v-7da543d7>class</span> <span class="hljs-title" data-v-7da543d7>ekstra</span> <span class="hljs-keyword" data-v-7da543d7>extends</span> <span class="hljs-title" data-v-7da543d7>React</span>.<span class="hljs-title" data-v-7da543d7>Component</span> </span>{
    render() {
        <span class="hljs-keyword" data-v-7da543d7>return</span> (

            &lt;div className=<span class="hljs-symbol" data-v-7da543d7>&#39;exstra</span>-container&#39;&gt;
            &lt;p&gt; ini berasal dari component extra 

            dan ini adalah namaku {<span class="hljs-keyword" data-v-7da543d7>this</span>.props.nama}

            &lt;/p&gt;


        &lt;/div&gt;
)
}
}

<span class="hljs-comment" data-v-7da543d7>// Export component </span>
export <span class="hljs-keyword" data-v-7da543d7>default</span> ekstra;
</code></pre><h3 id="cara-membuat-component-secara-otomatis" data-v-7da543d7>Cara membuat component secara otomatis</h3><p data-v-7da543d7>dibawah ini adalah contoh membuat component otomatis. semisal terdapat list, maka component yang akan dibuat akan menyesuaikan dengan berapa banyak item pada list.</p><pre data-v-7da543d7><code data-v-7da543d7><span class="hljs-comment" data-v-7da543d7>// file App.js</span>
<span class="hljs-keyword" data-v-7da543d7>import</span> <span class="hljs-type" data-v-7da543d7>React</span> from <span class="hljs-symbol" data-v-7da543d7>&#39;reac</span>t&#39;
<span class="hljs-keyword" data-v-7da543d7>import</span> ekstra from &#39;./ekstra&#39;

<span class="hljs-class" data-v-7da543d7><span class="hljs-keyword" data-v-7da543d7>class</span> <span class="hljs-title" data-v-7da543d7>App</span> <span class="hljs-keyword" data-v-7da543d7>extends</span> <span class="hljs-title" data-v-7da543d7>React</span>.<span class="hljs-title" data-v-7da543d7>Component</span> </span>{
    render(){

        let namaPeserta = [
        {name: <span class="hljs-symbol" data-v-7da543d7>&#39;udi</span>n&#39;},
        {name: <span class="hljs-symbol" data-v-7da543d7>&#39;bud</span>i&#39;},
        ]

    <span class="hljs-keyword" data-v-7da543d7>return</span>(
        &lt;div&gt;

        {namaPeserta.map((item) =&gt;{

            <span class="hljs-keyword" data-v-7da543d7>return</span> (

                &lt;ekstra
                nama={item.name}
                /&gt;

                    )
        }
) {<span class="hljs-comment" data-v-7da543d7>/*&lt;== bagian akhir dari map method */</span>}
}


&lt;/div&gt;

)
}
}
</code></pre><p data-v-7da543d7>Pada code diatas kita membuat code didalam JSX untuk membuat sebuah loop yang akan membuat component <code data-v-7da543d7>&lt;ekstra /&gt;</code> sebanyak item pada list yang diberikan.</p><p data-v-7da543d7>ini bisa dilakukan dengan bantuan <code data-v-7da543d7>map</code> method.</p>`,39)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},K0=ca(V0,[["__scopeId","data-v-7da543d7"]]),z0={__name:"react-note7",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[7]||(s[7]=Z(`<h1 id="context" data-v-a97cc717>Context</h1><p data-v-a97cc717>context adalah konsep atau tool yang dapat memudahkan kita untuk melakukan export import dari <code data-v-a97cc717>state</code> dan <code data-v-a97cc717>event</code> didalam suatu component. </p><p data-v-a97cc717>sekenario penggunaan. Kita membuat banyak component, dan hanya ada satu component yang menyediakan <code data-v-a97cc717>state</code> dan <code data-v-a97cc717>event</code>. Kita bisa membagikan itu ke component lain dengan tool <code data-v-a97cc717>Context</code>. </p><h2 id="contoh" data-v-a97cc717>contoh</h2><p data-v-a97cc717>disini ada dua compoennt, <code data-v-a97cc717>App.js</code> dan <code data-v-a97cc717>item00.js</code>. kita ingin mengirim state dan event dari <code data-v-a97cc717>App.js</code> ke <code data-v-a97cc717>item00.js</code>. </p><h3 id="tahap-awal" data-v-a97cc717>tahap awal</h3><pre data-v-a97cc717><code data-v-a97cc717><span class="hljs-comment" data-v-a97cc717>// App.js </span>

<span class="hljs-keyword" data-v-a97cc717>import</span> logo <span class="hljs-keyword" data-v-a97cc717>from</span> <span class="hljs-string" data-v-a97cc717>&#39;./logo.svg&#39;</span>;
<span class="hljs-keyword" data-v-a97cc717>import</span> <span class="hljs-string" data-v-a97cc717>&#39;./App.css&#39;</span>;
<span class="hljs-keyword" data-v-a97cc717>import</span> React, { useState, createContext } <span class="hljs-keyword" data-v-a97cc717>from</span> <span class="hljs-string" data-v-a97cc717>&#39;react&#39;</span>
<span class="hljs-keyword" data-v-a97cc717>import</span> Item00 <span class="hljs-keyword" data-v-a97cc717>from</span> <span class="hljs-string" data-v-a97cc717>&#39;./item00&#39;</span>

<span class="hljs-keyword" data-v-a97cc717>export</span> <span class="hljs-keyword" data-v-a97cc717>const</span> TodoContext = createContext()
</code></pre><p data-v-a97cc717>break: </p><ul data-v-a97cc717><li data-v-a97cc717>kita import <code data-v-a97cc717>createContext</code> - adalah tool &quot;Context&quot; itu sendiri. </li><li data-v-a97cc717>kita import <code data-v-a97cc717>Item00</code> yang akan dipangil lagi ke App.js. </li></ul><pre data-v-a97cc717><code data-v-a97cc717><span class="hljs-comment" data-v-a97cc717>//App.js </span>
<span class="hljs-keyword" data-v-a97cc717>let</span> [<span class="hljs-built_in" data-v-a97cc717>count</span>, setCount] = useState(<span class="hljs-number" data-v-a97cc717>0</span>)
</code></pre><p data-v-a97cc717>selanjutnya </p><pre data-v-a97cc717><code data-v-a97cc717> <span class="hljs-tag" data-v-a97cc717>&lt;<span class="hljs-name" data-v-a97cc717>TodoContext.Provider</span> <span class="hljs-attr" data-v-a97cc717>value</span>=<span class="hljs-string" data-v-a97cc717>\\{\\{</span> <span class="hljs-attr" data-v-a97cc717>count</span>, <span class="hljs-attr" data-v-a97cc717>setCount</span> \\}\\}&gt;</span>
<span class="hljs-tag" data-v-a97cc717>&lt;<span class="hljs-name" data-v-a97cc717>Item00</span> /&gt;</span>
<span class="hljs-tag" data-v-a97cc717>&lt;/<span class="hljs-name" data-v-a97cc717>TodoContext.Provider</span>&gt;</span>
</code></pre><p data-v-a97cc717>break :</p>`,13)),c("ul",null,[c("li",null,[c("code",null,"TodoContext.Provider value="+Ba(),1),s[0]||(s[0]=w(" - adalah mendaftarkan, state atau event apa saja yang akan kita kirim. "))]),s[1]||(s[1]=c("li",null,[w("maka semua compoennt yang terbungkus oleh "),c("code",null,"TodoContext"),w(" akan bisa akses state tersebut. ")],-1))]),s[8]||(s[8]=Z(`<h3 id="tahap-selanjutnya" data-v-a97cc717>tahap selanjutnya</h3><pre data-v-a97cc717><code data-v-a97cc717><span class="hljs-comment" data-v-a97cc717>//item00.js </span>

<span class="hljs-keyword" data-v-a97cc717>import</span> React, {useContext} <span class="hljs-keyword" data-v-a97cc717>from</span> <span class="hljs-string" data-v-a97cc717>&#39;react&#39;</span>
<span class="hljs-keyword" data-v-a97cc717>import</span> { TodoContext } <span class="hljs-keyword" data-v-a97cc717>from</span> <span class="hljs-string" data-v-a97cc717>&#39;./App&#39;</span>

<span class="hljs-keyword" data-v-a97cc717>let</span> {count, setCount} = useContext(TodoContext)
</code></pre><p data-v-a97cc717>dengan begini maka component file <code data-v-a97cc717>item00.js</code> bisa melakukan akses kepada state dan event yang dikirim oleh <code data-v-a97cc717>App.js</code></p><hr data-v-a97cc717><h1 id="note-context" data-v-a97cc717>Note Context</h1><hr data-v-a97cc717><h2 id="pada-file-utama-export-" data-v-a97cc717>Pada file utama ( export )</h2><p data-v-a97cc717>harus ada </p>`,8)),c("ul",null,[s[3]||(s[3]=c("li",null,[c("code",null,"{createContext}")],-1)),s[4]||(s[4]=c("li",null,[c("code",null,"export let TodoContext = createContext()"),w(" - tempatkan pada luar function")],-1)),c("li",null,[c("code",null,"<TodoContext.Provider value="+Ba(t.state,t.setState)+">",1),s[2]||(s[2]=w(" - Masukan component didalam provider"))]),s[5]||(s[5]=c("li",null,[c("code",null,"</TodoContext.Provider>")],-1))]),s[9]||(s[9]=Z('<h2 id="pada-file-secondary-import-" data-v-a97cc717>pada file secondary ( import )</h2><p data-v-a97cc717>harus ada: </p><ul data-v-a97cc717><li data-v-a97cc717><code data-v-a97cc717>import {useContext} from &#39;react&#39;</code></li><li data-v-a97cc717><code data-v-a97cc717>import {TodoContext} from &#39;./App&#39;</code></li><li data-v-a97cc717><code data-v-a97cc717>let {state, setState} = useContext(TodoContext)</code></li></ul><hr data-v-a97cc717><h1 id="note-tanpa-context" data-v-a97cc717>note Tanpa context</h1><hr data-v-a97cc717><h2 id="file-utama-export-" data-v-a97cc717>file utama (Export)</h2><ul data-v-a97cc717><li data-v-a97cc717><p data-v-a97cc717><code data-v-a97cc717>function Header(){}</code> - Contoh data yang dikirim </p></li><li data-v-a97cc717><p data-v-a97cc717><code data-v-a97cc717>&lt;NewItem Header={Header}/&gt;</code> - cara mengirim </p></li></ul><h2 id="file-secondary-import-" data-v-a97cc717>File secondary (import)</h2><ul data-v-a97cc717><li data-v-a97cc717><code data-v-a97cc717>function NewItem({Header}) { Header() }</code> - cara menerima</li></ul><hr data-v-a97cc717><h1 id="aturan-dasar" data-v-a97cc717>Aturan dasar</h1><hr data-v-a97cc717><ul data-v-a97cc717><li data-v-a97cc717>Nama component wajib huruf besar diawal!.</li></ul><h2 id="hasil-akhir" data-v-a97cc717>Hasil akhir</h2><p data-v-a97cc717><a href="../../code/jsPro/context-ts" data-v-a97cc717>context sc</a></p>',16)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[6]||(s[6]=[w("Go to Home")])),_:1})])],64)}}},W0=ca(z0,[["__scopeId","data-v-a97cc717"]]),G0={__name:"react-note8",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="useeffect" data-v-a2b80041>useEffect</h1><h2 id="react-hook-" data-v-a2b80041>React Hook?</h2><p data-v-a2b80041>mereka adalah fitur baru yang ditambahkan pada React 16.8 ke atas, dimana dengan &#39;React Hooks&#39; kita bisa mengunakan &#39;state&#39; dan fitura lain pada React, tanpa perlu menulis suautu class. Dengan &quot;React hooks&quot; kita bisa membuat component dengan lebih mudah dan effisien. </p><p data-v-a2b80041>Ref: <a href="https://react.dev/reference/react/hooks" data-v-a2b80041>https://react.dev/reference/react/hooks</a></p><h2 id="react-useeffect-" data-v-a2b80041>React useEffect?</h2><p data-v-a2b80041>mereka adalah fungsi hook dimana dengan bantuan &#39;useEffect&#39;, kita bisa melaksanakan tugas side effect didalam fungsi. </p><p data-v-a2b80041>Side effect disini adalah sebuah operasi yang tidak memerlukan rendering component, seperti pemangilan API, time, dan lain-lain. </p><h3 id="contoh-useeffect-jalankan-effect-setiap-kali-terjadi-render-" data-v-a2b80041>Contoh useEffect (Jalankan effect, setiap kali terjadi render)</h3><p data-v-a2b80041>dimana pada contoh ini akan dilakukan rendering &quot;useEffect&quot; setiap kali terjadi proses render. </p><pre data-v-a2b80041><code class="lang-JS" data-v-a2b80041><span class="hljs-function" data-v-a2b80041><span class="hljs-keyword" data-v-a2b80041>function</span> <span class="hljs-title" data-v-a2b80041>Timer</span>(<span class="hljs-params" data-v-a2b80041></span>) </span>{
  <span class="hljs-keyword" data-v-a2b80041>const</span> [count, setCount] = useState(<span class="hljs-number" data-v-a2b80041>0</span>);

  useEffect(<span class="hljs-function" data-v-a2b80041><span class="hljs-params" data-v-a2b80041>()</span> =&gt;</span> {
    setTimeout(<span class="hljs-function" data-v-a2b80041><span class="hljs-params" data-v-a2b80041>()</span> =&gt;</span> {
      setCount(<span class="hljs-function" data-v-a2b80041>(<span class="hljs-params" data-v-a2b80041>count</span>) =&gt;</span> count + <span class="hljs-number" data-v-a2b80041>1</span>);
    }, <span class="hljs-number" data-v-a2b80041>1000</span>);
  });

  <span class="hljs-keyword" data-v-a2b80041>return</span> <span class="xml" data-v-a2b80041><span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>h1</span>&gt;</span>I have rendered {count} times!<span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>h1</span>&gt;</span></span>;
}
</code></pre><h3 id="contoh-useeffect-dijalankan-hanya-sekali-" data-v-a2b80041>contoh useEffect (Dijalankan hanya sekali)</h3><pre data-v-a2b80041><code class="lang-JS" data-v-a2b80041><span class="hljs-function" data-v-a2b80041><span class="hljs-keyword" data-v-a2b80041>function</span> <span class="hljs-title" data-v-a2b80041>Timer</span>(<span class="hljs-params" data-v-a2b80041></span>) </span>{
  <span class="hljs-keyword" data-v-a2b80041>const</span> [count, setCount] = useState(<span class="hljs-number" data-v-a2b80041>0</span>);

  useEffect(<span class="hljs-function" data-v-a2b80041><span class="hljs-params" data-v-a2b80041>()</span> =&gt;</span> {
    setTimeout(<span class="hljs-function" data-v-a2b80041><span class="hljs-params" data-v-a2b80041>()</span> =&gt;</span> {
      setCount(<span class="hljs-function" data-v-a2b80041>(<span class="hljs-params" data-v-a2b80041>count</span>) =&gt;</span> count + <span class="hljs-number" data-v-a2b80041>1</span>);
    }, <span class="hljs-number" data-v-a2b80041>1000</span>);
  }, []); <span class="hljs-comment" data-v-a2b80041>// &lt;==== Indikator, </span>

  <span class="hljs-keyword" data-v-a2b80041>return</span> <span class="xml" data-v-a2b80041><span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>h1</span>&gt;</span>I have rendered {count} times!<span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>h1</span>&gt;</span></span>;
}
</code></pre><ul data-v-a2b80041><li data-v-a2b80041><code data-v-a2b80041>[]</code> - &#39;useEffect&#39; akan melakukan pengecekan terhadap perubahan pada <code data-v-a2b80041>array</code>, jika terdapat perubahan maka jalankan &#39;useEffect&#39;</li></ul><h3 id="contoh-useeffect-dijalankan-disaat-tertentu-" data-v-a2b80041>contoh useEffect (Dijalankan disaat tertentu)</h3><p data-v-a2b80041><strong data-v-a2b80041>Event Listener</strong></p><pre data-v-a2b80041><code class="lang-Js" data-v-a2b80041><span class="hljs-keyword" data-v-a2b80041>import</span> { useState, useEffect } <span class="hljs-keyword" data-v-a2b80041>from</span> <span class="hljs-string" data-v-a2b80041>&quot;react&quot;</span>;

<span class="hljs-function" data-v-a2b80041><span class="hljs-keyword" data-v-a2b80041>function</span> <span class="hljs-title" data-v-a2b80041>Timer</span>(<span class="hljs-params" data-v-a2b80041></span>) </span>{
  <span class="hljs-keyword" data-v-a2b80041>const</span> [count, setCount] = useState(<span class="hljs-number" data-v-a2b80041>0</span>);
  <span class="hljs-keyword" data-v-a2b80041>const</span> [calculation, setCalculation] = useState

  useEffect(<span class="hljs-function" data-v-a2b80041><span class="hljs-params" data-v-a2b80041>()</span> =&gt;</span> {
        setCalculation(count * <span class="hljs-number" data-v-a2b80041>2</span>)
  }, [count]); <span class="hljs-comment" data-v-a2b80041>// &lt;==== Indikator, </span>

  <span class="hljs-keyword" data-v-a2b80041>return</span> (
  <span class="xml" data-v-a2b80041><span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>div</span>&gt;</span>
    <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span> Count: {count} <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span>
    <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span> Calculation: {calculation} <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span>
    <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>button</span> <span class="hljs-attr" data-v-a2b80041>onClick</span>=<span class="hljs-string" data-v-a2b80041>{()</span> =&gt;</span> setCount((c) =&gt; c + 1)}&gt;+<span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>button</span>&gt;</span>
  <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>div</span>&gt;</span></span>
  )
}
</code></pre><p data-v-a2b80041>Pada code diatas, <code data-v-a2b80041>useEffect</code> akan dijalankan disaat kita melakukan perubahan data pada <code data-v-a2b80041>count</code>.</p><p data-v-a2b80041>Ref: <a href="https://www.w3schools.com/react/showreact.asp?filename=demo2_react_useeffect_settimeout3" data-v-a2b80041>https://www.w3schools.com/react/showreact.asp?filename=demo2_react_useeffect_settimeout3</a></p><p data-v-a2b80041>Contoh ini adalah bentuk dari &quot;Event Listener&quot; dimana ini akan menerima dan memproses bagaimana seorang user melakukan interaksi.</p><h2 id="data-fetching" data-v-a2b80041>Data fetching</h2><p data-v-a2b80041>Event Listener dapat digunakan untuk membantu kita melakukan pengambilan data. Seperti mengambil dari API dan melakukan update kepada state berdasarkan data yang diambil. </p><pre data-v-a2b80041><code class="lang-Js" data-v-a2b80041><span class="hljs-comment" data-v-a2b80041>/* RandomUserList.js */</span>
<span class="hljs-keyword" data-v-a2b80041>import</span> React,
{
    useState,
    useEffect
} <span class="hljs-keyword" data-v-a2b80041>from</span> <span class="hljs-string" data-v-a2b80041>&#39;react&#39;</span>;

<span class="hljs-function" data-v-a2b80041><span class="hljs-keyword" data-v-a2b80041>function</span> <span class="hljs-title" data-v-a2b80041>RandomUserList</span>(<span class="hljs-params" data-v-a2b80041></span>) </span>{
    <span class="hljs-keyword" data-v-a2b80041>const</span> [userList, setUserList] = useState([]);

    useEffect(<span class="hljs-function" data-v-a2b80041><span class="hljs-params" data-v-a2b80041>()</span> =&gt;</span> {
        fetch(<span class="hljs-string" data-v-a2b80041>&#39;https://random-data-api.com/api/v2/users?size=5&#39;</span>)
            .then(<span class="hljs-function" data-v-a2b80041><span class="hljs-params" data-v-a2b80041>response</span> =&gt;</span> response.json())
            .then(<span class="hljs-function" data-v-a2b80041><span class="hljs-params" data-v-a2b80041>data</span> =&gt;</span> setUserList(data));
    }, []);

    <span class="hljs-keyword" data-v-a2b80041>return</span> (
        <span class="xml" data-v-a2b80041><span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>div</span>&gt;</span>
            <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>h2</span>&gt;</span>Random User List<span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>h2</span>&gt;</span>
            <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>ul</span>&gt;</span>
                {userList.map(user =&gt; (
                    <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>li</span> <span class="hljs-attr" data-v-a2b80041>key</span>=<span class="hljs-string" data-v-a2b80041>{user.id}</span>&gt;</span>
                        <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span>
                            Name:
                            {user.first_name}
                            {user.last_name}
                        <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span>
                        <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span>
                            Email:
                            {user.email}
                        <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span>
                        {/* Add more user data fields as needed */}
                    <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>li</span>&gt;</span>
                ))}
            <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>ul</span>&gt;</span>
        <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>div</span>&gt;</span></span>
    );
}

<span class="hljs-keyword" data-v-a2b80041>export</span> <span class="hljs-keyword" data-v-a2b80041>default</span> RandomUserList;
</code></pre><ul data-v-a2b80041><li data-v-a2b80041><code data-v-a2b80041>fetch</code> - digunakan untuk mengambil data dari alamat yang diberikan.</li><li data-v-a2b80041><code data-v-a2b80041>then[0]</code> - digunakan untuk mengambil data, dan melakukan proses ke json</li><li data-v-a2b80041><code data-v-a2b80041>then[1]</code> - digunakan untuk menyimpan data json tersebut kedalam state</li></ul><p data-v-a2b80041>ref: <a href="https://www.geeksforgeeks.org/fetching-data-from-an-api-with-useeffect-and-usestate-hook/" data-v-a2b80041>https://www.geeksforgeeks.org/fetching-data-from-an-api-with-useeffect-and-usestate-hook/</a></p><hr data-v-a2b80041><h1 id="api" data-v-a2b80041>API</h1><hr data-v-a2b80041><h2 id="melakukan-penambilan-api-local-atau-online" data-v-a2b80041>melakukan penambilan API, local atau online</h2><pre data-v-a2b80041><code class="lang-Js" data-v-a2b80041><span class="hljs-comment" data-v-a2b80041>/* RandomUserList.js */</span>
<span class="hljs-keyword" data-v-a2b80041>import</span> React,{ useState, useEffect} <span class="hljs-keyword" data-v-a2b80041>from</span> <span class="hljs-string" data-v-a2b80041>&#39;react&#39;</span>;

<span class="hljs-keyword" data-v-a2b80041>import</span> users <span class="hljs-keyword" data-v-a2b80041>from</span> <span class="hljs-string" data-v-a2b80041>&#39;./users.json&#39;</span> <span class="hljs-comment" data-v-a2b80041>// Ambil data JSON manually</span>


<span class="hljs-function" data-v-a2b80041><span class="hljs-keyword" data-v-a2b80041>function</span> <span class="hljs-title" data-v-a2b80041>App</span>(<span class="hljs-params" data-v-a2b80041></span>) </span>{
    <span class="hljs-keyword" data-v-a2b80041>const</span> [userList, setUserList] = useState(users);

  <span class="hljs-comment" data-v-a2b80041>/* Menagmbil API online
    useEffect(() =&gt; {
        fetch(&#39;https://random-data-api.com/api/v2/users?size=5&#39;)
            .then(response =&gt; response.json())
            .then(data =&gt; setUserList(data));
    }, []);
  */</span>

    <span class="hljs-keyword" data-v-a2b80041>return</span> (
        <span class="xml" data-v-a2b80041><span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>div</span>&gt;</span>
            <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>h2</span>&gt;</span>Random User List<span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>h2</span>&gt;</span>
            <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>ul</span>&gt;</span>
                {userList.map(user =&gt; (
                    <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>li</span> <span class="hljs-attr" data-v-a2b80041>key</span>=<span class="hljs-string" data-v-a2b80041>{user.id}</span>&gt;</span>
                        <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span>
                            Name:
                            {user.first_name}
                            {user.last_name}
                        <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span>
                        <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span>
                            Email:
                            {user.email}
                        <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span>
                        {/* Add more user data fields as needed */}
            <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span>
              Skill:  
              {user.employment.key_skill}
            <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span>
                    <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>li</span>&gt;</span>
                ))}
            <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>ul</span>&gt;</span>
        <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>div</span>&gt;</span></span>
    );
}

<span class="hljs-keyword" data-v-a2b80041>export</span> <span class="hljs-keyword" data-v-a2b80041>default</span> App;
</code></pre><ul data-v-a2b80041><li data-v-a2b80041>Untuk menyimpan data json, kita bisa akses link API, lalu click <code data-v-a2b80041>save as</code> Dimana kita akan menyimpan file &quot;json&quot; tersebut didalam &#39;src&#39;. </li></ul><h2 id="axios" data-v-a2b80041>axios</h2><p data-v-a2b80041>didalam proses pembuatan app yang membutuhkan app, disini kita memerlukan sebuah tool untuk menerima data, dan memiliki cara untuk melakukan testing kepada sumber API original sedikit saja. </p><p data-v-a2b80041>oleh karena itu, kita akan menyimpan file JSON local untuk media pembelajaran.</p><p data-v-a2b80041><a href="../../document/project-react/Api-Axios.md" data-v-a2b80041>Apa itu axios?</a></p><pre data-v-a2b80041><code class="lang-Js" data-v-a2b80041><span class="hljs-comment" data-v-a2b80041>/* RandomUserList.js */</span>
<span class="hljs-keyword" data-v-a2b80041>import</span> React,{ useState, useEffect, } <span class="hljs-keyword" data-v-a2b80041>from</span> <span class="hljs-string" data-v-a2b80041>&#39;react&#39;</span>;
<span class="hljs-keyword" data-v-a2b80041>import</span> axios <span class="hljs-keyword" data-v-a2b80041>from</span> <span class="hljs-string" data-v-a2b80041>&#39;axios&#39;</span>

<span class="hljs-comment" data-v-a2b80041>//import users from &#39;./users.json&#39; // Ambil data JSON manually</span>


<span class="hljs-function" data-v-a2b80041><span class="hljs-keyword" data-v-a2b80041>function</span> <span class="hljs-title" data-v-a2b80041>App</span>(<span class="hljs-params" data-v-a2b80041></span>) </span>{
    <span class="hljs-keyword" data-v-a2b80041>const</span> [userList, setUserList] = useState([]);

  <span class="hljs-comment" data-v-a2b80041>/* Menagmbil API online
    useEffect(() =&gt; {
        fetch(&#39;https://random-data-api.com/api/v2/users?size=5&#39;)
            .then(response =&gt; response.json())
            .then(data =&gt; setUserList(data));
    }, []);
  */</span>

  useEffect(<span class="hljs-function" data-v-a2b80041><span class="hljs-params" data-v-a2b80041>()</span> =&gt;</span> { <span class="hljs-comment" data-v-a2b80041>// Ambil API secara sementara.</span>
    axios  <span class="hljs-comment" data-v-a2b80041>// axios adalah bentuk dari &quot;Promise&quot;.</span>
    .get(<span class="hljs-string" data-v-a2b80041>&#39;users.json&#39;</span>)
      .then(<span class="hljs-function" data-v-a2b80041>(<span class="hljs-params" data-v-a2b80041>response</span>) =&gt;</span> {
        setUserList(response.data)
      })
      .catch(<span class="hljs-function" data-v-a2b80041>(<span class="hljs-params" data-v-a2b80041>error</span>) =&gt;</span> {
        <span class="hljs-built_in" data-v-a2b80041>console</span>.log(error)
      })
  }, [])

    <span class="hljs-keyword" data-v-a2b80041>return</span> (
        <span class="xml" data-v-a2b80041><span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>div</span>&gt;</span>
            <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>h2</span>&gt;</span>Random User List<span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>h2</span>&gt;</span>
            <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>ul</span>&gt;</span>
                {userList.map(user =&gt; (
                    <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>li</span> <span class="hljs-attr" data-v-a2b80041>key</span>=<span class="hljs-string" data-v-a2b80041>{user.id}</span>&gt;</span>
                        <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span>
                            Name:
                            {user.first_name}
                            {user.last_name}
                        <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span>
                        <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span>
                            Email:
                            {user.email}
                        <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span>
                        {/* Add more user data fields as needed */}
            <span class="hljs-tag" data-v-a2b80041>&lt;<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span>
              Skill:  
              {user.employment.key_skill}
            <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>p</span>&gt;</span>
                    <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>li</span>&gt;</span>
                ))}
            <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>ul</span>&gt;</span>
        <span class="hljs-tag" data-v-a2b80041>&lt;/<span class="hljs-name" data-v-a2b80041>div</span>&gt;</span></span>
    );
}

<span class="hljs-keyword" data-v-a2b80041>export</span> <span class="hljs-keyword" data-v-a2b80041>default</span> App;
</code></pre><ul data-v-a2b80041><li data-v-a2b80041>simpan file JSON, didalam <code data-v-a2b80041>public</code> folder</li></ul><p data-v-a2b80041>ref: </p><ul data-v-a2b80041><li data-v-a2b80041><a href="https://akhtarvahid.medium.com/how-to-access-fetch-the-local-json-file-to-react-5ce07c43731d" data-v-a2b80041>https://akhtarvahid.medium.com/how-to-access-fetch-the-local-json-file-to-react-5ce07c43731d</a></li><li data-v-a2b80041><a href="https://stackoverflow.com/questions/54224164/trouble-getting-local-json-data-with-axios" data-v-a2b80041>https://stackoverflow.com/questions/54224164/trouble-getting-local-json-data-with-axios</a></li></ul>`,38)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},Y0=ca(G0,[["__scopeId","data-v-a2b80041"]]),Q0={__name:"lt-html1",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="latihan-1" data-v-5dc3bf72>Latihan 1</h1><p data-v-5dc3bf72>latihan pertama adalah menghubungkan file CSS (eksternal css) ke dalam document HTMl. Lakukan latihan di local computer agar dapat memahami materi dengan lebih baik.</p><ul data-v-5dc3bf72><li data-v-5dc3bf72>Buat document HTML dengan kerangka dasar: \`\`\` &lt;!DOCTYPE html&gt;&lt;html lang=&#39;en&#39;&gt; </li></ul><head data-v-5dc3bf72></head><body data-v-5dc3bf72></body><p data-v-5dc3bf72>&lt;/html&gt;</p><pre data-v-5dc3bf72><code data-v-5dc3bf72>
- Buat <span class="hljs-keyword" data-v-5dc3bf72>file</span> css <span class="hljs-keyword" data-v-5dc3bf72>di</span> samping <span class="hljs-keyword" data-v-5dc3bf72>file</span> html
</code></pre><pre data-v-5dc3bf72><code data-v-5dc3bf72><span class="hljs-comment" data-v-5dc3bf72>/* File CSS sederhana */</span>

<span class="hljs-selector-tag" data-v-5dc3bf72>body</span> { 
    <span class="hljs-attribute" data-v-5dc3bf72>color</span>: white; 
}
</code></pre><pre data-v-5dc3bf72><code data-v-5dc3bf72>
Breakdown:
    -<span class="ruby" data-v-5dc3bf72> element <span class="hljs-symbol" data-v-5dc3bf72>Body:</span> untuk melakukan configurasi tampilan pada element body di file HTML.
</span>    -<span class="ruby" data-v-5dc3bf72> Property <span class="hljs-symbol" data-v-5dc3bf72>color:</span> untuk melakukan configurasi warna pada element tersebut
</span>
-<span class="ruby" data-v-5dc3bf72> Untuk memanggil file CSS ke dalam <span class="hljs-symbol" data-v-5dc3bf72>document:</span></span>
</code></pre><pre data-v-5dc3bf72><code data-v-5dc3bf72><span class="hljs-tag" data-v-5dc3bf72>&lt;<span class="hljs-name" data-v-5dc3bf72>link</span> <span class="hljs-attr" data-v-5dc3bf72>rel</span>=<span class="hljs-string" data-v-5dc3bf72>&quot;stylesheet&quot;</span> <span class="hljs-attr" data-v-5dc3bf72>href</span>=<span class="hljs-string" data-v-5dc3bf72>&quot;folder/file.css&quot;</span>/&gt;</span>
</code></pre><pre data-v-5dc3bf72><code data-v-5dc3bf72>Breakdown:
    - element <span class="hljs-string" data-v-5dc3bf72>&quot;link&quot;</span> berfungsi sebagai definisi antara document, dan sumber luar. Tetapi sebagian besar digunakan untuk memanggil stylesheet dan logo (http<span class="hljs-variable" data-v-5dc3bf72>s:</span>//www.w3schools.<span class="hljs-keyword" data-v-5dc3bf72>com</span>/<span class="hljs-keyword" data-v-5dc3bf72>tags</span>/tag_link.asp)
    - attribute <span class="hljs-string" data-v-5dc3bf72>&quot;rel&quot;</span> berfungsi untuk menjelaskan secara spesifik hubungan antara document dan document yang dipanggil (http<span class="hljs-variable" data-v-5dc3bf72>s:</span>//www.w3schools.<span class="hljs-keyword" data-v-5dc3bf72>com</span>/<span class="hljs-keyword" data-v-5dc3bf72>tags</span>/att_a_rel.asp)

Perlu diperhatikan, element link tersebut harus berada <span class="hljs-keyword" data-v-5dc3bf72>di</span> dalam container \`<span class="hljs-symbol" data-v-5dc3bf72>&lt;head&gt;</span>\`
</code></pre><p data-v-5dc3bf72><head data-v-5dc3bf72><meta charset="UTF-8" data-v-5dc3bf72><title data-v-5dc3bf72>Some Web Page</title><link href="style.css" rel="stylesheet" type="text/css" data-v-5dc3bf72></head> \`\`\`</p><h2 id="kesimpulan" data-v-5dc3bf72>Kesimpulan</h2><ul data-v-5dc3bf72><li data-v-5dc3bf72>Buat file HTML</li><li data-v-5dc3bf72>Buat file CSS</li><li data-v-5dc3bf72>Panggil file css kedalam document HTML.</li><li data-v-5dc3bf72>lakukan improvisasi hingga terlihat bahwa file css dapat terbukti terhubung dengan document.</li></ul>`,14)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},X0=ca(Q0,[["__scopeId","data-v-5dc3bf72"]]),Z0={__name:"lt-html2",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="latihan-membuat-halaman-website" data-v-5a8c5a79>Latihan Membuat halaman website</h1><p data-v-5a8c5a79>Pada Latihan awal ini kita akan melakukan latihan sederhana dalam pembuatan halaman website. Website yang akan kita buat adalah menggenai Website Berisi Puisi.</p><h3 id="persyaratan-" data-v-5a8c5a79>Persyaratan:</h3><ul data-v-5a8c5a79><li data-v-5a8c5a79>Memiliki Struktur dasar pembangun website</li><li data-v-5a8c5a79>memiliki Element Pendukung content</li></ul><h2 id="langkah-langkah" data-v-5a8c5a79>Langkah-Langkah</h2><ol data-v-5a8c5a79><li data-v-5a8c5a79>Buat Struktur dasar untuk Halaman website</li></ol><pre data-v-5a8c5a79><code data-v-5a8c5a79><span class="hljs-meta" data-v-5a8c5a79>&lt;!DOCTYPE html&gt;</span>
<span class="hljs-tag" data-v-5a8c5a79>&lt;<span class="hljs-name" data-v-5a8c5a79>html</span> <span class="hljs-attr" data-v-5a8c5a79>lang</span>=<span class="hljs-string" data-v-5a8c5a79>&quot;en&quot;</span>&gt;</span>
<span class="hljs-tag" data-v-5a8c5a79>&lt;<span class="hljs-name" data-v-5a8c5a79>head</span>&gt;</span>
    <span class="hljs-tag" data-v-5a8c5a79>&lt;<span class="hljs-name" data-v-5a8c5a79>meta</span> <span class="hljs-attr" data-v-5a8c5a79>charset</span>=<span class="hljs-string" data-v-5a8c5a79>&quot;UTF-8&quot;</span>&gt;</span>
    <span class="hljs-tag" data-v-5a8c5a79>&lt;<span class="hljs-name" data-v-5a8c5a79>title</span>&gt;</span><span class="hljs-tag" data-v-5a8c5a79>&lt;/<span class="hljs-name" data-v-5a8c5a79>title</span>&gt;</span>
<span class="hljs-tag" data-v-5a8c5a79>&lt;/<span class="hljs-name" data-v-5a8c5a79>head</span>&gt;</span>
<span class="hljs-tag" data-v-5a8c5a79>&lt;<span class="hljs-name" data-v-5a8c5a79>body</span>&gt;</span>

<span class="hljs-tag" data-v-5a8c5a79>&lt;/<span class="hljs-name" data-v-5a8c5a79>body</span>&gt;</span>
<span class="hljs-tag" data-v-5a8c5a79>&lt;/<span class="hljs-name" data-v-5a8c5a79>html</span>&gt;</span>
</code></pre><ol data-v-5a8c5a79><li data-v-5a8c5a79>Buat Struktur untuk kontent puisi, Didalam Body</li></ol><pre data-v-5a8c5a79><code data-v-5a8c5a79><span class="hljs-tag" data-v-5a8c5a79>&lt;<span class="hljs-name" data-v-5a8c5a79>h1</span>&gt;</span> Judul <span class="hljs-tag" data-v-5a8c5a79>&lt;/<span class="hljs-name" data-v-5a8c5a79>h1</span>&gt;</span>

<span class="hljs-tag" data-v-5a8c5a79>&lt;<span class="hljs-name" data-v-5a8c5a79>h2</span>&gt;</span> Sub Judul <span class="hljs-tag" data-v-5a8c5a79>&lt;/<span class="hljs-name" data-v-5a8c5a79>h2</span>&gt;</span>

<span class="hljs-tag" data-v-5a8c5a79>&lt;<span class="hljs-name" data-v-5a8c5a79>p</span>&gt;</span>Text<span class="hljs-tag" data-v-5a8c5a79>&lt;/<span class="hljs-name" data-v-5a8c5a79>p</span>&gt;</span>
</code></pre><blockquote data-v-5a8c5a79><p data-v-5a8c5a79>Contoh Hasil jadi <a href="../code/latihan-html/index-LT-02.html" data-v-5a8c5a79>Click okay</a></p></blockquote>`,10)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},ag=ca(Z0,[["__scopeId","data-v-5a8c5a79"]]),sg={__name:"lt-html3",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="latihan-float" data-v-311bfb1b>Latihan FLoat</h1><p data-v-311bfb1b>Float property pada CSS digunakan untuk mendefinisikan bagaimana element harus ditempatkan dengan referensi dari element lainnya. Perlu diperhatikan disaat element bertipe float maka dia akan keluar dari arus / flow normal pada halaman website dan bisa digerakan ke kiri atau ke kanan dari posisi semula.</p><p data-v-311bfb1b>Informasi dan panduan yang perlu diingat saat menggunakan CSS float:</p><ol data-v-311bfb1b><li data-v-311bfb1b><p data-v-311bfb1b>Property &quot;float&quot; bisa kita set &quot;value&quot; ke &quot;left&quot; atau &quot;right&quot;, Tergantung dengan arah yang kita inginkan. </p></li><li data-v-311bfb1b><p data-v-311bfb1b>Disaat element bertipe &quot;float&quot;, maka element lainnya pada halaman akan mengikuti arah dari element tersbut. Ini bisa menjadi manfaat disaat kita inginkan atau bisa menjadi masalah jika kita salah perhitungan. </p></li><li data-v-311bfb1b><p data-v-311bfb1b>Penting untuk memahami teknik &quot;clearfix&quot; saat kita menggunakan element &quot;float&quot;. Disaat semua element pada container menggunakan &quot;float&quot; maka ketinggian dari &quot;container&quot; akan hilang. Biasannya kejadi hilangnnya ketinggian dari container disebut sebagai &quot;element collapsing CSS&quot; (<a href="https://www.geeksforgeeks.org/how-to-prevent-parents-of-floated-elements-from-collapsing-in-css/" data-v-311bfb1b>https://www.geeksforgeeks.org/how-to-prevent-parents-of-floated-elements-from-collapsing-in-css/</a>). </p></li></ol><p data-v-311bfb1b>Untuk menyelesaikan masalah tersebut kita bisa menggunakan teknik &quot;clearfix&quot; untuk memaksa container agar melebar dan menyesuaikan dengan tinggi dan lebar dari &quot;float element&quot;. Contoh dan referensi: (<a href="https://www.w3schools.com/css/tryit.asp?filename=trycss_layout_clearfix2" data-v-311bfb1b>https://www.w3schools.com/css/tryit.asp?filename=trycss_layout_clearfix2</a>)</p><p data-v-311bfb1b>Secara Garis besar CSS float akan sangat dapat membantu kita dalam beberapa kondisi. Tetapi sebagai developer kita juga harus menggunakannya dengan teliti agar kekurangan dari float tidak menjadi halangan. Setiap fitur akan memiliki kekurangan dan kelebihan itu adalah hal yang pasti, dan harus kita belajar pertimbangkan.</p><h2 id="persyaratan" data-v-311bfb1b>Persyaratan</h2><ul data-v-311bfb1b><li data-v-311bfb1b>Memiliki dua float </li><li data-v-311bfb1b>Dua float berada didalam main </li><li data-v-311bfb1b>Menggunakan teknik &quot;clearfix&quot; untuk memperbaiki &quot;container collapse&quot;</li></ul><h2 id="instruksi" data-v-311bfb1b>Instruksi</h2><ol data-v-311bfb1b><li data-v-311bfb1b><p data-v-311bfb1b>Buat Fondasi halaman website \`\`\` &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; <meta charset="UTF-8" data-v-311bfb1b><title data-v-311bfb1b></title></p> &lt;style&gt; &lt;p&gt; &lt;/style&gt; &lt;head&gt;&lt;/p&gt; &lt;body&gt; </li></ol><p data-v-311bfb1b>&lt;/body&gt; &lt;/html&gt;</p><pre data-v-311bfb1b><code data-v-311bfb1b>
<span class="hljs-number" data-v-311bfb1b>2.</span> Buat <span class="hljs-keyword" data-v-311bfb1b>class</span> main untuk meyimpan dua <span class="hljs-keyword" data-v-311bfb1b>float</span>
</code></pre><main class="clearfix" data-v-311bfb1b></main><pre data-v-311bfb1b><code data-v-311bfb1b>
<span class="hljs-number" data-v-311bfb1b>3</span>. Float <span class="hljs-keyword" data-v-311bfb1b>bagian </span>kiri <span class="hljs-keyword" data-v-311bfb1b>disimpan </span>ke main
</code></pre>&lt;div class=&quot;main-text&quot;&gt; <pre data-v-311bfb1b><code data-v-311bfb1b>        Float Left

        Adipisicing quia consequatur magnam repellat et voluptatibus sequi Perspiciatis
        commodi cum adipisci asperiores vero. Modi soluta molestiae veritatis
        praesentium nulla modi pariatur veritatis Quas eveniet veritatis excepturi
        velit modi <span class="hljs-built_in" data-v-311bfb1b>alias</span>!

    &lt;/<span class="hljs-keyword" data-v-311bfb1b>div</span>&gt;
</code></pre><pre data-v-311bfb1b><code data-v-311bfb1b>
<span class="hljs-number" data-v-311bfb1b>4</span>. Float <span class="hljs-keyword" data-v-311bfb1b>bagian </span>kanan <span class="hljs-keyword" data-v-311bfb1b>disimpan </span>ke main, dan pastikan <span class="hljs-keyword" data-v-311bfb1b>berada </span><span class="hljs-keyword" data-v-311bfb1b>dibawah </span><span class="hljs-string" data-v-311bfb1b>&quot;main-text&quot;</span>
</code></pre> &lt;div class=&quot;side-text&quot;&gt; <pre data-v-311bfb1b><code data-v-311bfb1b>        Float Right

        Adipisicing deserunt voluptatibus nisi est suscipit! Nulla unde temporibus sequi
        <span class="hljs-built_in" data-v-311bfb1b>id</span> officia, distinctio Maiores corporis placeat unde quos iste maxime
        laudantium Suscipit unde adipisci atque et deleniti animi ullam minus.

    &lt;/<span class="hljs-keyword" data-v-311bfb1b>div</span>&gt;
</code></pre><pre data-v-311bfb1b><code data-v-311bfb1b>
<span class="hljs-number" data-v-311bfb1b>5.</span> Mengatur padding pada element main dengan <span class="hljs-keyword" data-v-311bfb1b>internal</span> css.
</code></pre><p data-v-311bfb1b>main { padding: 10px; }</p><pre data-v-311bfb1b><code data-v-311bfb1b>
*<span class="hljs-keyword" data-v-311bfb1b>Breakdown* </span>:
- Padding - untuk memberikan <span class="hljs-keyword" data-v-311bfb1b>jarak </span>dari <span class="hljs-keyword" data-v-311bfb1b>border </span>ke content

<span class="hljs-number" data-v-311bfb1b>6</span>. Mengggunakan clearfik teknik untuk memperbaiki <span class="hljs-string" data-v-311bfb1b>&quot;height&quot;</span> dari container.
</code></pre><p data-v-311bfb1b>/<em data-v-311bfb1b> clear float </em>/ .clearfix:after { content: &quot;&quot;; clear: both; display: table; }</p><pre data-v-311bfb1b><code data-v-311bfb1b><span class="hljs-keyword" data-v-311bfb1b>Reference</span> (https://www.w3schools.com/css/tryit.asp?<span class="hljs-attr" data-v-311bfb1b>filename=</span>trycss_layout_clearfix2)

- <span class="hljs-keyword" data-v-311bfb1b>Property</span><span class="hljs-title" data-v-311bfb1b> </span><span class="hljs-string" data-v-311bfb1b>&quot;content&quot;</span> akan digunakan untuk menambahkan kontent tambahan, setelah kontent utama yang kita tulis secara manual
- <span class="hljs-keyword" data-v-311bfb1b>Property</span><span class="hljs-title" data-v-311bfb1b> </span><span class="hljs-string" data-v-311bfb1b>&quot;display:table&quot;</span> <span class="hljs-string" data-v-311bfb1b>&quot;display&quot;</span> digunakan untuk mengatur tampilan sebuah elemen. Pada selector di atas, nilai dari properti <span class="hljs-string" data-v-311bfb1b>&quot;display&quot;</span> adalah <span class="hljs-string" data-v-311bfb1b>&quot;table&quot;</span>, artinya elemen akan ditampilkan seperti tabel pada halaman web.

**Contoh dari <span class="hljs-keyword" data-v-311bfb1b>property</span><span class="hljs-title" data-v-311bfb1b> </span>content**
</code></pre><p data-v-311bfb1b><h2 data-v-311bfb1b>Paperback Best Sellers</h2></p><p data-v-311bfb1b><ol data-v-311bfb1b><li data-v-311bfb1b>Political Thriller</li><li class="new-entry" data-v-311bfb1b>Halloween Stories</li><li data-v-311bfb1b>My Biography</li><li class="new-entry" data-v-311bfb1b>Vampire Romance</li></ol></p><pre data-v-311bfb1b><code data-v-311bfb1b><span class="hljs-attribute" data-v-311bfb1b>Dengan style</span>
</code></pre><p data-v-311bfb1b>.new-entry::after { content: &quot; New!&quot;; /<em data-v-311bfb1b> The leading space creates separation between the added content and the rest of the content </em>/ color: red; }</p><pre data-v-311bfb1b><code data-v-311bfb1b>
contoh <span class="hljs-string" data-v-311bfb1b>langsung:</span> <span class="hljs-string" data-v-311bfb1b>https:</span><span class="hljs-comment" data-v-311bfb1b>//developer.mozilla.org/en-US/docs/Web/CSS/content#targeting_classes</span>

<span class="hljs-number" data-v-311bfb1b>7.</span> Mengatur element <span class="hljs-string" data-v-311bfb1b>&quot;main-text&quot;</span> menjadi element <span class="hljs-keyword" data-v-311bfb1b>float</span>.
</code></pre><p data-v-311bfb1b> /<em data-v-311bfb1b> Pengaturan Float </em>/ .main-text { box-sizing: border-box; float: left; width: 60%; border: 1px solid red; }</p><pre data-v-311bfb1b><code data-v-311bfb1b>
*<span class="hljs-keyword" data-v-311bfb1b>Breakdown* </span>: 
- <span class="hljs-keyword" data-v-311bfb1b>box-sizing </span>- <span class="hljs-keyword" data-v-311bfb1b>digunakan </span>untuk memastikan ukuran element sesuai dengan yang <span class="hljs-keyword" data-v-311bfb1b>didefinisikan </span>yaitu <span class="hljs-string" data-v-311bfb1b>&quot;60%&quot;</span>
- float - <span class="hljs-keyword" data-v-311bfb1b>digunakan </span>untuk menempatkan element sesuai dengan arah yang <span class="hljs-keyword" data-v-311bfb1b>dipilih. </span>
- width - mengatur lebar dari element 
- <span class="hljs-keyword" data-v-311bfb1b>border </span>- menampilkan <span class="hljs-keyword" data-v-311bfb1b>border </span>dari element


<span class="hljs-number" data-v-311bfb1b>8</span>. Mengatur element <span class="hljs-string" data-v-311bfb1b>&quot;side-text&quot;</span> menjadi element float.
</code></pre><p data-v-311bfb1b>.side-text { box-sizing: border-box; float: right; width: 40%; border: 1px solid blue; } \`\`\`</p><h2 id="source-code" data-v-311bfb1b>Source Code</h2><p data-v-311bfb1b>Contoh Lengkap</p><p data-v-311bfb1b><a href="../code/latihan-html/index-LT-float.html" data-v-311bfb1b>Source Code</a></p><h2 id="referensi" data-v-311bfb1b>Referensi</h2><ul data-v-311bfb1b><li data-v-311bfb1b><a href="https://css-tricks.com/all-about-floats/" data-v-311bfb1b>https://css-tricks.com/all-about-floats/</a></li></ul>`,37)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},tg=ca(sg,[["__scopeId","data-v-311bfb1b"]]),ng={__name:"lt-html4",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="standart-website-format" data-v-7f134cac>Standart Website format</h1><p data-v-7f134cac>Pada latihan kali ini kita akan berlatih menggunakan HTML dan CSS bersama untuk membuat halaman website Yang berkualitas.</p><p data-v-7f134cac>Jangan Khawatir jika masih belum menguasai latihan ini sepenuhnnya, Karena yang paling penting adalah mendapatkan dasar dari pemahaman.</p><h2 id="mengenal-css" data-v-7f134cac>Mengenal CSS</h2><p data-v-7f134cac>CSS atau Cascading Style Sheets adalah teknologi fundamental yang digunakan pada design website.Ini digunakan untuk mengatur layout, warna, fonts, dan element visual lainnya.Dengan adannya CSS kita sebagai developer bisa Membuat halaman website yang dinamis dan responsif untuk berabagai macam perangkat komputasi.</p><p data-v-7f134cac>Struktur dari css terdiri dari:</p><ul data-v-7f134cac><li data-v-7f134cac>Selector, Adalah target alamat dari element HTML </li><li data-v-7f134cac>Declaration, adalah definisi / protokol untuk pengaturan tampilan pada element tersebut.</li></ul><p data-v-7f134cac>CSS Juga menyediakan sebuah sistem untuk memberikan kebebasan kepada developer untuk menampilkan fitur yang sesuai dengan ukuran device.Sebagai contoh, untuk Handphone akan memiliki layout yang berbeda dengan apa yang ada pada komputer.Fitur ini disebut sebagai &quot;CSS media queries&quot; yang akan jadi fondasi pada halaman website responsif.</p><h2 id="persyaratan" data-v-7f134cac>Persyaratan</h2><ul data-v-7f134cac><li data-v-7f134cac>menggunakan semantic dasar halaman</li></ul><h2 id="instruksi" data-v-7f134cac>Instruksi</h2><ol data-v-7f134cac><li data-v-7f134cac>Membuat Struktur dasar untuk halaman website</li></ol><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-meta" data-v-7f134cac>&lt;!DOCTYPE html&gt;</span>
<span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>html</span> <span class="hljs-attr" data-v-7f134cac>lang</span>=<span class="hljs-string" data-v-7f134cac>&quot;en&quot;</span>&gt;</span>
<span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>head</span>&gt;</span>
    <span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>meta</span> <span class="hljs-attr" data-v-7f134cac>charset</span>=<span class="hljs-string" data-v-7f134cac>&quot;UTF-8&quot;</span>&gt;</span>
    <span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>title</span>&gt;</span><span class="hljs-tag" data-v-7f134cac>&lt;/<span class="hljs-name" data-v-7f134cac>title</span>&gt;</span>

    <span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>style</span>&gt;</span><span class="undefined" data-v-7f134cac>

    </span><span class="hljs-tag" data-v-7f134cac>&lt;/<span class="hljs-name" data-v-7f134cac>style</span>&gt;</span>
<span class="hljs-tag" data-v-7f134cac>&lt;/<span class="hljs-name" data-v-7f134cac>head</span>&gt;</span>
<span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>body</span>&gt;</span>

<span class="hljs-tag" data-v-7f134cac>&lt;/<span class="hljs-name" data-v-7f134cac>body</span>&gt;</span>
<span class="hljs-tag" data-v-7f134cac>&lt;/<span class="hljs-name" data-v-7f134cac>html</span>&gt;</span>
</code></pre><ol data-v-7f134cac><li data-v-7f134cac><p data-v-7f134cac>Masukan Semantic element dasar halaman website yang terdiri dari:</p></li><li data-v-7f134cac><p data-v-7f134cac>header </p></li><li data-v-7f134cac>navbar </li><li data-v-7f134cac>main </li><li data-v-7f134cac>aside </li><li data-v-7f134cac>footer</li></ol><p data-v-7f134cac>Pada panduan kali ini element main dan aside akan dimasukan kedalam satu container untuk mempermudah pengaturan tampilan selanjutnnya.(Saran dari author, untuk setiap element tersebut diberi tanda &quot;comment&quot; agar mempermudah dalam pengembangan nantinnya).</p><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>header</span>&gt;</span><span class="hljs-tag" data-v-7f134cac>&lt;/<span class="hljs-name" data-v-7f134cac>header</span>&gt;</span>

<span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>nav</span>&gt;</span><span class="hljs-tag" data-v-7f134cac>&lt;/<span class="hljs-name" data-v-7f134cac>nav</span>&gt;</span>

<span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>div</span> <span class="hljs-attr" data-v-7f134cac>class</span>=<span class="hljs-string" data-v-7f134cac>&quot;main-parent&quot;</span>&gt;</span>

<span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>main</span>&gt;</span><span class="hljs-tag" data-v-7f134cac>&lt;/<span class="hljs-name" data-v-7f134cac>main</span>&gt;</span>

<span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>aside</span>&gt;</span><span class="hljs-tag" data-v-7f134cac>&lt;/<span class="hljs-name" data-v-7f134cac>aside</span>&gt;</span>

<span class="hljs-tag" data-v-7f134cac>&lt;/<span class="hljs-name" data-v-7f134cac>div</span>&gt;</span>

<span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>footer</span>&gt;</span><span class="hljs-tag" data-v-7f134cac>&lt;/<span class="hljs-name" data-v-7f134cac>footer</span>&gt;</span>
</code></pre><ol data-v-7f134cac><li data-v-7f134cac>Menambahkan Judul untuk Header</li></ol><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>h1</span>&gt;</span> This is Title<span class="hljs-tag" data-v-7f134cac>&lt;/<span class="hljs-name" data-v-7f134cac>h1</span>&gt;</span>
</code></pre><ol data-v-7f134cac><li data-v-7f134cac>Menambahkan list menu pada navbar</li></ol><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>ul</span>&gt;</span>
            <span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>li</span>&gt;</span>
                <span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>a</span> <span class="hljs-attr" data-v-7f134cac>href</span>=<span class="hljs-string" data-v-7f134cac>&quot;#&quot;</span>&gt;</span> Homepage<span class="hljs-tag" data-v-7f134cac>&lt;/<span class="hljs-name" data-v-7f134cac>a</span>&gt;</span>
            <span class="hljs-tag" data-v-7f134cac>&lt;/<span class="hljs-name" data-v-7f134cac>li</span>&gt;</span>
            <span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>li</span>&gt;</span>
                <span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>a</span> <span class="hljs-attr" data-v-7f134cac>href</span>=<span class="hljs-string" data-v-7f134cac>&quot;#&quot;</span>&gt;</span>About Us<span class="hljs-tag" data-v-7f134cac>&lt;/<span class="hljs-name" data-v-7f134cac>a</span>&gt;</span>
            <span class="hljs-tag" data-v-7f134cac>&lt;/<span class="hljs-name" data-v-7f134cac>li</span>&gt;</span>

        <span class="hljs-tag" data-v-7f134cac>&lt;/<span class="hljs-name" data-v-7f134cac>ul</span>&gt;</span>
</code></pre><ol data-v-7f134cac><li data-v-7f134cac>Menambahkan class kedalam element main untuk dilakukan configurasi nantinnya.<pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-keyword" data-v-7f134cac>class</span>=<span class="hljs-string" data-v-7f134cac>&quot;main-area-left&quot;</span>
</code></pre></li></ol><p data-v-7f134cac>Menambahkan konten kedalam element main</p><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-section" data-v-7f134cac>&lt;p&gt;</span>
                <span class="hljs-attribute" data-v-7f134cac>Amet</span> minima dolorum eos itaque vel. Totam dolores a unde dolor nesciunt? Dignissimos
                <span class="hljs-attribute" data-v-7f134cac>nesciunt</span> eos eaque perferendis esse, distinctio asperiores reprehenderit.
                <span class="hljs-attribute" data-v-7f134cac>Nemo</span> expedita dolor dicta consectetur beatae. Quam quisquam delectus!
            <span class="hljs-section" data-v-7f134cac>&lt;/p&gt;</span>

            <span class="hljs-section" data-v-7f134cac>&lt;p&gt;</span>
                <span class="hljs-attribute" data-v-7f134cac>Lorem</span> sit dolores dolor odit quaerat. Illo ad accusamus reprehenderit ea necessitatibus
                <span class="hljs-attribute" data-v-7f134cac>harum</span> deserunt doloremque animi? Mollitia expedita earum quod minus
                <span class="hljs-attribute" data-v-7f134cac>eligendi</span>? Porro asperiores nemo illum voluptate ducimus fugit dolore.
            <span class="hljs-section" data-v-7f134cac>&lt;/p&gt;</span>

            <span class="hljs-section" data-v-7f134cac>&lt;p&gt;</span>
                <span class="hljs-attribute" data-v-7f134cac>Adipisicing</span> at eum nostrum fuga deleniti suscipit. Incidunt adipisci enim distinctio
                <span class="hljs-attribute" data-v-7f134cac>voluptates</span> velit Nihil officiis asperiores repellendus voluptatum
                <span class="hljs-attribute" data-v-7f134cac>odio</span> Distinctio quibusdam hic quibusdam laborum ea! Nihil beatae
                <span class="hljs-attribute" data-v-7f134cac>nostrum</span> ea iusto?
            <span class="hljs-section" data-v-7f134cac>&lt;/p&gt;</span>
</code></pre><ol data-v-7f134cac><li data-v-7f134cac>Menambahkan kontent kedalam sidebar</li></ol><p data-v-7f134cac>Sebelum menambahkan kotent tambahkan class terlebih dahulu untuk sidebar. </p><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-keyword" data-v-7f134cac>class</span>=<span class="hljs-string" data-v-7f134cac>&quot;main-area-right&quot;</span>
</code></pre><p data-v-7f134cac>Tambahkan kotent kedalam sidebar</p><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-section" data-v-7f134cac>&lt;p&gt;</span>
<span class="hljs-attribute" data-v-7f134cac>Sit</span> cumque iure nostrum omnis nihil nisi Provident perspiciatis rerum sapiente ullam quaerat? Maiores itaque culpa ipsam similique mollitia, quae At quis necessitatibus vitae eos ipsam Molestiae nesciunt eum magnam!
<span class="hljs-section" data-v-7f134cac>&lt;/p&gt;</span>
</code></pre><ol data-v-7f134cac><li data-v-7f134cac>Menambahkan contoh Kepimilikan pada footer</li></ol><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-tag" data-v-7f134cac>&lt;<span class="hljs-name" data-v-7f134cac>p</span>&gt;</span>©Copyright 2050 by nobody. All rights reversed.<span class="hljs-tag" data-v-7f134cac>&lt;/<span class="hljs-name" data-v-7f134cac>p</span>&gt;</span>
</code></pre><ol data-v-7f134cac><li data-v-7f134cac>Setelah kita mengisi semua semantic element dengan kontent, kita bisa lanjut untuk melakukan modifkasi pada style dengan css.</li></ol><p data-v-7f134cac>Configurasi BIsa dilakukan dengan Internal atau eksternal css.Pada latihan kali ini metode yang dipakai adalah internal CSS.</p><p data-v-7f134cac>Pastikan Tag &quot;style&quot; sudah ada pada element &quot;head&quot;.</p><p data-v-7f134cac>Untuk selector Kita bisa gunakan metode selector seperti ini <code data-v-7f134cac>.class1 .class2</code>. Dengan cara ini kita bisa menargetkan element &quot;class2&quot; yang berada didalam &quot;class1&quot;. (<a href="https://www.w3schools.com/cssref/css_selectors.php" data-v-7f134cac>https://www.w3schools.com/cssref/css_selectors.php</a>)</p><ol data-v-7f134cac><li data-v-7f134cac>Buat Selector untuk element &quot;body&quot;.dengan Declaration seperti dibawah ini</li></ol><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-selector-tag" data-v-7f134cac>body</span> {  
<span class="hljs-attribute" data-v-7f134cac>box-sizing</span>: border-box;
            <span class="hljs-attribute" data-v-7f134cac>margin</span>: <span class="hljs-number" data-v-7f134cac>0px</span>;
            <span class="hljs-attribute" data-v-7f134cac>padding</span>: <span class="hljs-number" data-v-7f134cac>0px</span>;
            }
</code></pre><p data-v-7f134cac><strong data-v-7f134cac>BreakDown</strong>:</p><ul data-v-7f134cac><li data-v-7f134cac>box-sizing - Akan digunakan untuk memaksa agar lebar dan tinggi element sesuai dengan permintaan, tanpa ada tambahan dari padding, dll.Untuk lebih jelas bisa dilihat lagi pada chapter HTML<a href=".. / document / html.md" data-v-7f134cac>Click okay</a></li><li data-v-7f134cac>Margin - Digunakan agar element tidak memiliki gap / jarak dengan yang lain(optional). </li><li data-v-7f134cac>padding - digunakan agar kita dapat mengunakan lebar asli dari element body untuk pengembangan desain nanti.</li></ul><ol data-v-7f134cac><li data-v-7f134cac>Mengatur Desain header.<pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-selector-tag" data-v-7f134cac>header</span> {
        <span class="hljs-attribute" data-v-7f134cac>padding</span>: <span class="hljs-number" data-v-7f134cac>0px</span>;
        <span class="hljs-attribute" data-v-7f134cac>background-color</span>: Black;
        <span class="hljs-attribute" data-v-7f134cac>Padding</span>: <span class="hljs-number" data-v-7f134cac>0px</span>;
        <span class="hljs-attribute" data-v-7f134cac>color</span>: white;
        <span class="hljs-attribute" data-v-7f134cac>text-align</span>: center;
        <span class="hljs-attribute" data-v-7f134cac>height</span>: <span class="hljs-number" data-v-7f134cac>50px</span>;
    }
</code></pre><strong data-v-7f134cac>Breakdown</strong></li><li data-v-7f134cac>Background-color - sesuai namannya digunakan untuk mengatur warna backgroud dari element</li><li data-v-7f134cac>color - digunakan untuk melakukan configurasi warna pada text</li><li data-v-7f134cac>text-align - digunakan untuk mengatur penempatan text. </li><li data-v-7f134cac><p data-v-7f134cac>Height - digunakan untuk mengatur tinggi dari element </p></li><li data-v-7f134cac><p data-v-7f134cac>mengatur agar element h1 tidak membuat jarak dengan element diatasnnya.</p></li></ol><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-selector-tag" data-v-7f134cac>header</span> <span class="hljs-selector-tag" data-v-7f134cac>h1</span> {
            <span class="hljs-attribute" data-v-7f134cac>margin</span>: <span class="hljs-number" data-v-7f134cac>0px</span>;
        }
</code></pre><ol data-v-7f134cac><li data-v-7f134cac><p data-v-7f134cac>Mengatur desain pada navbar </p><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-selector-tag" data-v-7f134cac>nav</span> {
        <span class="hljs-attribute" data-v-7f134cac>padding</span>: <span class="hljs-number" data-v-7f134cac>0px</span>;
        <span class="hljs-attribute" data-v-7f134cac>margin</span>: <span class="hljs-number" data-v-7f134cac>0px</span>;
        <span class="hljs-attribute" data-v-7f134cac>background-color</span>: grey;
        <span class="hljs-attribute" data-v-7f134cac>padding</span>: <span class="hljs-number" data-v-7f134cac>0px</span>;
        <span class="hljs-attribute" data-v-7f134cac>height</span>: <span class="hljs-number" data-v-7f134cac>30px</span>;
    }
</code></pre></li><li data-v-7f134cac><p data-v-7f134cac>Mengatur element &quot;ul&quot; (list) agar sesuai dengan navbar.</p></li></ol><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-selector-tag" data-v-7f134cac>nav</span> <span class="hljs-selector-tag" data-v-7f134cac>ul</span> {
            <span class="hljs-attribute" data-v-7f134cac>list-style-type</span>: none;
            <span class="hljs-attribute" data-v-7f134cac>margin</span>: <span class="hljs-number" data-v-7f134cac>0</span>;
            <span class="hljs-attribute" data-v-7f134cac>padding</span>: <span class="hljs-number" data-v-7f134cac>0</span>;
        }
</code></pre><ol data-v-7f134cac><li data-v-7f134cac>Mengatur item untuk menjadi menu button pada navbar.</li></ol><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-comment" data-v-7f134cac>/*Contoh untuk mendapatkan alamat selector */</span>
<span class="hljs-comment" data-v-7f134cac>/* nav ul li {} */</span>

<span class="hljs-selector-tag" data-v-7f134cac>nav</span> <span class="hljs-selector-tag" data-v-7f134cac>ul</span> <span class="hljs-selector-tag" data-v-7f134cac>li</span> {
            <span class="hljs-attribute" data-v-7f134cac>display</span>: inline;
            <span class="hljs-attribute" data-v-7f134cac>color</span>: white;
            <span class="hljs-attribute" data-v-7f134cac>margin</span>: <span class="hljs-number" data-v-7f134cac>0px</span> <span class="hljs-number" data-v-7f134cac>2%</span> <span class="hljs-number" data-v-7f134cac>0px</span> <span class="hljs-number" data-v-7f134cac>2%</span>;
        }
</code></pre><ul data-v-7f134cac><li data-v-7f134cac><p data-v-7f134cac>display - disini digunakan untuk menggubah dari &quot;block&quot; ke &quot;inline&quot;</p></li><li data-v-7f134cac><p data-v-7f134cac>Mengatur warna link pada navbar </p><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-selector-tag" data-v-7f134cac>nav</span> <span class="hljs-selector-tag" data-v-7f134cac>a</span> {
        <span class="hljs-attribute" data-v-7f134cac>color</span>: white;
    }
</code></pre></li><li data-v-7f134cac><p data-v-7f134cac>Mengatur untuk &quot;main-parent&quot; dan disiapkan untuk kontent utama. </p></li></ul><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-selector-class" data-v-7f134cac>.main-parent</span> {
            <span class="hljs-attribute" data-v-7f134cac>padding</span>: <span class="hljs-number" data-v-7f134cac>1%</span>;
<span class="hljs-attribute" data-v-7f134cac>height</span>: <span class="hljs-number" data-v-7f134cac>20%</span>;
            <span class="hljs-attribute" data-v-7f134cac>width</span>: <span class="hljs-number" data-v-7f134cac>100%</span>;
        }
</code></pre><ol data-v-7f134cac><li data-v-7f134cac>Mennambahkan clearfix agar ketinggian dari container tidak collapse</li></ol><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-comment" data-v-7f134cac>/* Menggunakan Clearfix agar container tidak collapse */</span>
        <span class="hljs-selector-class" data-v-7f134cac>.clearfix</span><span class="hljs-selector-pseudo" data-v-7f134cac>:after</span> {
            <span class="hljs-attribute" data-v-7f134cac>content</span>: <span class="hljs-string" data-v-7f134cac>&quot;&quot;</span>;
                <span class="hljs-attribute" data-v-7f134cac>clear</span>: both;
                    <span class="hljs-attribute" data-v-7f134cac>display</span>: table;
        }
</code></pre><ul data-v-7f134cac><li data-v-7f134cac>clear - digunakan untuk mengembalikan flow pada element menjadi kembali normal. Karena perlu diingat pemakaian float akan mengubah flow element.</li></ul><ol data-v-7f134cac><li data-v-7f134cac>Mengatur layout dan jarak pada element main. Mengatur element &quot;main&quot;</li></ol><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-selector-tag" data-v-7f134cac>main</span> {
            <span class="hljs-attribute" data-v-7f134cac>box-sizing</span>: border-box;
            <span class="hljs-attribute" data-v-7f134cac>float</span>: left;
            <span class="hljs-attribute" data-v-7f134cac>width</span>: <span class="hljs-number" data-v-7f134cac>80%</span>;
        }
</code></pre><p data-v-7f134cac><strong data-v-7f134cac>Breakdown</strong></p><ul data-v-7f134cac><li data-v-7f134cac><p data-v-7f134cac>float - digunakan untuk mengatur penempatan pada element. Perlu diperhatikan </p></li><li data-v-7f134cac><p data-v-7f134cac>Mengatur layout dan jarak pada element aside. </p><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-selector-tag" data-v-7f134cac>aside</span> {
        <span class="hljs-attribute" data-v-7f134cac>box-sizing</span>: border-box;
        <span class="hljs-attribute" data-v-7f134cac>width</span>: <span class="hljs-number" data-v-7f134cac>20%</span>;
        <span class="hljs-attribute" data-v-7f134cac>float</span>: right;
    }
</code></pre></li><li data-v-7f134cac><p data-v-7f134cac>Mengatur Area footer agar terlihat formal </p><pre data-v-7f134cac><code data-v-7f134cac><span class="hljs-selector-tag" data-v-7f134cac>footer</span> {
        <span class="hljs-attribute" data-v-7f134cac>padding</span>: <span class="hljs-number" data-v-7f134cac>10px</span>;
        <span class="hljs-attribute" data-v-7f134cac>background-color</span>: Black;
        <span class="hljs-attribute" data-v-7f134cac>color</span>: white;
    }
</code></pre></li></ul><h2 id="contoh-lengkap" data-v-7f134cac>COntoh lengkap</h2><p data-v-7f134cac><a href="../code/latihan-html/index-LT-03.html" data-v-7f134cac>script lengkap</a></p>`,55)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},eg=ca(ng,[["__scopeId","data-v-7f134cac"]]),dg={__name:"lt-html5",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="mengenal-lebih-dalam-menggenai-css-box-model" data-v-ba1904ac>Mengenal lebih dalam menggenai CSS Box model</h1><p data-v-ba1904ac>&quot;CSS box model&quot; adalah set aturan yang berfungsi untuk mengatur bagaimana suatu element pada halaman website di tampilkan. CSS menganggap semua komponent yang ada pada document HTML adalah sebuah kotak (box) dengan beberapa &quot;properties&quot; yang akan menentukan lokasi penempatan.</p><p data-v-ba1904ac>Secara garis besar semuanya yang ada pada halaman website adalah urutan dimana &quot;element&quot; ditampilkan satu demi satu. Tetapi dengan fungsi &quot;box model&quot; kita dapat mengatur penempatan &quot;element&quot;.</p><p data-v-ba1904ac>Memahami Konsep &quot;CSS box model&quot; itu sangat penting untuk mempermudah pembelajaran kita nanti menggenai grid, flexbox, dll. </p><h2 id="mengenal-block-element-dan-inline-element" data-v-ba1904ac>Mengenal Block Element dan Inline element</h2><p data-v-ba1904ac>Setidaknnya terdapat dua pondasi layout yang akan dipilih untuk membangun halaman website.</p><p data-v-ba1904ac>Yang terdiri dari: </p><ul data-v-ba1904ac><li data-v-ba1904ac>Block</li><li data-v-ba1904ac>inline</li></ul><p data-v-ba1904ac>kedua tipe itu adalah standart layout yang sudah dipasang pada element HTML. Semisal element &quot;p&quot; memiliki layout &quot;Block&quot;.</p><p data-v-ba1904ac>Kebanyakan element HTML yang sudah kita pelajari sebelumnya merupakan tipe layout &quot;block&quot;. </p><p data-v-ba1904ac>Kita dapat mencari tau layout yang diapakai oleh &quot;element HTML&quot; dengan cara Mebuka fitur &quot;inspeksi&quot;&quot; dan ambil fitur &quot;computed&quot; </p><p data-v-ba1904ac><a href="../aset/contoh in-bl.png" data-v-ba1904ac>Contoh inline dan block</a></p><blockquote data-v-ba1904ac><p data-v-ba1904ac>Teman-teman bisa lihat code gambar diatas di sini <a href="./bl-in.html" data-v-ba1904ac>Klik-okay</a></p></blockquote><p data-v-ba1904ac>Seperti pada gambar yang berada di atas. Kita dapat melihat perbedaan dari prilaku mereka pada penempatan layout.</p><p data-v-ba1904ac>Perbedaan yang sangat terlihat:</p><ul data-v-ba1904ac><li data-v-ba1904ac>&quot;Block&quot; jika yang dipakai adalah element block, maka element selanjutnya akan mengambil posisi di bawah element tersebut.</li><li data-v-ba1904ac><p data-v-ba1904ac>&quot;Inline&quot; Jika yang dipakai adalah tipe element inline maka element selanjutnya bisa berada di samping element tersebut.</p></li><li data-v-ba1904ac><p data-v-ba1904ac>&quot;BLock&quot; Lebar dari element block adalah lebar keseluruhan dari container parent.</p></li><li data-v-ba1904ac>&quot;Inline&quot; Lebar dari element inline akan menyesuaikan secara otomatis dengan content yang dia bawa.</li></ul><h2 id="menggenal-div-dan-span" data-v-ba1904ac>Menggenal div dan span</h2><p data-v-ba1904ac>Selain menggunakan semantic yang sudah tersedia nama dan fungsinnya kita juga bisa menambahkan semantic dengan model kita sendiri, dengan cara menggunakan div atau span.</p><p data-v-ba1904ac>Semisal kita ingin membuat container yang berisi 2 semantic &quot;main&quot; dan &quot;aside&quot; kita bisa menggunakan &quot;div&quot; sebagai container.</p><blockquote data-v-ba1904ac><p data-v-ba1904ac>Contoh untuk kondisi diatas <a href="../code/latihan-html/index-LT-03.html" data-v-ba1904ac>klik-okay</a></p></blockquote><p data-v-ba1904ac>oleh karena itu kita perlu memahami fungsi dan gimana mereka bekerja.</p><p data-v-ba1904ac>&quot;div&quot; dan &quot;span&quot; mereka berdua adalah element HTML yang digunakan untuk mengatur layout dan design, tapi memiliki perbedaan cara penyelesaian.</p><ul data-v-ba1904ac><li data-v-ba1904ac><p data-v-ba1904ac>&quot;div&quot; adalah layout &quot;BLock&quot; yang bisa digunakan untuk mengelompokan banyak element menjadi satu. Perlu diketahui &quot;div&quot; akan berlaku seperti layout &quot;Block&quot; menggambil seluruh lebar dari parent.</p></li><li data-v-ba1904ac><p data-v-ba1904ac>&quot;span&quot; adalah layout &quot;inline&quot; yang bisa digunakan untuk menyatukan element tanpa merebut seluruh jarak lebar dari parent. &quot;span&quot; biasannya digunakan untuk mengatur bagian kecil tanpa harus menggangu element / content di sampingnnya.</p></li></ul><p data-v-ba1904ac>Kesimpulan, &quot;div&quot; akan dipakai jika ingin mengatur layout besar, sedangkan &quot;span&quot; akan digunakan untuk mengatur style pada bagian kecil.</p><h2 id="menggenal-content-padding-border-dan-margin" data-v-ba1904ac>Menggenal Content. Padding, Border, dan Margin</h2><p data-v-ba1904ac><a href="../aset/co-padding.png" data-v-ba1904ac>Contoh</a></p><p data-v-ba1904ac>pada pengaturan ukuran element terdapat setidaknya empat property dasar:content, padding, border, dan margin.</p><p data-v-ba1904ac>Property:</p><ul data-v-ba1904ac><li data-v-ba1904ac><p data-v-ba1904ac>Content adalah tulisan, gambar ataupun media yang barada didalam content.</p></li><li data-v-ba1904ac><p data-v-ba1904ac>padding adalah jarak dari content didalam element ke bagian border. <code data-v-ba1904ac>padding: 1px 1px 1px 1px;</code></p></li><li data-v-ba1904ac><p data-v-ba1904ac>Border adalah batas luar dari content. Kita dapat melihat border, dengan mendefinisikan border ke dalam element tersebut. <code data-v-ba1904ac>border: 1px solid red;</code></p></li><li data-v-ba1904ac><p data-v-ba1904ac>Sedangkan margin adalah jarak antara element satu dengan yang lainnya. <code data-v-ba1904ac>margin: 1px 1px 1px 1px;</code></p></li></ul><p data-v-ba1904ac>kita bisa mengatur jarak atas, bawah, kanan, dan kiri pada property padding dan margin.</p><p data-v-ba1904ac>Dibawah ini adalah format untuk value padding dan margin:</p><pre data-v-ba1904ac><code data-v-ba1904ac> padding: <span class="hljs-number" data-v-ba1904ac>40</span>px <span class="hljs-number" data-v-ba1904ac>20</span>px <span class="hljs-number" data-v-ba1904ac>20</span>px <span class="hljs-number" data-v-ba1904ac>40</span>px;
  // Format penempatan : padding-<span class="hljs-built_in" data-v-ba1904ac>top</span>, padding-<span class="hljs-built_in" data-v-ba1904ac>right</span>, padding-<span class="hljs-built_in" data-v-ba1904ac>bottom</span>, and padding-<span class="hljs-built_in" data-v-ba1904ac>left</span>
</code></pre>`,32)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},lg=ca(dg,[["__scopeId","data-v-ba1904ac"]]),ig={__name:"lt-html6",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="mengenal-grid-layout" data-v-f0a59b3e>Mengenal Grid layout</h1><p data-v-f0a59b3e>CSS Grid adalah layout sistem 2 dimensi yang digunakn untuk melakukan pengaturan design pada halaman website. CSS Grid memberikan kemampuan kepada developer untuk mebuat dan mengatur kolom. Dengan menggunakan CSS Grid kita bisa membuat suatu sistem komplex dengan mudah.</p><p data-v-f0a59b3e>CSS Grid juga diserta dengan fitur seperti gap dan span, Yang dapat mengatur jarak antara element.</p><p data-v-f0a59b3e>Sebelum kita mulai mempelajari mengenai penggunaan Grid, kita harus paham menggenai konsep dari &quot;Container&quot; dan &quot;Item&quot;.</p><ul data-v-f0a59b3e><li data-v-f0a59b3e><p data-v-f0a59b3e>Grid Conteiner:</p><p data-v-f0a59b3e> Untuk menggunakan fungsi layout Grid kita harus mendefinisikan Container terlebih dahulu. </p></li></ul><pre data-v-f0a59b3e><code data-v-f0a59b3e>&lt;main <span class="hljs-class" data-v-f0a59b3e><span class="hljs-keyword" data-v-f0a59b3e>class</span></span>=<span class="hljs-string" data-v-f0a59b3e>&quot;container&quot;</span>&gt;

<span class="xml" data-v-f0a59b3e><span class="hljs-comment" data-v-f0a59b3e>&lt;!-- Masukan item di area container --&gt;</span>

<span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>main</span>&gt;</span></span>
</code></pre><ul data-v-f0a59b3e><li data-v-f0a59b3e>Grid Item: Setelah mendefinisikan container. Buat dan masukan element item kedalam conteiner tersebut. Di bawah ini adalah contoh element yang akan kita masukan kedalam container.</li></ul><pre data-v-f0a59b3e><code data-v-f0a59b3e>        <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>div</span> <span class="hljs-attr" data-v-f0a59b3e>class</span>=<span class="hljs-string" data-v-f0a59b3e>&quot;item item-c&quot;</span>&gt;</span>
            <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>1<span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>div</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>div</span> <span class="hljs-attr" data-v-f0a59b3e>class</span>=<span class="hljs-string" data-v-f0a59b3e>&quot;item&quot;</span>&gt;</span>
            <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>2<span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>div</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>div</span> <span class="hljs-attr" data-v-f0a59b3e>class</span>=<span class="hljs-string" data-v-f0a59b3e>&quot;item&quot;</span>&gt;</span>
            <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>3<span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>div</span>&gt;</span>
</code></pre><ul data-v-f0a59b3e><li data-v-f0a59b3e><p data-v-f0a59b3e>Gunakan CSS Untuk mengaktifkan layout &quot;Grid&quot;</p><p data-v-f0a59b3e> Kita Bisa menggunakan eksternal atau internal CSS untuk melakukan modifikasi. Di contoh ini kita menggunakan Internal CSS.</p></li></ul><pre data-v-f0a59b3e><code data-v-f0a59b3e><span class="hljs-selector-class" data-v-f0a59b3e>.container</span> {
<span class="hljs-attribute" data-v-f0a59b3e>display</span>: grid; <span class="hljs-comment" data-v-f0a59b3e>/* Wajib ada */</span>

<span class="hljs-attribute" data-v-f0a59b3e>grid-template-columns</span>: auto auto auto; <span class="hljs-comment" data-v-f0a59b3e>/*Digunakan untuk mebuat kolom pada grid */</span>

<span class="hljs-attribute" data-v-f0a59b3e>gap</span>: <span class="hljs-number" data-v-f0a59b3e>10px</span>; <span class="hljs-comment" data-v-f0a59b3e>/* Digunak untuk mengatur jarak antara baris dan kolom pada grid */</span>

}

<span class="hljs-selector-class" data-v-f0a59b3e>.item</span> {
<span class="hljs-attribute" data-v-f0a59b3e>border</span>: <span class="hljs-number" data-v-f0a59b3e>1px</span> solid red;
}
</code></pre><ul data-v-f0a59b3e><li data-v-f0a59b3e>Jika ingin mengatur panjang dan lebar kolom (Perhatian)</li></ul><p data-v-f0a59b3e>Selain mengatur tata letak, grid juga digunakan untuk mengatur lebar style dari element.</p><pre data-v-f0a59b3e><code data-v-f0a59b3e><span class="hljs-selector-class" data-v-f0a59b3e>.item-c</span> {
            <span class="hljs-attribute" data-v-f0a59b3e>grid-column-start</span>:<span class="hljs-number" data-v-f0a59b3e>1</span> ;
            <span class="hljs-attribute" data-v-f0a59b3e>grid-column-end</span>: <span class="hljs-number" data-v-f0a59b3e>3</span>;
        }
</code></pre><h2 id="pengaturan-luas-dan-jarak-dengan-grid" data-v-f0a59b3e>Pengaturan luas dan jarak dengan grid</h2><p data-v-f0a59b3e><img src="#" alt="contoh aturan grid" data-v-f0a59b3e></p><p data-v-f0a59b3e>Didalam mengatur layout pada grid kita harus benar-benar memahami penempatan garis. Karena garis tersebut akan jadi nilai yang menjadi acuan sistem dalam mengatur layout.</p><p data-v-f0a59b3e>Sebagai contoh gambar diatas terdapat garis berwarna merah dan biru. Garis merah digunakan untuk melambangkan &quot;Baris / row&quot;, Sedangkan garis biru melambangkan &quot;Kolom / column&quot;.</p><p data-v-f0a59b3e>Kotak berwna &quot;grey&quot; tersebut adalah contoh element jika berada di dalam &quot;grida&quot;.</p><p data-v-f0a59b3e>Breakdown dari gambar di atas:</p><ul data-v-f0a59b3e><li data-v-f0a59b3e>Terdapat 3 kolom, dan 4 garis kolom (Garis warna Biru)</li><li data-v-f0a59b3e><p data-v-f0a59b3e>Terdapat 4 baris / row, dan 5 garis baris (row line) (Garis warna merah)</p></li><li data-v-f0a59b3e><p data-v-f0a59b3e>Kotak persegi panjang memanjang ke kanan. Adalah hasil dari code</p></li></ul><pre data-v-f0a59b3e><code data-v-f0a59b3e>grid-column-<span class="hljs-keyword" data-v-f0a59b3e>start</span>: <span class="hljs-number" data-v-f0a59b3e>2</span>;
grid-column-<span class="hljs-keyword" data-v-f0a59b3e>end</span>: <span class="hljs-number" data-v-f0a59b3e>4</span>;
</code></pre><pre data-v-f0a59b3e><code data-v-f0a59b3e>Yang <span class="hljs-keyword" data-v-f0a59b3e>berfungsi </span>untuk mengatur lebar dari element tersebut. <span class="hljs-keyword" data-v-f0a59b3e>Dimulai </span>dari garis kolom (Garis Warna <span class="hljs-keyword" data-v-f0a59b3e>Biru) </span>ke <span class="hljs-number" data-v-f0a59b3e>2</span> hingga ke garis kolom ke <span class="hljs-number" data-v-f0a59b3e>4</span>.
</code></pre><ul data-v-f0a59b3e><li data-v-f0a59b3e>Kotak yang memiliki tinggi pada bagian bawah kiri. Memiliki code</li></ul><pre data-v-f0a59b3e><code data-v-f0a59b3e><span class="hljs-built_in" data-v-f0a59b3e>grid</span>-<span class="hljs-built_in" data-v-f0a59b3e>row</span>-start: <span class="hljs-number" data-v-f0a59b3e>3</span>;
<span class="hljs-built_in" data-v-f0a59b3e>grid</span>-<span class="hljs-built_in" data-v-f0a59b3e>row</span>-end: <span class="hljs-number" data-v-f0a59b3e>5</span>;
</code></pre><p data-v-f0a59b3e>yang berfungsi untuk mengatur tingggi dari style element. Sebagai mana pada contoh tinggi element dimulai dari garis baris(row)(garis warna merah) ke 3 hingga row ke 5.</p><p data-v-f0a59b3e>Contoh grid Dengan pengaturan layout kolom dan baris.</p><p data-v-f0a59b3e><img src="#" alt="contoh" data-v-f0a59b3e></p><h2 id="contoh-instruksi" data-v-f0a59b3e>Contoh instruksi</h2><ol data-v-f0a59b3e><li data-v-f0a59b3e>Buat fondasi HTML </li></ol><pre data-v-f0a59b3e><code data-v-f0a59b3e><span class="hljs-meta" data-v-f0a59b3e>&lt;!DOCTYPE html&gt;</span>
<span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>html</span> <span class="hljs-attr" data-v-f0a59b3e>lang</span>=<span class="hljs-string" data-v-f0a59b3e>&quot;en&quot;</span>&gt;</span>
<span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>head</span>&gt;</span>
    <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>meta</span> <span class="hljs-attr" data-v-f0a59b3e>charset</span>=<span class="hljs-string" data-v-f0a59b3e>&quot;UTF-8&quot;</span>&gt;</span>
    <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>title</span>&gt;</span><span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>title</span>&gt;</span>

    <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>style</span>&gt;</span><span class="undefined" data-v-f0a59b3e>

    </span><span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>style</span>&gt;</span>
<span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>head</span>&gt;</span>
<span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>body</span>&gt;</span>

<span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>body</span>&gt;</span>
<span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>html</span>&gt;</span>
</code></pre><ol data-v-f0a59b3e><li data-v-f0a59b3e>Buat container untuk grid </li></ol><pre data-v-f0a59b3e><code data-v-f0a59b3e>&lt;main <span class="hljs-class" data-v-f0a59b3e><span class="hljs-keyword" data-v-f0a59b3e>class</span></span>=<span class="hljs-string" data-v-f0a59b3e>&quot;container&quot;</span>&gt;

<span class="xml" data-v-f0a59b3e><span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>main</span>&gt;</span></span>
</code></pre><ol data-v-f0a59b3e><li data-v-f0a59b3e>Masukan Item untuk diatur, Dan menyiapkan class untuk dilakukan pengaturan lebar dengan grid. </li></ol><pre data-v-f0a59b3e><code data-v-f0a59b3e><span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>div</span> <span class="hljs-attr" data-v-f0a59b3e>class</span>=<span class="hljs-string" data-v-f0a59b3e>&quot;item&quot;</span>&gt;</span>
            <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>Cell 1<span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>div</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>div</span> <span class="hljs-attr" data-v-f0a59b3e>class</span>=<span class="hljs-string" data-v-f0a59b3e>&quot;item&quot;</span>&gt;</span>
            <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>Cell 2<span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>div</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>div</span> <span class="hljs-attr" data-v-f0a59b3e>class</span>=<span class="hljs-string" data-v-f0a59b3e>&quot;item&quot;</span>&gt;</span>
            <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>Cell 3<span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>div</span>&gt;</span>


        <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>div</span> <span class="hljs-attr" data-v-f0a59b3e>class</span>=<span class="hljs-string" data-v-f0a59b3e>&quot;item item-c&quot;</span>&gt;</span>
            <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>1<span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>div</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>div</span> <span class="hljs-attr" data-v-f0a59b3e>class</span>=<span class="hljs-string" data-v-f0a59b3e>&quot;item&quot;</span>&gt;</span>
            <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>2<span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>div</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>div</span> <span class="hljs-attr" data-v-f0a59b3e>class</span>=<span class="hljs-string" data-v-f0a59b3e>&quot;item&quot;</span>&gt;</span>
            <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>3<span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>div</span>&gt;</span>

        <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>div</span> <span class="hljs-attr" data-v-f0a59b3e>class</span>=<span class="hljs-string" data-v-f0a59b3e>&quot;item&quot;</span>&gt;</span>
            <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>1<span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>div</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>div</span> <span class="hljs-attr" data-v-f0a59b3e>class</span>=<span class="hljs-string" data-v-f0a59b3e>&quot;item&quot;</span>&gt;</span>
            <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>2<span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>div</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>div</span> <span class="hljs-attr" data-v-f0a59b3e>class</span>=<span class="hljs-string" data-v-f0a59b3e>&quot;item&quot;</span>&gt;</span>
            <span class="hljs-tag" data-v-f0a59b3e>&lt;<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>3<span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>p</span>&gt;</span>
        <span class="hljs-tag" data-v-f0a59b3e>&lt;/<span class="hljs-name" data-v-f0a59b3e>div</span>&gt;</span>
</code></pre><ol data-v-f0a59b3e><li data-v-f0a59b3e>Pada Element &quot;style&quot; kita akan megaktifkan dan mengatur bagaimana grid berfungsi. </li></ol><pre data-v-f0a59b3e><code data-v-f0a59b3e><span class="hljs-selector-class" data-v-f0a59b3e>.container</span> {
            <span class="hljs-attribute" data-v-f0a59b3e>display</span>: grid;
            <span class="hljs-attribute" data-v-f0a59b3e>grid-template-columns</span>: auto auto auto;
            <span class="hljs-attribute" data-v-f0a59b3e>gap</span>: <span class="hljs-number" data-v-f0a59b3e>10px</span>;
            <span class="hljs-attribute" data-v-f0a59b3e>background-color</span>: lightgrey;
            <span class="hljs-attribute" data-v-f0a59b3e>color</span>: white;
            <span class="hljs-attribute" data-v-f0a59b3e>padding</span>: <span class="hljs-number" data-v-f0a59b3e>10px</span>;
        }
</code></pre><ol data-v-f0a59b3e><li data-v-f0a59b3e><p data-v-f0a59b3e>Mengatur tampilan item.</p><pre data-v-f0a59b3e><code data-v-f0a59b3e><span class="hljs-selector-class" data-v-f0a59b3e>.item</span> {
         <span class="hljs-attribute" data-v-f0a59b3e>border</span>: <span class="hljs-number" data-v-f0a59b3e>1px</span> solid white;
         <span class="hljs-attribute" data-v-f0a59b3e>background-color</span>: grey;
         <span class="hljs-attribute" data-v-f0a59b3e>text-align</span>: center;
     }
</code></pre></li><li data-v-f0a59b3e><p data-v-f0a59b3e>Mengatur lebar dan tinggi pada &quot;item-c&quot; dengan grid.</p><pre data-v-f0a59b3e><code data-v-f0a59b3e><span class="hljs-selector-class" data-v-f0a59b3e>.item-c</span> {
         <span class="hljs-attribute" data-v-f0a59b3e>grid-column-start</span>:<span class="hljs-number" data-v-f0a59b3e>1</span> ;
         <span class="hljs-attribute" data-v-f0a59b3e>grid-column-end</span>: <span class="hljs-number" data-v-f0a59b3e>3</span>;

         <span class="hljs-attribute" data-v-f0a59b3e>grid-row-start</span>: <span class="hljs-number" data-v-f0a59b3e>2</span>;
             <span class="hljs-attribute" data-v-f0a59b3e>grid-row-end</span>: <span class="hljs-number" data-v-f0a59b3e>4</span>;
     }
</code></pre></li></ol><ul data-v-f0a59b3e><li data-v-f0a59b3e>Contoh Full code: <a href="./test-grid.html" data-v-f0a59b3e>Masuk ke File HTML</a></li></ul><hr data-v-f0a59b3e><p data-v-f0a59b3e>Reference: </p><ul data-v-f0a59b3e><li data-v-f0a59b3e><a href="https://css-tricks.com/snippets/css/complete-guide-grid/" data-v-f0a59b3e>https://css-tricks.com/snippets/css/complete-guide-grid/</a></li><li data-v-f0a59b3e><a href="https://www.w3schools.com/css/css_grid.asp" data-v-f0a59b3e>https://www.w3schools.com/css/css_grid.asp</a></li></ul>`,41)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},cg=ca(ig,[["__scopeId","data-v-f0a59b3e"]]),pg={__name:"lt-html7",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="latihan-flexbox" data-v-3ab956a4>Latihan Flexbox</h1><p data-v-3ab956a4>Flexbox adalah &quot;layout System&quot; pada CSS yang dapat membantu untuk membuat flexibel dan responsive &quot;layout&quot; dengan mudah. Flexbox sudah diperkenalkansejak CSS3 dan menjadi &quot;layout System&quot; yang populer untuk membuat website dinamis. </p><p data-v-3ab956a4>Flexbox bekerja dengan cara Menyelaraskan dan mendistribusikan jarak diantara item didalam container. Container didefinisikan dengan property <code data-v-3ab956a4>display: flex</code> , dan &quot;child item&quot; yang berada didalam container. Flex item bisa kita atur bisa kita atur dengan berbagai macam properti yang telah ada pada flexbox. </p><p data-v-3ab956a4>Konsep utama dari flexbox adalah kemampuan untuk mempermudah pekerjaan dalam mengatur &quot;width&quot; dan &quot;height&quot; pada item didalam container. Dengan ini kita bisa mengatur item berdasarkan tersediannya jarak didalam container. Sebagai tambahan kita juga bisa mengatur penempatan dan distribusi properti untuk mengatur jarak item didalam container. </p><p data-v-3ab956a4>Properti yang terkenal pada flexbox yang paling sering digunakan :</p><ul data-v-3ab956a4><li data-v-3ab956a4><code data-v-3ab956a4>Justify-content</code> digunakan untuk mengatur element pada garis / sumbu x (main-axis / horizontal).</li></ul><p data-v-3ab956a4>src: <a href="https://www.w3schools.com/cssref/css3_pr_justify-content.php" data-v-3ab956a4>https://www.w3schools.com/cssref/css3_pr_justify-content.php</a></p><ul data-v-3ab956a4><li data-v-3ab956a4><code data-v-3ab956a4>align-items</code> digunakan untuk mengatur element pada garis / sumbu y (cross-axis / vertical).</li></ul><p data-v-3ab956a4>flexbox juga menyediakan properti untuk megatur urutan dari item, mengautr jarak antara item, mengatur ukuran dari individual item pada container. </p><p data-v-3ab956a4>Salah satu kelebihan dari flexbox adalah kemampuan untuk membuat dan mengatur layout html dengan sangat mudah. Dengan flexbox kita bisa menyiapkan berbagai macam skema layout untuk berbagai macam device. Klebihan ini adalah salah satu alasan besar kenapa flexbox sangat digemari. </p><h2 id="persyaratan" data-v-3ab956a4>Persyaratan</h2><h2 id="instruksi" data-v-3ab956a4>Instruksi</h2><ol data-v-3ab956a4><li data-v-3ab956a4>Buat fondasi dari halaman website.</li></ol><pre data-v-3ab956a4><code data-v-3ab956a4><span class="hljs-meta" data-v-3ab956a4>&lt;!DOCTYPE html&gt;</span>
<span class="hljs-tag" data-v-3ab956a4>&lt;<span class="hljs-name" data-v-3ab956a4>html</span> <span class="hljs-attr" data-v-3ab956a4>lang</span>=<span class="hljs-string" data-v-3ab956a4>&quot;en&quot;</span>&gt;</span>
<span class="hljs-tag" data-v-3ab956a4>&lt;<span class="hljs-name" data-v-3ab956a4>head</span>&gt;</span>
    <span class="hljs-tag" data-v-3ab956a4>&lt;<span class="hljs-name" data-v-3ab956a4>meta</span> <span class="hljs-attr" data-v-3ab956a4>charset</span>=<span class="hljs-string" data-v-3ab956a4>&quot;UTF-8&quot;</span>&gt;</span>
    <span class="hljs-tag" data-v-3ab956a4>&lt;<span class="hljs-name" data-v-3ab956a4>title</span>&gt;</span><span class="hljs-tag" data-v-3ab956a4>&lt;/<span class="hljs-name" data-v-3ab956a4>title</span>&gt;</span>

    <span class="hljs-tag" data-v-3ab956a4>&lt;<span class="hljs-name" data-v-3ab956a4>style</span>&gt;</span><span class="undefined" data-v-3ab956a4>

    </span><span class="hljs-tag" data-v-3ab956a4>&lt;/<span class="hljs-name" data-v-3ab956a4>style</span>&gt;</span>
<span class="hljs-tag" data-v-3ab956a4>&lt;/<span class="hljs-name" data-v-3ab956a4>head</span>&gt;</span>
<span class="hljs-tag" data-v-3ab956a4>&lt;<span class="hljs-name" data-v-3ab956a4>body</span>&gt;</span>

<span class="hljs-tag" data-v-3ab956a4>&lt;/<span class="hljs-name" data-v-3ab956a4>body</span>&gt;</span>
<span class="hljs-tag" data-v-3ab956a4>&lt;/<span class="hljs-name" data-v-3ab956a4>html</span>&gt;</span>
</code></pre><ol data-v-3ab956a4><li data-v-3ab956a4>Buat element container untuk flexbox nanti.</li></ol><pre data-v-3ab956a4><code data-v-3ab956a4>&lt;div <span class="hljs-class" data-v-3ab956a4><span class="hljs-keyword" data-v-3ab956a4>class</span></span>=<span class="hljs-string" data-v-3ab956a4>&quot;menu-container&quot;</span>&gt;

<span class="xml" data-v-3ab956a4><span class="hljs-tag" data-v-3ab956a4>&lt;/<span class="hljs-name" data-v-3ab956a4>div</span>&gt;</span></span>
</code></pre><ol data-v-3ab956a4><li data-v-3ab956a4>Buat element container ke dua untuk flexbox. </li></ol><pre data-v-3ab956a4><code data-v-3ab956a4>&lt;div <span class="hljs-class" data-v-3ab956a4><span class="hljs-keyword" data-v-3ab956a4>class</span></span>=<span class="hljs-string" data-v-3ab956a4>&quot;menu&quot;</span>&gt;


<span class="xml" data-v-3ab956a4><span class="hljs-tag" data-v-3ab956a4>&lt;/<span class="hljs-name" data-v-3ab956a4>div</span>&gt;</span></span>
</code></pre><ol data-v-3ab956a4><li data-v-3ab956a4>Buat element child dan salash satu sibling adalah container </li></ol><pre data-v-3ab956a4><code data-v-3ab956a4><span class="hljs-tag" data-v-3ab956a4>&lt;<span class="hljs-name" data-v-3ab956a4>div</span> <span class="hljs-attr" data-v-3ab956a4>class</span>=<span class="hljs-string" data-v-3ab956a4>&#39;date&#39;</span>&gt;</span>Aug 14, 2016<span class="hljs-tag" data-v-3ab956a4>&lt;/<span class="hljs-name" data-v-3ab956a4>div</span>&gt;</span>
            <span class="hljs-comment" data-v-3ab956a4>&lt;!-- 02 item --&gt;</span>
            <span class="hljs-tag" data-v-3ab956a4>&lt;<span class="hljs-name" data-v-3ab956a4>div</span> <span class="hljs-attr" data-v-3ab956a4>class</span>=<span class="hljs-string" data-v-3ab956a4>&#39;links&#39;</span>&gt;</span>
                <span class="hljs-comment" data-v-3ab956a4>&lt;!-- 03 container &amp; 02 item --&gt;</span>
                <span class="hljs-tag" data-v-3ab956a4>&lt;<span class="hljs-name" data-v-3ab956a4>div</span> <span class="hljs-attr" data-v-3ab956a4>class</span>=<span class="hljs-string" data-v-3ab956a4>&#39;signup&#39;</span>&gt;</span>Sign Up<span class="hljs-tag" data-v-3ab956a4>&lt;/<span class="hljs-name" data-v-3ab956a4>div</span>&gt;</span>
                <span class="hljs-comment" data-v-3ab956a4>&lt;!-- item 03 --&gt;</span>
                <span class="hljs-tag" data-v-3ab956a4>&lt;<span class="hljs-name" data-v-3ab956a4>div</span> <span class="hljs-attr" data-v-3ab956a4>class</span>=<span class="hljs-string" data-v-3ab956a4>&#39;login&#39;</span>&gt;</span>Login<span class="hljs-tag" data-v-3ab956a4>&lt;/<span class="hljs-name" data-v-3ab956a4>div</span>&gt;</span>
                <span class="hljs-comment" data-v-3ab956a4>&lt;!-- item 03 --&gt;</span>
<span class="hljs-tag" data-v-3ab956a4>&lt;/<span class="hljs-name" data-v-3ab956a4>div</span>&gt;</span>
</code></pre><p data-v-3ab956a4><strong data-v-3ab956a4>CSS Phase</strong></p><ol data-v-3ab956a4><li data-v-3ab956a4>Pastikan element body dan element lainnya memiliki standart format tanpa padding, dan margin.</li></ol><pre data-v-3ab956a4><code data-v-3ab956a4>* {
  <span class="hljs-attribute" data-v-3ab956a4>margin</span>: <span class="hljs-number" data-v-3ab956a4>0</span>;
  <span class="hljs-attribute" data-v-3ab956a4>padding</span>: <span class="hljs-number" data-v-3ab956a4>0</span>;
  <span class="hljs-attribute" data-v-3ab956a4>box-sizing</span>: border-box;
}
</code></pre><p data-v-3ab956a4><strong data-v-3ab956a4>Breakdown</strong> box-sizing - digunakan untuk memastikan agar lebar dan tinggi element sesuai dengan permintaan. </p><ol data-v-3ab956a4><li data-v-3ab956a4>mengatur &quot;main-container&quot;. Mengaktifkan flexbox dan mengatur tampilan</li></ol><pre data-v-3ab956a4><code data-v-3ab956a4><span class="hljs-selector-class" data-v-3ab956a4>.menu-container</span> {
            <span class="hljs-attribute" data-v-3ab956a4>display</span>: flex;
            <span class="hljs-attribute" data-v-3ab956a4>justify-content</span>: center;
            <span class="hljs-attribute" data-v-3ab956a4>color</span>: <span class="hljs-number" data-v-3ab956a4>#fff</span>;
            <span class="hljs-attribute" data-v-3ab956a4>background-color</span>: <span class="hljs-number" data-v-3ab956a4>#5995DA</span>;
            <span class="hljs-comment" data-v-3ab956a4>/* Blue */</span>
            <span class="hljs-attribute" data-v-3ab956a4>padding</span>: <span class="hljs-number" data-v-3ab956a4>20px</span> <span class="hljs-number" data-v-3ab956a4>0</span>;
        }
</code></pre><p data-v-3ab956a4><strong data-v-3ab956a4>Breakdown</strong></p><ul data-v-3ab956a4><li data-v-3ab956a4>display flex - digunakan untuk mengaktifkan flexbox pada container. </li><li data-v-3ab956a4><p data-v-3ab956a4>justify-content center - disini digunakan untuk mengatur letak item yang berada didalam container. </p></li><li data-v-3ab956a4><p data-v-3ab956a4>Mengatur flexbox dan tampilan pada container &quot;menu&quot;</p></li></ul><pre data-v-3ab956a4><code data-v-3ab956a4><span class="hljs-selector-class" data-v-3ab956a4>.menu</span> {
            <span class="hljs-attribute" data-v-3ab956a4>border</span>: <span class="hljs-number" data-v-3ab956a4>1px</span> solid <span class="hljs-number" data-v-3ab956a4>#fff</span>;
            <span class="hljs-comment" data-v-3ab956a4>/* For debugging */</span>
            <span class="hljs-attribute" data-v-3ab956a4>width</span>: <span class="hljs-number" data-v-3ab956a4>900px</span>;
            <span class="hljs-comment" data-v-3ab956a4>/* height: 50px; */</span>
            <span class="hljs-attribute" data-v-3ab956a4>display</span>: flex;
            <span class="hljs-attribute" data-v-3ab956a4>justify-content</span>: space-between;
            <span class="hljs-comment" data-v-3ab956a4>/* Space-between akan memberikan jarak antar element, tidak termasuk border */</span>
            <span class="hljs-comment" data-v-3ab956a4>/* space-around akan memberikan jarak antar element dan border  */</span>
            <span class="hljs-comment" data-v-3ab956a4>/* align-items: center; */</span>
        }
</code></pre><ul data-v-3ab956a4><li data-v-3ab956a4>Space-between akan memberikan jarak antar element, tidak termasuk border.</li><li data-v-3ab956a4><p data-v-3ab956a4>space-around akan memberikan jarak antar element dan border</p></li><li data-v-3ab956a4><p data-v-3ab956a4>pada element link diubah menjadi display flex. Dengan begitu item didalamnnya akan berubah menjadi display &quot;inline&quot;.</p></li></ul><pre data-v-3ab956a4><code data-v-3ab956a4><span class="hljs-selector-class" data-v-3ab956a4>.links</span> {
            <span class="hljs-attribute" data-v-3ab956a4>display</span>: flex;
            <span class="hljs-comment" data-v-3ab956a4>/* border: 1px solid red; */</span>
        }
</code></pre><ol data-v-3ab956a4><li data-v-3ab956a4>mengatur jarak pada element &quot;login&quot;<pre data-v-3ab956a4><code data-v-3ab956a4><span class="hljs-selector-class" data-v-3ab956a4>.login</span> {
         <span class="hljs-attribute" data-v-3ab956a4>margin-left</span>: <span class="hljs-number" data-v-3ab956a4>20px</span>;
     }
</code></pre></li></ol><h3 id="command-wrap-up" data-v-3ab956a4>Command Wrap Up</h3><ul data-v-3ab956a4><li data-v-3ab956a4><code data-v-3ab956a4>display: flex;</code> // wajib untuk container</li><li data-v-3ab956a4><code data-v-3ab956a4>justify-content: [ flex-start, center, flex-end, space-around, space-between ];</code> // mengatur koordinate dari element didalam container ( horizontal ).</li><li data-v-3ab956a4><code data-v-3ab956a4>align-items: [ flex-start, center, flex-end, stretch ];</code> // Sama seperti justify content, tetapi digunakan untuk mengatur secara vertikal.</li><li data-v-3ab956a4><code data-v-3ab956a4>flex-wrap: wrap;</code> // digunakan untuk memastikan element pada container tidak keluar dari batas. dengan kata lain bisa merapikan element otomatis.</li><li data-v-3ab956a4><code data-v-3ab956a4>gap: 10px 20px; /* row-gap | column gap */</code> // digunakan untuk memberikan jarak antara element, tidak termasuk border. </li><li data-v-3ab956a4><code data-v-3ab956a4>flex-direction: [ column, row, row-reverse, column-reverse ];</code> // default yang dipakai adalah horizontal. dengan property ini kita bisa mengubah menjadi row ( vertikal )</li><li data-v-3ab956a4><code data-v-3ab956a4>flex: 1;</code> // digunakan untuk mengatur lebar dari element. &lt; <strong data-v-3ab956a4>Yang bisa pakai: child element!</strong> &gt;</li><li data-v-3ab956a4><code data-v-3ab956a4>align-self: [ auto | flex-start | flex-end | center | baseline | stretch ];</code> // Untuk mengatur penempatan pada element spesifik. &lt; <strong data-v-3ab956a4>Yang bisa pakai: child element!</strong> &gt;</li></ul><h2 id="contoh-source-code" data-v-3ab956a4>Contoh Source code</h2><p data-v-3ab956a4><a href="../code/flexbox-test/index.html" data-v-3ab956a4>Click Source Code</a></p><h2 id="reference" data-v-3ab956a4>Reference</h2><ul data-v-3ab956a4><li data-v-3ab956a4><a href="https://internetingishard.netlify.app/html-and-css/flexbox/" data-v-3ab956a4>https://internetingishard.netlify.app/html-and-css/flexbox/</a></li><li data-v-3ab956a4><a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/" data-v-3ab956a4>https://css-tricks.com/snippets/css/a-guide-to-flexbox/</a></li></ul>`,38)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},rg=ca(pg,[["__scopeId","data-v-3ab956a4"]]),og={__name:"lt-html8",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z('<h1 id="css-position" data-v-bf1ed0e3>CSS Position</h1><p data-v-bf1ed0e3>terdapat 5 tipe penempatan:</p><ul data-v-bf1ed0e3><li data-v-bf1ed0e3>static</li><li data-v-bf1ed0e3>relative</li><li data-v-bf1ed0e3>fixed</li><li data-v-bf1ed0e3>absolute</li><li data-v-bf1ed0e3>sticky</li></ul><p data-v-bf1ed0e3>Setiap penempatan memiliki fitur yang berbeda, tetapi memiliki cara configurasi properti css yang hampir sama.</p><p data-v-bf1ed0e3>Dengan fitur css position kita bisa mengatur dimana element tersbut diletakan dengan spesifik. Kita juga bisa menggatur agar element tersebut tidak hilang kalau kita scroll ke bawah.</p><p data-v-bf1ed0e3>Secara default tipe position yang akan dipakai adalah static. </p><h2 id="relative-absolute" data-v-bf1ed0e3>Relative &amp; Absolute</h2><p data-v-bf1ed0e3>Relative property bisa kita gunakan untuk mengatur penempatan element sesuai dengan koordinat yang kita inginkan. Relative position tidak akan menghilangkan element tersbut dari flow website. Secara simple, tempat tinggal relative element masih ada, dan tidak akan dipakai oleh element lainnya. </p><p data-v-bf1ed0e3>Sedangkan Property absolute akan kehilangan tempat dia tinggal dan tempat tinggal dari absolute element akan dipakai oleh element lainnya. Fungsi absolute hampir sama dengan relative. Perbedaan ada di mana acuan koordinasi mereka. </p><p data-v-bf1ed0e3>Relativ position akan menggunakan container sebagai acuan awal untuk koordinasi tempat. </p><p data-v-bf1ed0e3>Absolute position akan menggunakan element body sebagai acuan awal.</p><p data-v-bf1ed0e3>seperti pada contoh.</p><p data-v-bf1ed0e3><a href="../code/latihan-html/index-lt-position.html" data-v-bf1ed0e3>contoh code</a></p><h2 id="sticky-dan-fixed" data-v-bf1ed0e3>Sticky dan fixed</h2><p data-v-bf1ed0e3>sticky dan fixed bisa kita gunakan untuk mengatur agar element tersebut tidak hilang jika kita scroll kebawah ataupun ke atas.</p><p data-v-bf1ed0e3>Meskipun memiliki tujuan fungsi yang sama, tetapi mereka memiliki cara kerja yang berbeda. </p><p data-v-bf1ed0e3>Fixed, memiliki chiri khas seperti &quot;absolute&quot;. karena jika kita pakai ini maka element akan kehilangan tempat tinggalnya, dan akan diisi oleh element lainnya. Pengaturan top, bottom, left, right dari fixed sama seperti absolute yang menggunakan element body sebagai acuan. </p><p data-v-bf1ed0e3>Sticky, bisa dikatakan gabungan dari fixed dan relative. Awal pergerakan sticky akan menggunakan chiri khas dari relative. Setelah mencapai titik tertentu akan berubah menjadi fixed. </p><h2 id="referensi-" data-v-bf1ed0e3>Referensi:</h2><p data-v-bf1ed0e3><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/position#try_it" data-v-bf1ed0e3>https://developer.mozilla.org/en-US/docs/Web/CSS/position#try_it</a></p>',20)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},ug=ca(og,[["__scopeId","data-v-bf1ed0e3"]]),hg={__name:"python",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="latihan-python" data-v-277e8b80>Latihan Python</h1><p data-v-277e8b80>Ikuti panduan contoh dibawah ini!</p><h2 id="contoh-pengerjaan-latihan" data-v-277e8b80>Contoh pengerjaan latihan</h2><p data-v-277e8b80>Hitung luas segitiga, dengan data berikut ini</p><p data-v-277e8b80>Input:</p><pre data-v-277e8b80><code class="lang-r" data-v-277e8b80><span class="hljs-attr" data-v-277e8b80>alas</span> = <span class="hljs-number" data-v-277e8b80>20</span> cm
<span class="hljs-attr" data-v-277e8b80>tinggi</span> = <span class="hljs-number" data-v-277e8b80>30</span> cm 
<span class="hljs-attr" data-v-277e8b80>Luas</span> = ...?
</code></pre><p data-v-277e8b80>Tahapan pengerjaan:</p><ul data-v-277e8b80><li data-v-277e8b80>Gunakan bahasa program python untuk menyelesaikan tugas tersebut</li><li data-v-277e8b80>Buat algoritma dengan mengunakan bahasa python</li><li data-v-277e8b80>Pastikan output yang dikeluarkan dari terminal sesuai dengan apa yang ada dibawah ini!</li></ul><p data-v-277e8b80>Output:</p><pre data-v-277e8b80><code class="lang-r" data-v-277e8b80>Luas Segitiga adalah : 300
</code></pre><h2 id="latihan-ke-1" data-v-277e8b80>Latihan ke 1</h2><p data-v-277e8b80>Tujuan: Melatih kemampuan membuat algoritma</p><p data-v-277e8b80>Tugas:</p><ul data-v-277e8b80><li data-v-277e8b80>Buatkan Program python</li><li data-v-277e8b80>Yang dimaana bisa menerima input terminal tahun dan bulan dalam bentuk integer</li><li data-v-277e8b80>Membuat algoritma melakukan pengecheckan tahun kabisat</li><li data-v-277e8b80>Jika input terminal adalah bulan ke 2, maka muculkan <code data-v-277e8b80>Jumlah hari : 29</code></li><li data-v-277e8b80>Jika bulan adalaah 4,6,9, atau 11, maka tampilkan <code data-v-277e8b80>Jumlah hari = 30</code></li><li data-v-277e8b80>selain itu <code data-v-277e8b80>Jumlah hari = 31</code></li></ul><p data-v-277e8b80>Contoh input:</p><pre data-v-277e8b80><code class="lang-r" data-v-277e8b80><span class="hljs-symbol" data-v-277e8b80>2024 </span># <span class="hljs-keyword" data-v-277e8b80>input</span> tahun
<span class="hljs-symbol" data-v-277e8b80>2 </span># <span class="hljs-keyword" data-v-277e8b80>input</span> bulan
</code></pre><p data-v-277e8b80>Output:</p><pre data-v-277e8b80><code data-v-277e8b80><span class="hljs-number" data-v-277e8b80>2024</span> adalah tahun kabisat
Jumlah hari : 29
</code></pre><h2 id="latihan-ke-2" data-v-277e8b80>Latihan ke 2</h2><p data-v-277e8b80>Tujuan: Latihan mengunakan loop</p><p data-v-277e8b80>Tugas: </p><ul data-v-277e8b80><li data-v-277e8b80>Tampilkan bilangan genap dari 1-200, tampilkan jawaban melalui terminal</li></ul><h2 id="latihan-ke-3" data-v-277e8b80>Latihan ke 3</h2><p data-v-277e8b80>Tujuan: modifakasi data array </p><p data-v-277e8b80>Tugas: </p><ul data-v-277e8b80><li data-v-277e8b80>Cari angka terbesar dari list [11,35,8,3,95,45,2,78], tampilkan jawaban melalui terminal</li><li data-v-277e8b80>hapus nilai duplikat dari list berikut ini <code data-v-277e8b80>[2,5,2,8,5,9,8]</code></li></ul><h2 id="latihan-ke-4" data-v-277e8b80>Latihan ke 4</h2><p data-v-277e8b80>Tujuan: Memahami array method </p><p data-v-277e8b80>Tugas:</p><ul data-v-277e8b80><li data-v-277e8b80>Gunakan method <code data-v-277e8b80>filter()</code> untuk mengambil nilai genap saja dari list <code data-v-277e8b80>[12,5,8,17,22]</code></li><li data-v-277e8b80>Gunakan method <code data-v-277e8b80>map()</code> untuk mengubah list string angka <code data-v-277e8b80>[&quot;1&quot;,&quot;2&quot;,&quot;3&quot;]</code></li></ul>`,30)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},vg=ca(hg,[["__scopeId","data-v-277e8b80"]]),mg={__name:"r",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="latihan-r" data-v-f48fa33c>Latihan R</h1><p data-v-f48fa33c>Adalah latihan bahasa R</p><h2 id="contoh-pengerjaan-latihan" data-v-f48fa33c>Contoh pengerjaan latihan</h2><p data-v-f48fa33c>Hitung luas Lingkaran, dengan data berikut ini</p><p data-v-f48fa33c>Hitung luas lingkaran dengan radius = 7</p><p data-v-f48fa33c>Input: </p><pre data-v-f48fa33c><code class="lang-r" data-v-f48fa33c><span class="hljs-number" data-v-f48fa33c>7</span>
</code></pre><p data-v-f48fa33c>Contoh code:</p><pre data-v-f48fa33c><code class="lang-r" data-v-f48fa33c># Jawaban
radius &lt;- <span class="hljs-number" data-v-f48fa33c>7</span>
luas &lt;- pi * radius^<span class="hljs-number" data-v-f48fa33c>2</span>
print(paste(<span class="hljs-string" data-v-f48fa33c>&quot;Luas lingkaran:&quot;</span>, luas))
</code></pre><p data-v-f48fa33c>output:</p><pre data-v-f48fa33c><code class="lang-r" data-v-f48fa33c><span class="hljs-string" data-v-f48fa33c>&quot;Luas lingkaran: 153.9380400259&quot;</span>
</code></pre><p data-v-f48fa33c>Tahapan pengerjaan:</p><ul data-v-f48fa33c><li data-v-f48fa33c>Gunakan bahasa program R untuk menyelesaikan tugas tersebut</li><li data-v-f48fa33c>Buat algoritma dengan mengunakan bahasa R</li><li data-v-f48fa33c>Pastikan output yang dikeluarkan dari terminal sesuai dengan apa yang ada dibawah ini!</li></ul><h2 id="latihan-1" data-v-f48fa33c>Latihan 1</h2><p data-v-f48fa33c>Melakukan perhitungan suhu Celsius ke fahrenheit.</p><p data-v-f48fa33c>Tugas:</p><ul data-v-f48fa33c><li data-v-f48fa33c>Buat variabel bebas dengan nilai <code data-v-f48fa33c>25</code> sebagai nilai Celsius</li><li data-v-f48fa33c>Ubah nilai Celsius menjadi fahrenheit</li></ul><p data-v-f48fa33c>contoh input:</p><pre data-v-f48fa33c><code class="lang-r" data-v-f48fa33c><span class="hljs-number" data-v-f48fa33c>25</span>
</code></pre><p data-v-f48fa33c>contoh output:</p><pre data-v-f48fa33c><code class="lang-r" data-v-f48fa33c><span class="hljs-number" data-v-f48fa33c>77</span>
</code></pre><h2 id="latihan-2" data-v-f48fa33c>Latihan 2</h2><p data-v-f48fa33c>Mengunakan if statement </p><p data-v-f48fa33c>Tugas:</p><ul data-v-f48fa33c><li data-v-f48fa33c>Cek apakah nilai <code data-v-f48fa33c>1234</code> merupakan genap/ganjil</li></ul><p data-v-f48fa33c>Input:</p><pre data-v-f48fa33c><code class="lang-r" data-v-f48fa33c><span class="hljs-number" data-v-f48fa33c>1234</span>
</code></pre><p data-v-f48fa33c>Output:</p><pre data-v-f48fa33c><code class="lang-r" data-v-f48fa33c><span class="hljs-string" data-v-f48fa33c>&quot;Genap&quot;</span>
</code></pre><h2 id="latihan-3" data-v-f48fa33c>Latihan 3</h2><p data-v-f48fa33c>Tugas:</p><ul data-v-f48fa33c><li data-v-f48fa33c>Cetak nilai 1-100 mengunakan fungsi <code data-v-f48fa33c>for</code> loop</li></ul><p data-v-f48fa33c>Input:</p><pre data-v-f48fa33c><code data-v-f48fa33c>
</code></pre><p data-v-f48fa33c>Output:</p><pre data-v-f48fa33c><code class="lang-r" data-v-f48fa33c><span class="hljs-number" data-v-f48fa33c>1</span>
<span class="hljs-number" data-v-f48fa33c>2</span>
<span class="hljs-number" data-v-f48fa33c>3</span>
<span class="hljs-number" data-v-f48fa33c>4</span>
...
</code></pre><h2 id="latihan-4" data-v-f48fa33c>Latihan 4</h2><p data-v-f48fa33c>Tugas:</p><ul data-v-f48fa33c><li data-v-f48fa33c>Buat variabel untuk array dengan data dibawah ini</li><li data-v-f48fa33c><code data-v-f48fa33c>c(12, 45, 23, 88, 5)</code></li><li data-v-f48fa33c>Tampilkan data dengan nilai yang tertinggi</li></ul><p data-v-f48fa33c>input:</p><pre data-v-f48fa33c><code class="lang-r" data-v-f48fa33c>c(<span class="hljs-number" data-v-f48fa33c>12</span>, <span class="hljs-number" data-v-f48fa33c>45</span>, <span class="hljs-number" data-v-f48fa33c>23</span>, <span class="hljs-number" data-v-f48fa33c>88</span>, <span class="hljs-number" data-v-f48fa33c>5</span>)
</code></pre><p data-v-f48fa33c>output:</p><pre data-v-f48fa33c><code class="lang-r" data-v-f48fa33c><span class="hljs-number" data-v-f48fa33c>88</span>
</code></pre><h2 id="latihan-5" data-v-f48fa33c>Latihan 5</h2><p data-v-f48fa33c>Latihan array method</p><p data-v-f48fa33c>Tugas:</p><ul data-v-f48fa33c><li data-v-f48fa33c>Buat variabel untuk array dengan data dibawah ini</li><li data-v-f48fa33c><code data-v-f48fa33c>c(45, 65, 30, 80, 55)</code></li><li data-v-f48fa33c>Tampilkan nilai diatas 50 dengan method <code data-v-f48fa33c>subnet</code></li></ul><p data-v-f48fa33c>input:</p><pre data-v-f48fa33c><code class="lang-r" data-v-f48fa33c>c(<span class="hljs-number" data-v-f48fa33c>45</span>, <span class="hljs-number" data-v-f48fa33c>65</span>, <span class="hljs-number" data-v-f48fa33c>30</span>, <span class="hljs-number" data-v-f48fa33c>80</span>, <span class="hljs-number" data-v-f48fa33c>55</span>)
</code></pre><p data-v-f48fa33c>output:</p><pre data-v-f48fa33c><code class="lang-r" data-v-f48fa33c><span class="hljs-symbol" data-v-f48fa33c>65 </span><span class="hljs-number" data-v-f48fa33c>80</span> <span class="hljs-number" data-v-f48fa33c>55</span>
</code></pre>`,51)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},bg=ca(mg,[["__scopeId","data-v-f48fa33c"]]),fg={__name:"ruby",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="latihan-ruby" data-v-becd211e>Latihan ruby</h1><h2 id="contoh-latihan" data-v-becd211e>Contoh latihan</h2><p data-v-becd211e>Tugas: buat program Ruby dengan fungsi Konversi menit ke detik, data harus berasal dari input terminal</p><p data-v-becd211e>Contoh input:</p><pre data-v-becd211e><code class="lang-r" data-v-becd211e><span class="hljs-number" data-v-becd211e>1</span>
<span class="hljs-number" data-v-becd211e>2</span>
</code></pre><p data-v-becd211e>contoh output:</p><pre data-v-becd211e><code class="lang-r" data-v-becd211e><span class="hljs-number" data-v-becd211e>60</span>
<span class="hljs-number" data-v-becd211e>120</span>
</code></pre><p data-v-becd211e>Cara pengerjaan:</p><ul data-v-becd211e><li data-v-becd211e>Buat algoritma pemecahan masalah</li><li data-v-becd211e>coba masukan integer sesuai dengan contoh input</li><li data-v-becd211e>pastikan nilai jika nilai input dan output sama dengan contoh</li></ul><p data-v-becd211e>contoh code</p><pre data-v-becd211e><code class="lang-ruby" data-v-becd211e><span class="hljs-built_in" data-v-becd211e>print</span> <span class="hljs-string" data-v-becd211e>&quot;Masukkan menit: &quot;</span>
menit = gets.chomp.to_i  <span class="hljs-comment" data-v-becd211e># Konversi ke integer</span>

<span class="hljs-built_in" data-v-becd211e>print</span> menit * 60
</code></pre><h2 id="latihan-1" data-v-becd211e>Latihan 1</h2><p data-v-becd211e>adalah latihan untuk kemampuan dasar algoritma</p><p data-v-becd211e>Tugas: </p><ul data-v-becd211e><li data-v-becd211e>Konversi jam ke detik</li><li data-v-becd211e>data harus data harus berasal dari input terminal</li></ul><p data-v-becd211e>contoh input:</p><pre data-v-becd211e><code class="lang-ruby" data-v-becd211e><span class="hljs-number" data-v-becd211e>1</span>
<span class="hljs-number" data-v-becd211e>2</span>
</code></pre><p data-v-becd211e>contoh output:</p><pre data-v-becd211e><code class="lang-ruby" data-v-becd211e><span class="hljs-number" data-v-becd211e>3600</span>
<span class="hljs-number" data-v-becd211e>7200</span>
</code></pre><h2 id="latihan-2" data-v-becd211e>Latihan 2</h2><p data-v-becd211e>Adalah latihan melakukan analisa data sederhana</p><p data-v-becd211e>Tugas:</p><ul data-v-becd211e><li data-v-becd211e>Buat variabel untuk menyimpan array <code data-v-becd211e>[1,3,4,6,3,6,1,2]</code></li><li data-v-becd211e>Buat algoritma yang dimana berfungsi untuk menentukan setiap angka itu adalah genap atau ganjil</li></ul><p data-v-becd211e>contoh input:</p><pre data-v-becd211e><code class="lang-r" data-v-becd211e>[<span class="hljs-number" data-v-becd211e>1</span>,<span class="hljs-number" data-v-becd211e>3</span>,<span class="hljs-number" data-v-becd211e>4</span>,<span class="hljs-number" data-v-becd211e>6</span>,<span class="hljs-number" data-v-becd211e>3</span>,<span class="hljs-number" data-v-becd211e>6</span>,<span class="hljs-number" data-v-becd211e>1</span>,<span class="hljs-number" data-v-becd211e>2</span>]
</code></pre><p data-v-becd211e>contoh output:</p><pre data-v-becd211e><code class="lang-r" data-v-becd211e><span class="hljs-attribute" data-v-becd211e>ganjil
ganjil
genap
genap
ganjil
ganjil
genap</span>
</code></pre><h2 id="latihan-3" data-v-becd211e>Latihan 3</h2><p data-v-becd211e>Latihan dasar penggunaan array</p><p data-v-becd211e>Tugas:</p><ul data-v-becd211e><li data-v-becd211e>Cetak angka dari 1-100 dengan menggunakan fungsi <code data-v-becd211e>while</code></li></ul><p data-v-becd211e>contoh input: Tidak ada input terminal</p><p data-v-becd211e>output:</p><pre data-v-becd211e><code class="lang-r" data-v-becd211e><span class="hljs-number" data-v-becd211e>1</span>
<span class="hljs-number" data-v-becd211e>2</span>
<span class="hljs-number" data-v-becd211e>3</span>
<span class="hljs-number" data-v-becd211e>4</span>
...
</code></pre><h2 id="latihan-4" data-v-becd211e>latihan 4</h2><p data-v-becd211e>Analisi data array </p><p data-v-becd211e>Tugas:</p><ul data-v-becd211e><li data-v-becd211e>Cari elemen terbesar kedua dalam array [10,2,4,5,7]</li></ul><p data-v-becd211e>Contoh input: Tidak ada input terminal</p><p data-v-becd211e>output: </p><pre data-v-becd211e><code class="lang-r" data-v-becd211e><span class="hljs-number" data-v-becd211e>7</span>
</code></pre><h2 id="latihan-5" data-v-becd211e>latihan 5</h2><p data-v-becd211e>Modifikasi data array </p><p data-v-becd211e>Tugas:</p><ul data-v-becd211e><li data-v-becd211e>Gunakan method <code data-v-becd211e>map</code></li><li data-v-becd211e>melakukan perubahan array string menjadi kapital</li><li data-v-becd211e>data array adalah <code data-v-becd211e>[&quot;apple&quot;, &quot;banana&quot;]</code></li></ul><p data-v-becd211e>Contoh input: tidak ada input terminal </p><p data-v-becd211e>contoh output: </p><pre data-v-becd211e><code class="lang-r" data-v-becd211e>[<span class="hljs-string" data-v-becd211e>&quot;APPLE&quot;</span>, <span class="hljs-string" data-v-becd211e>&quot;BANANA&quot;</span>]
</code></pre><h2 id="referensi" data-v-becd211e>Referensi</h2><ul data-v-becd211e><li data-v-becd211e><a href="https://ruby-doc.org/docs/Tutorial/part_02/user_input.html" data-v-becd211e>https://ruby-doc.org/docs/Tutorial/part_02/user_input.html</a> [Input data ruby ke terminal]</li></ul>`,50)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},gg=ca(fg,[["__scopeId","data-v-becd211e"]]),kg={__name:"sql",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[1]||(s[1]=Z(`<h1 id="-latihan-sql-untuk-pemula-dan-menengah" data-v-5bf3496a> Latihan SQL untuk Pemula dan Menengah</h1><p data-v-5bf3496a>Dokumen ini berisi kumpulan latihan SQL yang dirancang untuk membantu pemula hingga pengguna tingkat menengah dalam memahami dasar-dasar hingga konsep penting dalam SQL. Contoh data menggunakan tabel <code data-v-5bf3496a>karyawan</code>, <code data-v-5bf3496a>departemen</code>, dan <code data-v-5bf3496a>gaji</code>.</p><h2 id="-struktur-tabel-contoh" data-v-5bf3496a> Struktur Tabel Contoh</h2><h3 id="1-tabel-karyawan-" data-v-5bf3496a>1. Tabel <code data-v-5bf3496a>karyawan</code></h3><table data-v-5bf3496a><thead data-v-5bf3496a><tr data-v-5bf3496a><th data-v-5bf3496a>id_karyawan</th><th data-v-5bf3496a>nama</th><th data-v-5bf3496a>usia</th><th data-v-5bf3496a>id_departemen</th></tr></thead><tbody data-v-5bf3496a><tr data-v-5bf3496a><td data-v-5bf3496a>1</td><td data-v-5bf3496a>Andi Setiawan</td><td data-v-5bf3496a>28</td><td data-v-5bf3496a>101</td></tr><tr data-v-5bf3496a><td data-v-5bf3496a>2</td><td data-v-5bf3496a>Budi Hartono</td><td data-v-5bf3496a>35</td><td data-v-5bf3496a>102</td></tr><tr data-v-5bf3496a><td data-v-5bf3496a>3</td><td data-v-5bf3496a>Clara Lestari</td><td data-v-5bf3496a>30</td><td data-v-5bf3496a>101</td></tr><tr data-v-5bf3496a><td data-v-5bf3496a>4</td><td data-v-5bf3496a>Dodi Santoso</td><td data-v-5bf3496a>25</td><td data-v-5bf3496a>103</td></tr></tbody></table><h3 id="2-tabel-departemen-" data-v-5bf3496a>2. Tabel <code data-v-5bf3496a>departemen</code></h3><table data-v-5bf3496a><thead data-v-5bf3496a><tr data-v-5bf3496a><th data-v-5bf3496a>id_departemen</th><th data-v-5bf3496a>nama_departemen</th></tr></thead><tbody data-v-5bf3496a><tr data-v-5bf3496a><td data-v-5bf3496a>101</td><td data-v-5bf3496a>IT</td></tr><tr data-v-5bf3496a><td data-v-5bf3496a>102</td><td data-v-5bf3496a>HRD</td></tr><tr data-v-5bf3496a><td data-v-5bf3496a>103</td><td data-v-5bf3496a>Keuangan</td></tr></tbody></table><h3 id="3-tabel-gaji-" data-v-5bf3496a>3. Tabel <code data-v-5bf3496a>gaji</code></h3><table data-v-5bf3496a><thead data-v-5bf3496a><tr data-v-5bf3496a><th data-v-5bf3496a>id_karyawan</th><th data-v-5bf3496a>gaji_pokok</th><th data-v-5bf3496a>bonus</th></tr></thead><tbody data-v-5bf3496a><tr data-v-5bf3496a><td data-v-5bf3496a>1</td><td data-v-5bf3496a>6000000</td><td data-v-5bf3496a>500000</td></tr><tr data-v-5bf3496a><td data-v-5bf3496a>2</td><td data-v-5bf3496a>7000000</td><td data-v-5bf3496a>1000000</td></tr><tr data-v-5bf3496a><td data-v-5bf3496a>3</td><td data-v-5bf3496a>6500000</td><td data-v-5bf3496a>750000</td></tr><tr data-v-5bf3496a><td data-v-5bf3496a>4</td><td data-v-5bf3496a>5500000</td><td data-v-5bf3496a>250000</td></tr></tbody></table><hr data-v-5bf3496a><h2 id="-dasar-dasar-sql" data-v-5bf3496a> Dasar-Dasar SQL</h2><h3 id="1-menampilkan-semua-data" data-v-5bf3496a>1. Menampilkan Semua Data</h3><pre data-v-5bf3496a><code class="lang-sql" data-v-5bf3496a><span class="hljs-keyword" data-v-5bf3496a>SELECT</span> * <span class="hljs-keyword" data-v-5bf3496a>FROM</span> karyawan;
</code></pre><h3 id="2-menampilkan-nama-dan-usia-karyawan" data-v-5bf3496a>2. Menampilkan Nama dan Usia Karyawan</h3><pre data-v-5bf3496a><code class="lang-sql" data-v-5bf3496a><span class="hljs-keyword" data-v-5bf3496a>SELECT</span> nama, usia <span class="hljs-keyword" data-v-5bf3496a>FROM</span> karyawan;
</code></pre><h3 id="3-menampilkan-karyawan-usia-di-atas-30" data-v-5bf3496a>3. Menampilkan Karyawan Usia di Atas 30</h3><pre data-v-5bf3496a><code class="lang-sql" data-v-5bf3496a><span class="hljs-keyword" data-v-5bf3496a>SELECT</span> * <span class="hljs-keyword" data-v-5bf3496a>FROM</span> karyawan <span class="hljs-keyword" data-v-5bf3496a>WHERE</span> usia &gt; <span class="hljs-number" data-v-5bf3496a>30</span>;
</code></pre><h3 id="4-mengurutkan-data-berdasarkan-usia-menurun-" data-v-5bf3496a>4. Mengurutkan Data Berdasarkan Usia (Menurun)</h3><pre data-v-5bf3496a><code class="lang-sql" data-v-5bf3496a><span class="hljs-keyword" data-v-5bf3496a>SELECT</span> * <span class="hljs-keyword" data-v-5bf3496a>FROM</span> karyawan <span class="hljs-keyword" data-v-5bf3496a>ORDER</span> <span class="hljs-keyword" data-v-5bf3496a>BY</span> usia <span class="hljs-keyword" data-v-5bf3496a>DESC</span>;
</code></pre><hr data-v-5bf3496a><h2 id="-join-antar-tabel" data-v-5bf3496a> JOIN Antar Tabel</h2><h3 id="5-menampilkan-nama-karyawan-dan-nama-departemennya" data-v-5bf3496a>5. Menampilkan Nama Karyawan dan Nama Departemennya</h3><pre data-v-5bf3496a><code class="lang-sql" data-v-5bf3496a><span class="hljs-keyword" data-v-5bf3496a>SELECT</span> k.nama, d.nama_departemen
<span class="hljs-keyword" data-v-5bf3496a>FROM</span> karyawan k
<span class="hljs-keyword" data-v-5bf3496a>JOIN</span> departemen d <span class="hljs-keyword" data-v-5bf3496a>ON</span> k.id_departemen = d.id_departemen;
</code></pre><h3 id="6-menampilkan-nama-karyawan-gaji-pokok-dan-bonus" data-v-5bf3496a>6. Menampilkan Nama Karyawan, Gaji Pokok, dan Bonus</h3><pre data-v-5bf3496a><code class="lang-sql" data-v-5bf3496a><span class="hljs-keyword" data-v-5bf3496a>SELECT</span> k.nama, g.gaji_pokok, g.bonus
<span class="hljs-keyword" data-v-5bf3496a>FROM</span> karyawan k
<span class="hljs-keyword" data-v-5bf3496a>JOIN</span> gaji g <span class="hljs-keyword" data-v-5bf3496a>ON</span> k.id_karyawan = g.id_karyawan;
</code></pre><hr data-v-5bf3496a><h2 id="-agregasi-dan-grouping" data-v-5bf3496a> Agregasi dan Grouping</h2><h3 id="7-menghitung-jumlah-karyawan-per-departemen" data-v-5bf3496a>7. Menghitung Jumlah Karyawan per Departemen</h3><pre data-v-5bf3496a><code class="lang-sql" data-v-5bf3496a><span class="hljs-keyword" data-v-5bf3496a>SELECT</span> d.nama_departemen, <span class="hljs-keyword" data-v-5bf3496a>COUNT</span>(*) <span class="hljs-keyword" data-v-5bf3496a>AS</span> jumlah_karyawan
<span class="hljs-keyword" data-v-5bf3496a>FROM</span> karyawan k
<span class="hljs-keyword" data-v-5bf3496a>JOIN</span> departemen d <span class="hljs-keyword" data-v-5bf3496a>ON</span> k.id_departemen = d.id_departemen
<span class="hljs-keyword" data-v-5bf3496a>GROUP</span> <span class="hljs-keyword" data-v-5bf3496a>BY</span> d.nama_departemen;
</code></pre><h3 id="8-menghitung-gaji-total-setiap-karyawan" data-v-5bf3496a>8. Menghitung Gaji Total Setiap Karyawan</h3><pre data-v-5bf3496a><code class="lang-sql" data-v-5bf3496a><span class="hljs-keyword" data-v-5bf3496a>SELECT</span> k.nama, (g.gaji_pokok + g.bonus) <span class="hljs-keyword" data-v-5bf3496a>AS</span> total_gaji
<span class="hljs-keyword" data-v-5bf3496a>FROM</span> karyawan k
<span class="hljs-keyword" data-v-5bf3496a>JOIN</span> gaji g <span class="hljs-keyword" data-v-5bf3496a>ON</span> k.id_karyawan = g.id_karyawan;
</code></pre><hr data-v-5bf3496a><h2 id="-latihan-lanjutan" data-v-5bf3496a> Latihan Lanjutan</h2><h3 id="9-tampilkan-nama-karyawan-dengan-gaji-total-tertinggi" data-v-5bf3496a>9. Tampilkan Nama Karyawan dengan Gaji Total Tertinggi</h3><pre data-v-5bf3496a><code class="lang-sql" data-v-5bf3496a><span class="hljs-keyword" data-v-5bf3496a>SELECT</span> k.nama, (g.gaji_pokok + g.bonus) <span class="hljs-keyword" data-v-5bf3496a>AS</span> total_gaji
<span class="hljs-keyword" data-v-5bf3496a>FROM</span> karyawan k
<span class="hljs-keyword" data-v-5bf3496a>JOIN</span> gaji g <span class="hljs-keyword" data-v-5bf3496a>ON</span> k.id_karyawan = g.id_karyawan
<span class="hljs-keyword" data-v-5bf3496a>ORDER</span> <span class="hljs-keyword" data-v-5bf3496a>BY</span> total_gaji <span class="hljs-keyword" data-v-5bf3496a>DESC</span>
<span class="hljs-keyword" data-v-5bf3496a>LIMIT</span> <span class="hljs-number" data-v-5bf3496a>1</span>;
</code></pre><h3 id="10-tampilkan-nama-departemen-yang-memiliki-rata-rata-gaji-tertinggi" data-v-5bf3496a>10. Tampilkan Nama Departemen yang Memiliki Rata-rata Gaji Tertinggi</h3><pre data-v-5bf3496a><code class="lang-sql" data-v-5bf3496a><span class="hljs-keyword" data-v-5bf3496a>SELECT</span> d.nama_departemen, <span class="hljs-keyword" data-v-5bf3496a>AVG</span>(g.gaji_pokok + g.bonus) <span class="hljs-keyword" data-v-5bf3496a>AS</span> rata_rata_gaji
<span class="hljs-keyword" data-v-5bf3496a>FROM</span> karyawan k
<span class="hljs-keyword" data-v-5bf3496a>JOIN</span> gaji g <span class="hljs-keyword" data-v-5bf3496a>ON</span> k.id_karyawan = g.id_karyawan
<span class="hljs-keyword" data-v-5bf3496a>JOIN</span> departemen d <span class="hljs-keyword" data-v-5bf3496a>ON</span> k.id_departemen = d.id_departemen
<span class="hljs-keyword" data-v-5bf3496a>GROUP</span> <span class="hljs-keyword" data-v-5bf3496a>BY</span> d.nama_departemen
<span class="hljs-keyword" data-v-5bf3496a>ORDER</span> <span class="hljs-keyword" data-v-5bf3496a>BY</span> rata_rata_gaji <span class="hljs-keyword" data-v-5bf3496a>DESC</span>
<span class="hljs-keyword" data-v-5bf3496a>LIMIT</span> <span class="hljs-number" data-v-5bf3496a>1</span>;
</code></pre><hr data-v-5bf3496a><h2 id="-tips-belajar-sql" data-v-5bf3496a> Tips Belajar SQL</h2><ul data-v-5bf3496a><li data-v-5bf3496a>Gunakan tools seperti <strong data-v-5bf3496a>DB Fiddle</strong>, <strong data-v-5bf3496a>SQL Fiddle</strong>, atau <strong data-v-5bf3496a>SQLiteStudio</strong> untuk eksperimen langsung.</li><li data-v-5bf3496a>Pahami konsep JOIN, GROUP BY, dan subquery secara mendalam.</li><li data-v-5bf3496a>Biasakan membaca dokumentasi SQL resmi untuk tiap DBMS (MySQL, PostgreSQL, dll).</li></ul><hr data-v-5bf3496a><p data-v-5bf3496a><strong data-v-5bf3496a>Selamat berlatih dan semoga sukses dalam perjalanan belajar SQL Anda!</strong></p>`,42)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])],64)}}},jg=ca(kg,[["__scopeId","data-v-5bf3496a"]]),yg={__name:"vuejs",setup(a){return(t,s)=>{const n=la("RouterLink");return $(),J(da,null,[s[2]||(s[2]=c("h1",{id:"membuat-komponent-kuis-tanya-jawab"},"Membuat Komponent Kuis tanya jawab",-1)),s[3]||(s[3]=c("p",null,"Pembuatan komponen kuis akan menggunaakan VUE JS",-1)),s[4]||(s[4]=c("p",null,[w("Hasil akhir akan seperti ini: "),c("img",{src:"https://github.com/playmakermz/warkop-website/blob/main/document/latihan-bahasa/image.png",alt:"alt text"})],-1)),s[5]||(s[5]=c("h2",{id:"tahapan-pengerjaan"},"Tahapan pengerjaan",-1)),s[6]||(s[6]=w(" <ol> <li>Menyiapkan wadah komponent dasar ```html <script setup> // ======================================== Script area start =======================================================</li> </ol> ")),s[7]||(s[7]=c("p",null,"// ======================================== Script area End ======================================================= ",-1)),s[8]||(s[8]=w("<\/script> ")),c("template",null,[c("nav",null,[S(n,{to:"/"},{default:x(()=>s[0]||(s[0]=[w("Go to Home")])),_:1})])]),s[9]||(s[9]=Z(` &lt;style scoped&gt; <p data-v-9dd2a298>/<em data-v-9dd2a298> ============================================== Style area start ======================================= </em>/</p> &lt;p&gt;/<em data-v-9dd2a298> ============================================== Style area end ======================================= </em>/ &lt;/style&gt;&lt;/p&gt; <pre data-v-9dd2a298><code data-v-9dd2a298>
<span class="hljs-number" data-v-9dd2a298>2</span>. 
Import Package pendukung

\`import { ref } <span class="hljs-keyword" data-v-9dd2a298>from</span> &#39;vue&#39;\`

<span class="hljs-number" data-v-9dd2a298>3</span>. Buat State sebagai representasi dari setiap jawaban yang ada

Semisal disini ada dua jawaban dari soal kita, maka harus ada dua <span class="hljs-keyword" data-v-9dd2a298>state</span> boolean jawaban.

\`\`\`javascript

const kuisTr = ref(false) // adalah <span class="hljs-keyword" data-v-9dd2a298>state</span> note True | Tr(True) | Penempatan: Jawaban Atas(True)
const kuisFl = ref(false) // adalah <span class="hljs-keyword" data-v-9dd2a298>state</span> note false | Fl(False) | Penempatan: Jawaban bawah(False)
</code></pre><ol data-v-9dd2a298><li data-v-9dd2a298>Siapkan fungsi onclick</li></ol><p data-v-9dd2a298>dimana disaat button di tekan oleh user, maka function akan dijalankan. Fungsi disini adalah untuk membalikan nilai boolean</p><pre data-v-9dd2a298><code class="lang-r" data-v-9dd2a298><span class="hljs-comment" data-v-9dd2a298>// Menimpa nilai awal menjadi nilai baru</span>
function SkuisTr(){ <span class="hljs-comment" data-v-9dd2a298>// Ini untuk buka catatan kuis True | Skuis(Soal kuis)</span>
  kuisTr<span class="hljs-selector-class" data-v-9dd2a298>.value</span> = !kuisTr<span class="hljs-selector-class" data-v-9dd2a298>.value</span>
  kuisFl<span class="hljs-selector-class" data-v-9dd2a298>.value</span> = false
}

<span class="hljs-comment" data-v-9dd2a298>// Menimpa nilai awal menjadi nilai baru</span>
function SkuisFl(){ <span class="hljs-comment" data-v-9dd2a298>// Ini untuk buka catatan kuis False</span>
  kuisFl<span class="hljs-selector-class" data-v-9dd2a298>.value</span> = !kuisFl<span class="hljs-selector-class" data-v-9dd2a298>.value</span>
  kuisTr<span class="hljs-selector-class" data-v-9dd2a298>.value</span> = false
}
</code></pre><ol data-v-9dd2a298><li data-v-9dd2a298>Menyiapkan component html kecil yang siap dipakai</li></ol><p data-v-9dd2a298>dimana component ini akan kita panggil jika fungsi button di tekan</p><pre data-v-9dd2a298><code data-v-9dd2a298>let JawA = ref(\`<span class="javascript" data-v-9dd2a298>
&lt;div <span class="hljs-class" data-v-9dd2a298><span class="hljs-keyword" data-v-9dd2a298>class</span></span>=<span class="hljs-string" data-v-9dd2a298>&quot;&quot;</span>&gt;
<span class="xml" data-v-9dd2a298><span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>h3</span>&gt;</span>HTTPS<span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>h3</span>&gt;</span></span>
&lt;p&gt;HTTPS memiliki cara kerja yang hampir sama dengan HTTP, perbedaan adalah disana terdapat enkripsi TLS ( Transport Layer Security )tambah untuk meningkatkan keamanan jaringan. Penambahan kemanan salah satunnya berada di sisi server
  &lt;<span class="hljs-regexp" data-v-9dd2a298>/p&gt;
&lt;/</span>div&gt;
</span>\`) <span class="hljs-regexp" data-v-9dd2a298>//</span> JawA(Jawaban A)

const JawB = ref(\`<span class="javascript" data-v-9dd2a298>
  &lt;div <span class="hljs-class" data-v-9dd2a298><span class="hljs-keyword" data-v-9dd2a298>class</span></span>=<span class="hljs-string" data-v-9dd2a298>&quot;alert&quot;</span>&gt;
    <span class="xml" data-v-9dd2a298><span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>h3</span>&gt;</span>Contoh HTML<span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>h3</span>&gt;</span></span>
    &lt;p&gt;Ini HTML dari script setup!<span class="xml" data-v-9dd2a298><span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>p</span>&gt;</span></span>
  &lt;<span class="hljs-regexp" data-v-9dd2a298>/div&gt;
</span></span>\`);<span class="hljs-regexp" data-v-9dd2a298>//</span> JawaB(Jawaban B)
</code></pre><ol data-v-9dd2a298><li data-v-9dd2a298>Pada bagian &quot;template&quot; persiapkan soal</li></ol><p data-v-9dd2a298>contoh:</p><pre data-v-9dd2a298><code class="lang-html" data-v-9dd2a298>
<span class="hljs-params" data-v-9dd2a298>&lt;h1&gt;</span>Exercise<span class="hljs-params" data-v-9dd2a298>&lt;/h1&gt;</span>

<span class="hljs-params" data-v-9dd2a298>&lt;p&gt;</span>Soal: <span class="hljs-params" data-v-9dd2a298>&lt;/p&gt;</span>
<span class="hljs-params" data-v-9dd2a298>&lt;p&gt;</span>Protokol jaringan apa yang digunakan oleh <span class="hljs-string" data-v-9dd2a298>&quot;FPC(Free Programming Course)&quot;</span>?<span class="hljs-params" data-v-9dd2a298>&lt;/p&gt;</span>
</code></pre><ol data-v-9dd2a298><li data-v-9dd2a298>Persiapkan jawaban pilihan ganda</li></ol><pre data-v-9dd2a298><code class="lang-html" data-v-9dd2a298><span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>lu</span>&gt;</span>
  <span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>li</span>&gt;</span><span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>button</span> @<span class="hljs-attr" data-v-9dd2a298>click</span>=<span class="hljs-string" data-v-9dd2a298>&quot;SkuisTr&quot;</span>&gt;</span>SSH<span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>button</span>&gt;</span><span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>li</span>&gt;</span>
  <span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>li</span>&gt;</span><span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>button</span> @<span class="hljs-attr" data-v-9dd2a298>click</span>=<span class="hljs-string" data-v-9dd2a298>&quot;SkuisFl&quot;</span>&gt;</span>HTTPS<span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>button</span>&gt;</span><span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>li</span>&gt;</span>
<span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>lu</span>&gt;</span>
</code></pre><ol data-v-9dd2a298><li data-v-9dd2a298>Gunakan state boolean tadi sebagai fondasi dalam mebuat &quot;Note&quot; penjelasan atas pilihan ganda yang dia pilih</li></ol><pre data-v-9dd2a298><code class="lang-html" data-v-9dd2a298>&lt;<span class="hljs-keyword" data-v-9dd2a298>div</span> v-<span class="hljs-keyword" data-v-9dd2a298>if</span>=<span class="hljs-string" data-v-9dd2a298>&quot;kuisTr&quot;</span>&gt;
  &lt;<span class="hljs-keyword" data-v-9dd2a298>div</span> v-html=<span class="hljs-string" data-v-9dd2a298>&quot;JawA&quot;</span>&gt;&lt;/<span class="hljs-keyword" data-v-9dd2a298>div</span>&gt;
&lt;/<span class="hljs-keyword" data-v-9dd2a298>div</span>&gt;

&lt;<span class="hljs-keyword" data-v-9dd2a298>div</span> v-<span class="hljs-keyword" data-v-9dd2a298>if</span>=<span class="hljs-string" data-v-9dd2a298>&quot;kuisFl&quot;</span>&gt;
  &lt;<span class="hljs-keyword" data-v-9dd2a298>div</span> v-html=<span class="hljs-string" data-v-9dd2a298>&quot;JawB&quot;</span>&gt;&lt;/<span class="hljs-keyword" data-v-9dd2a298>div</span>&gt;
&lt;/<span class="hljs-keyword" data-v-9dd2a298>div</span>&gt;
</code></pre><ol data-v-9dd2a298><li data-v-9dd2a298>selesai. Dibawah ini adalah contoh hasil jadi komplit</li></ol><pre data-v-9dd2a298><code class="lang-html" data-v-9dd2a298><span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>script</span> <span class="hljs-attr" data-v-9dd2a298>setup</span>&gt;</span><span class="javascript" data-v-9dd2a298>
<span class="hljs-keyword" data-v-9dd2a298>import</span> { ref } <span class="hljs-keyword" data-v-9dd2a298>from</span> <span class="hljs-string" data-v-9dd2a298>&#39;vue&#39;</span>

<span class="hljs-keyword" data-v-9dd2a298>const</span> kuisTr = ref(<span class="hljs-literal" data-v-9dd2a298>false</span>) <span class="hljs-comment" data-v-9dd2a298>// adalah state note True | Tr(True) | Penempatan: Jawaban Atas(True)</span>
<span class="hljs-keyword" data-v-9dd2a298>const</span> kuisFl = ref(<span class="hljs-literal" data-v-9dd2a298>false</span>) <span class="hljs-comment" data-v-9dd2a298>// adalah state note false | Fl(False) | Penempatan: Jawaban bawah(False)</span>

<span class="hljs-comment" data-v-9dd2a298>// Menimpa nilai awal menjadi nilai baru</span>
<span class="hljs-function" data-v-9dd2a298><span class="hljs-keyword" data-v-9dd2a298>function</span> <span class="hljs-title" data-v-9dd2a298>SkuisTr</span>(<span class="hljs-params" data-v-9dd2a298></span>)</span>{ <span class="hljs-comment" data-v-9dd2a298>// Ini untuk buka catatan kuis True | Skuis(Soal kuis)</span>
  kuisTr.value = !kuisTr.value
  kuisFl.value = <span class="hljs-literal" data-v-9dd2a298>false</span>
}

<span class="hljs-comment" data-v-9dd2a298>// Menimpa nilai awal menjadi nilai baru</span>
<span class="hljs-function" data-v-9dd2a298><span class="hljs-keyword" data-v-9dd2a298>function</span> <span class="hljs-title" data-v-9dd2a298>SkuisFl</span>(<span class="hljs-params" data-v-9dd2a298></span>)</span>{ <span class="hljs-comment" data-v-9dd2a298>// Ini untuk buka catatan kuis False</span>
  kuisFl.value = !kuisFl.value
  kuisTr.value = <span class="hljs-literal" data-v-9dd2a298>false</span>
}


<span class="hljs-comment" data-v-9dd2a298>// Membuat component kecil untuk HTML</span>


<span class="hljs-keyword" data-v-9dd2a298>let</span> JawA = ref(<span class="hljs-string" data-v-9dd2a298>\`
&lt;div class=&quot;&quot;&gt;
&lt;h3&gt;HTTPS&lt;/h3&gt;
&lt;p&gt;HTTPS memiliki cara kerja yang hampir sama dengan HTTP, perbedaan adalah disana terdapat enkripsi TLS ( Transport Layer Security )tambah untuk meningkatkan keamanan jaringan. Penambahan kemanan salah satunnya berada di sisi server
  &lt;/p&gt;
&lt;/div&gt;
\`</span>) <span class="hljs-comment" data-v-9dd2a298>// JawA(Jawaban A)</span>

<span class="hljs-keyword" data-v-9dd2a298>const</span> JawB = ref(<span class="hljs-string" data-v-9dd2a298>\`
  &lt;div class=&quot;alert&quot;&gt;
    &lt;h3&gt;Contoh HTML&lt;/h3&gt;
    &lt;p&gt;Ini HTML dari script setup!&lt;/p&gt;
  &lt;/div&gt;
\`</span>);<span class="hljs-comment" data-v-9dd2a298>// JawaB(Jawaban B)</span>
</span><span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>script</span>&gt;</span>



<span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>template</span>&gt;</span>
<span class="hljs-comment" data-v-9dd2a298>&lt;!-- ======================= Awal  dari Template ======================= --&gt;</span>

<span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>h1</span>&gt;</span>Exercise<span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>h1</span>&gt;</span>

<span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>p</span>&gt;</span>Soal: <span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>p</span>&gt;</span>
<span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>p</span>&gt;</span>Protokol jaringan apa yang digunakan oleh &quot;FPC(Free Programming Course)&quot;?<span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>p</span>&gt;</span>



<span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>lu</span>&gt;</span>
  <span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>li</span>&gt;</span><span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>button</span> @<span class="hljs-attr" data-v-9dd2a298>click</span>=<span class="hljs-string" data-v-9dd2a298>&quot;SkuisTr&quot;</span>&gt;</span>SSH<span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>button</span>&gt;</span><span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>li</span>&gt;</span>
  <span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>li</span>&gt;</span><span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>button</span> @<span class="hljs-attr" data-v-9dd2a298>click</span>=<span class="hljs-string" data-v-9dd2a298>&quot;SkuisFl&quot;</span>&gt;</span>HTTPS<span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>button</span>&gt;</span><span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>li</span>&gt;</span>
<span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>lu</span>&gt;</span>


<span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>div</span> <span class="hljs-attr" data-v-9dd2a298>v-if</span>=<span class="hljs-string" data-v-9dd2a298>&quot;kuisTr&quot;</span>&gt;</span>
  <span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>div</span> <span class="hljs-attr" data-v-9dd2a298>v-html</span>=<span class="hljs-string" data-v-9dd2a298>&quot;JawA&quot;</span>&gt;</span><span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>div</span>&gt;</span>
<span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>div</span>&gt;</span>

<span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>div</span> <span class="hljs-attr" data-v-9dd2a298>v-if</span>=<span class="hljs-string" data-v-9dd2a298>&quot;kuisFl&quot;</span>&gt;</span>
  <span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>div</span> <span class="hljs-attr" data-v-9dd2a298>v-html</span>=<span class="hljs-string" data-v-9dd2a298>&quot;JawB&quot;</span>&gt;</span><span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>div</span>&gt;</span>
<span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>div</span>&gt;</span>



<span class="hljs-comment" data-v-9dd2a298>&lt;!-- ======================= Akhir dari Template ======================= --&gt;</span>
<span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>template</span>&gt;</span>






<span class="hljs-tag" data-v-9dd2a298>&lt;<span class="hljs-name" data-v-9dd2a298>style</span> <span class="hljs-attr" data-v-9dd2a298>scoped</span>&gt;</span><span class="css" data-v-9dd2a298>

<span class="hljs-selector-class" data-v-9dd2a298>.read-the-docs</span> {

  <span class="hljs-attribute" data-v-9dd2a298>color</span>: <span class="hljs-number" data-v-9dd2a298>#888</span>;

}

</span><span class="hljs-tag" data-v-9dd2a298>&lt;/<span class="hljs-name" data-v-9dd2a298>style</span>&gt;</span>
</code></pre>`,21)),c("nav",null,[S(n,{to:"/"},{default:x(()=>s[1]||(s[1]=[w("Go to Home")])),_:1})])],64)}}},wg=ca(yg,[["__scopeId","data-v-9dd2a298"]]),_g={class:"wiki-main"},Sg={class:"wiki-header"},qg={class:"wiki-container"},xg={class:"wiki-sidebar"},Tg={class:"sidebar-section"},Eg={class:"sidebar-links"},Cg={class:"wiki-content"},Ag={class:"article-container"},Lg={__name:"ContohApp",setup(a){return(t,s)=>{const n=la("RouterLink"),e=la("RouterView");return $(),J("div",_g,[c("header",Sg,[S(n,{to:"/",class:"wiki-logo"},{default:x(()=>s[0]||(s[0]=[c("img",{src:"#",alt:"Logo title",height:"auto",width:"42"},null,-1),c("h1",null,[w("FPC "),c("span",{class:"subtitle"},"(Free Programming Course)")],-1)])),_:1}),s[1]||(s[1]=c("div",{class:"wiki-search"},[c("input",{type:"text",placeholder:"Cari artikel..."}),c("button",{class:"search-button"},"Cari")],-1))]),c("div",qg,[c("nav",xg,[c("div",Tg,[s[8]||(s[8]=c("h3",null,"Contents",-1)),s[9]||(s[9]=c("div",{class:"sidebar-divider"},null,-1)),c("div",Eg,[S(n,{to:"/",class:"sidebar-link"},{default:x(()=>s[2]||(s[2]=[c("span",{class:"icon"},"🏠",-1),w("Home ")])),_:1}),S(n,{to:"/HTML-Mapel",class:"sidebar-link"},{default:x(()=>s[3]||(s[3]=[c("span",{class:"icon"},"📄",-1),w("HTML Course ")])),_:1}),S(n,{to:"/vim",class:"sidebar-link"},{default:x(()=>s[4]||(s[4]=[c("span",{class:"icon"},"⌨️",-1),w("Vim Course ")])),_:1}),S(n,{to:"/git",class:"sidebar-link"},{default:x(()=>s[5]||(s[5]=[c("span",{class:"icon"},"🔄",-1),w("Git Course ")])),_:1}),S(n,{to:"/html-kuis-02",class:"sidebar-link"},{default:x(()=>s[6]||(s[6]=[c("span",{class:"icon"},"✓",-1),w("Testing ")])),_:1}),S(n,{to:"/latihanHTML02",class:"sidebar-link"},{default:x(()=>s[7]||(s[7]=[c("span",{class:"icon"},"📝",-1),w("Latihan HTML 2 ")])),_:1})])]),s[10]||(s[10]=Z('<div class="sidebar-section" data-v-91ac7719><h3 data-v-91ac7719>Tools</h3><div class="sidebar-divider" data-v-91ac7719></div><div class="sidebar-links" data-v-91ac7719><a href="#" class="sidebar-link" data-v-91ac7719>Page History</a><a href="#" class="sidebar-link" data-v-91ac7719>What links here</a><a href="#" class="sidebar-link" data-v-91ac7719>Recent changes</a><a href="#" class="sidebar-link" data-v-91ac7719>Special pages</a></div></div>',1))]),c("main",Cg,[s[11]||(s[11]=Z('<div class="content-header" data-v-91ac7719><div class="content-tabs" data-v-91ac7719><div class="tab active" data-v-91ac7719>Article</div><div class="tab" data-v-91ac7719>Discussion</div><div class="tab" data-v-91ac7719>Edit</div><div class="tab" data-v-91ac7719>History</div></div></div>',1)),c("div",Ag,[S(e)])])]),s[12]||(s[12]=Z('<footer class="wiki-footer" data-v-91ac7719><div class="footer-info" data-v-91ac7719><p data-v-91ac7719>This page was last edited on 29 December 2023, at 18:14.</p></div><div class="footer-buttons" data-v-91ac7719><button class="wiki-button primary" data-v-91ac7719>Edit</button><button class="wiki-button danger" data-v-91ac7719>Report Issue</button><button class="wiki-button success" data-v-91ac7719>Contribute</button><button class="wiki-button outline" data-v-91ac7719>More Actions</button></div><div class="footer-links" data-v-91ac7719><a href="#" data-v-91ac7719>Privacy Policy</a><span class="separator" data-v-91ac7719>•</span><a href="#" data-v-91ac7719>About FPC</a><span class="separator" data-v-91ac7719>•</span><a href="#" data-v-91ac7719>Disclaimers</a><span class="separator" data-v-91ac7719>•</span><a href="#" data-v-91ac7719>Contact Us</a></div></footer>',1))])}}},Mg=ca(Lg,[["__scopeId","data-v-91ac7719"]]),Rg=[{path:"/",component:X3},{path:"/testDesign",component:Mg},{path:"/kuis1",component:Pi},{path:"/HTML-Mapel",component:df},{path:"/vim",component:Ni},{path:"/git",component:nf},{path:"/css",component:cf},{path:"/java",component:rf},{path:"/javascript",component:uf},{path:"/python",component:vf},{path:"/react",component:bf},{path:"/r",component:gf},{path:"/reactexpo",component:jf},{path:"/ruby",component:wf},{path:"/sql",component:Sf},{path:"/typescript",component:xf},{path:"/vue",component:Ef},{path:"/vim",component:Ni},{path:"/js1",component:j0},{path:"/js2",component:w0},{path:"/js3",component:S0},{path:"/js4",component:x0},{path:"/js5",component:E0},{path:"/expo-note1",component:A0},{path:"/expo-note2",component:M0},{path:"/expo-note3",component:D0},{path:"/react-note1",component:I0},{path:"/react-note2",component:O0},{path:"/react-note3",component:B0},{path:"/react-note4",component:F0},{path:"/react-note5",component:U0},{path:"/react-note6",component:K0},{path:"/react-note7",component:W0},{path:"/react-note8",component:Y0},{path:"/latihan-html1",component:X0},{path:"/latihan-html2",component:ag},{path:"/latihan-html3",component:tg},{path:"/latihan-html4",component:eg},{path:"/latihan-html5",component:lg},{path:"/latihan-html6",component:cg},{path:"/latihan-html7",component:rg},{path:"/latihan-html8",component:ug},{path:"/ltPython",component:vg},{path:"/ltR",component:bg},{path:"/ltRuby",component:gg},{path:"/ltSql",component:jg},{path:"/ltVue",component:wg},{path:"/qzVim",component:g0},{path:"/qzRuby",component:i0},{path:"/qzGit",component:Yf},{path:"/qzCss",component:Hf},{path:"/latihanHTML01",component:Ab},{path:"/latihanHTML02",component:Mb},{path:"/latihanHTML03",component:Db},{path:"/html-kuis-01",component:Pi},{path:"/html-kuis-02",component:Ii},{path:"/quiz",component:Ii}],Dg=xb({history:sb(),routes:Rg});function Pg(a){if(Object.prototype.hasOwnProperty.call(a,"__esModule"))return a;var t=a.default;if(typeof t=="function"){var s=function n(){return this instanceof n?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};s.prototype=t.prototype}else s={};return Object.defineProperty(s,"__esModule",{value:!0}),Object.keys(a).forEach(function(n){var e=Object.getOwnPropertyDescriptor(a,n);Object.defineProperty(s,n,e.get?e:{enumerable:!0,get:function(){return a[n]}})}),s}var Zn={exports:{}},Xa="top",ls="bottom",is="right",Za="left",ye="auto",Yt=[Xa,ls,is,Za],wt="start",Ut="end",jp="clippingParents",Nd="viewport",Nt="popper",yp="reference",vd=Yt.reduce(function(a,t){return a.concat([t+"-"+wt,t+"-"+Ut])},[]),Od=[].concat(Yt,[ye]).reduce(function(a,t){return a.concat([t,t+"-"+wt,t+"-"+Ut])},[]),wp="beforeRead",_p="read",Sp="afterRead",qp="beforeMain",xp="main",Tp="afterMain",Ep="beforeWrite",Cp="write",Ap="afterWrite",Lp=[wp,_p,Sp,qp,xp,Tp,Ep,Cp,Ap];function Ls(a){return a?(a.nodeName||"").toLowerCase():null}function cs(a){if(a==null)return window;if(a.toString()!=="[object Window]"){var t=a.ownerDocument;return t&&t.defaultView||window}return a}function _t(a){var t=cs(a).Element;return a instanceof t||a instanceof Element}function ms(a){var t=cs(a).HTMLElement;return a instanceof t||a instanceof HTMLElement}function Hd(a){if(typeof ShadowRoot>"u")return!1;var t=cs(a).ShadowRoot;return a instanceof t||a instanceof ShadowRoot}function Ig(a){var t=a.state;Object.keys(t.elements).forEach(function(s){var n=t.styles[s]||{},e=t.attributes[s]||{},l=t.elements[s];!ms(l)||!Ls(l)||(Object.assign(l.style,n),Object.keys(e).forEach(function(i){var o=e[i];o===!1?l.removeAttribute(i):l.setAttribute(i,o===!0?"":o)}))})}function Ng(a){var t=a.state,s={popper:{position:t.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(t.elements.popper.style,s.popper),t.styles=s,t.elements.arrow&&Object.assign(t.elements.arrow.style,s.arrow),function(){Object.keys(t.elements).forEach(function(n){var e=t.elements[n],l=t.attributes[n]||{},i=Object.keys(t.styles.hasOwnProperty(n)?t.styles[n]:s[n]),o=i.reduce(function(r,h){return r[h]="",r},{});!ms(e)||!Ls(e)||(Object.assign(e.style,o),Object.keys(l).forEach(function(r){e.removeAttribute(r)}))})}}const Bd={name:"applyStyles",enabled:!0,phase:"write",fn:Ig,effect:Ng,requires:["computeStyles"]};function As(a){return a.split("-")[0]}var jt=Math.max,ce=Math.min,Vt=Math.round;function md(){var a=navigator.userAgentData;return a!=null&&a.brands&&Array.isArray(a.brands)?a.brands.map(function(t){return t.brand+"/"+t.version}).join(" "):navigator.userAgent}function Mp(){return!/^((?!chrome|android).)*safari/i.test(md())}function Kt(a,t,s){t===void 0&&(t=!1),s===void 0&&(s=!1);var n=a.getBoundingClientRect(),e=1,l=1;t&&ms(a)&&(e=a.offsetWidth>0&&Vt(n.width)/a.offsetWidth||1,l=a.offsetHeight>0&&Vt(n.height)/a.offsetHeight||1);var i=_t(a)?cs(a):window,o=i.visualViewport,r=!Mp()&&s,h=(n.left+(r&&o?o.offsetLeft:0))/e,u=(n.top+(r&&o?o.offsetTop:0))/l,v=n.width/e,j=n.height/l;return{width:v,height:j,top:u,right:h+v,bottom:u+j,left:h,x:h,y:u}}function $d(a){var t=Kt(a),s=a.offsetWidth,n=a.offsetHeight;return Math.abs(t.width-s)<=1&&(s=t.width),Math.abs(t.height-n)<=1&&(n=t.height),{x:a.offsetLeft,y:a.offsetTop,width:s,height:n}}function Rp(a,t){var s=t.getRootNode&&t.getRootNode();if(a.contains(t))return!0;if(s&&Hd(s)){var n=t;do{if(n&&a.isSameNode(n))return!0;n=n.parentNode||n.host}while(n)}return!1}function Bs(a){return cs(a).getComputedStyle(a)}function Og(a){return["table","td","th"].indexOf(Ls(a))>=0}function et(a){return((_t(a)?a.ownerDocument:a.document)||window.document).documentElement}function we(a){return Ls(a)==="html"?a:a.assignedSlot||a.parentNode||(Hd(a)?a.host:null)||et(a)}function Oi(a){return!ms(a)||Bs(a).position==="fixed"?null:a.offsetParent}function Hg(a){var t=/firefox/i.test(md()),s=/Trident/i.test(md());if(s&&ms(a)){var n=Bs(a);if(n.position==="fixed")return null}var e=we(a);for(Hd(e)&&(e=e.host);ms(e)&&["html","body"].indexOf(Ls(e))<0;){var l=Bs(e);if(l.transform!=="none"||l.perspective!=="none"||l.contain==="paint"||["transform","perspective"].indexOf(l.willChange)!==-1||t&&l.willChange==="filter"||t&&l.filter&&l.filter!=="none")return e;e=e.parentNode}return null}function Cn(a){for(var t=cs(a),s=Oi(a);s&&Og(s)&&Bs(s).position==="static";)s=Oi(s);return s&&(Ls(s)==="html"||Ls(s)==="body"&&Bs(s).position==="static")?t:s||Hg(a)||t}function Fd(a){return["top","bottom"].indexOf(a)>=0?"x":"y"}function bn(a,t,s){return jt(a,ce(t,s))}function Bg(a,t,s){var n=bn(a,t,s);return n>s?s:n}function Dp(){return{top:0,right:0,bottom:0,left:0}}function Pp(a){return Object.assign({},Dp(),a)}function Ip(a,t){return t.reduce(function(s,n){return s[n]=a,s},{})}var $g=function(t,s){return t=typeof t=="function"?t(Object.assign({},s.rects,{placement:s.placement})):t,Pp(typeof t!="number"?t:Ip(t,Yt))};function Fg(a){var t,s=a.state,n=a.name,e=a.options,l=s.elements.arrow,i=s.modifiersData.popperOffsets,o=As(s.placement),r=Fd(o),h=[Za,is].indexOf(o)>=0,u=h?"height":"width";if(!(!l||!i)){var v=$g(e.padding,s),j=$d(l),k=r==="y"?Xa:Za,M=r==="y"?ls:is,C=s.rects.reference[u]+s.rects.reference[r]-i[r]-s.rects.popper[u],O=i[r]-s.rects.reference[r],y=Cn(l),I=y?r==="y"?y.clientHeight||0:y.clientWidth||0:0,V=C/2-O/2,P=v[k],Q=I-j[u]-v[M],ta=I/2-j[u]/2+V,ia=bn(P,ta,Q),ka=r;s.modifiersData[n]=(t={},t[ka]=ia,t.centerOffset=ia-ta,t)}}function Jg(a){var t=a.state,s=a.options,n=s.element,e=n===void 0?"[data-popper-arrow]":n;e!=null&&(typeof e=="string"&&(e=t.elements.popper.querySelector(e),!e)||Rp(t.elements.popper,e)&&(t.elements.arrow=e))}const Np={name:"arrow",enabled:!0,phase:"main",fn:Fg,effect:Jg,requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function zt(a){return a.split("-")[1]}var Ug={top:"auto",right:"auto",bottom:"auto",left:"auto"};function Vg(a,t){var s=a.x,n=a.y,e=t.devicePixelRatio||1;return{x:Vt(s*e)/e||0,y:Vt(n*e)/e||0}}function Hi(a){var t,s=a.popper,n=a.popperRect,e=a.placement,l=a.variation,i=a.offsets,o=a.position,r=a.gpuAcceleration,h=a.adaptive,u=a.roundOffsets,v=a.isFixed,j=i.x,k=j===void 0?0:j,M=i.y,C=M===void 0?0:M,O=typeof u=="function"?u({x:k,y:C}):{x:k,y:C};k=O.x,C=O.y;var y=i.hasOwnProperty("x"),I=i.hasOwnProperty("y"),V=Za,P=Xa,Q=window;if(h){var ta=Cn(s),ia="clientHeight",ka="clientWidth";if(ta===cs(s)&&(ta=et(s),Bs(ta).position!=="static"&&o==="absolute"&&(ia="scrollHeight",ka="scrollWidth")),ta=ta,e===Xa||(e===Za||e===is)&&l===Ut){P=ls;var G=v&&ta===Q&&Q.visualViewport?Q.visualViewport.height:ta[ia];C-=G-n.height,C*=r?1:-1}if(e===Za||(e===Xa||e===ls)&&l===Ut){V=is;var X=v&&ta===Q&&Q.visualViewport?Q.visualViewport.width:ta[ka];k-=X-n.width,k*=r?1:-1}}var ea=Object.assign({position:o},h&&Ug),W=u===!0?Vg({x:k,y:C},cs(s)):{x:k,y:C};if(k=W.x,C=W.y,r){var ra;return Object.assign({},ea,(ra={},ra[P]=I?"0":"",ra[V]=y?"0":"",ra.transform=(Q.devicePixelRatio||1)<=1?"translate("+k+"px, "+C+"px)":"translate3d("+k+"px, "+C+"px, 0)",ra))}return Object.assign({},ea,(t={},t[P]=I?C+"px":"",t[V]=y?k+"px":"",t.transform="",t))}function Kg(a){var t=a.state,s=a.options,n=s.gpuAcceleration,e=n===void 0?!0:n,l=s.adaptive,i=l===void 0?!0:l,o=s.roundOffsets,r=o===void 0?!0:o,h={placement:As(t.placement),variation:zt(t.placement),popper:t.elements.popper,popperRect:t.rects.popper,gpuAcceleration:e,isFixed:t.options.strategy==="fixed"};t.modifiersData.popperOffsets!=null&&(t.styles.popper=Object.assign({},t.styles.popper,Hi(Object.assign({},h,{offsets:t.modifiersData.popperOffsets,position:t.options.strategy,adaptive:i,roundOffsets:r})))),t.modifiersData.arrow!=null&&(t.styles.arrow=Object.assign({},t.styles.arrow,Hi(Object.assign({},h,{offsets:t.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:r})))),t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-placement":t.placement})}const Jd={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:Kg,data:{}};var zn={passive:!0};function zg(a){var t=a.state,s=a.instance,n=a.options,e=n.scroll,l=e===void 0?!0:e,i=n.resize,o=i===void 0?!0:i,r=cs(t.elements.popper),h=[].concat(t.scrollParents.reference,t.scrollParents.popper);return l&&h.forEach(function(u){u.addEventListener("scroll",s.update,zn)}),o&&r.addEventListener("resize",s.update,zn),function(){l&&h.forEach(function(u){u.removeEventListener("scroll",s.update,zn)}),o&&r.removeEventListener("resize",s.update,zn)}}const Ud={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:zg,data:{}};var Wg={left:"right",right:"left",bottom:"top",top:"bottom"};function ae(a){return a.replace(/left|right|bottom|top/g,function(t){return Wg[t]})}var Gg={start:"end",end:"start"};function Bi(a){return a.replace(/start|end/g,function(t){return Gg[t]})}function Vd(a){var t=cs(a),s=t.pageXOffset,n=t.pageYOffset;return{scrollLeft:s,scrollTop:n}}function Kd(a){return Kt(et(a)).left+Vd(a).scrollLeft}function Yg(a,t){var s=cs(a),n=et(a),e=s.visualViewport,l=n.clientWidth,i=n.clientHeight,o=0,r=0;if(e){l=e.width,i=e.height;var h=Mp();(h||!h&&t==="fixed")&&(o=e.offsetLeft,r=e.offsetTop)}return{width:l,height:i,x:o+Kd(a),y:r}}function Qg(a){var t,s=et(a),n=Vd(a),e=(t=a.ownerDocument)==null?void 0:t.body,l=jt(s.scrollWidth,s.clientWidth,e?e.scrollWidth:0,e?e.clientWidth:0),i=jt(s.scrollHeight,s.clientHeight,e?e.scrollHeight:0,e?e.clientHeight:0),o=-n.scrollLeft+Kd(a),r=-n.scrollTop;return Bs(e||s).direction==="rtl"&&(o+=jt(s.clientWidth,e?e.clientWidth:0)-l),{width:l,height:i,x:o,y:r}}function zd(a){var t=Bs(a),s=t.overflow,n=t.overflowX,e=t.overflowY;return/auto|scroll|overlay|hidden/.test(s+e+n)}function Op(a){return["html","body","#document"].indexOf(Ls(a))>=0?a.ownerDocument.body:ms(a)&&zd(a)?a:Op(we(a))}function fn(a,t){var s;t===void 0&&(t=[]);var n=Op(a),e=n===((s=a.ownerDocument)==null?void 0:s.body),l=cs(n),i=e?[l].concat(l.visualViewport||[],zd(n)?n:[]):n,o=t.concat(i);return e?o:o.concat(fn(we(i)))}function bd(a){return Object.assign({},a,{left:a.x,top:a.y,right:a.x+a.width,bottom:a.y+a.height})}function Xg(a,t){var s=Kt(a,!1,t==="fixed");return s.top=s.top+a.clientTop,s.left=s.left+a.clientLeft,s.bottom=s.top+a.clientHeight,s.right=s.left+a.clientWidth,s.width=a.clientWidth,s.height=a.clientHeight,s.x=s.left,s.y=s.top,s}function $i(a,t,s){return t===Nd?bd(Yg(a,s)):_t(t)?Xg(t,s):bd(Qg(et(a)))}function Zg(a){var t=fn(we(a)),s=["absolute","fixed"].indexOf(Bs(a).position)>=0,n=s&&ms(a)?Cn(a):a;return _t(n)?t.filter(function(e){return _t(e)&&Rp(e,n)&&Ls(e)!=="body"}):[]}function ak(a,t,s,n){var e=t==="clippingParents"?Zg(a):[].concat(t),l=[].concat(e,[s]),i=l[0],o=l.reduce(function(r,h){var u=$i(a,h,n);return r.top=jt(u.top,r.top),r.right=ce(u.right,r.right),r.bottom=ce(u.bottom,r.bottom),r.left=jt(u.left,r.left),r},$i(a,i,n));return o.width=o.right-o.left,o.height=o.bottom-o.top,o.x=o.left,o.y=o.top,o}function Hp(a){var t=a.reference,s=a.element,n=a.placement,e=n?As(n):null,l=n?zt(n):null,i=t.x+t.width/2-s.width/2,o=t.y+t.height/2-s.height/2,r;switch(e){case Xa:r={x:i,y:t.y-s.height};break;case ls:r={x:i,y:t.y+t.height};break;case is:r={x:t.x+t.width,y:o};break;case Za:r={x:t.x-s.width,y:o};break;default:r={x:t.x,y:t.y}}var h=e?Fd(e):null;if(h!=null){var u=h==="y"?"height":"width";switch(l){case wt:r[h]=r[h]-(t[u]/2-s[u]/2);break;case Ut:r[h]=r[h]+(t[u]/2-s[u]/2);break}}return r}function Wt(a,t){t===void 0&&(t={});var s=t,n=s.placement,e=n===void 0?a.placement:n,l=s.strategy,i=l===void 0?a.strategy:l,o=s.boundary,r=o===void 0?jp:o,h=s.rootBoundary,u=h===void 0?Nd:h,v=s.elementContext,j=v===void 0?Nt:v,k=s.altBoundary,M=k===void 0?!1:k,C=s.padding,O=C===void 0?0:C,y=Pp(typeof O!="number"?O:Ip(O,Yt)),I=j===Nt?yp:Nt,V=a.rects.popper,P=a.elements[M?I:j],Q=ak(_t(P)?P:P.contextElement||et(a.elements.popper),r,u,i),ta=Kt(a.elements.reference),ia=Hp({reference:ta,element:V,placement:e}),ka=bd(Object.assign({},V,ia)),G=j===Nt?ka:ta,X={top:Q.top-G.top+y.top,bottom:G.bottom-Q.bottom+y.bottom,left:Q.left-G.left+y.left,right:G.right-Q.right+y.right},ea=a.modifiersData.offset;if(j===Nt&&ea){var W=ea[e];Object.keys(X).forEach(function(ra){var xa=[is,ls].indexOf(ra)>=0?1:-1,Aa=[Xa,ls].indexOf(ra)>=0?"y":"x";X[ra]+=W[Aa]*xa})}return X}function sk(a,t){t===void 0&&(t={});var s=t,n=s.placement,e=s.boundary,l=s.rootBoundary,i=s.padding,o=s.flipVariations,r=s.allowedAutoPlacements,h=r===void 0?Od:r,u=zt(n),v=u?o?vd:vd.filter(function(M){return zt(M)===u}):Yt,j=v.filter(function(M){return h.indexOf(M)>=0});j.length===0&&(j=v);var k=j.reduce(function(M,C){return M[C]=Wt(a,{placement:C,boundary:e,rootBoundary:l,padding:i})[As(C)],M},{});return Object.keys(k).sort(function(M,C){return k[M]-k[C]})}function tk(a){if(As(a)===ye)return[];var t=ae(a);return[Bi(a),t,Bi(t)]}function nk(a){var t=a.state,s=a.options,n=a.name;if(!t.modifiersData[n]._skip){for(var e=s.mainAxis,l=e===void 0?!0:e,i=s.altAxis,o=i===void 0?!0:i,r=s.fallbackPlacements,h=s.padding,u=s.boundary,v=s.rootBoundary,j=s.altBoundary,k=s.flipVariations,M=k===void 0?!0:k,C=s.allowedAutoPlacements,O=t.options.placement,y=As(O),I=y===O,V=r||(I||!M?[ae(O)]:tk(O)),P=[O].concat(V).reduce(function(Wa,Fa){return Wa.concat(As(Fa)===ye?sk(t,{placement:Fa,boundary:u,rootBoundary:v,padding:h,flipVariations:M,allowedAutoPlacements:C}):Fa)},[]),Q=t.rects.reference,ta=t.rects.popper,ia=new Map,ka=!0,G=P[0],X=0;X<P.length;X++){var ea=P[X],W=As(ea),ra=zt(ea)===wt,xa=[Xa,ls].indexOf(W)>=0,Aa=xa?"width":"height",ga=Wt(t,{placement:ea,boundary:u,rootBoundary:v,altBoundary:j,padding:h}),ha=xa?ra?is:Za:ra?ls:Xa;Q[Aa]>ta[Aa]&&(ha=ae(ha));var fa=ae(ha),Ra=[];if(l&&Ra.push(ga[W]<=0),o&&Ra.push(ga[ha]<=0,ga[fa]<=0),Ra.every(function(Wa){return Wa})){G=ea,ka=!1;break}ia.set(ea,Ra)}if(ka)for(var za=M?3:1,Ha=function(Fa){var Ma=P.find(function(A){var K=ia.get(A);if(K)return K.slice(0,Fa).every(function(z){return z})});if(Ma)return G=Ma,"break"},La=za;La>0;La--){var ts=Ha(La);if(ts==="break")break}t.placement!==G&&(t.modifiersData[n]._skip=!0,t.placement=G,t.reset=!0)}}const Bp={name:"flip",enabled:!0,phase:"main",fn:nk,requiresIfExists:["offset"],data:{_skip:!1}};function Fi(a,t,s){return s===void 0&&(s={x:0,y:0}),{top:a.top-t.height-s.y,right:a.right-t.width+s.x,bottom:a.bottom-t.height+s.y,left:a.left-t.width-s.x}}function Ji(a){return[Xa,is,ls,Za].some(function(t){return a[t]>=0})}function ek(a){var t=a.state,s=a.name,n=t.rects.reference,e=t.rects.popper,l=t.modifiersData.preventOverflow,i=Wt(t,{elementContext:"reference"}),o=Wt(t,{altBoundary:!0}),r=Fi(i,n),h=Fi(o,e,l),u=Ji(r),v=Ji(h);t.modifiersData[s]={referenceClippingOffsets:r,popperEscapeOffsets:h,isReferenceHidden:u,hasPopperEscaped:v},t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-reference-hidden":u,"data-popper-escaped":v})}const $p={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:ek};function dk(a,t,s){var n=As(a),e=[Za,Xa].indexOf(n)>=0?-1:1,l=typeof s=="function"?s(Object.assign({},t,{placement:a})):s,i=l[0],o=l[1];return i=i||0,o=(o||0)*e,[Za,is].indexOf(n)>=0?{x:o,y:i}:{x:i,y:o}}function lk(a){var t=a.state,s=a.options,n=a.name,e=s.offset,l=e===void 0?[0,0]:e,i=Od.reduce(function(u,v){return u[v]=dk(v,t.rects,l),u},{}),o=i[t.placement],r=o.x,h=o.y;t.modifiersData.popperOffsets!=null&&(t.modifiersData.popperOffsets.x+=r,t.modifiersData.popperOffsets.y+=h),t.modifiersData[n]=i}const Fp={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:lk};function ik(a){var t=a.state,s=a.name;t.modifiersData[s]=Hp({reference:t.rects.reference,element:t.rects.popper,placement:t.placement})}const Wd={name:"popperOffsets",enabled:!0,phase:"read",fn:ik,data:{}};function ck(a){return a==="x"?"y":"x"}function pk(a){var t=a.state,s=a.options,n=a.name,e=s.mainAxis,l=e===void 0?!0:e,i=s.altAxis,o=i===void 0?!1:i,r=s.boundary,h=s.rootBoundary,u=s.altBoundary,v=s.padding,j=s.tether,k=j===void 0?!0:j,M=s.tetherOffset,C=M===void 0?0:M,O=Wt(t,{boundary:r,rootBoundary:h,padding:v,altBoundary:u}),y=As(t.placement),I=zt(t.placement),V=!I,P=Fd(y),Q=ck(P),ta=t.modifiersData.popperOffsets,ia=t.rects.reference,ka=t.rects.popper,G=typeof C=="function"?C(Object.assign({},t.rects,{placement:t.placement})):C,X=typeof G=="number"?{mainAxis:G,altAxis:G}:Object.assign({mainAxis:0,altAxis:0},G),ea=t.modifiersData.offset?t.modifiersData.offset[t.placement]:null,W={x:0,y:0};if(ta){if(l){var ra,xa=P==="y"?Xa:Za,Aa=P==="y"?ls:is,ga=P==="y"?"height":"width",ha=ta[P],fa=ha+O[xa],Ra=ha-O[Aa],za=k?-ka[ga]/2:0,Ha=I===wt?ia[ga]:ka[ga],La=I===wt?-ka[ga]:-ia[ga],ts=t.elements.arrow,Wa=k&&ts?$d(ts):{width:0,height:0},Fa=t.modifiersData["arrow#persistent"]?t.modifiersData["arrow#persistent"].padding:Dp(),Ma=Fa[xa],A=Fa[Aa],K=bn(0,ia[ga],Wa[ga]),z=V?ia[ga]/2-za-K-Ma-X.mainAxis:Ha-K-Ma-X.mainAxis,aa=V?-ia[ga]/2+za+K+A+X.mainAxis:La+K+A+X.mainAxis,T=t.elements.arrow&&Cn(t.elements.arrow),m=T?P==="y"?T.clientTop||0:T.clientLeft||0:0,f=(ra=ea==null?void 0:ea[P])!=null?ra:0,_=ha+z-f-m,E=ha+aa-f,R=bn(k?ce(fa,_):fa,ha,k?jt(Ra,E):Ra);ta[P]=R,W[P]=R-ha}if(o){var D,H=P==="x"?Xa:Za,F=P==="x"?ls:is,q=ta[Q],N=Q==="y"?"height":"width",pa=q+O[H],Y=q-O[F],na=[Xa,Za].indexOf(y)!==-1,oa=(D=ea==null?void 0:ea[Q])!=null?D:0,ma=na?pa:q-ia[N]-ka[N]-oa+X.altAxis,ya=na?q+ia[N]+ka[N]-oa-X.altAxis:Y,ja=k&&na?Bg(ma,q,ya):bn(k?ma:pa,q,k?ya:Y);ta[Q]=ja,W[Q]=ja-q}t.modifiersData[n]=W}}const Jp={name:"preventOverflow",enabled:!0,phase:"main",fn:pk,requiresIfExists:["offset"]};function rk(a){return{scrollLeft:a.scrollLeft,scrollTop:a.scrollTop}}function ok(a){return a===cs(a)||!ms(a)?Vd(a):rk(a)}function uk(a){var t=a.getBoundingClientRect(),s=Vt(t.width)/a.offsetWidth||1,n=Vt(t.height)/a.offsetHeight||1;return s!==1||n!==1}function hk(a,t,s){s===void 0&&(s=!1);var n=ms(t),e=ms(t)&&uk(t),l=et(t),i=Kt(a,e,s),o={scrollLeft:0,scrollTop:0},r={x:0,y:0};return(n||!n&&!s)&&((Ls(t)!=="body"||zd(l))&&(o=ok(t)),ms(t)?(r=Kt(t,!0),r.x+=t.clientLeft,r.y+=t.clientTop):l&&(r.x=Kd(l))),{x:i.left+o.scrollLeft-r.x,y:i.top+o.scrollTop-r.y,width:i.width,height:i.height}}function vk(a){var t=new Map,s=new Set,n=[];a.forEach(function(l){t.set(l.name,l)});function e(l){s.add(l.name);var i=[].concat(l.requires||[],l.requiresIfExists||[]);i.forEach(function(o){if(!s.has(o)){var r=t.get(o);r&&e(r)}}),n.push(l)}return a.forEach(function(l){s.has(l.name)||e(l)}),n}function mk(a){var t=vk(a);return Lp.reduce(function(s,n){return s.concat(t.filter(function(e){return e.phase===n}))},[])}function bk(a){var t;return function(){return t||(t=new Promise(function(s){Promise.resolve().then(function(){t=void 0,s(a())})})),t}}function fk(a){var t=a.reduce(function(s,n){var e=s[n.name];return s[n.name]=e?Object.assign({},e,n,{options:Object.assign({},e.options,n.options),data:Object.assign({},e.data,n.data)}):n,s},{});return Object.keys(t).map(function(s){return t[s]})}var Ui={placement:"bottom",modifiers:[],strategy:"absolute"};function Vi(){for(var a=arguments.length,t=new Array(a),s=0;s<a;s++)t[s]=arguments[s];return!t.some(function(n){return!(n&&typeof n.getBoundingClientRect=="function")})}function _e(a){a===void 0&&(a={});var t=a,s=t.defaultModifiers,n=s===void 0?[]:s,e=t.defaultOptions,l=e===void 0?Ui:e;return function(o,r,h){h===void 0&&(h=l);var u={placement:"bottom",orderedModifiers:[],options:Object.assign({},Ui,l),modifiersData:{},elements:{reference:o,popper:r},attributes:{},styles:{}},v=[],j=!1,k={state:u,setOptions:function(y){var I=typeof y=="function"?y(u.options):y;C(),u.options=Object.assign({},l,u.options,I),u.scrollParents={reference:_t(o)?fn(o):o.contextElement?fn(o.contextElement):[],popper:fn(r)};var V=mk(fk([].concat(n,u.options.modifiers)));return u.orderedModifiers=V.filter(function(P){return P.enabled}),M(),k.update()},forceUpdate:function(){if(!j){var y=u.elements,I=y.reference,V=y.popper;if(Vi(I,V)){u.rects={reference:hk(I,Cn(V),u.options.strategy==="fixed"),popper:$d(V)},u.reset=!1,u.placement=u.options.placement,u.orderedModifiers.forEach(function(X){return u.modifiersData[X.name]=Object.assign({},X.data)});for(var P=0;P<u.orderedModifiers.length;P++){if(u.reset===!0){u.reset=!1,P=-1;continue}var Q=u.orderedModifiers[P],ta=Q.fn,ia=Q.options,ka=ia===void 0?{}:ia,G=Q.name;typeof ta=="function"&&(u=ta({state:u,options:ka,name:G,instance:k})||u)}}}},update:bk(function(){return new Promise(function(O){k.forceUpdate(),O(u)})}),destroy:function(){C(),j=!0}};if(!Vi(o,r))return k;k.setOptions(h).then(function(O){!j&&h.onFirstUpdate&&h.onFirstUpdate(O)});function M(){u.orderedModifiers.forEach(function(O){var y=O.name,I=O.options,V=I===void 0?{}:I,P=O.effect;if(typeof P=="function"){var Q=P({state:u,name:y,instance:k,options:V}),ta=function(){};v.push(Q||ta)}})}function C(){v.forEach(function(O){return O()}),v=[]}return k}}var gk=_e(),kk=[Ud,Wd,Jd,Bd],jk=_e({defaultModifiers:kk}),yk=[Ud,Wd,Jd,Bd,Fp,Bp,Jp,Np,$p],wk=_e({defaultModifiers:yk});const _k=Object.freeze(Object.defineProperty({__proto__:null,afterMain:Tp,afterRead:Sp,afterWrite:Ap,applyStyles:Bd,arrow:Np,auto:ye,basePlacements:Yt,beforeMain:qp,beforeRead:wp,beforeWrite:Ep,bottom:ls,clippingParents:jp,computeStyles:Jd,createPopper:wk,createPopperBase:gk,createPopperLite:jk,detectOverflow:Wt,end:Ut,eventListeners:Ud,flip:Bp,hide:$p,left:Za,main:xp,modifierPhases:Lp,offset:Fp,placements:Od,popper:Nt,popperGenerator:_e,popperOffsets:Wd,preventOverflow:Jp,read:_p,reference:yp,right:is,start:wt,top:Xa,variationPlacements:vd,viewport:Nd,write:Cp},Symbol.toStringTag,{value:"Module"})),Sk=Pg(_k);/*!
  * Bootstrap v5.3.6 (https://getbootstrap.com/)
  * Copyright 2011-2025 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */var qk=Zn.exports,Ki;function xk(){return Ki||(Ki=1,function(a,t){(function(s,n){a.exports=n(Sk)})(qk,function(s){function n(b){const d=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(b){for(const p in b)if(p!=="default"){const g=Object.getOwnPropertyDescriptor(b,p);Object.defineProperty(d,p,g.get?g:{enumerable:!0,get:()=>b[p]})}}return d.default=b,Object.freeze(d)}const e=n(s),l=new Map,i={set(b,d,p){l.has(b)||l.set(b,new Map);const g=l.get(b);if(!g.has(d)&&g.size!==0){console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(g.keys())[0]}.`);return}g.set(d,p)},get(b,d){return l.has(b)&&l.get(b).get(d)||null},remove(b,d){if(!l.has(b))return;const p=l.get(b);p.delete(d),p.size===0&&l.delete(b)}},o=1e6,r=1e3,h="transitionend",u=b=>(b&&window.CSS&&window.CSS.escape&&(b=b.replace(/#([^\s"#']+)/g,(d,p)=>`#${CSS.escape(p)}`)),b),v=b=>b==null?`${b}`:Object.prototype.toString.call(b).match(/\s([a-z]+)/i)[1].toLowerCase(),j=b=>{do b+=Math.floor(Math.random()*o);while(document.getElementById(b));return b},k=b=>{if(!b)return 0;let{transitionDuration:d,transitionDelay:p}=window.getComputedStyle(b);const g=Number.parseFloat(d),L=Number.parseFloat(p);return!g&&!L?0:(d=d.split(",")[0],p=p.split(",")[0],(Number.parseFloat(d)+Number.parseFloat(p))*r)},M=b=>{b.dispatchEvent(new Event(h))},C=b=>!b||typeof b!="object"?!1:(typeof b.jquery<"u"&&(b=b[0]),typeof b.nodeType<"u"),O=b=>C(b)?b.jquery?b[0]:b:typeof b=="string"&&b.length>0?document.querySelector(u(b)):null,y=b=>{if(!C(b)||b.getClientRects().length===0)return!1;const d=getComputedStyle(b).getPropertyValue("visibility")==="visible",p=b.closest("details:not([open])");if(!p)return d;if(p!==b){const g=b.closest("summary");if(g&&g.parentNode!==p||g===null)return!1}return d},I=b=>!b||b.nodeType!==Node.ELEMENT_NODE||b.classList.contains("disabled")?!0:typeof b.disabled<"u"?b.disabled:b.hasAttribute("disabled")&&b.getAttribute("disabled")!=="false",V=b=>{if(!document.documentElement.attachShadow)return null;if(typeof b.getRootNode=="function"){const d=b.getRootNode();return d instanceof ShadowRoot?d:null}return b instanceof ShadowRoot?b:b.parentNode?V(b.parentNode):null},P=()=>{},Q=b=>{b.offsetHeight},ta=()=>window.jQuery&&!document.body.hasAttribute("data-bs-no-jquery")?window.jQuery:null,ia=[],ka=b=>{document.readyState==="loading"?(ia.length||document.addEventListener("DOMContentLoaded",()=>{for(const d of ia)d()}),ia.push(b)):b()},G=()=>document.documentElement.dir==="rtl",X=b=>{ka(()=>{const d=ta();if(d){const p=b.NAME,g=d.fn[p];d.fn[p]=b.jQueryInterface,d.fn[p].Constructor=b,d.fn[p].noConflict=()=>(d.fn[p]=g,b.jQueryInterface)}})},ea=(b,d=[],p=b)=>typeof b=="function"?b.call(...d):p,W=(b,d,p=!0)=>{if(!p){ea(b);return}const L=k(d)+5;let U=!1;const B=({target:ba})=>{ba===d&&(U=!0,d.removeEventListener(h,B),ea(b))};d.addEventListener(h,B),setTimeout(()=>{U||M(d)},L)},ra=(b,d,p,g)=>{const L=b.length;let U=b.indexOf(d);return U===-1?!p&&g?b[L-1]:b[0]:(U+=p?1:-1,g&&(U=(U+L)%L),b[Math.max(0,Math.min(U,L-1))])},xa=/[^.]*(?=\..*)\.|.*/,Aa=/\..*/,ga=/::\d+$/,ha={};let fa=1;const Ra={mouseenter:"mouseover",mouseleave:"mouseout"},za=new Set(["click","dblclick","mouseup","mousedown","contextmenu","mousewheel","DOMMouseScroll","mouseover","mouseout","mousemove","selectstart","selectend","keydown","keypress","keyup","orientationchange","touchstart","touchmove","touchend","touchcancel","pointerdown","pointermove","pointerup","pointerleave","pointercancel","gesturestart","gesturechange","gestureend","focus","blur","change","reset","select","submit","focusin","focusout","load","unload","beforeunload","resize","move","DOMContentLoaded","readystatechange","error","abort","scroll"]);function Ha(b,d){return d&&`${d}::${fa++}`||b.uidEvent||fa++}function La(b){const d=Ha(b);return b.uidEvent=d,ha[d]=ha[d]||{},ha[d]}function ts(b,d){return function p(g){return m(g,{delegateTarget:b}),p.oneOff&&T.off(b,g.type,d),d.apply(b,[g])}}function Wa(b,d,p){return function g(L){const U=b.querySelectorAll(d);for(let{target:B}=L;B&&B!==this;B=B.parentNode)for(const ba of U)if(ba===B)return m(L,{delegateTarget:B}),g.oneOff&&T.off(b,L.type,d,p),p.apply(B,[L])}}function Fa(b,d,p=null){return Object.values(b).find(g=>g.callable===d&&g.delegationSelector===p)}function Ma(b,d,p){const g=typeof d=="string",L=g?p:d||p;let U=aa(b);return za.has(U)||(U=b),[g,L,U]}function A(b,d,p,g,L){if(typeof d!="string"||!b)return;let[U,B,ba]=Ma(d,p,g);d in Ra&&(B=(wh=>function(Rt){if(!Rt.relatedTarget||Rt.relatedTarget!==Rt.delegateTarget&&!Rt.delegateTarget.contains(Rt.relatedTarget))return wh.call(this,Rt)})(B));const as=La(b),us=as[ba]||(as[ba]={}),Ia=Fa(us,B,U?p:null);if(Ia){Ia.oneOff=Ia.oneOff&&L;return}const qs=Ha(B,d.replace(xa,"")),ks=U?Wa(b,p,B):ts(b,B);ks.delegationSelector=U?p:null,ks.callable=B,ks.oneOff=L,ks.uidEvent=qs,us[qs]=ks,b.addEventListener(ba,ks,U)}function K(b,d,p,g,L){const U=Fa(d[p],g,L);U&&(b.removeEventListener(p,U,!!L),delete d[p][U.uidEvent])}function z(b,d,p,g){const L=d[p]||{};for(const[U,B]of Object.entries(L))U.includes(g)&&K(b,d,p,B.callable,B.delegationSelector)}function aa(b){return b=b.replace(Aa,""),Ra[b]||b}const T={on(b,d,p,g){A(b,d,p,g,!1)},one(b,d,p,g){A(b,d,p,g,!0)},off(b,d,p,g){if(typeof d!="string"||!b)return;const[L,U,B]=Ma(d,p,g),ba=B!==d,as=La(b),us=as[B]||{},Ia=d.startsWith(".");if(typeof U<"u"){if(!Object.keys(us).length)return;K(b,as,B,U,L?p:null);return}if(Ia)for(const qs of Object.keys(as))z(b,as,qs,d.slice(1));for(const[qs,ks]of Object.entries(us)){const Fn=qs.replace(ga,"");(!ba||d.includes(Fn))&&K(b,as,B,ks.callable,ks.delegationSelector)}},trigger(b,d,p){if(typeof d!="string"||!b)return null;const g=ta(),L=aa(d),U=d!==L;let B=null,ba=!0,as=!0,us=!1;U&&g&&(B=g.Event(d,p),g(b).trigger(B),ba=!B.isPropagationStopped(),as=!B.isImmediatePropagationStopped(),us=B.isDefaultPrevented());const Ia=m(new Event(d,{bubbles:ba,cancelable:!0}),p);return us&&Ia.preventDefault(),as&&b.dispatchEvent(Ia),Ia.defaultPrevented&&B&&B.preventDefault(),Ia}};function m(b,d={}){for(const[p,g]of Object.entries(d))try{b[p]=g}catch{Object.defineProperty(b,p,{configurable:!0,get(){return g}})}return b}function f(b){if(b==="true")return!0;if(b==="false")return!1;if(b===Number(b).toString())return Number(b);if(b===""||b==="null")return null;if(typeof b!="string")return b;try{return JSON.parse(decodeURIComponent(b))}catch{return b}}function _(b){return b.replace(/[A-Z]/g,d=>`-${d.toLowerCase()}`)}const E={setDataAttribute(b,d,p){b.setAttribute(`data-bs-${_(d)}`,p)},removeDataAttribute(b,d){b.removeAttribute(`data-bs-${_(d)}`)},getDataAttributes(b){if(!b)return{};const d={},p=Object.keys(b.dataset).filter(g=>g.startsWith("bs")&&!g.startsWith("bsConfig"));for(const g of p){let L=g.replace(/^bs/,"");L=L.charAt(0).toLowerCase()+L.slice(1),d[L]=f(b.dataset[g])}return d},getDataAttribute(b,d){return f(b.getAttribute(`data-bs-${_(d)}`))}};class R{static get Default(){return{}}static get DefaultType(){return{}}static get NAME(){throw new Error('You have to implement the static method "NAME", for each component!')}_getConfig(d){return d=this._mergeConfigObj(d),d=this._configAfterMerge(d),this._typeCheckConfig(d),d}_configAfterMerge(d){return d}_mergeConfigObj(d,p){const g=C(p)?E.getDataAttribute(p,"config"):{};return{...this.constructor.Default,...typeof g=="object"?g:{},...C(p)?E.getDataAttributes(p):{},...typeof d=="object"?d:{}}}_typeCheckConfig(d,p=this.constructor.DefaultType){for(const[g,L]of Object.entries(p)){const U=d[g],B=C(U)?"element":v(U);if(!new RegExp(L).test(B))throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option "${g}" provided type "${B}" but expected type "${L}".`)}}}const D="5.3.6";class H extends R{constructor(d,p){super(),d=O(d),d&&(this._element=d,this._config=this._getConfig(p),i.set(this._element,this.constructor.DATA_KEY,this))}dispose(){i.remove(this._element,this.constructor.DATA_KEY),T.off(this._element,this.constructor.EVENT_KEY);for(const d of Object.getOwnPropertyNames(this))this[d]=null}_queueCallback(d,p,g=!0){W(d,p,g)}_getConfig(d){return d=this._mergeConfigObj(d,this._element),d=this._configAfterMerge(d),this._typeCheckConfig(d),d}static getInstance(d){return i.get(O(d),this.DATA_KEY)}static getOrCreateInstance(d,p={}){return this.getInstance(d)||new this(d,typeof p=="object"?p:null)}static get VERSION(){return D}static get DATA_KEY(){return`bs.${this.NAME}`}static get EVENT_KEY(){return`.${this.DATA_KEY}`}static eventName(d){return`${d}${this.EVENT_KEY}`}}const F=b=>{let d=b.getAttribute("data-bs-target");if(!d||d==="#"){let p=b.getAttribute("href");if(!p||!p.includes("#")&&!p.startsWith("."))return null;p.includes("#")&&!p.startsWith("#")&&(p=`#${p.split("#")[1]}`),d=p&&p!=="#"?p.trim():null}return d?d.split(",").map(p=>u(p)).join(","):null},q={find(b,d=document.documentElement){return[].concat(...Element.prototype.querySelectorAll.call(d,b))},findOne(b,d=document.documentElement){return Element.prototype.querySelector.call(d,b)},children(b,d){return[].concat(...b.children).filter(p=>p.matches(d))},parents(b,d){const p=[];let g=b.parentNode.closest(d);for(;g;)p.push(g),g=g.parentNode.closest(d);return p},prev(b,d){let p=b.previousElementSibling;for(;p;){if(p.matches(d))return[p];p=p.previousElementSibling}return[]},next(b,d){let p=b.nextElementSibling;for(;p;){if(p.matches(d))return[p];p=p.nextElementSibling}return[]},focusableChildren(b){const d=["a","button","input","textarea","select","details","[tabindex]",'[contenteditable="true"]'].map(p=>`${p}:not([tabindex^="-"])`).join(",");return this.find(d,b).filter(p=>!I(p)&&y(p))},getSelectorFromElement(b){const d=F(b);return d&&q.findOne(d)?d:null},getElementFromSelector(b){const d=F(b);return d?q.findOne(d):null},getMultipleElementsFromSelector(b){const d=F(b);return d?q.find(d):[]}},N=(b,d="hide")=>{const p=`click.dismiss${b.EVENT_KEY}`,g=b.NAME;T.on(document,p,`[data-bs-dismiss="${g}"]`,function(L){if(["A","AREA"].includes(this.tagName)&&L.preventDefault(),I(this))return;const U=q.getElementFromSelector(this)||this.closest(`.${g}`);b.getOrCreateInstance(U)[d]()})},pa="alert",na=".bs.alert",oa=`close${na}`,ma=`closed${na}`,ya="fade",ja="show";class Pa extends H{static get NAME(){return pa}close(){if(T.trigger(this._element,oa).defaultPrevented)return;this._element.classList.remove(ja);const p=this._element.classList.contains(ya);this._queueCallback(()=>this._destroyElement(),this._element,p)}_destroyElement(){this._element.remove(),T.trigger(this._element,ma),this.dispose()}static jQueryInterface(d){return this.each(function(){const p=Pa.getOrCreateInstance(this);if(typeof d=="string"){if(p[d]===void 0||d.startsWith("_")||d==="constructor")throw new TypeError(`No method named "${d}"`);p[d](this)}})}}N(Pa,"close"),X(Pa);const Ja="button",ps=".bs.button",dt=".data-api",An="active",Ua='[data-bs-toggle="button"]',rs=`click${ps}${dt}`;class Js extends H{static get NAME(){return Ja}toggle(){this._element.setAttribute("aria-pressed",this._element.classList.toggle(An))}static jQueryInterface(d){return this.each(function(){const p=Js.getOrCreateInstance(this);d==="toggle"&&p[d]()})}}T.on(document,rs,Ua,b=>{b.preventDefault();const d=b.target.closest(Ua);Js.getOrCreateInstance(d).toggle()}),X(Js);const Vp="swipe",qt=".bs.swipe",Kp=`touchstart${qt}`,zp=`touchmove${qt}`,Wp=`touchend${qt}`,Gp=`pointerdown${qt}`,Yp=`pointerup${qt}`,Qp="touch",Xp="pen",Zp="pointer-event",ar=40,sr={endCallback:null,leftCallback:null,rightCallback:null},tr={endCallback:"(function|null)",leftCallback:"(function|null)",rightCallback:"(function|null)"};class Ln extends R{constructor(d,p){super(),this._element=d,!(!d||!Ln.isSupported())&&(this._config=this._getConfig(p),this._deltaX=0,this._supportPointerEvents=!!window.PointerEvent,this._initEvents())}static get Default(){return sr}static get DefaultType(){return tr}static get NAME(){return Vp}dispose(){T.off(this._element,qt)}_start(d){if(!this._supportPointerEvents){this._deltaX=d.touches[0].clientX;return}this._eventIsPointerPenTouch(d)&&(this._deltaX=d.clientX)}_end(d){this._eventIsPointerPenTouch(d)&&(this._deltaX=d.clientX-this._deltaX),this._handleSwipe(),ea(this._config.endCallback)}_move(d){this._deltaX=d.touches&&d.touches.length>1?0:d.touches[0].clientX-this._deltaX}_handleSwipe(){const d=Math.abs(this._deltaX);if(d<=ar)return;const p=d/this._deltaX;this._deltaX=0,p&&ea(p>0?this._config.rightCallback:this._config.leftCallback)}_initEvents(){this._supportPointerEvents?(T.on(this._element,Gp,d=>this._start(d)),T.on(this._element,Yp,d=>this._end(d)),this._element.classList.add(Zp)):(T.on(this._element,Kp,d=>this._start(d)),T.on(this._element,zp,d=>this._move(d)),T.on(this._element,Wp,d=>this._end(d)))}_eventIsPointerPenTouch(d){return this._supportPointerEvents&&(d.pointerType===Xp||d.pointerType===Qp)}static isSupported(){return"ontouchstart"in document.documentElement||navigator.maxTouchPoints>0}}const nr="carousel",Us=".bs.carousel",Gd=".data-api",er="ArrowLeft",dr="ArrowRight",lr=500,Qt="next",xt="prev",Tt="left",Mn="right",ir=`slide${Us}`,Se=`slid${Us}`,cr=`keydown${Us}`,pr=`mouseenter${Us}`,rr=`mouseleave${Us}`,or=`dragstart${Us}`,ur=`load${Us}${Gd}`,hr=`click${Us}${Gd}`,Yd="carousel",Rn="active",vr="slide",mr="carousel-item-end",br="carousel-item-start",fr="carousel-item-next",gr="carousel-item-prev",Qd=".active",Xd=".carousel-item",kr=Qd+Xd,jr=".carousel-item img",yr=".carousel-indicators",wr="[data-bs-slide], [data-bs-slide-to]",_r='[data-bs-ride="carousel"]',Sr={[er]:Mn,[dr]:Tt},qr={interval:5e3,keyboard:!0,pause:"hover",ride:!1,touch:!0,wrap:!0},xr={interval:"(number|boolean)",keyboard:"boolean",pause:"(string|boolean)",ride:"(boolean|string)",touch:"boolean",wrap:"boolean"};class Et extends H{constructor(d,p){super(d,p),this._interval=null,this._activeElement=null,this._isSliding=!1,this.touchTimeout=null,this._swipeHelper=null,this._indicatorsElement=q.findOne(yr,this._element),this._addEventListeners(),this._config.ride===Yd&&this.cycle()}static get Default(){return qr}static get DefaultType(){return xr}static get NAME(){return nr}next(){this._slide(Qt)}nextWhenVisible(){!document.hidden&&y(this._element)&&this.next()}prev(){this._slide(xt)}pause(){this._isSliding&&M(this._element),this._clearInterval()}cycle(){this._clearInterval(),this._updateInterval(),this._interval=setInterval(()=>this.nextWhenVisible(),this._config.interval)}_maybeEnableCycle(){if(this._config.ride){if(this._isSliding){T.one(this._element,Se,()=>this.cycle());return}this.cycle()}}to(d){const p=this._getItems();if(d>p.length-1||d<0)return;if(this._isSliding){T.one(this._element,Se,()=>this.to(d));return}const g=this._getItemIndex(this._getActive());if(g===d)return;const L=d>g?Qt:xt;this._slide(L,p[d])}dispose(){this._swipeHelper&&this._swipeHelper.dispose(),super.dispose()}_configAfterMerge(d){return d.defaultInterval=d.interval,d}_addEventListeners(){this._config.keyboard&&T.on(this._element,cr,d=>this._keydown(d)),this._config.pause==="hover"&&(T.on(this._element,pr,()=>this.pause()),T.on(this._element,rr,()=>this._maybeEnableCycle())),this._config.touch&&Ln.isSupported()&&this._addTouchEventListeners()}_addTouchEventListeners(){for(const g of q.find(jr,this._element))T.on(g,or,L=>L.preventDefault());const p={leftCallback:()=>this._slide(this._directionToOrder(Tt)),rightCallback:()=>this._slide(this._directionToOrder(Mn)),endCallback:()=>{this._config.pause==="hover"&&(this.pause(),this.touchTimeout&&clearTimeout(this.touchTimeout),this.touchTimeout=setTimeout(()=>this._maybeEnableCycle(),lr+this._config.interval))}};this._swipeHelper=new Ln(this._element,p)}_keydown(d){if(/input|textarea/i.test(d.target.tagName))return;const p=Sr[d.key];p&&(d.preventDefault(),this._slide(this._directionToOrder(p)))}_getItemIndex(d){return this._getItems().indexOf(d)}_setActiveIndicatorElement(d){if(!this._indicatorsElement)return;const p=q.findOne(Qd,this._indicatorsElement);p.classList.remove(Rn),p.removeAttribute("aria-current");const g=q.findOne(`[data-bs-slide-to="${d}"]`,this._indicatorsElement);g&&(g.classList.add(Rn),g.setAttribute("aria-current","true"))}_updateInterval(){const d=this._activeElement||this._getActive();if(!d)return;const p=Number.parseInt(d.getAttribute("data-bs-interval"),10);this._config.interval=p||this._config.defaultInterval}_slide(d,p=null){if(this._isSliding)return;const g=this._getActive(),L=d===Qt,U=p||ra(this._getItems(),g,L,this._config.wrap);if(U===g)return;const B=this._getItemIndex(U),ba=Fn=>T.trigger(this._element,Fn,{relatedTarget:U,direction:this._orderToDirection(d),from:this._getItemIndex(g),to:B});if(ba(ir).defaultPrevented||!g||!U)return;const us=!!this._interval;this.pause(),this._isSliding=!0,this._setActiveIndicatorElement(B),this._activeElement=U;const Ia=L?br:mr,qs=L?fr:gr;U.classList.add(qs),Q(U),g.classList.add(Ia),U.classList.add(Ia);const ks=()=>{U.classList.remove(Ia,qs),U.classList.add(Rn),g.classList.remove(Rn,qs,Ia),this._isSliding=!1,ba(Se)};this._queueCallback(ks,g,this._isAnimated()),us&&this.cycle()}_isAnimated(){return this._element.classList.contains(vr)}_getActive(){return q.findOne(kr,this._element)}_getItems(){return q.find(Xd,this._element)}_clearInterval(){this._interval&&(clearInterval(this._interval),this._interval=null)}_directionToOrder(d){return G()?d===Tt?xt:Qt:d===Tt?Qt:xt}_orderToDirection(d){return G()?d===xt?Tt:Mn:d===xt?Mn:Tt}static jQueryInterface(d){return this.each(function(){const p=Et.getOrCreateInstance(this,d);if(typeof d=="number"){p.to(d);return}if(typeof d=="string"){if(p[d]===void 0||d.startsWith("_")||d==="constructor")throw new TypeError(`No method named "${d}"`);p[d]()}})}}T.on(document,hr,wr,function(b){const d=q.getElementFromSelector(this);if(!d||!d.classList.contains(Yd))return;b.preventDefault();const p=Et.getOrCreateInstance(d),g=this.getAttribute("data-bs-slide-to");if(g){p.to(g),p._maybeEnableCycle();return}if(E.getDataAttribute(this,"slide")==="next"){p.next(),p._maybeEnableCycle();return}p.prev(),p._maybeEnableCycle()}),T.on(window,ur,()=>{const b=q.find(_r);for(const d of b)Et.getOrCreateInstance(d)}),X(Et);const Tr="collapse",Xt=".bs.collapse",Er=".data-api",Cr=`show${Xt}`,Ar=`shown${Xt}`,Lr=`hide${Xt}`,Mr=`hidden${Xt}`,Rr=`click${Xt}${Er}`,qe="show",Ct="collapse",Dn="collapsing",Dr="collapsed",Pr=`:scope .${Ct} .${Ct}`,Ir="collapse-horizontal",Nr="width",Or="height",Hr=".collapse.show, .collapse.collapsing",xe='[data-bs-toggle="collapse"]',Br={parent:null,toggle:!0},$r={parent:"(null|element)",toggle:"boolean"};class At extends H{constructor(d,p){super(d,p),this._isTransitioning=!1,this._triggerArray=[];const g=q.find(xe);for(const L of g){const U=q.getSelectorFromElement(L),B=q.find(U).filter(ba=>ba===this._element);U!==null&&B.length&&this._triggerArray.push(L)}this._initializeChildren(),this._config.parent||this._addAriaAndCollapsedClass(this._triggerArray,this._isShown()),this._config.toggle&&this.toggle()}static get Default(){return Br}static get DefaultType(){return $r}static get NAME(){return Tr}toggle(){this._isShown()?this.hide():this.show()}show(){if(this._isTransitioning||this._isShown())return;let d=[];if(this._config.parent&&(d=this._getFirstLevelChildren(Hr).filter(ba=>ba!==this._element).map(ba=>At.getOrCreateInstance(ba,{toggle:!1}))),d.length&&d[0]._isTransitioning||T.trigger(this._element,Cr).defaultPrevented)return;for(const ba of d)ba.hide();const g=this._getDimension();this._element.classList.remove(Ct),this._element.classList.add(Dn),this._element.style[g]=0,this._addAriaAndCollapsedClass(this._triggerArray,!0),this._isTransitioning=!0;const L=()=>{this._isTransitioning=!1,this._element.classList.remove(Dn),this._element.classList.add(Ct,qe),this._element.style[g]="",T.trigger(this._element,Ar)},B=`scroll${g[0].toUpperCase()+g.slice(1)}`;this._queueCallback(L,this._element,!0),this._element.style[g]=`${this._element[B]}px`}hide(){if(this._isTransitioning||!this._isShown()||T.trigger(this._element,Lr).defaultPrevented)return;const p=this._getDimension();this._element.style[p]=`${this._element.getBoundingClientRect()[p]}px`,Q(this._element),this._element.classList.add(Dn),this._element.classList.remove(Ct,qe);for(const L of this._triggerArray){const U=q.getElementFromSelector(L);U&&!this._isShown(U)&&this._addAriaAndCollapsedClass([L],!1)}this._isTransitioning=!0;const g=()=>{this._isTransitioning=!1,this._element.classList.remove(Dn),this._element.classList.add(Ct),T.trigger(this._element,Mr)};this._element.style[p]="",this._queueCallback(g,this._element,!0)}_isShown(d=this._element){return d.classList.contains(qe)}_configAfterMerge(d){return d.toggle=!!d.toggle,d.parent=O(d.parent),d}_getDimension(){return this._element.classList.contains(Ir)?Nr:Or}_initializeChildren(){if(!this._config.parent)return;const d=this._getFirstLevelChildren(xe);for(const p of d){const g=q.getElementFromSelector(p);g&&this._addAriaAndCollapsedClass([p],this._isShown(g))}}_getFirstLevelChildren(d){const p=q.find(Pr,this._config.parent);return q.find(d,this._config.parent).filter(g=>!p.includes(g))}_addAriaAndCollapsedClass(d,p){if(d.length)for(const g of d)g.classList.toggle(Dr,!p),g.setAttribute("aria-expanded",p)}static jQueryInterface(d){const p={};return typeof d=="string"&&/show|hide/.test(d)&&(p.toggle=!1),this.each(function(){const g=At.getOrCreateInstance(this,p);if(typeof d=="string"){if(typeof g[d]>"u")throw new TypeError(`No method named "${d}"`);g[d]()}})}}T.on(document,Rr,xe,function(b){(b.target.tagName==="A"||b.delegateTarget&&b.delegateTarget.tagName==="A")&&b.preventDefault();for(const d of q.getMultipleElementsFromSelector(this))At.getOrCreateInstance(d,{toggle:!1}).toggle()}),X(At);const Zd="dropdown",lt=".bs.dropdown",Te=".data-api",Fr="Escape",al="Tab",Jr="ArrowUp",sl="ArrowDown",Ur=2,Vr=`hide${lt}`,Kr=`hidden${lt}`,zr=`show${lt}`,Wr=`shown${lt}`,tl=`click${lt}${Te}`,nl=`keydown${lt}${Te}`,Gr=`keyup${lt}${Te}`,Lt="show",Yr="dropup",Qr="dropend",Xr="dropstart",Zr="dropup-center",ao="dropdown-center",it='[data-bs-toggle="dropdown"]:not(.disabled):not(:disabled)',so=`${it}.${Lt}`,Pn=".dropdown-menu",to=".navbar",no=".navbar-nav",eo=".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",lo=G()?"top-end":"top-start",io=G()?"top-start":"top-end",co=G()?"bottom-end":"bottom-start",po=G()?"bottom-start":"bottom-end",ro=G()?"left-start":"right-start",oo=G()?"right-start":"left-start",uo="top",ho="bottom",vo={autoClose:!0,boundary:"clippingParents",display:"dynamic",offset:[0,2],popperConfig:null,reference:"toggle"},mo={autoClose:"(boolean|string)",boundary:"(string|element)",display:"string",offset:"(array|string|function)",popperConfig:"(null|object|function)",reference:"(string|element|object)"};class gs extends H{constructor(d,p){super(d,p),this._popper=null,this._parent=this._element.parentNode,this._menu=q.next(this._element,Pn)[0]||q.prev(this._element,Pn)[0]||q.findOne(Pn,this._parent),this._inNavbar=this._detectNavbar()}static get Default(){return vo}static get DefaultType(){return mo}static get NAME(){return Zd}toggle(){return this._isShown()?this.hide():this.show()}show(){if(I(this._element)||this._isShown())return;const d={relatedTarget:this._element};if(!T.trigger(this._element,zr,d).defaultPrevented){if(this._createPopper(),"ontouchstart"in document.documentElement&&!this._parent.closest(no))for(const g of[].concat(...document.body.children))T.on(g,"mouseover",P);this._element.focus(),this._element.setAttribute("aria-expanded",!0),this._menu.classList.add(Lt),this._element.classList.add(Lt),T.trigger(this._element,Wr,d)}}hide(){if(I(this._element)||!this._isShown())return;const d={relatedTarget:this._element};this._completeHide(d)}dispose(){this._popper&&this._popper.destroy(),super.dispose()}update(){this._inNavbar=this._detectNavbar(),this._popper&&this._popper.update()}_completeHide(d){if(!T.trigger(this._element,Vr,d).defaultPrevented){if("ontouchstart"in document.documentElement)for(const g of[].concat(...document.body.children))T.off(g,"mouseover",P);this._popper&&this._popper.destroy(),this._menu.classList.remove(Lt),this._element.classList.remove(Lt),this._element.setAttribute("aria-expanded","false"),E.removeDataAttribute(this._menu,"popper"),T.trigger(this._element,Kr,d),this._element.focus()}}_getConfig(d){if(d=super._getConfig(d),typeof d.reference=="object"&&!C(d.reference)&&typeof d.reference.getBoundingClientRect!="function")throw new TypeError(`${Zd.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`);return d}_createPopper(){if(typeof e>"u")throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org/docs/v2/)");let d=this._element;this._config.reference==="parent"?d=this._parent:C(this._config.reference)?d=O(this._config.reference):typeof this._config.reference=="object"&&(d=this._config.reference);const p=this._getPopperConfig();this._popper=e.createPopper(d,this._menu,p)}_isShown(){return this._menu.classList.contains(Lt)}_getPlacement(){const d=this._parent;if(d.classList.contains(Qr))return ro;if(d.classList.contains(Xr))return oo;if(d.classList.contains(Zr))return uo;if(d.classList.contains(ao))return ho;const p=getComputedStyle(this._menu).getPropertyValue("--bs-position").trim()==="end";return d.classList.contains(Yr)?p?io:lo:p?po:co}_detectNavbar(){return this._element.closest(to)!==null}_getOffset(){const{offset:d}=this._config;return typeof d=="string"?d.split(",").map(p=>Number.parseInt(p,10)):typeof d=="function"?p=>d(p,this._element):d}_getPopperConfig(){const d={placement:this._getPlacement(),modifiers:[{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"offset",options:{offset:this._getOffset()}}]};return(this._inNavbar||this._config.display==="static")&&(E.setDataAttribute(this._menu,"popper","static"),d.modifiers=[{name:"applyStyles",enabled:!1}]),{...d,...ea(this._config.popperConfig,[void 0,d])}}_selectMenuItem({key:d,target:p}){const g=q.find(eo,this._menu).filter(L=>y(L));g.length&&ra(g,p,d===sl,!g.includes(p)).focus()}static jQueryInterface(d){return this.each(function(){const p=gs.getOrCreateInstance(this,d);if(typeof d=="string"){if(typeof p[d]>"u")throw new TypeError(`No method named "${d}"`);p[d]()}})}static clearMenus(d){if(d.button===Ur||d.type==="keyup"&&d.key!==al)return;const p=q.find(so);for(const g of p){const L=gs.getInstance(g);if(!L||L._config.autoClose===!1)continue;const U=d.composedPath(),B=U.includes(L._menu);if(U.includes(L._element)||L._config.autoClose==="inside"&&!B||L._config.autoClose==="outside"&&B||L._menu.contains(d.target)&&(d.type==="keyup"&&d.key===al||/input|select|option|textarea|form/i.test(d.target.tagName)))continue;const ba={relatedTarget:L._element};d.type==="click"&&(ba.clickEvent=d),L._completeHide(ba)}}static dataApiKeydownHandler(d){const p=/input|textarea/i.test(d.target.tagName),g=d.key===Fr,L=[Jr,sl].includes(d.key);if(!L&&!g||p&&!g)return;d.preventDefault();const U=this.matches(it)?this:q.prev(this,it)[0]||q.next(this,it)[0]||q.findOne(it,d.delegateTarget.parentNode),B=gs.getOrCreateInstance(U);if(L){d.stopPropagation(),B.show(),B._selectMenuItem(d);return}B._isShown()&&(d.stopPropagation(),B.hide(),U.focus())}}T.on(document,nl,it,gs.dataApiKeydownHandler),T.on(document,nl,Pn,gs.dataApiKeydownHandler),T.on(document,tl,gs.clearMenus),T.on(document,Gr,gs.clearMenus),T.on(document,tl,it,function(b){b.preventDefault(),gs.getOrCreateInstance(this).toggle()}),X(gs);const el="backdrop",bo="fade",dl="show",ll=`mousedown.bs.${el}`,fo={className:"modal-backdrop",clickCallback:null,isAnimated:!1,isVisible:!0,rootElement:"body"},go={className:"string",clickCallback:"(function|null)",isAnimated:"boolean",isVisible:"boolean",rootElement:"(element|string)"};class il extends R{constructor(d){super(),this._config=this._getConfig(d),this._isAppended=!1,this._element=null}static get Default(){return fo}static get DefaultType(){return go}static get NAME(){return el}show(d){if(!this._config.isVisible){ea(d);return}this._append();const p=this._getElement();this._config.isAnimated&&Q(p),p.classList.add(dl),this._emulateAnimation(()=>{ea(d)})}hide(d){if(!this._config.isVisible){ea(d);return}this._getElement().classList.remove(dl),this._emulateAnimation(()=>{this.dispose(),ea(d)})}dispose(){this._isAppended&&(T.off(this._element,ll),this._element.remove(),this._isAppended=!1)}_getElement(){if(!this._element){const d=document.createElement("div");d.className=this._config.className,this._config.isAnimated&&d.classList.add(bo),this._element=d}return this._element}_configAfterMerge(d){return d.rootElement=O(d.rootElement),d}_append(){if(this._isAppended)return;const d=this._getElement();this._config.rootElement.append(d),T.on(d,ll,()=>{ea(this._config.clickCallback)}),this._isAppended=!0}_emulateAnimation(d){W(d,this._getElement(),this._config.isAnimated)}}const ko="focustrap",In=".bs.focustrap",jo=`focusin${In}`,yo=`keydown.tab${In}`,wo="Tab",_o="forward",cl="backward",So={autofocus:!0,trapElement:null},qo={autofocus:"boolean",trapElement:"element"};class pl extends R{constructor(d){super(),this._config=this._getConfig(d),this._isActive=!1,this._lastTabNavDirection=null}static get Default(){return So}static get DefaultType(){return qo}static get NAME(){return ko}activate(){this._isActive||(this._config.autofocus&&this._config.trapElement.focus(),T.off(document,In),T.on(document,jo,d=>this._handleFocusin(d)),T.on(document,yo,d=>this._handleKeydown(d)),this._isActive=!0)}deactivate(){this._isActive&&(this._isActive=!1,T.off(document,In))}_handleFocusin(d){const{trapElement:p}=this._config;if(d.target===document||d.target===p||p.contains(d.target))return;const g=q.focusableChildren(p);g.length===0?p.focus():this._lastTabNavDirection===cl?g[g.length-1].focus():g[0].focus()}_handleKeydown(d){d.key===wo&&(this._lastTabNavDirection=d.shiftKey?cl:_o)}}const rl=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",ol=".sticky-top",Nn="padding-right",ul="margin-right";class Ee{constructor(){this._element=document.body}getWidth(){const d=document.documentElement.clientWidth;return Math.abs(window.innerWidth-d)}hide(){const d=this.getWidth();this._disableOverFlow(),this._setElementAttributes(this._element,Nn,p=>p+d),this._setElementAttributes(rl,Nn,p=>p+d),this._setElementAttributes(ol,ul,p=>p-d)}reset(){this._resetElementAttributes(this._element,"overflow"),this._resetElementAttributes(this._element,Nn),this._resetElementAttributes(rl,Nn),this._resetElementAttributes(ol,ul)}isOverflowing(){return this.getWidth()>0}_disableOverFlow(){this._saveInitialAttribute(this._element,"overflow"),this._element.style.overflow="hidden"}_setElementAttributes(d,p,g){const L=this.getWidth(),U=B=>{if(B!==this._element&&window.innerWidth>B.clientWidth+L)return;this._saveInitialAttribute(B,p);const ba=window.getComputedStyle(B).getPropertyValue(p);B.style.setProperty(p,`${g(Number.parseFloat(ba))}px`)};this._applyManipulationCallback(d,U)}_saveInitialAttribute(d,p){const g=d.style.getPropertyValue(p);g&&E.setDataAttribute(d,p,g)}_resetElementAttributes(d,p){const g=L=>{const U=E.getDataAttribute(L,p);if(U===null){L.style.removeProperty(p);return}E.removeDataAttribute(L,p),L.style.setProperty(p,U)};this._applyManipulationCallback(d,g)}_applyManipulationCallback(d,p){if(C(d)){p(d);return}for(const g of q.find(d,this._element))p(g)}}const xo="modal",os=".bs.modal",To=".data-api",Eo="Escape",Co=`hide${os}`,Ao=`hidePrevented${os}`,hl=`hidden${os}`,vl=`show${os}`,Lo=`shown${os}`,Mo=`resize${os}`,Ro=`click.dismiss${os}`,Do=`mousedown.dismiss${os}`,Po=`keydown.dismiss${os}`,Io=`click${os}${To}`,ml="modal-open",No="fade",bl="show",Ce="modal-static",Oo=".modal.show",Ho=".modal-dialog",Bo=".modal-body",$o='[data-bs-toggle="modal"]',Fo={backdrop:!0,focus:!0,keyboard:!0},Jo={backdrop:"(boolean|string)",focus:"boolean",keyboard:"boolean"};class ct extends H{constructor(d,p){super(d,p),this._dialog=q.findOne(Ho,this._element),this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._isShown=!1,this._isTransitioning=!1,this._scrollBar=new Ee,this._addEventListeners()}static get Default(){return Fo}static get DefaultType(){return Jo}static get NAME(){return xo}toggle(d){return this._isShown?this.hide():this.show(d)}show(d){this._isShown||this._isTransitioning||T.trigger(this._element,vl,{relatedTarget:d}).defaultPrevented||(this._isShown=!0,this._isTransitioning=!0,this._scrollBar.hide(),document.body.classList.add(ml),this._adjustDialog(),this._backdrop.show(()=>this._showElement(d)))}hide(){!this._isShown||this._isTransitioning||T.trigger(this._element,Co).defaultPrevented||(this._isShown=!1,this._isTransitioning=!0,this._focustrap.deactivate(),this._element.classList.remove(bl),this._queueCallback(()=>this._hideModal(),this._element,this._isAnimated()))}dispose(){T.off(window,os),T.off(this._dialog,os),this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}handleUpdate(){this._adjustDialog()}_initializeBackDrop(){return new il({isVisible:!!this._config.backdrop,isAnimated:this._isAnimated()})}_initializeFocusTrap(){return new pl({trapElement:this._element})}_showElement(d){document.body.contains(this._element)||document.body.append(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.scrollTop=0;const p=q.findOne(Bo,this._dialog);p&&(p.scrollTop=0),Q(this._element),this._element.classList.add(bl);const g=()=>{this._config.focus&&this._focustrap.activate(),this._isTransitioning=!1,T.trigger(this._element,Lo,{relatedTarget:d})};this._queueCallback(g,this._dialog,this._isAnimated())}_addEventListeners(){T.on(this._element,Po,d=>{if(d.key===Eo){if(this._config.keyboard){this.hide();return}this._triggerBackdropTransition()}}),T.on(window,Mo,()=>{this._isShown&&!this._isTransitioning&&this._adjustDialog()}),T.on(this._element,Do,d=>{T.one(this._element,Ro,p=>{if(!(this._element!==d.target||this._element!==p.target)){if(this._config.backdrop==="static"){this._triggerBackdropTransition();return}this._config.backdrop&&this.hide()}})})}_hideModal(){this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._isTransitioning=!1,this._backdrop.hide(()=>{document.body.classList.remove(ml),this._resetAdjustments(),this._scrollBar.reset(),T.trigger(this._element,hl)})}_isAnimated(){return this._element.classList.contains(No)}_triggerBackdropTransition(){if(T.trigger(this._element,Ao).defaultPrevented)return;const p=this._element.scrollHeight>document.documentElement.clientHeight,g=this._element.style.overflowY;g==="hidden"||this._element.classList.contains(Ce)||(p||(this._element.style.overflowY="hidden"),this._element.classList.add(Ce),this._queueCallback(()=>{this._element.classList.remove(Ce),this._queueCallback(()=>{this._element.style.overflowY=g},this._dialog)},this._dialog),this._element.focus())}_adjustDialog(){const d=this._element.scrollHeight>document.documentElement.clientHeight,p=this._scrollBar.getWidth(),g=p>0;if(g&&!d){const L=G()?"paddingLeft":"paddingRight";this._element.style[L]=`${p}px`}if(!g&&d){const L=G()?"paddingRight":"paddingLeft";this._element.style[L]=`${p}px`}}_resetAdjustments(){this._element.style.paddingLeft="",this._element.style.paddingRight=""}static jQueryInterface(d,p){return this.each(function(){const g=ct.getOrCreateInstance(this,d);if(typeof d=="string"){if(typeof g[d]>"u")throw new TypeError(`No method named "${d}"`);g[d](p)}})}}T.on(document,Io,$o,function(b){const d=q.getElementFromSelector(this);["A","AREA"].includes(this.tagName)&&b.preventDefault(),T.one(d,vl,L=>{L.defaultPrevented||T.one(d,hl,()=>{y(this)&&this.focus()})});const p=q.findOne(Oo);p&&ct.getInstance(p).hide(),ct.getOrCreateInstance(d).toggle(this)}),N(ct),X(ct);const Uo="offcanvas",Ms=".bs.offcanvas",fl=".data-api",Vo=`load${Ms}${fl}`,Ko="Escape",gl="show",kl="showing",jl="hiding",zo="offcanvas-backdrop",yl=".offcanvas.show",Wo=`show${Ms}`,Go=`shown${Ms}`,Yo=`hide${Ms}`,wl=`hidePrevented${Ms}`,_l=`hidden${Ms}`,Qo=`resize${Ms}`,Xo=`click${Ms}${fl}`,Zo=`keydown.dismiss${Ms}`,au='[data-bs-toggle="offcanvas"]',su={backdrop:!0,keyboard:!0,scroll:!1},tu={backdrop:"(boolean|string)",keyboard:"boolean",scroll:"boolean"};class Rs extends H{constructor(d,p){super(d,p),this._isShown=!1,this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._addEventListeners()}static get Default(){return su}static get DefaultType(){return tu}static get NAME(){return Uo}toggle(d){return this._isShown?this.hide():this.show(d)}show(d){if(this._isShown||T.trigger(this._element,Wo,{relatedTarget:d}).defaultPrevented)return;this._isShown=!0,this._backdrop.show(),this._config.scroll||new Ee().hide(),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.classList.add(kl);const g=()=>{(!this._config.scroll||this._config.backdrop)&&this._focustrap.activate(),this._element.classList.add(gl),this._element.classList.remove(kl),T.trigger(this._element,Go,{relatedTarget:d})};this._queueCallback(g,this._element,!0)}hide(){if(!this._isShown||T.trigger(this._element,Yo).defaultPrevented)return;this._focustrap.deactivate(),this._element.blur(),this._isShown=!1,this._element.classList.add(jl),this._backdrop.hide();const p=()=>{this._element.classList.remove(gl,jl),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._config.scroll||new Ee().reset(),T.trigger(this._element,_l)};this._queueCallback(p,this._element,!0)}dispose(){this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}_initializeBackDrop(){const d=()=>{if(this._config.backdrop==="static"){T.trigger(this._element,wl);return}this.hide()},p=!!this._config.backdrop;return new il({className:zo,isVisible:p,isAnimated:!0,rootElement:this._element.parentNode,clickCallback:p?d:null})}_initializeFocusTrap(){return new pl({trapElement:this._element})}_addEventListeners(){T.on(this._element,Zo,d=>{if(d.key===Ko){if(this._config.keyboard){this.hide();return}T.trigger(this._element,wl)}})}static jQueryInterface(d){return this.each(function(){const p=Rs.getOrCreateInstance(this,d);if(typeof d=="string"){if(p[d]===void 0||d.startsWith("_")||d==="constructor")throw new TypeError(`No method named "${d}"`);p[d](this)}})}}T.on(document,Xo,au,function(b){const d=q.getElementFromSelector(this);if(["A","AREA"].includes(this.tagName)&&b.preventDefault(),I(this))return;T.one(d,_l,()=>{y(this)&&this.focus()});const p=q.findOne(yl);p&&p!==d&&Rs.getInstance(p).hide(),Rs.getOrCreateInstance(d).toggle(this)}),T.on(window,Vo,()=>{for(const b of q.find(yl))Rs.getOrCreateInstance(b).show()}),T.on(window,Qo,()=>{for(const b of q.find("[aria-modal][class*=show][class*=offcanvas-]"))getComputedStyle(b).position!=="fixed"&&Rs.getOrCreateInstance(b).hide()}),N(Rs),X(Rs);const Sl={"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],dd:[],div:[],dl:[],dt:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},nu=new Set(["background","cite","href","itemtype","longdesc","poster","src","xlink:href"]),eu=/^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:/?#]*(?:[/?#]|$))/i,du=(b,d)=>{const p=b.nodeName.toLowerCase();return d.includes(p)?nu.has(p)?!!eu.test(b.nodeValue):!0:d.filter(g=>g instanceof RegExp).some(g=>g.test(p))};function lu(b,d,p){if(!b.length)return b;if(p&&typeof p=="function")return p(b);const L=new window.DOMParser().parseFromString(b,"text/html"),U=[].concat(...L.body.querySelectorAll("*"));for(const B of U){const ba=B.nodeName.toLowerCase();if(!Object.keys(d).includes(ba)){B.remove();continue}const as=[].concat(...B.attributes),us=[].concat(d["*"]||[],d[ba]||[]);for(const Ia of as)du(Ia,us)||B.removeAttribute(Ia.nodeName)}return L.body.innerHTML}const iu="TemplateFactory",cu={allowList:Sl,content:{},extraClass:"",html:!1,sanitize:!0,sanitizeFn:null,template:"<div></div>"},pu={allowList:"object",content:"object",extraClass:"(string|function)",html:"boolean",sanitize:"boolean",sanitizeFn:"(null|function)",template:"string"},ru={entry:"(string|element|function|null)",selector:"(string|element)"};class ou extends R{constructor(d){super(),this._config=this._getConfig(d)}static get Default(){return cu}static get DefaultType(){return pu}static get NAME(){return iu}getContent(){return Object.values(this._config.content).map(d=>this._resolvePossibleFunction(d)).filter(Boolean)}hasContent(){return this.getContent().length>0}changeContent(d){return this._checkContent(d),this._config.content={...this._config.content,...d},this}toHtml(){const d=document.createElement("div");d.innerHTML=this._maybeSanitize(this._config.template);for(const[L,U]of Object.entries(this._config.content))this._setContent(d,U,L);const p=d.children[0],g=this._resolvePossibleFunction(this._config.extraClass);return g&&p.classList.add(...g.split(" ")),p}_typeCheckConfig(d){super._typeCheckConfig(d),this._checkContent(d.content)}_checkContent(d){for(const[p,g]of Object.entries(d))super._typeCheckConfig({selector:p,entry:g},ru)}_setContent(d,p,g){const L=q.findOne(g,d);if(L){if(p=this._resolvePossibleFunction(p),!p){L.remove();return}if(C(p)){this._putElementInTemplate(O(p),L);return}if(this._config.html){L.innerHTML=this._maybeSanitize(p);return}L.textContent=p}}_maybeSanitize(d){return this._config.sanitize?lu(d,this._config.allowList,this._config.sanitizeFn):d}_resolvePossibleFunction(d){return ea(d,[void 0,this])}_putElementInTemplate(d,p){if(this._config.html){p.innerHTML="",p.append(d);return}p.textContent=d.textContent}}const uu="tooltip",hu=new Set(["sanitize","allowList","sanitizeFn"]),Ae="fade",vu="modal",On="show",mu=".tooltip-inner",ql=`.${vu}`,xl="hide.bs.modal",Zt="hover",Le="focus",bu="click",fu="manual",gu="hide",ku="hidden",ju="show",yu="shown",wu="inserted",_u="click",Su="focusin",qu="focusout",xu="mouseenter",Tu="mouseleave",Eu={AUTO:"auto",TOP:"top",RIGHT:G()?"left":"right",BOTTOM:"bottom",LEFT:G()?"right":"left"},Cu={allowList:Sl,animation:!0,boundary:"clippingParents",container:!1,customClass:"",delay:0,fallbackPlacements:["top","right","bottom","left"],html:!1,offset:[0,6],placement:"top",popperConfig:null,sanitize:!0,sanitizeFn:null,selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',title:"",trigger:"hover focus"},Au={allowList:"object",animation:"boolean",boundary:"(string|element)",container:"(string|element|boolean)",customClass:"(string|function)",delay:"(number|object)",fallbackPlacements:"array",html:"boolean",offset:"(array|string|function)",placement:"(string|function)",popperConfig:"(null|object|function)",sanitize:"boolean",sanitizeFn:"(null|function)",selector:"(string|boolean)",template:"string",title:"(string|element|function)",trigger:"string"};class pt extends H{constructor(d,p){if(typeof e>"u")throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org/docs/v2/)");super(d,p),this._isEnabled=!0,this._timeout=0,this._isHovered=null,this._activeTrigger={},this._popper=null,this._templateFactory=null,this._newContent=null,this.tip=null,this._setListeners(),this._config.selector||this._fixTitle()}static get Default(){return Cu}static get DefaultType(){return Au}static get NAME(){return uu}enable(){this._isEnabled=!0}disable(){this._isEnabled=!1}toggleEnabled(){this._isEnabled=!this._isEnabled}toggle(){if(this._isEnabled){if(this._isShown()){this._leave();return}this._enter()}}dispose(){clearTimeout(this._timeout),T.off(this._element.closest(ql),xl,this._hideModalHandler),this._element.getAttribute("data-bs-original-title")&&this._element.setAttribute("title",this._element.getAttribute("data-bs-original-title")),this._disposePopper(),super.dispose()}show(){if(this._element.style.display==="none")throw new Error("Please use show on visible elements");if(!(this._isWithContent()&&this._isEnabled))return;const d=T.trigger(this._element,this.constructor.eventName(ju)),g=(V(this._element)||this._element.ownerDocument.documentElement).contains(this._element);if(d.defaultPrevented||!g)return;this._disposePopper();const L=this._getTipElement();this._element.setAttribute("aria-describedby",L.getAttribute("id"));const{container:U}=this._config;if(this._element.ownerDocument.documentElement.contains(this.tip)||(U.append(L),T.trigger(this._element,this.constructor.eventName(wu))),this._popper=this._createPopper(L),L.classList.add(On),"ontouchstart"in document.documentElement)for(const ba of[].concat(...document.body.children))T.on(ba,"mouseover",P);const B=()=>{T.trigger(this._element,this.constructor.eventName(yu)),this._isHovered===!1&&this._leave(),this._isHovered=!1};this._queueCallback(B,this.tip,this._isAnimated())}hide(){if(!this._isShown()||T.trigger(this._element,this.constructor.eventName(gu)).defaultPrevented)return;if(this._getTipElement().classList.remove(On),"ontouchstart"in document.documentElement)for(const L of[].concat(...document.body.children))T.off(L,"mouseover",P);this._activeTrigger[bu]=!1,this._activeTrigger[Le]=!1,this._activeTrigger[Zt]=!1,this._isHovered=null;const g=()=>{this._isWithActiveTrigger()||(this._isHovered||this._disposePopper(),this._element.removeAttribute("aria-describedby"),T.trigger(this._element,this.constructor.eventName(ku)))};this._queueCallback(g,this.tip,this._isAnimated())}update(){this._popper&&this._popper.update()}_isWithContent(){return!!this._getTitle()}_getTipElement(){return this.tip||(this.tip=this._createTipElement(this._newContent||this._getContentForTemplate())),this.tip}_createTipElement(d){const p=this._getTemplateFactory(d).toHtml();if(!p)return null;p.classList.remove(Ae,On),p.classList.add(`bs-${this.constructor.NAME}-auto`);const g=j(this.constructor.NAME).toString();return p.setAttribute("id",g),this._isAnimated()&&p.classList.add(Ae),p}setContent(d){this._newContent=d,this._isShown()&&(this._disposePopper(),this.show())}_getTemplateFactory(d){return this._templateFactory?this._templateFactory.changeContent(d):this._templateFactory=new ou({...this._config,content:d,extraClass:this._resolvePossibleFunction(this._config.customClass)}),this._templateFactory}_getContentForTemplate(){return{[mu]:this._getTitle()}}_getTitle(){return this._resolvePossibleFunction(this._config.title)||this._element.getAttribute("data-bs-original-title")}_initializeOnDelegatedTarget(d){return this.constructor.getOrCreateInstance(d.delegateTarget,this._getDelegateConfig())}_isAnimated(){return this._config.animation||this.tip&&this.tip.classList.contains(Ae)}_isShown(){return this.tip&&this.tip.classList.contains(On)}_createPopper(d){const p=ea(this._config.placement,[this,d,this._element]),g=Eu[p.toUpperCase()];return e.createPopper(this._element,d,this._getPopperConfig(g))}_getOffset(){const{offset:d}=this._config;return typeof d=="string"?d.split(",").map(p=>Number.parseInt(p,10)):typeof d=="function"?p=>d(p,this._element):d}_resolvePossibleFunction(d){return ea(d,[this._element,this._element])}_getPopperConfig(d){const p={placement:d,modifiers:[{name:"flip",options:{fallbackPlacements:this._config.fallbackPlacements}},{name:"offset",options:{offset:this._getOffset()}},{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"arrow",options:{element:`.${this.constructor.NAME}-arrow`}},{name:"preSetPlacement",enabled:!0,phase:"beforeMain",fn:g=>{this._getTipElement().setAttribute("data-popper-placement",g.state.placement)}}]};return{...p,...ea(this._config.popperConfig,[void 0,p])}}_setListeners(){const d=this._config.trigger.split(" ");for(const p of d)if(p==="click")T.on(this._element,this.constructor.eventName(_u),this._config.selector,g=>{this._initializeOnDelegatedTarget(g).toggle()});else if(p!==fu){const g=p===Zt?this.constructor.eventName(xu):this.constructor.eventName(Su),L=p===Zt?this.constructor.eventName(Tu):this.constructor.eventName(qu);T.on(this._element,g,this._config.selector,U=>{const B=this._initializeOnDelegatedTarget(U);B._activeTrigger[U.type==="focusin"?Le:Zt]=!0,B._enter()}),T.on(this._element,L,this._config.selector,U=>{const B=this._initializeOnDelegatedTarget(U);B._activeTrigger[U.type==="focusout"?Le:Zt]=B._element.contains(U.relatedTarget),B._leave()})}this._hideModalHandler=()=>{this._element&&this.hide()},T.on(this._element.closest(ql),xl,this._hideModalHandler)}_fixTitle(){const d=this._element.getAttribute("title");d&&(!this._element.getAttribute("aria-label")&&!this._element.textContent.trim()&&this._element.setAttribute("aria-label",d),this._element.setAttribute("data-bs-original-title",d),this._element.removeAttribute("title"))}_enter(){if(this._isShown()||this._isHovered){this._isHovered=!0;return}this._isHovered=!0,this._setTimeout(()=>{this._isHovered&&this.show()},this._config.delay.show)}_leave(){this._isWithActiveTrigger()||(this._isHovered=!1,this._setTimeout(()=>{this._isHovered||this.hide()},this._config.delay.hide))}_setTimeout(d,p){clearTimeout(this._timeout),this._timeout=setTimeout(d,p)}_isWithActiveTrigger(){return Object.values(this._activeTrigger).includes(!0)}_getConfig(d){const p=E.getDataAttributes(this._element);for(const g of Object.keys(p))hu.has(g)&&delete p[g];return d={...p,...typeof d=="object"&&d?d:{}},d=this._mergeConfigObj(d),d=this._configAfterMerge(d),this._typeCheckConfig(d),d}_configAfterMerge(d){return d.container=d.container===!1?document.body:O(d.container),typeof d.delay=="number"&&(d.delay={show:d.delay,hide:d.delay}),typeof d.title=="number"&&(d.title=d.title.toString()),typeof d.content=="number"&&(d.content=d.content.toString()),d}_getDelegateConfig(){const d={};for(const[p,g]of Object.entries(this._config))this.constructor.Default[p]!==g&&(d[p]=g);return d.selector=!1,d.trigger="manual",d}_disposePopper(){this._popper&&(this._popper.destroy(),this._popper=null),this.tip&&(this.tip.remove(),this.tip=null)}static jQueryInterface(d){return this.each(function(){const p=pt.getOrCreateInstance(this,d);if(typeof d=="string"){if(typeof p[d]>"u")throw new TypeError(`No method named "${d}"`);p[d]()}})}}X(pt);const Lu="popover",Mu=".popover-header",Ru=".popover-body",Du={...pt.Default,content:"",offset:[0,8],placement:"right",template:'<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',trigger:"click"},Pu={...pt.DefaultType,content:"(null|string|element|function)"};class Hn extends pt{static get Default(){return Du}static get DefaultType(){return Pu}static get NAME(){return Lu}_isWithContent(){return this._getTitle()||this._getContent()}_getContentForTemplate(){return{[Mu]:this._getTitle(),[Ru]:this._getContent()}}_getContent(){return this._resolvePossibleFunction(this._config.content)}static jQueryInterface(d){return this.each(function(){const p=Hn.getOrCreateInstance(this,d);if(typeof d=="string"){if(typeof p[d]>"u")throw new TypeError(`No method named "${d}"`);p[d]()}})}}X(Hn);const Iu="scrollspy",Me=".bs.scrollspy",Nu=".data-api",Ou=`activate${Me}`,Tl=`click${Me}`,Hu=`load${Me}${Nu}`,Bu="dropdown-item",Mt="active",$u='[data-bs-spy="scroll"]',Re="[href]",Fu=".nav, .list-group",El=".nav-link",Ju=`${El}, .nav-item > ${El}, .list-group-item`,Uu=".dropdown",Vu=".dropdown-toggle",Ku={offset:null,rootMargin:"0px 0px -25%",smoothScroll:!1,target:null,threshold:[.1,.5,1]},zu={offset:"(number|null)",rootMargin:"string",smoothScroll:"boolean",target:"element",threshold:"array"};class an extends H{constructor(d,p){super(d,p),this._targetLinks=new Map,this._observableSections=new Map,this._rootElement=getComputedStyle(this._element).overflowY==="visible"?null:this._element,this._activeTarget=null,this._observer=null,this._previousScrollData={visibleEntryTop:0,parentScrollTop:0},this.refresh()}static get Default(){return Ku}static get DefaultType(){return zu}static get NAME(){return Iu}refresh(){this._initializeTargetsAndObservables(),this._maybeEnableSmoothScroll(),this._observer?this._observer.disconnect():this._observer=this._getNewObserver();for(const d of this._observableSections.values())this._observer.observe(d)}dispose(){this._observer.disconnect(),super.dispose()}_configAfterMerge(d){return d.target=O(d.target)||document.body,d.rootMargin=d.offset?`${d.offset}px 0px -30%`:d.rootMargin,typeof d.threshold=="string"&&(d.threshold=d.threshold.split(",").map(p=>Number.parseFloat(p))),d}_maybeEnableSmoothScroll(){this._config.smoothScroll&&(T.off(this._config.target,Tl),T.on(this._config.target,Tl,Re,d=>{const p=this._observableSections.get(d.target.hash);if(p){d.preventDefault();const g=this._rootElement||window,L=p.offsetTop-this._element.offsetTop;if(g.scrollTo){g.scrollTo({top:L,behavior:"smooth"});return}g.scrollTop=L}}))}_getNewObserver(){const d={root:this._rootElement,threshold:this._config.threshold,rootMargin:this._config.rootMargin};return new IntersectionObserver(p=>this._observerCallback(p),d)}_observerCallback(d){const p=B=>this._targetLinks.get(`#${B.target.id}`),g=B=>{this._previousScrollData.visibleEntryTop=B.target.offsetTop,this._process(p(B))},L=(this._rootElement||document.documentElement).scrollTop,U=L>=this._previousScrollData.parentScrollTop;this._previousScrollData.parentScrollTop=L;for(const B of d){if(!B.isIntersecting){this._activeTarget=null,this._clearActiveClass(p(B));continue}const ba=B.target.offsetTop>=this._previousScrollData.visibleEntryTop;if(U&&ba){if(g(B),!L)return;continue}!U&&!ba&&g(B)}}_initializeTargetsAndObservables(){this._targetLinks=new Map,this._observableSections=new Map;const d=q.find(Re,this._config.target);for(const p of d){if(!p.hash||I(p))continue;const g=q.findOne(decodeURI(p.hash),this._element);y(g)&&(this._targetLinks.set(decodeURI(p.hash),p),this._observableSections.set(p.hash,g))}}_process(d){this._activeTarget!==d&&(this._clearActiveClass(this._config.target),this._activeTarget=d,d.classList.add(Mt),this._activateParents(d),T.trigger(this._element,Ou,{relatedTarget:d}))}_activateParents(d){if(d.classList.contains(Bu)){q.findOne(Vu,d.closest(Uu)).classList.add(Mt);return}for(const p of q.parents(d,Fu))for(const g of q.prev(p,Ju))g.classList.add(Mt)}_clearActiveClass(d){d.classList.remove(Mt);const p=q.find(`${Re}.${Mt}`,d);for(const g of p)g.classList.remove(Mt)}static jQueryInterface(d){return this.each(function(){const p=an.getOrCreateInstance(this,d);if(typeof d=="string"){if(p[d]===void 0||d.startsWith("_")||d==="constructor")throw new TypeError(`No method named "${d}"`);p[d]()}})}}T.on(window,Hu,()=>{for(const b of q.find($u))an.getOrCreateInstance(b)}),X(an);const Wu="tab",rt=".bs.tab",Gu=`hide${rt}`,Yu=`hidden${rt}`,Qu=`show${rt}`,Xu=`shown${rt}`,Zu=`click${rt}`,ah=`keydown${rt}`,sh=`load${rt}`,th="ArrowLeft",Cl="ArrowRight",nh="ArrowUp",Al="ArrowDown",De="Home",Ll="End",ot="active",Ml="fade",Pe="show",eh="dropdown",Rl=".dropdown-toggle",dh=".dropdown-menu",Ie=`:not(${Rl})`,lh='.list-group, .nav, [role="tablist"]',ih=".nav-item, .list-group-item",ch=`.nav-link${Ie}, .list-group-item${Ie}, [role="tab"]${Ie}`,Dl='[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]',Ne=`${ch}, ${Dl}`,ph=`.${ot}[data-bs-toggle="tab"], .${ot}[data-bs-toggle="pill"], .${ot}[data-bs-toggle="list"]`;class ut extends H{constructor(d){super(d),this._parent=this._element.closest(lh),this._parent&&(this._setInitialAttributes(this._parent,this._getChildren()),T.on(this._element,ah,p=>this._keydown(p)))}static get NAME(){return Wu}show(){const d=this._element;if(this._elemIsActive(d))return;const p=this._getActiveElem(),g=p?T.trigger(p,Gu,{relatedTarget:d}):null;T.trigger(d,Qu,{relatedTarget:p}).defaultPrevented||g&&g.defaultPrevented||(this._deactivate(p,d),this._activate(d,p))}_activate(d,p){if(!d)return;d.classList.add(ot),this._activate(q.getElementFromSelector(d));const g=()=>{if(d.getAttribute("role")!=="tab"){d.classList.add(Pe);return}d.removeAttribute("tabindex"),d.setAttribute("aria-selected",!0),this._toggleDropDown(d,!0),T.trigger(d,Xu,{relatedTarget:p})};this._queueCallback(g,d,d.classList.contains(Ml))}_deactivate(d,p){if(!d)return;d.classList.remove(ot),d.blur(),this._deactivate(q.getElementFromSelector(d));const g=()=>{if(d.getAttribute("role")!=="tab"){d.classList.remove(Pe);return}d.setAttribute("aria-selected",!1),d.setAttribute("tabindex","-1"),this._toggleDropDown(d,!1),T.trigger(d,Yu,{relatedTarget:p})};this._queueCallback(g,d,d.classList.contains(Ml))}_keydown(d){if(![th,Cl,nh,Al,De,Ll].includes(d.key))return;d.stopPropagation(),d.preventDefault();const p=this._getChildren().filter(L=>!I(L));let g;if([De,Ll].includes(d.key))g=p[d.key===De?0:p.length-1];else{const L=[Cl,Al].includes(d.key);g=ra(p,d.target,L,!0)}g&&(g.focus({preventScroll:!0}),ut.getOrCreateInstance(g).show())}_getChildren(){return q.find(Ne,this._parent)}_getActiveElem(){return this._getChildren().find(d=>this._elemIsActive(d))||null}_setInitialAttributes(d,p){this._setAttributeIfNotExists(d,"role","tablist");for(const g of p)this._setInitialAttributesOnChild(g)}_setInitialAttributesOnChild(d){d=this._getInnerElement(d);const p=this._elemIsActive(d),g=this._getOuterElement(d);d.setAttribute("aria-selected",p),g!==d&&this._setAttributeIfNotExists(g,"role","presentation"),p||d.setAttribute("tabindex","-1"),this._setAttributeIfNotExists(d,"role","tab"),this._setInitialAttributesOnTargetPanel(d)}_setInitialAttributesOnTargetPanel(d){const p=q.getElementFromSelector(d);p&&(this._setAttributeIfNotExists(p,"role","tabpanel"),d.id&&this._setAttributeIfNotExists(p,"aria-labelledby",`${d.id}`))}_toggleDropDown(d,p){const g=this._getOuterElement(d);if(!g.classList.contains(eh))return;const L=(U,B)=>{const ba=q.findOne(U,g);ba&&ba.classList.toggle(B,p)};L(Rl,ot),L(dh,Pe),g.setAttribute("aria-expanded",p)}_setAttributeIfNotExists(d,p,g){d.hasAttribute(p)||d.setAttribute(p,g)}_elemIsActive(d){return d.classList.contains(ot)}_getInnerElement(d){return d.matches(Ne)?d:q.findOne(Ne,d)}_getOuterElement(d){return d.closest(ih)||d}static jQueryInterface(d){return this.each(function(){const p=ut.getOrCreateInstance(this);if(typeof d=="string"){if(p[d]===void 0||d.startsWith("_")||d==="constructor")throw new TypeError(`No method named "${d}"`);p[d]()}})}}T.on(document,Zu,Dl,function(b){["A","AREA"].includes(this.tagName)&&b.preventDefault(),!I(this)&&ut.getOrCreateInstance(this).show()}),T.on(window,sh,()=>{for(const b of q.find(ph))ut.getOrCreateInstance(b)}),X(ut);const rh="toast",Vs=".bs.toast",oh=`mouseover${Vs}`,uh=`mouseout${Vs}`,hh=`focusin${Vs}`,vh=`focusout${Vs}`,mh=`hide${Vs}`,bh=`hidden${Vs}`,fh=`show${Vs}`,gh=`shown${Vs}`,kh="fade",Pl="hide",Bn="show",$n="showing",jh={animation:"boolean",autohide:"boolean",delay:"number"},yh={animation:!0,autohide:!0,delay:5e3};class sn extends H{constructor(d,p){super(d,p),this._timeout=null,this._hasMouseInteraction=!1,this._hasKeyboardInteraction=!1,this._setListeners()}static get Default(){return yh}static get DefaultType(){return jh}static get NAME(){return rh}show(){if(T.trigger(this._element,fh).defaultPrevented)return;this._clearTimeout(),this._config.animation&&this._element.classList.add(kh);const p=()=>{this._element.classList.remove($n),T.trigger(this._element,gh),this._maybeScheduleHide()};this._element.classList.remove(Pl),Q(this._element),this._element.classList.add(Bn,$n),this._queueCallback(p,this._element,this._config.animation)}hide(){if(!this.isShown()||T.trigger(this._element,mh).defaultPrevented)return;const p=()=>{this._element.classList.add(Pl),this._element.classList.remove($n,Bn),T.trigger(this._element,bh)};this._element.classList.add($n),this._queueCallback(p,this._element,this._config.animation)}dispose(){this._clearTimeout(),this.isShown()&&this._element.classList.remove(Bn),super.dispose()}isShown(){return this._element.classList.contains(Bn)}_maybeScheduleHide(){this._config.autohide&&(this._hasMouseInteraction||this._hasKeyboardInteraction||(this._timeout=setTimeout(()=>{this.hide()},this._config.delay)))}_onInteraction(d,p){switch(d.type){case"mouseover":case"mouseout":{this._hasMouseInteraction=p;break}case"focusin":case"focusout":{this._hasKeyboardInteraction=p;break}}if(p){this._clearTimeout();return}const g=d.relatedTarget;this._element===g||this._element.contains(g)||this._maybeScheduleHide()}_setListeners(){T.on(this._element,oh,d=>this._onInteraction(d,!0)),T.on(this._element,uh,d=>this._onInteraction(d,!1)),T.on(this._element,hh,d=>this._onInteraction(d,!0)),T.on(this._element,vh,d=>this._onInteraction(d,!1))}_clearTimeout(){clearTimeout(this._timeout),this._timeout=null}static jQueryInterface(d){return this.each(function(){const p=sn.getOrCreateInstance(this,d);if(typeof d=="string"){if(typeof p[d]>"u")throw new TypeError(`No method named "${d}"`);p[d](this)}})}}return N(sn),X(sn),{Alert:Pa,Button:Js,Carousel:Et,Collapse:At,Dropdown:gs,Modal:ct,Offcanvas:Rs,Popover:Hn,ScrollSpy:an,Tab:ut,Toast:sn,Tooltip:pt}})}(Zn)),Zn.exports}xk();const Up=z3(Sm);Up.use(Dg);Up.mount("#app")`
// main.js/ts
import {createBootstrap} from 'bootstrap-vue-next'

// Add the necessary CSS
import 'bootstrap/dist/css/bootstrap.css'
import 'bootstrap-vue-next/dist/bootstrap-vue-next.css'



const app = createApp(App)

app.use(router)
app.use(createBootstrap())

app.mount('#app')

`;
